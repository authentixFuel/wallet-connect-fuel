{"version":3,"sources":["../src/accounts.ts","../src/fuel.ts","../src/constants.ts"],"names":["AddressType","MessageTypes","CONNECTOR_SCRIPT","CONTENT_SCRIPT_NAME","BACKGROUND_SCRIPT_NAME","POPUP_SCRIPT_NAME","VAULT_SCRIPT_NAME","EVENT_MESSAGE"],"mappings":"AAqBO,IAAKA,OACVA,IAAA,uBACAA,IAAA,qBAFUA,OAAA,ICdL,IAAKC,OACVA,EAAA,KAAO,OACPA,EAAA,QAAU,UACVA,EAAA,MAAQ,QACRA,EAAA,QAAU,UACVA,EAAA,SAAW,WACXA,EAAA,iBAAmB,mBANTA,OAAA,ICPL,IAAMC,EAAmB,sBACnBC,EAAsB,oBACtBC,EAAyB,uBACzBC,EAAoB,kBACpBC,EAAoB,kBACpBC,EAAgB","sourcesContent":["import type { BigNumberish, BN } from 'fuels';\n\nimport type { Coin } from './coin';\n\nexport type Vault = {\n  key: string;\n  data: string;\n};\n\nexport type Account = {\n  name: string;\n  address: string;\n  vaultId?: number;\n  publicKey: string;\n  isHidden?: boolean;\n  balance?: BigNumberish | BN;\n  balanceSymbol?: string;\n  balances?: Coin[];\n  isCurrent?: boolean;\n};\n\nexport enum AddressType {\n  contract,\n  account,\n}\n","import type {\n  ICreateChange,\n  IUpdateChange,\n  IDeleteChange,\n} from 'dexie-observable/api';\nimport type { JSONRPCRequest, JSONRPCResponse } from 'json-rpc-2.0';\n\nexport enum MessageTypes {\n  ping = 'ping',\n  uiEvent = 'uiEvent',\n  event = 'event',\n  request = 'request',\n  response = 'response',\n  removeConnection = 'removeConnection',\n}\n\nexport interface MessageSender {\n  id?: string | undefined;\n  origin?: string | undefined;\n  tab?: {\n    id?: number | undefined;\n    index?: number | undefined;\n    windowId?: number | undefined;\n    url?: string | undefined;\n    title?: string | undefined;\n    favIconUrl?: string | undefined;\n  };\n}\n\nexport type BaseEvent<T> = {\n  readonly target: string;\n  readonly connectorName?: string;\n  readonly id?: string;\n  readonly sender?: MessageSender;\n} & T;\n\nexport type UIEventMessage = BaseEvent<{\n  readonly type: MessageTypes.uiEvent;\n  readonly ready: boolean;\n  readonly session: string;\n}>;\n\nexport type RequestMessage = BaseEvent<{\n  readonly type: MessageTypes.request;\n  readonly request: JSONRPCRequest;\n}>;\n\nexport type ResponseMessage = BaseEvent<{\n  readonly type: MessageTypes.response;\n  readonly response: JSONRPCResponse;\n}>;\n\nexport type EventMessageEvents = Array<{\n  event: string;\n  params: Array<unknown>;\n}>;\n\nexport type EventMessage<T = EventMessageEvents> = BaseEvent<{\n  readonly type: MessageTypes.event;\n  readonly events: T;\n}>;\n\nexport type CommunicationEventArg<T> = T extends MessageTypes.request\n  ? RequestMessage\n  : T extends MessageTypes.response\n  ? ResponseMessage\n  : T extends MessageTypes.uiEvent\n  ? UIEventMessage\n  : T extends MessageTypes.event\n  ? EventMessage\n  : T extends MessageTypes.removeConnection\n  ? string\n  : unknown;\n\nexport type CommunicationMessage =\n  | UIEventMessage\n  | RequestMessage\n  | ResponseMessage\n  | EventMessage;\n\nexport type DatabaseEvents = ['delete', 'create', 'update'];\nexport type DatabaseObservableEvent<T extends Array<string>> =\n  `${T[number]}:${DatabaseEvents[number]}`;\n\nexport type DatabaseEventArg<T extends string> = T extends `${string}:create`\n  ? ICreateChange\n  : T extends `${string}:update`\n  ? IUpdateChange\n  : T extends `${string}:delete`\n  ? IDeleteChange\n  : unknown;\n\nexport type FuelProviderConfig = {\n  id?: string;\n  url: string;\n};\n","export const CONNECTOR_SCRIPT = 'FuelConnectorScript';\nexport const CONTENT_SCRIPT_NAME = 'FuelContentScript';\nexport const BACKGROUND_SCRIPT_NAME = 'FuelBackgroundScript';\nexport const POPUP_SCRIPT_NAME = 'FuelPopUpScript';\nexport const VAULT_SCRIPT_NAME = 'FuelVaultScript';\nexport const EVENT_MESSAGE = 'message';\n"]}
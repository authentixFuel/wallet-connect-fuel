// src/hasher.ts
import { bufferFromString } from "@fuel-ts/crypto";
import { arrayify, hexlify } from "@fuel-ts/utils";
import { sha256 as sha256AsBytes } from "@noble/hashes/sha256";
function sha256(data) {
  return hexlify(sha256AsBytes(arrayify(data)));
}
function hash(data) {
  return sha256(data);
}
function uint64ToBytesBE(value) {
  const bigIntValue = BigInt(value);
  const buffer = new ArrayBuffer(8);
  const dataView = new DataView(buffer);
  dataView.setBigUint64(0, bigIntValue, false);
  return new Uint8Array(dataView.buffer);
}
function hashMessage(msg) {
  return hash(bufferFromString(msg, "utf-8"));
}
export {
  hash,
  hashMessage,
  sha256,
  uint64ToBytesBE
};
//# sourceMappingURL=index.mjs.map
// src/lib/getBuiltinVersions.ts
function getBuiltinVersions() {
  return {
    FORC: "0.49.3",
    FUEL_CORE: "0.22.1",
    FUELS: "0.79.0"
  };
}

// src/lib/semver.ts
function parseVersion(version) {
  const [major, minor, patch] = version.split(".").map((v) => parseInt(v, 10));
  return { major, minor, patch };
}
function versionDiffs(version1, version2) {
  const semver1 = parseVersion(version1);
  const semver2 = parseVersion(version2);
  const major = semver1.major - semver2.major;
  const minor = semver1.minor - semver2.minor;
  const patch = semver1.patch - semver2.patch;
  return {
    major,
    minor,
    patch,
    fullVersionDiff: major || minor || patch
  };
}
function majorEq(version1, version2) {
  const { major } = versionDiffs(version1, version2);
  return major === 0;
}
function minorEq(version1, version2) {
  const { minor } = versionDiffs(version1, version2);
  return minor === 0;
}
function patchEq(version1, version2) {
  const { patch } = versionDiffs(version1, version2);
  return patch === 0;
}

// src/lib/checkFuelCoreVersionCompatibility.ts
function checkFuelCoreVersionCompatibility(networkVersion) {
  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();
  if (/^\d+\.\d+\.\d+\D+/m.test(networkVersion)) {
    console.warn(`You're running against an unreleased fuel-core version: ${networkVersion}. Things may work as expected, but it's not guaranteed. Please use a released version.      
This unreleased fuel-core build may include features and updates not yet supported by this version of the TS-SDK.`);
  }
  return {
    supportedVersion,
    isMajorSupported: majorEq(networkVersion, supportedVersion),
    isMinorSupported: minorEq(networkVersion, supportedVersion),
    isPatchSupported: patchEq(networkVersion, supportedVersion)
  };
}

// src/index.ts
var versions = getBuiltinVersions();
export {
  checkFuelCoreVersionCompatibility,
  versions
};
//# sourceMappingURL=index.mjs.map
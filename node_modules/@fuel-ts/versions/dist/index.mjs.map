{"version":3,"sources":["../src/lib/getBuiltinVersions.ts","../src/lib/semver.ts","../src/lib/checkFuelCoreVersionCompatibility.ts","../src/index.ts"],"sourcesContent":["export function getBuiltinVersions() {\n  return {\n    FORC: '0.49.3',\n    FUEL_CORE: '0.22.1',\n    FUELS: '0.79.0',\n  };\n}\n","function parseVersion(version: string): { major: number; minor: number; patch: number } {\n  const [major, minor, patch] = version.split('.').map((v) => parseInt(v, 10));\n  return { major, minor, patch };\n}\n\nfunction versionDiffs(\n  version1: string,\n  version2: string\n): { major: number; minor: number; patch: number; fullVersionDiff: number } {\n  const semver1 = parseVersion(version1);\n  const semver2 = parseVersion(version2);\n  const major = semver1.major - semver2.major;\n  const minor = semver1.minor - semver2.minor;\n  const patch = semver1.patch - semver2.patch;\n  return {\n    major,\n    minor,\n    patch,\n    fullVersionDiff: major || minor || patch,\n  };\n}\n\nexport function gt(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff > 0;\n}\n\nexport function eq(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff === 0;\n}\n\nexport function majorEq(version1: string, version2: string): boolean {\n  const { major } = versionDiffs(version1, version2);\n  return major === 0;\n}\n\nexport function minorEq(version1: string, version2: string): boolean {\n  const { minor } = versionDiffs(version1, version2);\n  return minor === 0;\n}\n\nexport function patchEq(version1: string, version2: string): boolean {\n  const { patch } = versionDiffs(version1, version2);\n  return patch === 0;\n}\n","import { getBuiltinVersions } from './getBuiltinVersions';\nimport { majorEq, minorEq, patchEq } from './semver';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  if (/^\\d+\\.\\d+\\.\\d+\\D+/m.test(networkVersion)) {\n    // eslint-disable-next-line no-console\n    console.warn(`You're running against an unreleased fuel-core version: ${networkVersion}. Things may work as expected, but it's not guaranteed. Please use a released version.      \nThis unreleased fuel-core build may include features and updates not yet supported by this version of the TS-SDK.`);\n  }\n\n  return {\n    supportedVersion,\n    isMajorSupported: majorEq(networkVersion, supportedVersion),\n    isMinorSupported: minorEq(networkVersion, supportedVersion),\n    isPatchSupported: patchEq(networkVersion, supportedVersion),\n  };\n}\n","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/packages/fuel-core/VERSION`\n    `FORC` — comes from `/packages/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/checkFuelCoreVersionCompatibility';\n"],"mappings":";AAAO,SAAS,qBAAqB;AACnC,SAAO;AAAA,IACL,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA,EACT;AACF;;;ACNA,SAAS,aAAa,SAAkE;AACtF,QAAM,CAAC,OAAO,OAAO,KAAK,IAAI,QAAQ,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,SAAS,GAAG,EAAE,CAAC;AAC3E,SAAO,EAAE,OAAO,OAAO,MAAM;AAC/B;AAEA,SAAS,aACP,UACA,UAC0E;AAC1E,QAAM,UAAU,aAAa,QAAQ;AACrC,QAAM,UAAU,aAAa,QAAQ;AACrC,QAAM,QAAQ,QAAQ,QAAQ,QAAQ;AACtC,QAAM,QAAQ,QAAQ,QAAQ,QAAQ;AACtC,QAAM,QAAQ,QAAQ,QAAQ,QAAQ;AACtC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,iBAAiB,SAAS,SAAS;AAAA,EACrC;AACF;AAYO,SAAS,QAAQ,UAAkB,UAA2B;AACnE,QAAM,EAAE,MAAM,IAAI,aAAa,UAAU,QAAQ;AACjD,SAAO,UAAU;AACnB;AAEO,SAAS,QAAQ,UAAkB,UAA2B;AACnE,QAAM,EAAE,MAAM,IAAI,aAAa,UAAU,QAAQ;AACjD,SAAO,UAAU;AACnB;AAEO,SAAS,QAAQ,UAAkB,UAA2B;AACnE,QAAM,EAAE,MAAM,IAAI,aAAa,UAAU,QAAQ;AACjD,SAAO,UAAU;AACnB;;;AC1CO,SAAS,kCAAkC,gBAAwB;AACxE,QAAM,EAAE,WAAW,iBAAiB,IAAI,mBAAmB;AAE3D,MAAI,qBAAqB,KAAK,cAAc,GAAG;AAE7C,YAAQ,KAAK,2DAA2D;AAAA,kHACsC;AAAA,EAChH;AAEA,SAAO;AAAA,IACL;AAAA,IACA,kBAAkB,QAAQ,gBAAgB,gBAAgB;AAAA,IAC1D,kBAAkB,QAAQ,gBAAgB,gBAAgB;AAAA,IAC1D,kBAAkB,QAAQ,gBAAgB,gBAAgB;AAAA,EAC5D;AACF;;;ACqBO,IAAM,WAAW,mBAAmB;","names":[]}
/**
 * Types and Type Regex
 */
export declare const U8_CODER_TYPE = "u8";
export declare const U16_CODER_TYPE = "u16";
export declare const U32_CODER_TYPE = "u32";
export declare const U64_CODER_TYPE = "u64";
export declare const U256_CODER_TYPE = "u256";
export declare const RAW_PTR_CODER_TYPE = "raw untyped ptr";
export declare const RAW_SLICE_CODER_TYPE = "raw untyped slice";
export declare const BOOL_CODER_TYPE = "bool";
export declare const B256_CODER_TYPE = "b256";
export declare const B512_CODER_TYPE = "struct B512";
export declare const OPTION_CODER_TYPE = "enum Option";
export declare const VEC_CODER_TYPE = "struct Vec";
export declare const BYTES_CODER_TYPE = "struct Bytes";
export declare const STD_STRING_CODER_TYPE = "struct String";
export declare const STR_SLICE_CODER_TYPE = "str";
export declare const stringRegEx: RegExp;
export declare const arrayRegEx: RegExp;
export declare const structRegEx: RegExp;
export declare const enumRegEx: RegExp;
export declare const tupleRegEx: RegExp;
export declare const genericRegEx: RegExp;
/**
 * Encoding versions
 */
export declare const ENCODING_V0 = "0";
export declare const ENCODING_V1 = "1";
/**
 * Property space and config constants
 */
export declare const WORD_SIZE = 8;
export declare const BYTES_32 = 32;
export declare const MAX_INPUTS = 255;
export declare const ASSET_ID_LEN = 32;
export declare const CONTRACT_ID_LEN = 32;
export declare const ADDRESS_LEN = 32;
export declare const NONCE_LEN = 32;
export declare const TX_LEN: number;
export declare const TX_POINTER_LEN: number;
export declare const MAX_BYTES: number;
export declare const calculateVmTxMemory: ({ maxInputs }: {
    maxInputs: number;
}) => number;
export declare const SCRIPT_FIXED_SIZE: number;
export declare const INPUT_COIN_FIXED_SIZE: number;
export declare const INPUT_MESSAGE_FIXED_SIZE: number;
//# sourceMappingURL=constants.d.ts.map
{"version":3,"sources":["../src/error-codes.ts","../../versions/src/lib/getBuiltinVersions.ts","../../versions/src/lib/semver.ts","../../versions/src/lib/checkFuelCoreVersionCompatibility.ts","../../versions/src/index.ts","../src/fuel-error.ts"],"sourcesContent":["/**\n * Represents the different error codes thrown by the SDK\n */\nexport enum ErrorCode {\n  // abi\n  NO_ABIS_FOUND = 'no-abis-found',\n  ABI_TYPES_AND_VALUES_MISMATCH = 'abi-types-and-values-mismatch',\n  ABI_MAIN_METHOD_MISSING = 'abi-main-method-missing',\n  INVALID_COMPONENT = 'invalid-component',\n  FRAGMENT_NOT_FOUND = 'fragment-not-found',\n  CONFIGURABLE_NOT_FOUND = 'configurable-not-found',\n  TYPE_NOT_FOUND = 'type-not-found',\n  TYPE_NOT_SUPPORTED = 'type-not-supported',\n  INVALID_DECODE_VALUE = 'invalid-decode-value',\n  JSON_ABI_ERROR = 'json-abi-error',\n  TYPE_ID_NOT_FOUND = 'type-id-not-found',\n  BIN_FILE_NOT_FOUND = 'bin-file-not-found',\n  CODER_NOT_FOUND = 'coder-not-found',\n  INVALID_DATA = 'invalid-data',\n  FUNCTION_NOT_FOUND = 'function-not-found',\n  UNSUPPORTED_ENCODING_VERSION = 'unsupported-encoding-version',\n\n  // address\n  INVALID_BECH32_ADDRESS = 'invalid-bech32-address',\n  INVALID_EVM_ADDRESS = 'invalid-evm-address',\n  INVALID_B256_ADDRESS = 'invalid-b256-address',\n\n  // provider\n  INVALID_URL = 'invalid-url',\n  CHAIN_INFO_CACHE_EMPTY = 'chain-info-cache-empty',\n  NODE_INFO_CACHE_EMPTY = 'node-info-cache-empty',\n  MISSING_PROVIDER = 'missing-provider',\n  INVALID_PROVIDER = 'invalid-provider',\n  CONNECTION_REFUSED = 'connection-refused',\n\n  // wallet\n  INVALID_PUBLIC_KEY = 'invalid-public-key',\n  INSUFFICIENT_BALANCE = 'insufficient-balance',\n  WALLET_MANAGER_ERROR = 'wallet-manager-error',\n  HD_WALLET_ERROR = 'hd-wallet-error',\n  MISSING_CONNECTOR = 'missing-connector',\n\n  // errors\n  PARSE_FAILED = 'parse-failed',\n  ENCODE_ERROR = 'encode-error',\n  DECODE_ERROR = 'decode-error',\n  INVALID_CREDENTIALS = 'invalid-credentials',\n  ENV_DEPENDENCY_MISSING = 'env-dependency-missing',\n  INVALID_TTL = 'invalid-ttl',\n  INVALID_INPUT_PARAMETERS = 'invalid-input-parameters',\n  NOT_IMPLEMENTED = 'not-implemented',\n  NOT_SUPPORTED = 'not-supported',\n  CONVERTING_FAILED = 'converting-error',\n  ELEMENT_NOT_FOUND = 'element-not-found',\n  MISSING_REQUIRED_PARAMETER = 'missing-required-parameter',\n  INVALID_REQUEST = 'invalid-request',\n  UNEXPECTED_HEX_VALUE = 'unexpected-hex-value',\n  INVALID_TRANSFER_AMOUNT = 'invalid-transfer-amount',\n\n  // transaction\n  GAS_PRICE_TOO_LOW = 'gas-price-too-low',\n  GAS_LIMIT_TOO_LOW = 'gas-limit-too-low',\n  TRANSACTION_NOT_FOUND = 'transaction-not-found',\n  TRANSACTION_FAILED = 'transaction-failed',\n  INVALID_CONFIGURABLE_CONSTANTS = 'invalid-configurable-constants',\n  INVALID_TRANSACTION_INPUT = 'invalid-transaction-input',\n  INVALID_TRANSACTION_OUTPUT = 'invalid-transaction-output',\n  INVALID_TRANSACTION_STATUS = 'invalid-transaction-status',\n  INVALID_TRANSACTION_TYPE = 'invalid-transaction-type',\n  TRANSACTION_ERROR = 'transaction-error',\n  INVALID_POLICY_TYPE = 'invalid-policy-type',\n  DUPLICATED_POLICY = 'duplicated-policy',\n  TRANSACTION_SQUEEZED_OUT = 'transaction-squeezed-out',\n\n  // receipt\n  INVALID_RECEIPT_TYPE = 'invalid-receipt-type',\n\n  // mnemonic\n  INVALID_WORD_LIST = 'invalid-word-list',\n  INVALID_MNEMONIC = 'invalid-mnemonic',\n  INVALID_ENTROPY = 'invalid-entropy',\n  INVALID_SEED = 'invalid-seed',\n  INVALID_CHECKSUM = 'invalid-checksum',\n\n  // wallet / account\n  INVALID_PASSWORD = 'invalid-password',\n  ACCOUNT_REQUIRED = 'account-required',\n  UNLOCKED_WALLET_REQUIRED = 'unlocked-wallet-required',\n\n  // chain\n  LATEST_BLOCK_UNAVAILABLE = 'latest-block-unavailable',\n  ERROR_BUILDING_BLOCK_EXPLORER_URL = 'error-building-block-explorer-url',\n  UNSUPPORTED_FUEL_CLIENT_VERSION = 'unsupported-fuel-client-version',\n\n  // docs\n  VITEPRESS_PLUGIN_ERROR = 'vitepress-plugin-error',\n\n  // contract\n  INVALID_MULTICALL = 'invalid-multicall',\n\n  // script\n  SCRIPT_REVERTED = 'script-reverted',\n  SCRIPT_RETURN_INVALID_TYPE = 'script-return-invalid-type',\n\n  // graphql\n  STREAM_PARSING_ERROR = 'stream-parsing-error',\n\n  // coder\n  // ...\n}\n","export function getBuiltinVersions() {\n  return {\n    FORC: '0.49.3',\n    FUEL_CORE: '0.22.1',\n    FUELS: '0.79.0',\n  };\n}\n","function parseVersion(version: string): { major: number; minor: number; patch: number } {\n  const [major, minor, patch] = version.split('.').map((v) => parseInt(v, 10));\n  return { major, minor, patch };\n}\n\nfunction versionDiffs(\n  version1: string,\n  version2: string\n): { major: number; minor: number; patch: number; fullVersionDiff: number } {\n  const semver1 = parseVersion(version1);\n  const semver2 = parseVersion(version2);\n  const major = semver1.major - semver2.major;\n  const minor = semver1.minor - semver2.minor;\n  const patch = semver1.patch - semver2.patch;\n  return {\n    major,\n    minor,\n    patch,\n    fullVersionDiff: major || minor || patch,\n  };\n}\n\nexport function gt(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff > 0;\n}\n\nexport function eq(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff === 0;\n}\n\nexport function majorEq(version1: string, version2: string): boolean {\n  const { major } = versionDiffs(version1, version2);\n  return major === 0;\n}\n\nexport function minorEq(version1: string, version2: string): boolean {\n  const { minor } = versionDiffs(version1, version2);\n  return minor === 0;\n}\n\nexport function patchEq(version1: string, version2: string): boolean {\n  const { patch } = versionDiffs(version1, version2);\n  return patch === 0;\n}\n","import { getBuiltinVersions } from './getBuiltinVersions';\nimport { majorEq, minorEq, patchEq } from './semver';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  if (/^\\d+\\.\\d+\\.\\d+\\D+/m.test(networkVersion)) {\n    // eslint-disable-next-line no-console\n    console.warn(`You're running against an unreleased fuel-core version: ${networkVersion}. Things may work as expected, but it's not guaranteed. Please use a released version.      \nThis unreleased fuel-core build may include features and updates not yet supported by this version of the TS-SDK.`);\n  }\n\n  return {\n    supportedVersion,\n    isMajorSupported: majorEq(networkVersion, supportedVersion),\n    isMinorSupported: minorEq(networkVersion, supportedVersion),\n    isPatchSupported: patchEq(networkVersion, supportedVersion),\n  };\n}\n","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/packages/fuel-core/VERSION`\n    `FORC` — comes from `/packages/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/checkFuelCoreVersionCompatibility';\n","import { versions } from '@fuel-ts/versions';\n\nimport { ErrorCode } from './error-codes';\n\nexport class FuelError extends Error {\n  static readonly CODES = ErrorCode;\n  readonly VERSIONS = versions;\n\n  static parse(e: unknown) {\n    const error = e as FuelError;\n\n    if (error.code === undefined) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        \"Failed to parse the error object. The required 'code' property is missing.\"\n      );\n    }\n\n    const enumValues = Object.values(ErrorCode);\n    const codeIsKnown = enumValues.includes(error.code);\n\n    if (!codeIsKnown) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Unknown error code: ${error.code}. Accepted codes: ${enumValues.join(', ')}.`\n      );\n    }\n\n    return new FuelError(error.code, error.message);\n  }\n\n  code: ErrorCode;\n\n  constructor(code: ErrorCode, message: string) {\n    super(message);\n    this.code = code;\n    this.name = 'FuelError';\n  }\n\n  toObject() {\n    const { code, name, message, VERSIONS } = this;\n    return { code, name, message, VERSIONS };\n  }\n}\n"],"mappings":"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","names":["ErrorCode"]}
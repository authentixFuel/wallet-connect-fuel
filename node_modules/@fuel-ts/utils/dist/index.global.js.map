{"version":3,"sources":["../src/utils/capitalizeString.ts","../src/utils/chunkAndPadBytes.ts","../../versions/src/lib/getBuiltinVersions.ts","../../versions/src/lib/semver.ts","../../versions/src/lib/checkFuelCoreVersionCompatibility.ts","../../versions/src/index.ts","../../errors/src/error-codes.ts","../../errors/src/fuel-error.ts","../src/utils/arrayify.ts","../src/utils/concat.ts","../src/utils/hexlify.ts","../src/utils/normalizeString.ts","../src/utils/date-time.ts","../src/utils/chainConfig.json","../src/utils/defaultChainConfig.ts"],"sourcesContent":["export const capitalizeString = (str: string) => {\n  if (!str.length) {\n    return str;\n  }\n  return str[0].toUpperCase() + str.slice(1);\n};\n","/**\n * Function to take a byte array and split into chunks of a given size\n *\n * @param bytes - The byte array to chunk\n * @param chunkSize - The size of each chunk\n * @returns An array of byte arrays of a specified size\n */\nexport const chunkAndPadBytes = (bytes: Uint8Array, chunkSize: number): Uint8Array[] => {\n  const chunks: Uint8Array[] = [];\n\n  for (let offset = 0; offset < bytes.length; offset += chunkSize) {\n    const chunk = new Uint8Array(chunkSize);\n    chunk.set(bytes.slice(offset, offset + chunkSize));\n    chunks.push(chunk);\n  }\n\n  const lastChunk = chunks[chunks.length - 1];\n  const remainingBytes = bytes.length % chunkSize;\n  const paddedChunkLength = remainingBytes + ((8 - (remainingBytes % 8)) % 8);\n  const newChunk = lastChunk.slice(0, paddedChunkLength);\n  chunks[chunks.length - 1] = newChunk;\n\n  return chunks;\n};\n","export function getBuiltinVersions() {\n  return {\n    FORC: '0.49.3',\n    FUEL_CORE: '0.22.1',\n    FUELS: '0.79.0',\n  };\n}\n","function parseVersion(version: string): { major: number; minor: number; patch: number } {\n  const [major, minor, patch] = version.split('.').map((v) => parseInt(v, 10));\n  return { major, minor, patch };\n}\n\nfunction versionDiffs(\n  version1: string,\n  version2: string\n): { major: number; minor: number; patch: number; fullVersionDiff: number } {\n  const semver1 = parseVersion(version1);\n  const semver2 = parseVersion(version2);\n  const major = semver1.major - semver2.major;\n  const minor = semver1.minor - semver2.minor;\n  const patch = semver1.patch - semver2.patch;\n  return {\n    major,\n    minor,\n    patch,\n    fullVersionDiff: major || minor || patch,\n  };\n}\n\nexport function gt(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff > 0;\n}\n\nexport function eq(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff === 0;\n}\n\nexport function majorEq(version1: string, version2: string): boolean {\n  const { major } = versionDiffs(version1, version2);\n  return major === 0;\n}\n\nexport function minorEq(version1: string, version2: string): boolean {\n  const { minor } = versionDiffs(version1, version2);\n  return minor === 0;\n}\n\nexport function patchEq(version1: string, version2: string): boolean {\n  const { patch } = versionDiffs(version1, version2);\n  return patch === 0;\n}\n","import { getBuiltinVersions } from './getBuiltinVersions';\nimport { majorEq, minorEq, patchEq } from './semver';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  if (/^\\d+\\.\\d+\\.\\d+\\D+/m.test(networkVersion)) {\n    // eslint-disable-next-line no-console\n    console.warn(`You're running against an unreleased fuel-core version: ${networkVersion}. Things may work as expected, but it's not guaranteed. Please use a released version.      \nThis unreleased fuel-core build may include features and updates not yet supported by this version of the TS-SDK.`);\n  }\n\n  return {\n    supportedVersion,\n    isMajorSupported: majorEq(networkVersion, supportedVersion),\n    isMinorSupported: minorEq(networkVersion, supportedVersion),\n    isPatchSupported: patchEq(networkVersion, supportedVersion),\n  };\n}\n","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/packages/fuel-core/VERSION`\n    `FORC` — comes from `/packages/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/checkFuelCoreVersionCompatibility';\n","/**\n * Represents the different error codes thrown by the SDK\n */\nexport enum ErrorCode {\n  // abi\n  NO_ABIS_FOUND = 'no-abis-found',\n  ABI_TYPES_AND_VALUES_MISMATCH = 'abi-types-and-values-mismatch',\n  ABI_MAIN_METHOD_MISSING = 'abi-main-method-missing',\n  INVALID_COMPONENT = 'invalid-component',\n  FRAGMENT_NOT_FOUND = 'fragment-not-found',\n  CONFIGURABLE_NOT_FOUND = 'configurable-not-found',\n  TYPE_NOT_FOUND = 'type-not-found',\n  TYPE_NOT_SUPPORTED = 'type-not-supported',\n  INVALID_DECODE_VALUE = 'invalid-decode-value',\n  JSON_ABI_ERROR = 'json-abi-error',\n  TYPE_ID_NOT_FOUND = 'type-id-not-found',\n  BIN_FILE_NOT_FOUND = 'bin-file-not-found',\n  CODER_NOT_FOUND = 'coder-not-found',\n  INVALID_DATA = 'invalid-data',\n  FUNCTION_NOT_FOUND = 'function-not-found',\n  UNSUPPORTED_ENCODING_VERSION = 'unsupported-encoding-version',\n\n  // address\n  INVALID_BECH32_ADDRESS = 'invalid-bech32-address',\n  INVALID_EVM_ADDRESS = 'invalid-evm-address',\n  INVALID_B256_ADDRESS = 'invalid-b256-address',\n\n  // provider\n  INVALID_URL = 'invalid-url',\n  CHAIN_INFO_CACHE_EMPTY = 'chain-info-cache-empty',\n  NODE_INFO_CACHE_EMPTY = 'node-info-cache-empty',\n  MISSING_PROVIDER = 'missing-provider',\n  INVALID_PROVIDER = 'invalid-provider',\n  CONNECTION_REFUSED = 'connection-refused',\n\n  // wallet\n  INVALID_PUBLIC_KEY = 'invalid-public-key',\n  INSUFFICIENT_BALANCE = 'insufficient-balance',\n  WALLET_MANAGER_ERROR = 'wallet-manager-error',\n  HD_WALLET_ERROR = 'hd-wallet-error',\n  MISSING_CONNECTOR = 'missing-connector',\n\n  // errors\n  PARSE_FAILED = 'parse-failed',\n  ENCODE_ERROR = 'encode-error',\n  DECODE_ERROR = 'decode-error',\n  INVALID_CREDENTIALS = 'invalid-credentials',\n  ENV_DEPENDENCY_MISSING = 'env-dependency-missing',\n  INVALID_TTL = 'invalid-ttl',\n  INVALID_INPUT_PARAMETERS = 'invalid-input-parameters',\n  NOT_IMPLEMENTED = 'not-implemented',\n  NOT_SUPPORTED = 'not-supported',\n  CONVERTING_FAILED = 'converting-error',\n  ELEMENT_NOT_FOUND = 'element-not-found',\n  MISSING_REQUIRED_PARAMETER = 'missing-required-parameter',\n  INVALID_REQUEST = 'invalid-request',\n  UNEXPECTED_HEX_VALUE = 'unexpected-hex-value',\n  INVALID_TRANSFER_AMOUNT = 'invalid-transfer-amount',\n\n  // transaction\n  GAS_PRICE_TOO_LOW = 'gas-price-too-low',\n  GAS_LIMIT_TOO_LOW = 'gas-limit-too-low',\n  TRANSACTION_NOT_FOUND = 'transaction-not-found',\n  TRANSACTION_FAILED = 'transaction-failed',\n  INVALID_CONFIGURABLE_CONSTANTS = 'invalid-configurable-constants',\n  INVALID_TRANSACTION_INPUT = 'invalid-transaction-input',\n  INVALID_TRANSACTION_OUTPUT = 'invalid-transaction-output',\n  INVALID_TRANSACTION_STATUS = 'invalid-transaction-status',\n  INVALID_TRANSACTION_TYPE = 'invalid-transaction-type',\n  TRANSACTION_ERROR = 'transaction-error',\n  INVALID_POLICY_TYPE = 'invalid-policy-type',\n  DUPLICATED_POLICY = 'duplicated-policy',\n  TRANSACTION_SQUEEZED_OUT = 'transaction-squeezed-out',\n\n  // receipt\n  INVALID_RECEIPT_TYPE = 'invalid-receipt-type',\n\n  // mnemonic\n  INVALID_WORD_LIST = 'invalid-word-list',\n  INVALID_MNEMONIC = 'invalid-mnemonic',\n  INVALID_ENTROPY = 'invalid-entropy',\n  INVALID_SEED = 'invalid-seed',\n  INVALID_CHECKSUM = 'invalid-checksum',\n\n  // wallet / account\n  INVALID_PASSWORD = 'invalid-password',\n  ACCOUNT_REQUIRED = 'account-required',\n  UNLOCKED_WALLET_REQUIRED = 'unlocked-wallet-required',\n\n  // chain\n  LATEST_BLOCK_UNAVAILABLE = 'latest-block-unavailable',\n  ERROR_BUILDING_BLOCK_EXPLORER_URL = 'error-building-block-explorer-url',\n  UNSUPPORTED_FUEL_CLIENT_VERSION = 'unsupported-fuel-client-version',\n\n  // docs\n  VITEPRESS_PLUGIN_ERROR = 'vitepress-plugin-error',\n\n  // contract\n  INVALID_MULTICALL = 'invalid-multicall',\n\n  // script\n  SCRIPT_REVERTED = 'script-reverted',\n  SCRIPT_RETURN_INVALID_TYPE = 'script-return-invalid-type',\n\n  // graphql\n  STREAM_PARSING_ERROR = 'stream-parsing-error',\n\n  // coder\n  // ...\n}\n","import { versions } from '@fuel-ts/versions';\n\nimport { ErrorCode } from './error-codes';\n\nexport class FuelError extends Error {\n  static readonly CODES = ErrorCode;\n  readonly VERSIONS = versions;\n\n  static parse(e: unknown) {\n    const error = e as FuelError;\n\n    if (error.code === undefined) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        \"Failed to parse the error object. The required 'code' property is missing.\"\n      );\n    }\n\n    const enumValues = Object.values(ErrorCode);\n    const codeIsKnown = enumValues.includes(error.code);\n\n    if (!codeIsKnown) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Unknown error code: ${error.code}. Accepted codes: ${enumValues.join(', ')}.`\n      );\n    }\n\n    return new FuelError(error.code, error.message);\n  }\n\n  code: ErrorCode;\n\n  constructor(code: ErrorCode, message: string) {\n    super(message);\n    this.code = code;\n    this.name = 'FuelError';\n  }\n\n  toObject() {\n    const { code, name, message, VERSIONS } = this;\n    return { code, name, message, VERSIONS };\n  }\n}\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\n\n/**\n * Converts a bytes-like value to a `Uint8Array`.\n *\n * @param value - the value to convert to a Uint8Array\n * @returns the Uint8Array\n */\nexport const arrayify = (value: BytesLike): Uint8Array => {\n  // Return buffers as a new byte array\n  if (value instanceof Uint8Array) {\n    return new Uint8Array(value);\n  }\n\n  if (typeof value === 'string' && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n    const result = new Uint8Array((value.length - 2) / 2);\n    let offset = 2;\n    for (let i = 0; i < result.length; i++) {\n      result[i] = parseInt(value.substring(offset, offset + 2), 16);\n      offset += 2;\n    }\n    return result;\n  }\n\n  throw new FuelError(ErrorCode.PARSE_FAILED, 'invalid BytesLike value');\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { arrayify } from './arrayify';\n\n/**\n * Concatenates multiple Uint8Arrays into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concatBytes = (\n  arrays: ReadonlyArray<Uint8Array> | ReadonlyArray<number[]>\n): Uint8Array => {\n  const byteArrays = arrays.map((array) => {\n    if (array instanceof Uint8Array) {\n      return array;\n    }\n    return Uint8Array.from(array);\n  });\n\n  const totalSize = byteArrays.reduce((accum, item) => accum + item.length, 0);\n  const concatenated = new Uint8Array(totalSize);\n\n  byteArrays.reduce((offset, object) => {\n    concatenated.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  return concatenated;\n};\n\n/**\n * Concatenates multiple BytesLike into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concat = (arrays: ReadonlyArray<BytesLike>): Uint8Array => {\n  const bytes = arrays.map((v) => arrayify(v));\n\n  return concatBytes(bytes);\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { arrayify } from './arrayify';\n\nconst HexCharacters: string = '0123456789abcdef';\n\n/**\n *  Returns a hex representation of the inputted bytes.\n */\nexport function hexlify(data: BytesLike): string {\n  const bytes = arrayify(data);\n\n  let result = '0x';\n  for (let i = 0; i < bytes.length; i++) {\n    const v = bytes[i];\n    result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n  }\n  return result;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\n/**\n * Converts `some.string-value` into `SomeStringValue`.\n *\n * Examples:\n *  my-simple.test —— MySimpleTest\n *  myFile.ts —— MyFileTs\n *  my-abi.json —— MyAbiJson\n */\nexport const normalizeString = (str: string): string => {\n  const transformations: ((s: string) => string)[] = [\n    (s) => s.replace(/\\s+/g, '-'), // spaces to -\n    (s) => s.replace(/\\./g, '-'), // dots to -\n    (s) => s.replace(/_/g, '-'), // underscore to -\n    (s) => s.replace(/-[a-z]/g, (match) => match.slice(-1).toUpperCase()), // delete '-' and capitalize the letter after them\n    (s) => s.replace(/-/g, ''), // delete any '-' left\n    (s) => s.replace(/^\\d+/, ''), // removes leading digits\n    (s) => s[0].toUpperCase() + s.slice(1), // capitalize first letter\n  ];\n\n  const output = transformations.reduce((s, t) => t(s), str);\n\n  if (output === '') {\n    const errMsg = `The provided string '${str}' results in an empty output after`.concat(\n      ` normalization, therefore, it can't normalize string.`\n    );\n    throw new FuelError(ErrorCode.PARSE_FAILED, errMsg);\n  }\n\n  return output;\n};\n","/**\n * Tai64 timestamp.\n */\ntype Tai64Timestamp = string;\n\n/**\n * This constant is used to calculate the offset between the Unix epoch and the TAI64 epoch.\n * It allows for a **rough** conversion between the two time formats.\n *\n * // Value expires on:  28 June 2024\n * {@link https://data.iana.org/time-zones/data/leap-seconds.list}\n * {@link https://github.com/hl2/tai64/blob/master/src/leapSeconds.ts}\n */\nconst TAI64_LEAP_SECONDS: number = 37;\n\n/**\n * Tai64 (Temps Atomique International) is a time format\n *\n * The offset between the Unix epoch and the TAI64 epoch.\n * The TAI64 epoch is 2^62 nanoseconds after the Unix epoch (+ the offset of \"leap seconds\" relevant to the date).\n *\n * {@link https://cr.yp.to/libtai/tai64.html}\n * {@link https://cr.yp.to/proto/tai64.txt}\n */\nconst TAI64_UNIX_OFFSET: bigint = BigInt(2 ** 62) + BigInt(TAI64_LEAP_SECONDS);\n\n/**\n * Converts milliseconds to seconds and vice versa.\n *\n * @param ms - milliseconds to convert\n * @returns seconds\n */\nconst msToSeconds = (ms: number): number => Math.floor(ms / 1000);\n\n/**\n * Converts seconds to milliseconds and vice versa.\n *\n * @param seconds - seconds to convert\n * @returns milliseconds\n */\nconst secondsToMs = (seconds: number): number => seconds * 1000;\n\n/**\n * Converts Tai64 (seconds) time units to UNIX (seconds) time units.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix seconds timestamp\n */\nconst tai64ToUnixSeconds = (tai64: Tai64Timestamp): number =>\n  Number(BigInt(tai64) - TAI64_UNIX_OFFSET);\n\n/**\n * Converts Unix (seconds) to Tai64 (seconds).\n *\n * @param unixSeconds - unix seconds timestamp\n * @returns Tai64 timestamp\n */\nconst unixSecondsToTai64 = (unixSeconds: number): string =>\n  String(BigInt(unixSeconds) + TAI64_UNIX_OFFSET);\n\n/**\n * Helper to convert Tai64 (seconds) time units to UNIX (milliseconds) time units and vice.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix milliseconds timestamp\n */\nconst tai64ToUnixMilliseconds = (tai64: Tai64Timestamp): number =>\n  secondsToMs(tai64ToUnixSeconds(tai64));\n\n/**\n * This class is used to represent a date and time in the Tai64 format.\n *\n * ```typescript\n * import { DateTime } from 'fuels';\n *\n * // Constants\n * const tai64 = '4611686020108779340';\n * const unixMilliseconds = 1681391398000;\n * const seconds = 1681391398;\n *\n * // Instantiation\n * let date: DateTime = DateTime.now();\n * date = DateTime.fromTai64(tai64);\n * date = DateTime.fromUnixMilliseconds(unixMilliseconds);\n * date = DateTime.fromUnixSeconds(seconds);\n *\n * // Utility functions\n * tai64.toTai64() // '4611686020108779340'\n * milliseconds.toUnixMilliseconds() // 1681391398000\n * seconds.toUnixSeconds() // 1681391398\n *\n * // All date methods are available\n * const now: Date = DateTime.now();\n * now.toISOString(); // '2023-04-13T13:09:58.000Z'\n * now.getTime(); // 1681391398000\n * ```\n */\nexport class DateTime extends Date implements Date {\n  static TAI64_NULL: Tai64Timestamp = '';\n\n  /**\n   * Generates a new DateTime instance from a Tai64 timestamp.\n   *\n   * @param tai64 - Tai64 timestamp\n   * @returns a new DateTime instance\n   */\n  static fromTai64(tai64: Tai64Timestamp): DateTime {\n    return new DateTime(tai64ToUnixMilliseconds(tai64));\n  }\n\n  /**\n   * @param unixMilliseconds - unix milliseconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixMilliseconds(unixMilliseconds: number): DateTime {\n    return new DateTime(unixMilliseconds);\n  }\n\n  /**\n   * @param unixSeconds - unix seconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixSeconds(unixSeconds: number): DateTime {\n    return new DateTime(secondsToMs(unixSeconds));\n  }\n\n  /**\n   * Hide the constructor to prevent direct instantiation.\n   */\n  private constructor(date: Date | number | string) {\n    super(date);\n  }\n\n  /**\n   * Returns the Tai64 timestamp.\n   *\n   * @returns the Tai64 timestamp\n   */\n  toTai64(): Tai64Timestamp {\n    return unixSecondsToTai64(this.toUnixSeconds());\n  }\n\n  /**\n   * @returns the unix milliseconds timestamp\n   */\n  toUnixMilliseconds(): number {\n    return this.getTime();\n  }\n\n  /**\n   * @returns the unix seconds timestamp\n   */\n  toUnixSeconds(): number {\n    return msToSeconds(this.getTime());\n  }\n}\n","{\n  \"chain_name\": \"local_testnet\",\n  \"block_gas_limit\": 5000000000,\n  \"initial_state\": {\n    \"coins\": [\n      {\n        \"owner\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      }\n    ],\n    \"messages\": [\n      {\n        \"sender\": \"0xc43454aa38dd91f88109a4b7aef5efb96ce34e3f24992fe0f81d233ca686f80f\",\n        \"recipient\": \"0x69a2b736b60159b43bb8a4f98c0589f6da5fa3a3d101e8e269c499eb942753ba\",\n        \"nonce\": \"0101010101010101010101010101010101010101010101010101010101010101\",\n        \"amount\": \"0x000000000000FFFF\",\n        \"data\": \"\",\n        \"da_height\": \"0x00\"\n      },\n      {\n        \"sender\": \"0x69a2b736b60159b43bb8a4f98c0589f6da5fa3a3d101e8e269c499eb942753ba\",\n        \"recipient\": \"0xc43454aa38dd91f88109a4b7aef5efb96ce34e3f24992fe0f81d233ca686f80f\",\n        \"nonce\": \"0e1ef2963832068b0e1ef2963832068b0e1ef2963832068b0e1ef2963832068b\",\n        \"amount\": \"0xb04f3c08f59b309e\",\n        \"data\": \"\",\n        \"da_height\": \"0x00\"\n      }\n    ]\n  },\n  \"consensus_parameters\": {\n    \"tx_params\": {\n      \"max_inputs\": 255,\n      \"max_outputs\": 255,\n      \"max_witnesses\": 255,\n      \"max_gas_per_tx\": 10000000,\n      \"max_size\": 17825792\n    },\n    \"predicate_params\": {\n      \"max_predicate_length\": 1048576,\n      \"max_predicate_data_length\": 1048576,\n      \"max_gas_per_predicate\": 10000000,\n      \"max_message_data_length\": 1048576\n    },\n    \"script_params\": {\n      \"max_script_length\": 1048576,\n      \"max_script_data_length\": 1048576\n    },\n    \"contract_params\": {\n      \"contract_max_size\": 16777216,\n      \"max_storage_slots\": 255\n    },\n    \"fee_params\": {\n      \"gas_price_factor\": 92,\n      \"gas_per_byte\": 4\n    }\n  },\n  \"gas_costs\": {\n    \"add\": 1,\n    \"addi\": 1,\n    \"aloc\": 1,\n    \"and\": 1,\n    \"andi\": 1,\n    \"bal\": 13,\n    \"bhei\": 1,\n    \"bhsh\": 1,\n    \"burn\": 132,\n    \"cb\": 1,\n    \"cfei\": 1,\n    \"cfsi\": 1,\n    \"croo\": 16,\n    \"div\": 1,\n    \"divi\": 1,\n    \"ecr1\": 3000,\n    \"eck1\": 951,\n    \"ed19\": 3000,\n    \"eq\": 1,\n    \"exp\": 1,\n    \"expi\": 1,\n    \"flag\": 1,\n    \"gm\": 1,\n    \"gt\": 1,\n    \"gtf\": 1,\n    \"ji\": 1,\n    \"jmp\": 1,\n    \"jne\": 1,\n    \"jnei\": 1,\n    \"jnzi\": 1,\n    \"jmpf\": 1,\n    \"jmpb\": 1,\n    \"jnzf\": 1,\n    \"jnzb\": 1,\n    \"jnef\": 1,\n    \"jneb\": 1,\n    \"lb\": 1,\n    \"log\": 9,\n    \"lt\": 1,\n    \"lw\": 1,\n    \"mint\": 135,\n    \"mlog\": 1,\n    \"modOp\": 1,\n    \"modi\": 1,\n    \"moveOp\": 1,\n    \"movi\": 1,\n    \"mroo\": 2,\n    \"mul\": 1,\n    \"muli\": 1,\n    \"mldv\": 1,\n    \"noop\": 1,\n    \"not\": 1,\n    \"or\": 1,\n    \"ori\": 1,\n    \"poph\": 2,\n    \"popl\": 2,\n    \"pshh\": 2,\n    \"pshl\": 2,\n    \"ret\": 13,\n    \"rvrt\": 13,\n    \"sb\": 1,\n    \"sll\": 1,\n    \"slli\": 1,\n    \"srl\": 1,\n    \"srli\": 1,\n    \"srw\": 12,\n    \"sub\": 1,\n    \"subi\": 1,\n    \"sw\": 1,\n    \"sww\": 67,\n    \"time\": 1,\n    \"tr\": 105,\n    \"tro\": 60,\n    \"wdcm\": 1,\n    \"wqcm\": 1,\n    \"wdop\": 1,\n    \"wqop\": 1,\n    \"wdml\": 1,\n    \"wqml\": 1,\n    \"wddv\": 1,\n    \"wqdv\": 2,\n    \"wdmd\": 3,\n    \"wqmd\": 4,\n    \"wdam\": 2,\n    \"wqam\": 3,\n    \"wdmm\": 3,\n    \"wqmm\": 3,\n    \"xor\": 1,\n    \"xori\": 1,\n    \"call\": {\n      \"LightOperation\": {\n        \"base\": 144,\n        \"units_per_gas\": 214\n      }\n    },\n    \"ccp\": {\n      \"LightOperation\": {\n        \"base\": 15,\n        \"units_per_gas\": 103\n      }\n    },\n    \"csiz\": {\n      \"LightOperation\": {\n        \"base\": 17,\n        \"units_per_gas\": 790\n      }\n    },\n    \"k256\": {\n      \"LightOperation\": {\n        \"base\": 11,\n        \"units_per_gas\": 214\n      }\n    },\n    \"ldc\": {\n      \"LightOperation\": {\n        \"base\": 15,\n        \"units_per_gas\": 272\n      }\n    },\n    \"logd\": {\n      \"LightOperation\": {\n        \"base\": 26,\n        \"units_per_gas\": 64\n      }\n    },\n    \"mcl\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 3333\n      }\n    },\n    \"mcli\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 3333\n      }\n    },\n    \"mcp\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 2000\n      }\n    },\n    \"mcpi\": {\n      \"LightOperation\": {\n        \"base\": 3,\n        \"units_per_gas\": 2000\n      }\n    },\n    \"meq\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 2500\n      }\n    },\n    \"retd\": {\n      \"LightOperation\": {\n        \"base\": 29,\n        \"units_per_gas\": 62\n      }\n    },\n    \"s256\": {\n      \"LightOperation\": {\n        \"base\": 2,\n        \"units_per_gas\": 214\n      }\n    },\n    \"scwq\": {\n      \"LightOperation\": {\n        \"base\": 13,\n        \"units_per_gas\": 5\n      }\n    },\n    \"smo\": {\n      \"LightOperation\": {\n        \"base\": 209,\n        \"units_per_gas\": 55\n      }\n    },\n    \"srwq\": {\n      \"LightOperation\": {\n        \"base\": 47,\n        \"units_per_gas\": 5\n      }\n    },\n    \"swwq\": {\n      \"LightOperation\": {\n        \"base\": 44,\n        \"units_per_gas\": 5\n      }\n    },\n    \"contract_root\": {\n      \"LightOperation\": {\n        \"base\": 75,\n        \"units_per_gas\": 1\n      }\n    },\n    \"state_root\": {\n      \"LightOperation\": {\n        \"base\": 412,\n        \"units_per_gas\": 1\n      }\n    },\n    \"vm_initialization\": {\n      \"HeavyOperation\": {\n        \"base\": 2000,\n        \"gas_per_unit\": 0\n      }\n    },\n    \"new_storage_per_byte\": 1\n  },\n  \"consensus\": {\n    \"PoA\": {\n      \"signing_key\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\"\n    }\n  }\n}\n","import chainConfigJson from './chainConfig.json';\n\nexport const defaultChainConfig = chainConfigJson;\n\nexport const defaultConsensusKey =\n  '0xa449b1ffee0e2205fa924c6740cc48b3b473aa28587df6dab12abc245d1f5298';\n"],"mappings":"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V,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAAA,UACV,UAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,OAAS;AAAA,UACT,QAAU;AAA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","names":["ErrorCode","__publicField"]}
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/cli-utils.ts
var cli_utils_exports = {};
__export(cli_utils_exports, {
  findBinPath: () => findBinPath
});
module.exports = __toCommonJS(cli_utils_exports);

// src/cli-utils/findBinPath.ts
var import_fs = require("fs");
var import_path = require("path");
var findBinPath = (binCommandName, startingDir) => {
  const cmdPath = (0, import_path.join)(startingDir, "node_modules", ".bin", binCommandName);
  const parentDir = (0, import_path.join)(startingDir, "..");
  if ((0, import_fs.existsSync)(cmdPath)) {
    return cmdPath;
  }
  if (parentDir === startingDir) {
    throw new Error(`Command not found: ${binCommandName}`);
  }
  return findBinPath(binCommandName, parentDir);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  findBinPath
});
//# sourceMappingURL=cli-utils.js.map
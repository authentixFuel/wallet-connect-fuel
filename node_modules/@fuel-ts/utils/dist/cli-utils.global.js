"use strict";
(() => {
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x + '" is not supported');
  });

  // src/cli-utils/findBinPath.ts
  var import_fs = __require("fs");
  var import_path = __require("path");
  var findBinPath = (binCommandName, startingDir) => {
    const cmdPath = (0, import_path.join)(startingDir, "node_modules", ".bin", binCommandName);
    const parentDir = (0, import_path.join)(startingDir, "..");
    if ((0, import_fs.existsSync)(cmdPath)) {
      return cmdPath;
    }
    if (parentDir === startingDir) {
      throw new Error(`Command not found: ${binCommandName}`);
    }
    return findBinPath(binCommandName, parentDir);
  };
})();
//# sourceMappingURL=cli-utils.global.js.map
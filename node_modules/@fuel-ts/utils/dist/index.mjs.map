{"version":3,"sources":["../src/utils/capitalizeString.ts","../src/utils/chunkAndPadBytes.ts","../src/utils/arrayify.ts","../src/utils/concat.ts","../src/utils/hexlify.ts","../src/utils/normalizeString.ts","../src/utils/date-time.ts","../src/utils/chainConfig.json","../src/utils/defaultChainConfig.ts"],"sourcesContent":["export const capitalizeString = (str: string) => {\n  if (!str.length) {\n    return str;\n  }\n  return str[0].toUpperCase() + str.slice(1);\n};\n","/**\n * Function to take a byte array and split into chunks of a given size\n *\n * @param bytes - The byte array to chunk\n * @param chunkSize - The size of each chunk\n * @returns An array of byte arrays of a specified size\n */\nexport const chunkAndPadBytes = (bytes: Uint8Array, chunkSize: number): Uint8Array[] => {\n  const chunks: Uint8Array[] = [];\n\n  for (let offset = 0; offset < bytes.length; offset += chunkSize) {\n    const chunk = new Uint8Array(chunkSize);\n    chunk.set(bytes.slice(offset, offset + chunkSize));\n    chunks.push(chunk);\n  }\n\n  const lastChunk = chunks[chunks.length - 1];\n  const remainingBytes = bytes.length % chunkSize;\n  const paddedChunkLength = remainingBytes + ((8 - (remainingBytes % 8)) % 8);\n  const newChunk = lastChunk.slice(0, paddedChunkLength);\n  chunks[chunks.length - 1] = newChunk;\n\n  return chunks;\n};\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\n\n/**\n * Converts a bytes-like value to a `Uint8Array`.\n *\n * @param value - the value to convert to a Uint8Array\n * @returns the Uint8Array\n */\nexport const arrayify = (value: BytesLike): Uint8Array => {\n  // Return buffers as a new byte array\n  if (value instanceof Uint8Array) {\n    return new Uint8Array(value);\n  }\n\n  if (typeof value === 'string' && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n    const result = new Uint8Array((value.length - 2) / 2);\n    let offset = 2;\n    for (let i = 0; i < result.length; i++) {\n      result[i] = parseInt(value.substring(offset, offset + 2), 16);\n      offset += 2;\n    }\n    return result;\n  }\n\n  throw new FuelError(ErrorCode.PARSE_FAILED, 'invalid BytesLike value');\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { arrayify } from './arrayify';\n\n/**\n * Concatenates multiple Uint8Arrays into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concatBytes = (\n  arrays: ReadonlyArray<Uint8Array> | ReadonlyArray<number[]>\n): Uint8Array => {\n  const byteArrays = arrays.map((array) => {\n    if (array instanceof Uint8Array) {\n      return array;\n    }\n    return Uint8Array.from(array);\n  });\n\n  const totalSize = byteArrays.reduce((accum, item) => accum + item.length, 0);\n  const concatenated = new Uint8Array(totalSize);\n\n  byteArrays.reduce((offset, object) => {\n    concatenated.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  return concatenated;\n};\n\n/**\n * Concatenates multiple BytesLike into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concat = (arrays: ReadonlyArray<BytesLike>): Uint8Array => {\n  const bytes = arrays.map((v) => arrayify(v));\n\n  return concatBytes(bytes);\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { arrayify } from './arrayify';\n\nconst HexCharacters: string = '0123456789abcdef';\n\n/**\n *  Returns a hex representation of the inputted bytes.\n */\nexport function hexlify(data: BytesLike): string {\n  const bytes = arrayify(data);\n\n  let result = '0x';\n  for (let i = 0; i < bytes.length; i++) {\n    const v = bytes[i];\n    result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n  }\n  return result;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\n/**\n * Converts `some.string-value` into `SomeStringValue`.\n *\n * Examples:\n *  my-simple.test —— MySimpleTest\n *  myFile.ts —— MyFileTs\n *  my-abi.json —— MyAbiJson\n */\nexport const normalizeString = (str: string): string => {\n  const transformations: ((s: string) => string)[] = [\n    (s) => s.replace(/\\s+/g, '-'), // spaces to -\n    (s) => s.replace(/\\./g, '-'), // dots to -\n    (s) => s.replace(/_/g, '-'), // underscore to -\n    (s) => s.replace(/-[a-z]/g, (match) => match.slice(-1).toUpperCase()), // delete '-' and capitalize the letter after them\n    (s) => s.replace(/-/g, ''), // delete any '-' left\n    (s) => s.replace(/^\\d+/, ''), // removes leading digits\n    (s) => s[0].toUpperCase() + s.slice(1), // capitalize first letter\n  ];\n\n  const output = transformations.reduce((s, t) => t(s), str);\n\n  if (output === '') {\n    const errMsg = `The provided string '${str}' results in an empty output after`.concat(\n      ` normalization, therefore, it can't normalize string.`\n    );\n    throw new FuelError(ErrorCode.PARSE_FAILED, errMsg);\n  }\n\n  return output;\n};\n","/**\n * Tai64 timestamp.\n */\ntype Tai64Timestamp = string;\n\n/**\n * This constant is used to calculate the offset between the Unix epoch and the TAI64 epoch.\n * It allows for a **rough** conversion between the two time formats.\n *\n * // Value expires on:  28 June 2024\n * {@link https://data.iana.org/time-zones/data/leap-seconds.list}\n * {@link https://github.com/hl2/tai64/blob/master/src/leapSeconds.ts}\n */\nconst TAI64_LEAP_SECONDS: number = 37;\n\n/**\n * Tai64 (Temps Atomique International) is a time format\n *\n * The offset between the Unix epoch and the TAI64 epoch.\n * The TAI64 epoch is 2^62 nanoseconds after the Unix epoch (+ the offset of \"leap seconds\" relevant to the date).\n *\n * {@link https://cr.yp.to/libtai/tai64.html}\n * {@link https://cr.yp.to/proto/tai64.txt}\n */\nconst TAI64_UNIX_OFFSET: bigint = BigInt(2 ** 62) + BigInt(TAI64_LEAP_SECONDS);\n\n/**\n * Converts milliseconds to seconds and vice versa.\n *\n * @param ms - milliseconds to convert\n * @returns seconds\n */\nconst msToSeconds = (ms: number): number => Math.floor(ms / 1000);\n\n/**\n * Converts seconds to milliseconds and vice versa.\n *\n * @param seconds - seconds to convert\n * @returns milliseconds\n */\nconst secondsToMs = (seconds: number): number => seconds * 1000;\n\n/**\n * Converts Tai64 (seconds) time units to UNIX (seconds) time units.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix seconds timestamp\n */\nconst tai64ToUnixSeconds = (tai64: Tai64Timestamp): number =>\n  Number(BigInt(tai64) - TAI64_UNIX_OFFSET);\n\n/**\n * Converts Unix (seconds) to Tai64 (seconds).\n *\n * @param unixSeconds - unix seconds timestamp\n * @returns Tai64 timestamp\n */\nconst unixSecondsToTai64 = (unixSeconds: number): string =>\n  String(BigInt(unixSeconds) + TAI64_UNIX_OFFSET);\n\n/**\n * Helper to convert Tai64 (seconds) time units to UNIX (milliseconds) time units and vice.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix milliseconds timestamp\n */\nconst tai64ToUnixMilliseconds = (tai64: Tai64Timestamp): number =>\n  secondsToMs(tai64ToUnixSeconds(tai64));\n\n/**\n * This class is used to represent a date and time in the Tai64 format.\n *\n * ```typescript\n * import { DateTime } from 'fuels';\n *\n * // Constants\n * const tai64 = '4611686020108779340';\n * const unixMilliseconds = 1681391398000;\n * const seconds = 1681391398;\n *\n * // Instantiation\n * let date: DateTime = DateTime.now();\n * date = DateTime.fromTai64(tai64);\n * date = DateTime.fromUnixMilliseconds(unixMilliseconds);\n * date = DateTime.fromUnixSeconds(seconds);\n *\n * // Utility functions\n * tai64.toTai64() // '4611686020108779340'\n * milliseconds.toUnixMilliseconds() // 1681391398000\n * seconds.toUnixSeconds() // 1681391398\n *\n * // All date methods are available\n * const now: Date = DateTime.now();\n * now.toISOString(); // '2023-04-13T13:09:58.000Z'\n * now.getTime(); // 1681391398000\n * ```\n */\nexport class DateTime extends Date implements Date {\n  static TAI64_NULL: Tai64Timestamp = '';\n\n  /**\n   * Generates a new DateTime instance from a Tai64 timestamp.\n   *\n   * @param tai64 - Tai64 timestamp\n   * @returns a new DateTime instance\n   */\n  static fromTai64(tai64: Tai64Timestamp): DateTime {\n    return new DateTime(tai64ToUnixMilliseconds(tai64));\n  }\n\n  /**\n   * @param unixMilliseconds - unix milliseconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixMilliseconds(unixMilliseconds: number): DateTime {\n    return new DateTime(unixMilliseconds);\n  }\n\n  /**\n   * @param unixSeconds - unix seconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixSeconds(unixSeconds: number): DateTime {\n    return new DateTime(secondsToMs(unixSeconds));\n  }\n\n  /**\n   * Hide the constructor to prevent direct instantiation.\n   */\n  private constructor(date: Date | number | string) {\n    super(date);\n  }\n\n  /**\n   * Returns the Tai64 timestamp.\n   *\n   * @returns the Tai64 timestamp\n   */\n  toTai64(): Tai64Timestamp {\n    return unixSecondsToTai64(this.toUnixSeconds());\n  }\n\n  /**\n   * @returns the unix milliseconds timestamp\n   */\n  toUnixMilliseconds(): number {\n    return this.getTime();\n  }\n\n  /**\n   * @returns the unix seconds timestamp\n   */\n  toUnixSeconds(): number {\n    return msToSeconds(this.getTime());\n  }\n}\n","{\n  \"chain_name\": \"local_testnet\",\n  \"block_gas_limit\": 5000000000,\n  \"initial_state\": {\n    \"coins\": [\n      {\n        \"owner\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      }\n    ],\n    \"messages\": [\n      {\n        \"sender\": \"0xc43454aa38dd91f88109a4b7aef5efb96ce34e3f24992fe0f81d233ca686f80f\",\n        \"recipient\": \"0x69a2b736b60159b43bb8a4f98c0589f6da5fa3a3d101e8e269c499eb942753ba\",\n        \"nonce\": \"0101010101010101010101010101010101010101010101010101010101010101\",\n        \"amount\": \"0x000000000000FFFF\",\n        \"data\": \"\",\n        \"da_height\": \"0x00\"\n      },\n      {\n        \"sender\": \"0x69a2b736b60159b43bb8a4f98c0589f6da5fa3a3d101e8e269c499eb942753ba\",\n        \"recipient\": \"0xc43454aa38dd91f88109a4b7aef5efb96ce34e3f24992fe0f81d233ca686f80f\",\n        \"nonce\": \"0e1ef2963832068b0e1ef2963832068b0e1ef2963832068b0e1ef2963832068b\",\n        \"amount\": \"0xb04f3c08f59b309e\",\n        \"data\": \"\",\n        \"da_height\": \"0x00\"\n      }\n    ]\n  },\n  \"consensus_parameters\": {\n    \"tx_params\": {\n      \"max_inputs\": 255,\n      \"max_outputs\": 255,\n      \"max_witnesses\": 255,\n      \"max_gas_per_tx\": 10000000,\n      \"max_size\": 17825792\n    },\n    \"predicate_params\": {\n      \"max_predicate_length\": 1048576,\n      \"max_predicate_data_length\": 1048576,\n      \"max_gas_per_predicate\": 10000000,\n      \"max_message_data_length\": 1048576\n    },\n    \"script_params\": {\n      \"max_script_length\": 1048576,\n      \"max_script_data_length\": 1048576\n    },\n    \"contract_params\": {\n      \"contract_max_size\": 16777216,\n      \"max_storage_slots\": 255\n    },\n    \"fee_params\": {\n      \"gas_price_factor\": 92,\n      \"gas_per_byte\": 4\n    }\n  },\n  \"gas_costs\": {\n    \"add\": 1,\n    \"addi\": 1,\n    \"aloc\": 1,\n    \"and\": 1,\n    \"andi\": 1,\n    \"bal\": 13,\n    \"bhei\": 1,\n    \"bhsh\": 1,\n    \"burn\": 132,\n    \"cb\": 1,\n    \"cfei\": 1,\n    \"cfsi\": 1,\n    \"croo\": 16,\n    \"div\": 1,\n    \"divi\": 1,\n    \"ecr1\": 3000,\n    \"eck1\": 951,\n    \"ed19\": 3000,\n    \"eq\": 1,\n    \"exp\": 1,\n    \"expi\": 1,\n    \"flag\": 1,\n    \"gm\": 1,\n    \"gt\": 1,\n    \"gtf\": 1,\n    \"ji\": 1,\n    \"jmp\": 1,\n    \"jne\": 1,\n    \"jnei\": 1,\n    \"jnzi\": 1,\n    \"jmpf\": 1,\n    \"jmpb\": 1,\n    \"jnzf\": 1,\n    \"jnzb\": 1,\n    \"jnef\": 1,\n    \"jneb\": 1,\n    \"lb\": 1,\n    \"log\": 9,\n    \"lt\": 1,\n    \"lw\": 1,\n    \"mint\": 135,\n    \"mlog\": 1,\n    \"modOp\": 1,\n    \"modi\": 1,\n    \"moveOp\": 1,\n    \"movi\": 1,\n    \"mroo\": 2,\n    \"mul\": 1,\n    \"muli\": 1,\n    \"mldv\": 1,\n    \"noop\": 1,\n    \"not\": 1,\n    \"or\": 1,\n    \"ori\": 1,\n    \"poph\": 2,\n    \"popl\": 2,\n    \"pshh\": 2,\n    \"pshl\": 2,\n    \"ret\": 13,\n    \"rvrt\": 13,\n    \"sb\": 1,\n    \"sll\": 1,\n    \"slli\": 1,\n    \"srl\": 1,\n    \"srli\": 1,\n    \"srw\": 12,\n    \"sub\": 1,\n    \"subi\": 1,\n    \"sw\": 1,\n    \"sww\": 67,\n    \"time\": 1,\n    \"tr\": 105,\n    \"tro\": 60,\n    \"wdcm\": 1,\n    \"wqcm\": 1,\n    \"wdop\": 1,\n    \"wqop\": 1,\n    \"wdml\": 1,\n    \"wqml\": 1,\n    \"wddv\": 1,\n    \"wqdv\": 2,\n    \"wdmd\": 3,\n    \"wqmd\": 4,\n    \"wdam\": 2,\n    \"wqam\": 3,\n    \"wdmm\": 3,\n    \"wqmm\": 3,\n    \"xor\": 1,\n    \"xori\": 1,\n    \"call\": {\n      \"LightOperation\": {\n        \"base\": 144,\n        \"units_per_gas\": 214\n      }\n    },\n    \"ccp\": {\n      \"LightOperation\": {\n        \"base\": 15,\n        \"units_per_gas\": 103\n      }\n    },\n    \"csiz\": {\n      \"LightOperation\": {\n        \"base\": 17,\n        \"units_per_gas\": 790\n      }\n    },\n    \"k256\": {\n      \"LightOperation\": {\n        \"base\": 11,\n        \"units_per_gas\": 214\n      }\n    },\n    \"ldc\": {\n      \"LightOperation\": {\n        \"base\": 15,\n        \"units_per_gas\": 272\n      }\n    },\n    \"logd\": {\n      \"LightOperation\": {\n        \"base\": 26,\n        \"units_per_gas\": 64\n      }\n    },\n    \"mcl\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 3333\n      }\n    },\n    \"mcli\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 3333\n      }\n    },\n    \"mcp\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 2000\n      }\n    },\n    \"mcpi\": {\n      \"LightOperation\": {\n        \"base\": 3,\n        \"units_per_gas\": 2000\n      }\n    },\n    \"meq\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 2500\n      }\n    },\n    \"retd\": {\n      \"LightOperation\": {\n        \"base\": 29,\n        \"units_per_gas\": 62\n      }\n    },\n    \"s256\": {\n      \"LightOperation\": {\n        \"base\": 2,\n        \"units_per_gas\": 214\n      }\n    },\n    \"scwq\": {\n      \"LightOperation\": {\n        \"base\": 13,\n        \"units_per_gas\": 5\n      }\n    },\n    \"smo\": {\n      \"LightOperation\": {\n        \"base\": 209,\n        \"units_per_gas\": 55\n      }\n    },\n    \"srwq\": {\n      \"LightOperation\": {\n        \"base\": 47,\n        \"units_per_gas\": 5\n      }\n    },\n    \"swwq\": {\n      \"LightOperation\": {\n        \"base\": 44,\n        \"units_per_gas\": 5\n      }\n    },\n    \"contract_root\": {\n      \"LightOperation\": {\n        \"base\": 75,\n        \"units_per_gas\": 1\n      }\n    },\n    \"state_root\": {\n      \"LightOperation\": {\n        \"base\": 412,\n        \"units_per_gas\": 1\n      }\n    },\n    \"vm_initialization\": {\n      \"HeavyOperation\": {\n        \"base\": 2000,\n        \"gas_per_unit\": 0\n      }\n    },\n    \"new_storage_per_byte\": 1\n  },\n  \"consensus\": {\n    \"PoA\": {\n      \"signing_key\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\"\n    }\n  }\n}\n","import chainConfigJson from './chainConfig.json';\n\nexport const defaultChainConfig = chainConfigJson;\n\nexport const defaultConsensusKey =\n  '0xa449b1ffee0e2205fa924c6740cc48b3b473aa28587df6dab12abc245d1f5298';\n"],"mappings":"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ACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;AAAA,MACA;AAAA,QACE,OAAS;AAAA,QACT,QAAU;AAAA,QACV,UAAY;AAAA,MACd;A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","names":["ErrorCode","FuelError"]}
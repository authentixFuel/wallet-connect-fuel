{"version":3,"sources":["../../../node_modules/.pnpm/bech32@2.0.0/node_modules/bech32/dist/index.js","../../../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../../../node_modules/.pnpm/webidl-conversions@3.0.1/node_modules/webidl-conversions/lib/index.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/utils.js","../../../node_modules/.pnpm/tr46@0.0.3/node_modules/tr46/lib/mappingTable.json","../../../node_modules/.pnpm/tr46@0.0.3/node_modules/tr46/index.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/url-state-machine.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/URL-impl.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/URL.js","../../../node_modules/.pnpm/whatwg-url@5.0.0/node_modules/whatwg-url/lib/public-api.js","../../../node_modules/.pnpm/node-fetch@2.7.0/node_modules/node-fetch/lib/index.mjs","../../../node_modules/.pnpm/cross-fetch@4.0.0/node_modules/cross-fetch/dist/node-ponyfill.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/isObjectLike.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/invariant.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/location.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printLocation.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/error/GraphQLError.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/error/syntaxError.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/ast.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/directiveLocation.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/kinds.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/characterClasses.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/blockString.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/tokenKind.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/lexer.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/devAssert.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/inspect.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/instanceOf.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/source.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/parser.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printString.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/visitor.js","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printer.js","../../../node_modules/.pnpm/extract-files@9.0.0/node_modules/extract-files/public/ReactNativeFile.js","../../../node_modules/.pnpm/extract-files@9.0.0/node_modules/extract-files/public/isExtractableFile.js","../../../node_modules/.pnpm/extract-files@9.0.0/node_modules/extract-files/public/extractFiles.js","../../../node_modules/.pnpm/extract-files@9.0.0/node_modules/extract-files/public/index.js","../../../node_modules/.pnpm/delayed-stream@1.0.0/node_modules/delayed-stream/lib/delayed_stream.js","../../../node_modules/.pnpm/combined-stream@1.0.8/node_modules/combined-stream/lib/combined_stream.js","../../../node_modules/.pnpm/mime-db@1.52.0/node_modules/mime-db/db.json","../../../node_modules/.pnpm/mime-db@1.52.0/node_modules/mime-db/index.js","../../../node_modules/.pnpm/mime-types@2.1.35/node_modules/mime-types/index.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/defer.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/async.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/abort.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/iterate.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/state.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/lib/terminator.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/parallel.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/serialOrdered.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/serial.js","../../../node_modules/.pnpm/asynckit@0.4.0/node_modules/asynckit/index.js","../../../node_modules/.pnpm/form-data@3.0.1/node_modules/form-data/lib/populate.js","../../../node_modules/.pnpm/form-data@3.0.1/node_modules/form-data/lib/form_data.js","../../../node_modules/.pnpm/graphql-request@5.0.0_graphql@16.6.0/node_modules/graphql-request/src/defaultJsonSerializer.ts","../../../node_modules/.pnpm/graphql-request@5.0.0_graphql@16.6.0/node_modules/graphql-request/src/createRequestBody.ts","../../../node_modules/.pnpm/graphql-request@5.0.0_graphql@16.6.0/node_modules/graphql-request/src/parseArgs.ts","../../../node_modules/.pnpm/graphql-request@5.0.0_graphql@16.6.0/node_modules/graphql-request/src/types.ts","../../../node_modules/.pnpm/graphql-request@5.0.0_graphql@16.6.0/node_modules/graphql-request/src/graphql-ws.ts","../../../node_modules/.pnpm/graphql-request@5.0.0_graphql@16.6.0/node_modules/graphql-request/src/index.ts","../../../node_modules/.pnpm/@fuels+vm-asm@0.42.1/node_modules/@fuels/vm-asm/dist/node/index.cjs","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/_assert.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/cryptoNode.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/utils.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/_sha2.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/sha256.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/hmac.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/pbkdf2.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/scrypt.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/_u64.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.3/node_modules/@noble/hashes/src/sha3.ts","../../versions/src/lib/getBuiltinVersions.ts","../../versions/src/lib/semver.ts","../../versions/src/lib/checkFuelCoreVersionCompatibility.ts","../../versions/src/index.ts","../../errors/src/error-codes.ts","../../errors/src/fuel-error.ts","../../utils/src/utils/capitalizeString.ts","../../utils/src/utils/chunkAndPadBytes.ts","../../utils/src/utils/arrayify.ts","../../utils/src/utils/concat.ts","../../utils/src/utils/hexlify.ts","../../utils/src/utils/normalizeString.ts","../../utils/src/utils/date-time.ts","../../utils/src/utils/chainConfig.json","../../utils/src/utils/defaultChainConfig.ts","../../crypto/src/shared/scrypt.ts","../../crypto/src/shared/keccak256.ts","../../crypto/src/node/aes-ctr.ts","../../crypto/src/node/bufferFromString.ts","../../crypto/src/node/randomBytes.ts","../../crypto/src/node/stringFromBuffer.ts","../../crypto/src/node/encryptJsonWalletData.ts","../../crypto/src/node/index.ts","../../crypto/src/index.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/_version.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/properties.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/errors.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/data.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/maths.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/base58.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/utils/utf8.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/crypto/crypto.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/crypto/hmac.ts","../../../node_modules/.pnpm/@noble+hashes@1.1.2/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/.pnpm/@noble+hashes@1.1.2/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/.pnpm/@noble+hashes@1.1.2/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/.pnpm/@noble+hashes@1.1.2/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/crypto/keccak.ts","../../../node_modules/.pnpm/@noble+hashes@1.1.2/node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/.pnpm/@noble+hashes@1.1.2/node_modules/@noble/hashes/esm/ripemd160.js","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/crypto/ripemd160.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/crypto/pbkdf2.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/address/address.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/transaction/accesslist.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/providers/plugins-network.ts","../../../node_modules/.pnpm/ethers@6.7.1/node_modules/ethers/src.ts/providers/network.ts","../../interfaces/src/index.ts","../../address/src/utils.ts","../../address/src/address.ts","../../address/src/configs.ts","../../math/src/bn.ts","../../math/src/configs.ts","../../math/src/decimal.ts","../../math/src/functional.ts","../../math/src/math.ts","../src/providers/coin-quantity.ts","../../hasher/src/hasher.ts","../../abi-coder/src/encoding/coders/AbstractCoder.ts","../../abi-coder/src/encoding/coders/v0/ArrayCoder.ts","../../abi-coder/src/utils/constants.ts","../../abi-coder/src/utils/utilities.ts","../../abi-coder/src/encoding/coders/v0/BigNumberCoder.ts","../../abi-coder/src/encoding/coders/v0/B256Coder.ts","../../abi-coder/src/encoding/coders/v0/B512Coder.ts","../../abi-coder/src/encoding/coders/v0/BooleanCoder.ts","../../abi-coder/src/encoding/coders/v0/ByteCoder.ts","../../abi-coder/src/encoding/coders/v0/EnumCoder.ts","../../abi-coder/src/encoding/coders/v0/OptionCoder.ts","../../abi-coder/src/encoding/coders/v0/NumberCoder.ts","../../abi-coder/src/encoding/coders/v0/RawSliceCoder.ts","../../abi-coder/src/encoding/coders/v0/StdStringCoder.ts","../../abi-coder/src/encoding/coders/v0/StringCoder.ts","../../abi-coder/src/encoding/coders/v0/StructCoder.ts","../../abi-coder/src/encoding/coders/v0/TupleCoder.ts","../../abi-coder/src/encoding/coders/v0/VecCoder.ts","../../abi-coder/src/Interface.ts","../../abi-coder/src/ResolvedAbiType.ts","../../abi-coder/src/encoding/strategies/getCoderForEncoding.ts","../../abi-coder/src/encoding/strategies/getCoderV0.ts","../../abi-coder/src/encoding/strategies/getCoders.ts","../../abi-coder/src/encoding/strategies/getCoderV1.ts","../../abi-coder/src/encoding/coders/v1/BooleanCoder.ts","../../abi-coder/src/encoding/coders/v1/ByteCoder.ts","../../abi-coder/src/encoding/coders/v1/EnumCoder.ts","../../abi-coder/src/encoding/coders/v1/NumberCoder.ts","../../abi-coder/src/encoding/coders/v1/RawSliceCoder.ts","../../abi-coder/src/encoding/coders/v1/StdStringCoder.ts","../../abi-coder/src/encoding/coders/v1/StringCoder.ts","../../abi-coder/src/encoding/coders/v1/StructCoder.ts","../../abi-coder/src/encoding/coders/v1/TupleCoder.ts","../../abi-coder/src/encoding/coders/v1/VecCoder.ts","../../abi-coder/src/AbiCoder.ts","../../abi-coder/src/FunctionFragment.ts","../../transactions/src/coders/input.ts","../../transactions/src/coders/byte-array.ts","../../transactions/src/coders/tx-pointer.ts","../../transactions/src/coders/output.ts","../../transactions/src/coders/policy.ts","../../transactions/src/coders/receipt.ts","../../transactions/src/coders/storage-slot.ts","../../transactions/src/coders/transaction.ts","../../transactions/src/coders/witness.ts","../../transactions/src/coders/utxo-id.ts","../../../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/src/abstract/utils.ts","../src/providers/provider.ts","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_isPlaceholder.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_curry1.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_isArray.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/type.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_toISOString.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_isInteger.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_cloneRegExp.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_clone.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/clone.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/trim.js","../../../node_modules/.pnpm/tslib@2.6.0/node_modules/tslib/tslib.es6.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/devAssert.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/isObjectLike.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/invariant.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/location.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printLocation.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/error/GraphQLError.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/error/syntaxError.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/ast.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/directiveLocation.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/kinds.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/characterClasses.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/blockString.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/tokenKind.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/lexer.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/inspect.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/jsutils/instanceOf.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/source.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/parser.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printString.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/visitor.mjs","../../../node_modules/.pnpm/graphql@16.6.0/node_modules/graphql/language/printer.mjs","../../../node_modules/.pnpm/graphql-tag@2.12.6_graphql@16.6.0/node_modules/graphql-tag/src/index.ts","../src/providers/__generated__/operations.ts","../src/providers/fuel-graphql-subscriber.ts","../src/providers/memory-cache.ts","../src/providers/transaction-request/input.ts","../src/providers/transaction-request/output.ts","../src/providers/resource.ts","../../transactions/src/configs.ts","../src/providers/utils/receipts.ts","../src/providers/utils/block-explorer.ts","../src/providers/utils/gas.ts","../src/providers/utils/json.ts","../src/providers/utils/sleep.ts","../src/providers/transaction-request/errors.ts","../src/providers/transaction-request/witness.ts","../src/providers/transaction-request/transaction-request.ts","../src/providers/transaction-request/hash-transaction.ts","../src/providers/transaction-request/storage-slot.ts","../src/providers/transaction-request/create-transaction-request.ts","../src/providers/transaction-request/scripts.ts","../src/providers/transaction-request/script-transaction-request.ts","../src/providers/transaction-request/utils.ts","../src/providers/transaction-summary/calculate-transaction-fee.ts","../src/providers/transaction-summary/call.ts","../src/providers/transaction-summary/input.ts","../src/providers/transaction-summary/output.ts","../src/providers/transaction-summary/types.ts","../src/providers/transaction-summary/operations.ts","../src/providers/transaction-summary/receipt.ts","../src/providers/transaction-summary/status.ts","../src/providers/transaction-summary/assemble-transaction-summary.ts","../src/providers/transaction-response/getDecodedLogs.ts","../src/providers/transaction-response/transaction-response.ts","../src/providers/utils/auto-retry-fetch.ts","../src/providers/utils/merge-quantities.ts","../src/providers/transaction-summary/get-transaction-summary.ts","../src/providers/chains.ts","../src/providers/assets/utils/network.ts","../src/providers/assets/utils/url.ts","../src/providers/assets/utils/resolveIconPaths.ts","../src/providers/assets/index.ts","../src/utils/formatTransferToContractScriptData.ts","../src/account.ts","../../../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/src/abstract/modular.ts","../../../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/src/abstract/curve.ts","../../../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/src/abstract/weierstrass.ts","../../../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/src/_shortw_utils.ts","../../../node_modules/.pnpm/@noble+curves@1.3.0/node_modules/@noble/curves/src/secp256k1.ts","../src/signer/signer.ts","../../../node_modules/.pnpm/uuid@9.0.0/node_modules/uuid/dist/esm-node/rng.js","../../../node_modules/.pnpm/uuid@9.0.0/node_modules/uuid/dist/esm-node/stringify.js","../../../node_modules/.pnpm/uuid@9.0.0/node_modules/uuid/dist/esm-node/native.js","../../../node_modules/.pnpm/uuid@9.0.0/node_modules/uuid/dist/esm-node/v4.js","../src/wallet/keystore-wallet.ts","../src/wallet/base-wallet-unlocked.ts","../src/wordlists/words/english.ts","../src/wordlists/index.ts","../src/mnemonic/utils.ts","../src/mnemonic/mnemonic.ts","../src/hdwallet/hdwallet.ts","../src/wallet/wallets.ts","../src/wallet/wallet.ts","../src/wallet-manager/wallet-manager.ts","../src/wallet-manager/storages/memory-storage.ts","../src/wallet-manager/vaults/mnemonic-vault.ts","../src/wallet-manager/vaults/privatekey-vault.ts","../src/wallet-manager/types.ts","../../merkle/src/binary/binaryMerkleTree.ts","../../merkle/src/common/common.ts","../../merkle/src/binary/types/node.ts","../../merkle/src/sparse/sparseMerkleTree.ts","../../merkle/src/sparse/proofs.ts","../../merkle/src/sparse/treeHasher.ts","../../merkle/src/sparse/types/sparseCompactMerkleProof.ts","../../merkle/src/sparse/types/sparseMerkleProof.ts","../../merkle/src/sparse/utils.ts","../src/predicate/utils/getPredicateRoot.ts","../src/predicate/predicate.ts","../src/connectors/fuel-connector.ts","../src/connectors/types/connector-types.ts","../src/connectors/types/local-storage.ts","../src/connectors/utils/cache.ts","../src/connectors/utils/dispatch-fuel-connector-event.ts","../src/connectors/utils/promises.ts","../src/connectors/fuel.ts"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","[[[0,44],\"disallowed_STD3_valid\"],[[45,46],\"valid\"],[[47,47],\"disallowed_STD3_valid\"],[[48,57],\"valid\"],[[58,64],\"disallowed_STD3_valid\"],[[65,65],\"mapped\",[97]],[[66,66],\"mapped\",[98]],[[67,67],\"mapped\",[99]],[[68,68],\"mapped\",[100]],[[69,69],\"mapped\",[101]],[[70,70],\"mapped\",[102]],[[71,71],\"mapped\",[103]],[[72,72],\"mapped\",[104]],[[73,73],\"mapped\",[105]],[[74,74],\"mapped\",[106]],[[75,75],\"mapped\",[107]],[[76,76],\"mapped\",[108]],[[77,77],\"mapped\",[109]],[[78,78],\"mapped\",[110]],[[79,79],\"mapped\",[111]],[[80,80],\"mapped\",[112]],[[81,81],\"mapped\",[113]],[[82,82],\"mapped\",[114]],[[83,83],\"mapped\",[115]],[[84,84],\"mapped\",[116]],[[85,85],\"mapped\",[117]],[[86,86],\"mapped\",[118]],[[87,87],\"mapped\",[119]],[[88,88],\"mapped\",[120]],[[89,89],\"mapped\",[121]],[[90,90],\"mapped\",[122]],[[91,96],\"disallowed_STD3_valid\"],[[97,122],\"valid\"],[[123,127],\"disallowed_STD3_valid\"],[[128,159],\"disallowed\"],[[160,160],\"disallowed_STD3_mapped\",[32]],[[161,167],\"valid\",[],\"NV8\"],[[168,168],\"disallowed_STD3_mapped\",[32,776]],[[169,169],\"valid\",[],\"NV8\"],[[170,170],\"mapped\",[97]],[[171,172],\"valid\",[],\"NV8\"],[[173,173],\"ignored\"],[[174,174],\"valid\",[],\"NV8\"],[[175,175],\"disallowed_STD3_mapped\",[32,772]],[[176,177],\"valid\",[],\"NV8\"],[[178,178],\"mapped\",[50]],[[179,179],\"mapped\",[51]],[[180,180],\"disallowed_STD3_mapped\",[32,769]],[[181,181],\"mapped\",[956]],[[182,182],\"valid\",[],\"NV8\"],[[183,183],\"valid\"],[[184,184],\"disallowed_STD3_mapped\",[32,807]],[[185,185],\"mapped\",[49]],[[186,186],\"mapped\",[111]],[[187,187],\"valid\",[],\"NV8\"],[[188,188],\"mapped\",[49,8260,52]],[[189,189],\"mapped\",[49,8260,50]],[[190,190],\"mapped\",[51,8260,52]],[[191,191],\"valid\",[],\"NV8\"],[[192,192],\"mapped\",[224]],[[193,193],\"mapped\",[225]],[[194,194],\"mapped\",[226]],[[195,195],\"mapped\",[227]],[[196,196],\"mapped\",[228]],[[197,197],\"mapped\",[229]],[[198,198],\"mapped\",[230]],[[199,199],\"mapped\",[231]],[[200,200],\"mapped\",[232]],[[201,201],\"mapped\",[233]],[[202,202],\"mapped\",[234]],[[203,203],\"mapped\",[235]],[[204,204],\"mapped\",[236]],[[205,205],\"mapped\",[237]],[[206,206],\"mapped\",[238]],[[207,207],\"mapped\",[239]],[[208,208],\"mapped\",[240]],[[209,209],\"mapped\",[241]],[[210,210],\"mapped\",[242]],[[211,211],\"mapped\",[243]],[[212,212],\"mapped\",[244]],[[213,213],\"mapped\",[245]],[[214,214],\"mapped\",[246]],[[215,215],\"valid\",[],\"NV8\"],[[216,216],\"mapped\",[248]],[[217,217],\"mapped\",[249]],[[218,218],\"mapped\",[250]],[[219,219],\"mapped\",[251]],[[220,220],\"mapped\",[252]],[[221,221],\"mapped\",[253]],[[222,222],\"mapped\",[254]],[[223,223],\"deviation\",[115,115]],[[224,246],\"valid\"],[[247,247],\"valid\",[],\"NV8\"],[[248,255],\"valid\"],[[256,256],\"mapped\",[257]],[[257,257],\"valid\"],[[258,258],\"mapped\",[259]],[[259,259],\"valid\"],[[260,260],\"mapped\",[261]],[[261,261],\"valid\"],[[262,262],\"mapped\",[263]],[[263,263],\"valid\"],[[264,264],\"mapped\",[265]],[[265,265],\"valid\"],[[266,266],\"mapped\",[267]],[[267,267],\"valid\"],[[268,268],\"mapped\",[269]],[[269,269],\"valid\"],[[270,270],\"mapped\",[271]],[[271,271],\"valid\"],[[272,272],\"mapped\",[273]],[[273,273],\"valid\"],[[274,274],\"mapped\",[275]],[[275,275],\"valid\"],[[276,276],\"mapped\",[277]],[[277,277],\"valid\"],[[278,278],\"mapped\",[279]],[[279,279],\"valid\"],[[280,280],\"mapped\",[281]],[[281,281],\"valid\"],[[282,282],\"mapped\",[283]],[[283,283],\"valid\"],[[284,284],\"mapped\",[285]],[[285,285],\"valid\"],[[286,286],\"mapped\",[287]],[[287,287],\"valid\"],[[288,288],\"mapped\",[289]],[[289,289],\"valid\"],[[290,290],\"mapped\",[291]],[[291,291],\"valid\"],[[292,292],\"mapped\",[293]],[[293,293],\"valid\"],[[294,294],\"mapped\",[295]],[[295,295],\"valid\"],[[296,296],\"mapped\",[297]],[[297,297],\"valid\"],[[298,298],\"mapped\",[299]],[[299,299],\"valid\"],[[300,300],\"mapped\",[301]],[[301,301],\"valid\"],[[302,302],\"mapped\",[303]],[[303,303],\"valid\"],[[304,304],\"mapped\",[105,775]],[[305,305],\"valid\"],[[306,307],\"mapped\",[105,106]],[[308,308],\"mapped\",[309]],[[309,309],\"valid\"],[[310,310],\"mapped\",[311]],[[311,312],\"valid\"],[[313,313],\"mapped\",[314]],[[314,314],\"valid\"],[[315,315],\"mapped\",[316]],[[316,316],\"valid\"],[[317,317],\"mapped\",[318]],[[318,318],\"valid\"],[[319,320],\"mapped\",[108,183]],[[321,321],\"mapped\",[322]],[[322,322],\"valid\"],[[323,323],\"mapped\",[324]],[[324,324],\"valid\"],[[325,325],\"mapped\",[326]],[[326,326],\"valid\"],[[327,327],\"mapped\",[328]],[[328,328],\"valid\"],[[329,329],\"mapped\",[700,110]],[[330,330],\"mapped\",[331]],[[331,331],\"valid\"],[[332,332],\"mapped\",[333]],[[333,333],\"valid\"],[[334,334],\"mapped\",[335]],[[335,335],\"valid\"],[[336,336],\"mapped\",[337]],[[337,337],\"valid\"],[[338,338],\"mapped\",[339]],[[339,339],\"valid\"],[[340,340],\"mapped\",[341]],[[341,341],\"valid\"],[[342,342],\"mapped\",[343]],[[343,343],\"valid\"],[[344,344],\"mapped\",[345]],[[345,345],\"valid\"],[[346,346],\"mapped\",[347]],[[347,347],\"valid\"],[[348,348],\"mapped\",[349]],[[349,349],\"valid\"],[[350,350],\"mapped\",[351]],[[351,351],\"valid\"],[[352,352],\"mapped\",[353]],[[353,353],\"valid\"],[[354,354],\"mapped\",[355]],[[355,355],\"valid\"],[[356,356],\"mapped\",[357]],[[357,357],\"valid\"],[[358,358],\"mapped\",[359]],[[359,359],\"valid\"],[[360,360],\"mapped\",[361]],[[361,361],\"valid\"],[[362,362],\"mapped\",[363]],[[363,363],\"valid\"],[[364,364],\"mapped\",[365]],[[365,365],\"valid\"],[[366,366],\"mapped\",[367]],[[367,367],\"valid\"],[[368,368],\"mapped\",[369]],[[369,369],\"valid\"],[[370,370],\"mapped\",[371]],[[371,371],\"valid\"],[[372,372],\"mapped\",[373]],[[373,373],\"valid\"],[[374,374],\"mapped\",[375]],[[375,375],\"valid\"],[[376,376],\"mapped\",[255]],[[377,377],\"mapped\",[378]],[[378,378],\"valid\"],[[379,379],\"mapped\",[380]],[[380,380],\"valid\"],[[381,381],\"mapped\",[382]],[[382,382],\"valid\"],[[383,383],\"mapped\",[115]],[[384,384],\"valid\"],[[385,385],\"mapped\",[595]],[[386,386],\"mapped\",[387]],[[387,387],\"valid\"],[[388,388],\"mapped\",[389]],[[389,389],\"valid\"],[[390,390],\"mapped\",[596]],[[391,391],\"mapped\",[392]],[[392,392],\"valid\"],[[393,393],\"mapped\",[598]],[[394,394],\"mapped\",[599]],[[395,395],\"mapped\",[396]],[[396,397],\"valid\"],[[398,398],\"mapped\",[477]],[[399,399],\"mapped\",[601]],[[400,400],\"mapped\",[603]],[[401,401],\"mapped\",[402]],[[402,402],\"valid\"],[[403,403],\"mapped\",[608]],[[404,404],\"mapped\",[611]],[[405,405],\"valid\"],[[406,406],\"mapped\",[617]],[[407,407],\"mapped\",[616]],[[408,408],\"mapped\",[409]],[[409,411],\"valid\"],[[412,412],\"mapped\",[623]],[[413,413],\"mapped\",[626]],[[414,414],\"valid\"],[[415,415],\"mapped\",[629]],[[416,416],\"mapped\",[417]],[[417,417],\"valid\"],[[418,418],\"mapped\",[419]],[[419,419],\"valid\"],[[420,420],\"mapped\",[421]],[[421,421],\"valid\"],[[422,422],\"mapped\",[640]],[[423,423],\"mapped\",[424]],[[424,424],\"valid\"],[[425,425],\"mapped\",[643]],[[426,427],\"valid\"],[[428,428],\"mapped\",[429]],[[429,429],\"valid\"],[[430,430],\"mapped\",[648]],[[431,431],\"mapped\",[432]],[[432,432],\"valid\"],[[433,433],\"mapped\",[650]],[[434,434],\"mapped\",[651]],[[435,435],\"mapped\",[436]],[[436,436],\"valid\"],[[437,437],\"mapped\",[438]],[[438,438],\"valid\"],[[439,439],\"mapped\",[658]],[[440,440],\"mapped\",[441]],[[441,443],\"valid\"],[[444,444],\"mapped\",[445]],[[445,451],\"valid\"],[[452,454],\"mapped\",[100,382]],[[455,457],\"mapped\",[108,106]],[[458,460],\"mapped\",[110,106]],[[461,461],\"mapped\",[462]],[[462,462],\"valid\"],[[463,463],\"mapped\",[464]],[[464,464],\"valid\"],[[465,465],\"mapped\",[466]],[[466,466],\"valid\"],[[467,467],\"mapped\",[468]],[[468,468],\"valid\"],[[469,469],\"mapped\",[470]],[[470,470],\"valid\"],[[471,471],\"mapped\",[472]],[[472,472],\"valid\"],[[473,473],\"mapped\",[474]],[[474,474],\"valid\"],[[475,475],\"mapped\",[476]],[[476,477],\"valid\"],[[478,478],\"mapped\",[479]],[[479,479],\"valid\"],[[480,480],\"mapped\",[481]],[[481,481],\"valid\"],[[482,482],\"mapped\",[483]],[[483,483],\"valid\"],[[484,484],\"mapped\",[485]],[[485,485],\"valid\"],[[486,486],\"mapped\",[487]],[[487,487],\"valid\"],[[488,488],\"mapped\",[489]],[[489,489],\"valid\"],[[490,490],\"mapped\",[491]],[[491,491],\"valid\"],[[492,492],\"mapped\",[493]],[[493,493],\"valid\"],[[494,494],\"mapped\",[495]],[[495,496],\"valid\"],[[497,499],\"mapped\",[100,122]],[[500,500],\"mapped\",[501]],[[501,501],\"valid\"],[[502,502],\"mapped\",[405]],[[503,503],\"mapped\",[447]],[[504,504],\"mapped\",[505]],[[505,505],\"valid\"],[[506,506],\"mapped\",[507]],[[507,507],\"valid\"],[[508,508],\"mapped\",[509]],[[509,509],\"valid\"],[[510,510],\"mapped\",[511]],[[511,511],\"valid\"],[[512,512],\"mapped\",[513]],[[513,513],\"valid\"],[[514,514],\"mapped\",[515]],[[515,515],\"valid\"],[[516,516],\"mapped\",[517]],[[517,517],\"valid\"],[[518,518],\"mapped\",[519]],[[519,519],\"valid\"],[[520,520],\"mapped\",[521]],[[521,521],\"valid\"],[[522,522],\"mapped\",[523]],[[523,523],\"valid\"],[[524,524],\"mapped\",[525]],[[525,525],\"valid\"],[[526,526],\"mapped\",[527]],[[527,527],\"valid\"],[[528,528],\"mapped\",[529]],[[529,529],\"valid\"],[[530,530],\"mapped\",[531]],[[531,531],\"valid\"],[[532,532],\"mapped\",[533]],[[533,533],\"valid\"],[[534,534],\"mapped\",[535]],[[535,535],\"valid\"],[[536,536],\"mapped\",[537]],[[537,537],\"valid\"],[[538,538],\"mapped\",[539]],[[539,539],\"valid\"],[[540,540],\"mapped\",[541]],[[541,541],\"valid\"],[[542,542],\"mapped\",[543]],[[543,543],\"valid\"],[[544,544],\"mapped\",[414]],[[545,545],\"valid\"],[[546,546],\"mapped\",[547]],[[547,547],\"valid\"],[[548,548],\"mapped\",[549]],[[549,549],\"valid\"],[[550,550],\"mapped\",[551]],[[551,551],\"valid\"],[[552,552],\"mapped\",[553]],[[553,553],\"valid\"],[[554,554],\"mapped\",[555]],[[555,555],\"valid\"],[[556,556],\"mapped\",[557]],[[557,557],\"valid\"],[[558,558],\"mapped\",[559]],[[559,559],\"valid\"],[[560,560],\"mapped\",[561]],[[561,561],\"valid\"],[[562,562],\"mapped\",[563]],[[563,563],\"valid\"],[[564,566],\"valid\"],[[567,569],\"valid\"],[[570,570],\"mapped\",[11365]],[[571,571],\"mapped\",[572]],[[572,572],\"valid\"],[[573,573],\"mapped\",[410]],[[574,574],\"mapped\",[11366]],[[575,576],\"valid\"],[[577,577],\"mapped\",[578]],[[578,578],\"valid\"],[[579,579],\"mapped\",[384]],[[580,580],\"mapped\",[649]],[[581,581],\"mapped\",[652]],[[582,582],\"mapped\",[583]],[[583,583],\"valid\"],[[584,584],\"mapped\",[585]],[[585,585],\"valid\"],[[586,586],\"mapped\",[587]],[[587,587],\"valid\"],[[588,588],\"mapped\",[589]],[[589,589],\"valid\"],[[590,590],\"mapped\",[591]],[[591,591],\"valid\"],[[592,680],\"valid\"],[[681,685],\"valid\"],[[686,687],\"valid\"],[[688,688],\"mapped\",[104]],[[689,689],\"mapped\",[614]],[[690,690],\"mapped\",[106]],[[691,691],\"mapped\",[114]],[[692,692],\"mapped\",[633]],[[693,693],\"mapped\",[635]],[[694,694],\"mapped\",[641]],[[695,695],\"mapped\",[119]],[[696,696],\"mapped\",[121]],[[697,705],\"valid\"],[[706,709],\"valid\",[],\"NV8\"],[[710,721],\"valid\"],[[722,727],\"valid\",[],\"NV8\"],[[728,728],\"disallowed_STD3_mapped\",[32,774]],[[729,729],\"disallowed_STD3_mapped\",[32,775]],[[730,730],\"disallowed_STD3_mapped\",[32,778]],[[731,731],\"disallowed_STD3_mapped\",[32,808]],[[732,732],\"disallowed_STD3_mapped\",[32,771]],[[733,733],\"disallowed_STD3_mapped\",[32,779]],[[734,734],\"valid\",[],\"NV8\"],[[735,735],\"valid\",[],\"NV8\"],[[736,736],\"mapped\",[611]],[[737,737],\"mapped\",[108]],[[738,738],\"mapped\",[115]],[[739,739],\"mapped\",[120]],[[740,740],\"mapped\",[661]],[[741,745],\"valid\",[],\"NV8\"],[[746,747],\"valid\",[],\"NV8\"],[[748,748],\"valid\"],[[749,749],\"valid\",[],\"NV8\"],[[750,750],\"valid\"],[[751,767],\"valid\",[],\"NV8\"],[[768,831],\"valid\"],[[832,832],\"mapped\",[768]],[[833,833],\"mapped\",[769]],[[834,834],\"valid\"],[[835,835],\"mapped\",[787]],[[836,836],\"mapped\",[776,769]],[[837,837],\"mapped\",[953]],[[838,846],\"valid\"],[[847,847],\"ignored\"],[[848,855],\"valid\"],[[856,860],\"valid\"],[[861,863],\"valid\"],[[864,865],\"valid\"],[[866,866],\"valid\"],[[867,879],\"valid\"],[[880,880],\"mapped\",[881]],[[881,881],\"valid\"],[[882,882],\"mapped\",[883]],[[883,883],\"valid\"],[[884,884],\"mapped\",[697]],[[885,885],\"valid\"],[[886,886],\"mapped\",[887]],[[887,887],\"valid\"],[[888,889],\"disallowed\"],[[890,890],\"disallowed_STD3_mapped\",[32,953]],[[891,893],\"valid\"],[[894,894],\"disallowed_STD3_mapped\",[59]],[[895,895],\"mapped\",[1011]],[[896,899],\"disallowed\"],[[900,900],\"disallowed_STD3_mapped\",[32,769]],[[901,901],\"disallowed_STD3_mapped\",[32,776,769]],[[902,902],\"mapped\",[940]],[[903,903],\"mapped\",[183]],[[904,904],\"mapped\",[941]],[[905,905],\"mapped\",[942]],[[906,906],\"mapped\",[943]],[[907,907],\"disallowed\"],[[908,908],\"mapped\",[972]],[[909,909],\"disallowed\"],[[910,910],\"mapped\",[973]],[[911,911],\"mapped\",[974]],[[912,912],\"valid\"],[[913,913],\"mapped\",[945]],[[914,914],\"mapped\",[946]],[[915,915],\"mapped\",[947]],[[916,916],\"mapped\",[948]],[[917,917],\"mapped\",[949]],[[918,918],\"mapped\",[950]],[[919,919],\"mapped\",[951]],[[920,920],\"mapped\",[952]],[[921,921],\"mapped\",[953]],[[922,922],\"mapped\",[954]],[[923,923],\"mapped\",[955]],[[924,924],\"mapped\",[956]],[[925,925],\"mapped\",[957]],[[926,926],\"mapped\",[958]],[[927,927],\"mapped\",[959]],[[928,928],\"mapped\",[960]],[[929,929],\"mapped\",[961]],[[930,930],\"disallowed\"],[[931,931],\"mapped\",[963]],[[932,932],\"mapped\",[964]],[[933,933],\"mapped\",[965]],[[934,934],\"mapped\",[966]],[[935,935],\"mapped\",[967]],[[936,936],\"mapped\",[968]],[[937,937],\"mapped\",[969]],[[938,938],\"mapped\",[970]],[[939,939],\"mapped\",[971]],[[940,961],\"valid\"],[[962,962],\"deviation\",[963]],[[963,974],\"valid\"],[[975,975],\"mapped\",[983]],[[976,976],\"mapped\",[946]],[[977,977],\"mapped\",[952]],[[978,978],\"mapped\",[965]],[[979,979],\"mapped\",[973]],[[980,980],\"mapped\",[971]],[[981,981],\"mapped\",[966]],[[982,982],\"mapped\",[960]],[[983,983],\"valid\"],[[984,984],\"mapped\",[985]],[[985,985],\"valid\"],[[986,986],\"mapped\",[987]],[[987,987],\"valid\"],[[988,988],\"mapped\",[989]],[[989,989],\"valid\"],[[990,990],\"mapped\",[991]],[[991,991],\"valid\"],[[992,992],\"mapped\",[993]],[[993,993],\"valid\"],[[994,994],\"mapped\",[995]],[[995,995],\"valid\"],[[996,996],\"mapped\",[997]],[[997,997],\"valid\"],[[998,998],\"mapped\",[999]],[[999,999],\"valid\"],[[1000,1000],\"mapped\",[1001]],[[1001,1001],\"valid\"],[[1002,1002],\"mapped\",[1003]],[[1003,1003],\"valid\"],[[1004,1004],\"mapped\",[1005]],[[1005,1005],\"valid\"],[[1006,1006],\"mapped\",[1007]],[[1007,1007],\"valid\"],[[1008,1008],\"mapped\",[954]],[[1009,1009],\"mapped\",[961]],[[1010,1010],\"mapped\",[963]],[[1011,1011],\"valid\"],[[1012,1012],\"mapped\",[952]],[[1013,1013],\"mapped\",[949]],[[1014,1014],\"valid\",[],\"NV8\"],[[1015,1015],\"mapped\",[1016]],[[1016,1016],\"valid\"],[[1017,1017],\"mapped\",[963]],[[1018,1018],\"mapped\",[1019]],[[1019,1019],\"valid\"],[[1020,1020],\"valid\"],[[1021,1021],\"mapped\",[891]],[[1022,1022],\"mapped\",[892]],[[1023,1023],\"mapped\",[893]],[[1024,1024],\"mapped\",[1104]],[[1025,1025],\"mapped\",[1105]],[[1026,1026],\"mapped\",[1106]],[[1027,1027],\"mapped\",[1107]],[[1028,1028],\"mapped\",[1108]],[[1029,1029],\"mapped\",[1109]],[[1030,1030],\"mapped\",[1110]],[[1031,1031],\"mapped\",[1111]],[[1032,1032],\"mapped\",[1112]],[[1033,1033],\"mapped\",[1113]],[[1034,1034],\"mapped\",[1114]],[[1035,1035],\"mapped\",[1115]],[[1036,1036],\"mapped\",[1116]],[[1037,1037],\"mapped\",[1117]],[[1038,1038],\"mapped\",[1118]],[[1039,1039],\"mapped\",[1119]],[[1040,1040],\"mapped\",[1072]],[[1041,1041],\"mapped\",[1073]],[[1042,1042],\"mapped\",[1074]],[[1043,1043],\"mapped\",[1075]],[[1044,1044],\"mapped\",[1076]],[[1045,1045],\"mapped\",[1077]],[[1046,1046],\"mapped\",[1078]],[[1047,1047],\"mapped\",[1079]],[[1048,1048],\"mapped\",[1080]],[[1049,1049],\"mapped\",[1081]],[[1050,1050],\"mapped\",[1082]],[[1051,1051],\"mapped\",[1083]],[[1052,1052],\"mapped\",[1084]],[[1053,1053],\"mapped\",[1085]],[[1054,1054],\"mapped\",[1086]],[[1055,1055],\"mapped\",[1087]],[[1056,1056],\"mapped\",[1088]],[[1057,1057],\"mapped\",[1089]],[[1058,1058],\"mapped\",[1090]],[[1059,1059],\"mapped\",[1091]],[[1060,1060],\"mapped\",[1092]],[[1061,1061],\"mapped\",[1093]],[[1062,1062],\"mapped\",[1094]],[[1063,1063],\"mapped\",[1095]],[[1064,1064],\"mapped\",[1096]],[[1065,1065],\"mapped\",[1097]],[[1066,1066],\"mapped\",[1098]],[[1067,1067],\"mapped\",[1099]],[[1068,1068],\"mapped\",[1100]],[[1069,1069],\"mapped\",[1101]],[[1070,1070],\"mapped\",[1102]],[[1071,1071],\"mapped\",[1103]],[[1072,1103],\"valid\"],[[1104,1104],\"valid\"],[[1105,1116],\"valid\"],[[1117,1117],\"valid\"],[[1118,1119],\"valid\"],[[1120,1120],\"mapped\",[1121]],[[1121,1121],\"valid\"],[[1122,1122],\"mapped\",[1123]],[[1123,1123],\"valid\"],[[1124,1124],\"mapped\",[1125]],[[1125,1125],\"valid\"],[[1126,1126],\"mapped\",[1127]],[[1127,1127],\"valid\"],[[1128,1128],\"mapped\",[1129]],[[1129,1129],\"valid\"],[[1130,1130],\"mapped\",[1131]],[[1131,1131],\"valid\"],[[1132,1132],\"mapped\",[1133]],[[1133,1133],\"valid\"],[[1134,1134],\"mapped\",[1135]],[[1135,1135],\"valid\"],[[1136,1136],\"mapped\",[1137]],[[1137,1137],\"valid\"],[[1138,1138],\"mapped\",[1139]],[[1139,1139],\"valid\"],[[1140,1140],\"mapped\",[1141]],[[1141,1141],\"valid\"],[[1142,1142],\"mapped\",[1143]],[[1143,1143],\"valid\"],[[1144,1144],\"mapped\",[1145]],[[1145,1145],\"valid\"],[[1146,1146],\"mapped\",[1147]],[[1147,1147],\"valid\"],[[1148,1148],\"mapped\",[1149]],[[1149,1149],\"valid\"],[[1150,1150],\"mapped\",[1151]],[[1151,1151],\"valid\"],[[1152,1152],\"mapped\",[1153]],[[1153,1153],\"valid\"],[[1154,1154],\"valid\",[],\"NV8\"],[[1155,1158],\"valid\"],[[1159,1159],\"valid\"],[[1160,1161],\"valid\",[],\"NV8\"],[[1162,1162],\"mapped\",[1163]],[[1163,1163],\"valid\"],[[1164,1164],\"mapped\",[1165]],[[1165,1165],\"valid\"],[[1166,1166],\"mapped\",[1167]],[[1167,1167],\"valid\"],[[1168,1168],\"mapped\",[1169]],[[1169,1169],\"valid\"],[[1170,1170],\"mapped\",[1171]],[[1171,1171],\"valid\"],[[1172,1172],\"mapped\",[1173]],[[1173,1173],\"valid\"],[[1174,1174],\"mapped\",[1175]],[[1175,1175],\"valid\"],[[1176,1176],\"mapped\",[1177]],[[1177,1177],\"valid\"],[[1178,1178],\"mapped\",[1179]],[[1179,1179],\"valid\"],[[1180,1180],\"mapped\",[1181]],[[1181,1181],\"valid\"],[[1182,1182],\"mapped\",[1183]],[[1183,1183],\"valid\"],[[1184,1184],\"mapped\",[1185]],[[1185,1185],\"valid\"],[[1186,1186],\"mapped\",[1187]],[[1187,1187],\"valid\"],[[1188,1188],\"mapped\",[1189]],[[1189,1189],\"valid\"],[[1190,1190],\"mapped\",[1191]],[[1191,1191],\"valid\"],[[1192,1192],\"mapped\",[1193]],[[1193,1193],\"valid\"],[[1194,1194],\"mapped\",[1195]],[[1195,1195],\"valid\"],[[1196,1196],\"mapped\",[1197]],[[1197,1197],\"valid\"],[[1198,1198],\"mapped\",[1199]],[[1199,1199],\"valid\"],[[1200,1200],\"mapped\",[1201]],[[1201,1201],\"valid\"],[[1202,1202],\"mapped\",[1203]],[[1203,1203],\"valid\"],[[1204,1204],\"mapped\",[1205]],[[1205,1205],\"valid\"],[[1206,1206],\"mapped\",[1207]],[[1207,1207],\"valid\"],[[1208,1208],\"mapped\",[1209]],[[1209,1209],\"valid\"],[[1210,1210],\"mapped\",[1211]],[[1211,1211],\"valid\"],[[1212,1212],\"mapped\",[1213]],[[1213,1213],\"valid\"],[[1214,1214],\"mapped\",[1215]],[[1215,1215],\"valid\"],[[1216,1216],\"disallowed\"],[[1217,1217],\"mapped\",[1218]],[[1218,1218],\"valid\"],[[1219,1219],\"mapped\",[1220]],[[1220,1220],\"valid\"],[[1221,1221],\"mapped\",[1222]],[[1222,1222],\"valid\"],[[1223,1223],\"mapped\",[1224]],[[1224,1224],\"valid\"],[[1225,1225],\"mapped\",[1226]],[[1226,1226],\"valid\"],[[1227,1227],\"mapped\",[1228]],[[1228,1228],\"valid\"],[[1229,1229],\"mapped\",[1230]],[[1230,1230],\"valid\"],[[1231,1231],\"valid\"],[[1232,1232],\"mapped\",[1233]],[[1233,1233],\"valid\"],[[1234,1234],\"mapped\",[1235]],[[1235,1235],\"valid\"],[[1236,1236],\"mapped\",[1237]],[[1237,1237],\"valid\"],[[1238,1238],\"mapped\",[1239]],[[1239,1239],\"valid\"],[[1240,1240],\"mapped\",[1241]],[[1241,1241],\"valid\"],[[1242,1242],\"mapped\",[1243]],[[1243,1243],\"valid\"],[[1244,1244],\"mapped\",[1245]],[[1245,1245],\"valid\"],[[1246,1246],\"mapped\",[1247]],[[1247,1247],\"valid\"],[[1248,1248],\"mapped\",[1249]],[[1249,1249],\"valid\"],[[1250,1250],\"mapped\",[1251]],[[1251,1251],\"valid\"],[[1252,1252],\"mapped\",[1253]],[[1253,1253],\"valid\"],[[1254,1254],\"mapped\",[1255]],[[1255,1255],\"valid\"],[[1256,1256],\"mapped\",[1257]],[[1257,1257],\"valid\"],[[1258,1258],\"mapped\",[1259]],[[1259,1259],\"valid\"],[[1260,1260],\"mapped\",[1261]],[[1261,1261],\"valid\"],[[1262,1262],\"mapped\",[1263]],[[1263,1263],\"valid\"],[[1264,1264],\"mapped\",[1265]],[[1265,1265],\"valid\"],[[1266,1266],\"mapped\",[1267]],[[1267,1267],\"valid\"],[[1268,1268],\"mapped\",[1269]],[[1269,1269],\"valid\"],[[1270,1270],\"mapped\",[1271]],[[1271,1271],\"valid\"],[[1272,1272],\"mapped\",[1273]],[[1273,1273],\"valid\"],[[1274,1274],\"mapped\",[1275]],[[1275,1275],\"valid\"],[[1276,1276],\"mapped\",[1277]],[[1277,1277],\"valid\"],[[1278,1278],\"mapped\",[1279]],[[1279,1279],\"valid\"],[[1280,1280],\"mapped\",[1281]],[[1281,1281],\"valid\"],[[1282,1282],\"mapped\",[1283]],[[1283,1283],\"valid\"],[[1284,1284],\"mapped\",[1285]],[[1285,1285],\"valid\"],[[1286,1286],\"mapped\",[1287]],[[1287,1287],\"valid\"],[[1288,1288],\"mapped\",[1289]],[[1289,1289],\"valid\"],[[1290,1290],\"mapped\",[1291]],[[1291,1291],\"valid\"],[[1292,1292],\"mapped\",[1293]],[[1293,1293],\"valid\"],[[1294,1294],\"mapped\",[1295]],[[1295,1295],\"valid\"],[[1296,1296],\"mapped\",[1297]],[[1297,1297],\"valid\"],[[1298,1298],\"mapped\",[1299]],[[1299,1299],\"valid\"],[[1300,1300],\"mapped\",[1301]],[[1301,1301],\"valid\"],[[1302,1302],\"mapped\",[1303]],[[1303,1303],\"valid\"],[[1304,1304],\"mapped\",[1305]],[[1305,1305],\"valid\"],[[1306,1306],\"mapped\",[1307]],[[1307,1307],\"valid\"],[[1308,1308],\"mapped\",[1309]],[[1309,1309],\"valid\"],[[1310,1310],\"mapped\",[1311]],[[1311,1311],\"valid\"],[[1312,1312],\"mapped\",[1313]],[[1313,1313],\"valid\"],[[1314,1314],\"mapped\",[1315]],[[1315,1315],\"valid\"],[[1316,1316],\"mapped\",[1317]],[[1317,1317],\"valid\"],[[1318,1318],\"mapped\",[1319]],[[1319,1319],\"valid\"],[[1320,1320],\"mapped\",[1321]],[[1321,1321],\"valid\"],[[1322,1322],\"mapped\",[1323]],[[1323,1323],\"valid\"],[[1324,1324],\"mapped\",[1325]],[[1325,1325],\"valid\"],[[1326,1326],\"mapped\",[1327]],[[1327,1327],\"valid\"],[[1328,1328],\"disallowed\"],[[1329,1329],\"mapped\",[1377]],[[1330,1330],\"mapped\",[1378]],[[1331,1331],\"mapped\",[1379]],[[1332,1332],\"mapped\",[1380]],[[1333,1333],\"mapped\",[1381]],[[1334,1334],\"mapped\",[1382]],[[1335,1335],\"mapped\",[1383]],[[1336,1336],\"mapped\",[1384]],[[1337,1337],\"mapped\",[1385]],[[1338,1338],\"mapped\",[1386]],[[1339,1339],\"mapped\",[1387]],[[1340,1340],\"mapped\",[1388]],[[1341,1341],\"mapped\",[1389]],[[1342,1342],\"mapped\",[1390]],[[1343,1343],\"mapped\",[1391]],[[1344,1344],\"mapped\",[1392]],[[1345,1345],\"mapped\",[1393]],[[1346,1346],\"mapped\",[1394]],[[1347,1347],\"mapped\",[1395]],[[1348,1348],\"mapped\",[1396]],[[1349,1349],\"mapped\",[1397]],[[1350,1350],\"mapped\",[1398]],[[1351,1351],\"mapped\",[1399]],[[1352,1352],\"mapped\",[1400]],[[1353,1353],\"mapped\",[1401]],[[1354,1354],\"mapped\",[1402]],[[1355,1355],\"mapped\",[1403]],[[1356,1356],\"mapped\",[1404]],[[1357,1357],\"mapped\",[1405]],[[1358,1358],\"mapped\",[1406]],[[1359,1359],\"mapped\",[1407]],[[1360,1360],\"mapped\",[1408]],[[1361,1361],\"mapped\",[1409]],[[1362,1362],\"mapped\",[1410]],[[1363,1363],\"mapped\",[1411]],[[1364,1364],\"mapped\",[1412]],[[1365,1365],\"mapped\",[1413]],[[1366,1366],\"mapped\",[1414]],[[1367,1368],\"disallowed\"],[[1369,1369],\"valid\"],[[1370,1375],\"valid\",[],\"NV8\"],[[1376,1376],\"disallowed\"],[[1377,1414],\"valid\"],[[1415,1415],\"mapped\",[1381,1410]],[[1416,1416],\"disallowed\"],[[1417,1417],\"valid\",[],\"NV8\"],[[1418,1418],\"valid\",[],\"NV8\"],[[1419,1420],\"disallowed\"],[[1421,1422],\"valid\",[],\"NV8\"],[[1423,1423],\"valid\",[],\"NV8\"],[[1424,1424],\"disallowed\"],[[1425,1441],\"valid\"],[[1442,1442],\"valid\"],[[1443,1455],\"valid\"],[[1456,1465],\"valid\"],[[1466,1466],\"valid\"],[[1467,1469],\"valid\"],[[1470,1470],\"valid\",[],\"NV8\"],[[1471,1471],\"valid\"],[[1472,1472],\"valid\",[],\"NV8\"],[[1473,1474],\"valid\"],[[1475,1475],\"valid\",[],\"NV8\"],[[1476,1476],\"valid\"],[[1477,1477],\"valid\"],[[1478,1478],\"valid\",[],\"NV8\"],[[1479,1479],\"valid\"],[[1480,1487],\"disallowed\"],[[1488,1514],\"valid\"],[[1515,1519],\"disallowed\"],[[1520,1524],\"valid\"],[[1525,1535],\"disallowed\"],[[1536,1539],\"disallowed\"],[[1540,1540],\"disallowed\"],[[1541,1541],\"disallowed\"],[[1542,1546],\"valid\",[],\"NV8\"],[[1547,1547],\"valid\",[],\"NV8\"],[[1548,1548],\"valid\",[],\"NV8\"],[[1549,1551],\"valid\",[],\"NV8\"],[[1552,1557],\"valid\"],[[1558,1562],\"valid\"],[[1563,1563],\"valid\",[],\"NV8\"],[[1564,1564],\"disallowed\"],[[1565,1565],\"disallowed\"],[[1566,1566],\"valid\",[],\"NV8\"],[[1567,1567],\"valid\",[],\"NV8\"],[[1568,1568],\"valid\"],[[1569,1594],\"valid\"],[[1595,1599],\"valid\"],[[1600,1600],\"valid\",[],\"NV8\"],[[1601,1618],\"valid\"],[[1619,1621],\"valid\"],[[1622,1624],\"valid\"],[[1625,1630],\"valid\"],[[1631,1631],\"valid\"],[[1632,1641],\"valid\"],[[1642,1645],\"valid\",[],\"NV8\"],[[1646,1647],\"valid\"],[[1648,1652],\"valid\"],[[1653,1653],\"mapped\",[1575,1652]],[[1654,1654],\"mapped\",[1608,1652]],[[1655,1655],\"mapped\",[1735,1652]],[[1656,1656],\"mapped\",[1610,1652]],[[1657,1719],\"valid\"],[[1720,1721],\"valid\"],[[1722,1726],\"valid\"],[[1727,1727],\"valid\"],[[1728,1742],\"valid\"],[[1743,1743],\"valid\"],[[1744,1747],\"valid\"],[[1748,1748],\"valid\",[],\"NV8\"],[[1749,1756],\"valid\"],[[1757,1757],\"disallowed\"],[[1758,1758],\"valid\",[],\"NV8\"],[[1759,1768],\"valid\"],[[1769,1769],\"valid\",[],\"NV8\"],[[1770,1773],\"valid\"],[[1774,1775],\"valid\"],[[1776,1785],\"valid\"],[[1786,1790],\"valid\"],[[1791,1791],\"valid\"],[[1792,1805],\"valid\",[],\"NV8\"],[[1806,1806],\"disallowed\"],[[1807,1807],\"disallowed\"],[[1808,1836],\"valid\"],[[1837,1839],\"valid\"],[[1840,1866],\"valid\"],[[1867,1868],\"disallowed\"],[[1869,1871],\"valid\"],[[1872,1901],\"valid\"],[[1902,1919],\"valid\"],[[1920,1968],\"valid\"],[[1969,1969],\"valid\"],[[1970,1983],\"disallowed\"],[[1984,2037],\"valid\"],[[2038,2042],\"valid\",[],\"NV8\"],[[2043,2047],\"disallowed\"],[[2048,2093],\"valid\"],[[2094,2095],\"disallowed\"],[[2096,2110],\"valid\",[],\"NV8\"],[[2111,2111],\"disallowed\"],[[2112,2139],\"valid\"],[[2140,2141],\"disallowed\"],[[2142,2142],\"valid\",[],\"NV8\"],[[2143,2207],\"disallowed\"],[[2208,2208],\"valid\"],[[2209,2209],\"valid\"],[[2210,2220],\"valid\"],[[2221,2226],\"valid\"],[[2227,2228],\"valid\"],[[2229,2274],\"disallowed\"],[[2275,2275],\"valid\"],[[2276,2302],\"valid\"],[[2303,2303],\"valid\"],[[2304,2304],\"valid\"],[[2305,2307],\"valid\"],[[2308,2308],\"valid\"],[[2309,2361],\"valid\"],[[2362,2363],\"valid\"],[[2364,2381],\"valid\"],[[2382,2382],\"valid\"],[[2383,2383],\"valid\"],[[2384,2388],\"valid\"],[[2389,2389],\"valid\"],[[2390,2391],\"valid\"],[[2392,2392],\"mapped\",[2325,2364]],[[2393,2393],\"mapped\",[2326,2364]],[[2394,2394],\"mapped\",[2327,2364]],[[2395,2395],\"mapped\",[2332,2364]],[[2396,2396],\"mapped\",[2337,2364]],[[2397,2397],\"mapped\",[2338,2364]],[[2398,2398],\"mapped\",[2347,2364]],[[2399,2399],\"mapped\",[2351,2364]],[[2400,2403],\"valid\"],[[2404,2405],\"valid\",[],\"NV8\"],[[2406,2415],\"valid\"],[[2416,2416],\"valid\",[],\"NV8\"],[[2417,2418],\"valid\"],[[2419,2423],\"valid\"],[[2424,2424],\"valid\"],[[2425,2426],\"valid\"],[[2427,2428],\"valid\"],[[2429,2429],\"valid\"],[[2430,2431],\"valid\"],[[2432,2432],\"valid\"],[[2433,2435],\"valid\"],[[2436,2436],\"disallowed\"],[[2437,2444],\"valid\"],[[2445,2446],\"disallowed\"],[[2447,2448],\"valid\"],[[2449,2450],\"disallowed\"],[[2451,2472],\"valid\"],[[2473,2473],\"disallowed\"],[[2474,2480],\"valid\"],[[2481,2481],\"disallowed\"],[[2482,2482],\"valid\"],[[2483,2485],\"disallowed\"],[[2486,2489],\"valid\"],[[2490,2491],\"disallowed\"],[[2492,2492],\"valid\"],[[2493,2493],\"valid\"],[[2494,2500],\"valid\"],[[2501,2502],\"disallowed\"],[[2503,2504],\"valid\"],[[2505,2506],\"disallowed\"],[[2507,2509],\"valid\"],[[2510,2510],\"valid\"],[[2511,2518],\"disallowed\"],[[2519,2519],\"valid\"],[[2520,2523],\"disallowed\"],[[2524,2524],\"mapped\",[2465,2492]],[[2525,2525],\"mapped\",[2466,2492]],[[2526,2526],\"disallowed\"],[[2527,2527],\"mapped\",[2479,2492]],[[2528,2531],\"valid\"],[[2532,2533],\"disallowed\"],[[2534,2545],\"valid\"],[[2546,2554],\"valid\",[],\"NV8\"],[[2555,2555],\"valid\",[],\"NV8\"],[[2556,2560],\"disallowed\"],[[2561,2561],\"valid\"],[[2562,2562],\"valid\"],[[2563,2563],\"valid\"],[[2564,2564],\"disallowed\"],[[2565,2570],\"valid\"],[[2571,2574],\"disallowed\"],[[2575,2576],\"valid\"],[[2577,2578],\"disallowed\"],[[2579,2600],\"valid\"],[[2601,2601],\"disallowed\"],[[2602,2608],\"valid\"],[[2609,2609],\"disallowed\"],[[2610,2610],\"valid\"],[[2611,2611],\"mapped\",[2610,2620]],[[2612,2612],\"disallowed\"],[[2613,2613],\"valid\"],[[2614,2614],\"mapped\",[2616,2620]],[[2615,2615],\"disallowed\"],[[2616,2617],\"valid\"],[[2618,2619],\"disallowed\"],[[2620,2620],\"valid\"],[[2621,2621],\"disallowed\"],[[2622,2626],\"valid\"],[[2627,2630],\"disallowed\"],[[2631,2632],\"valid\"],[[2633,2634],\"disallowed\"],[[2635,2637],\"valid\"],[[2638,2640],\"disallowed\"],[[2641,2641],\"valid\"],[[2642,2648],\"disallowed\"],[[2649,2649],\"mapped\",[2582,2620]],[[2650,2650],\"mapped\",[2583,2620]],[[2651,2651],\"mapped\",[2588,2620]],[[2652,2652],\"valid\"],[[2653,2653],\"disallowed\"],[[2654,2654],\"mapped\",[2603,2620]],[[2655,2661],\"disallowed\"],[[2662,2676],\"valid\"],[[2677,2677],\"valid\"],[[2678,2688],\"disallowed\"],[[2689,2691],\"valid\"],[[2692,2692],\"disallowed\"],[[2693,2699],\"valid\"],[[2700,2700],\"valid\"],[[2701,2701],\"valid\"],[[2702,2702],\"disallowed\"],[[2703,2705],\"valid\"],[[2706,2706],\"disallowed\"],[[2707,2728],\"valid\"],[[2729,2729],\"disallowed\"],[[2730,2736],\"valid\"],[[2737,2737],\"disallowed\"],[[2738,2739],\"valid\"],[[2740,2740],\"disallowed\"],[[2741,2745],\"valid\"],[[2746,2747],\"disallowed\"],[[2748,2757],\"valid\"],[[2758,2758],\"disallowed\"],[[2759,2761],\"valid\"],[[2762,2762],\"disallowed\"],[[2763,2765],\"valid\"],[[2766,2767],\"disallowed\"],[[2768,2768],\"valid\"],[[2769,2783],\"disallowed\"],[[2784,2784],\"valid\"],[[2785,2787],\"valid\"],[[2788,2789],\"disallowed\"],[[2790,2799],\"valid\"],[[2800,2800],\"valid\",[],\"NV8\"],[[2801,2801],\"valid\",[],\"NV8\"],[[2802,2808],\"disallowed\"],[[2809,2809],\"valid\"],[[2810,2816],\"disallowed\"],[[2817,2819],\"valid\"],[[2820,2820],\"disallowed\"],[[2821,2828],\"valid\"],[[2829,2830],\"disallowed\"],[[2831,2832],\"valid\"],[[2833,2834],\"disallowed\"],[[2835,2856],\"valid\"],[[2857,2857],\"disallowed\"],[[2858,2864],\"valid\"],[[2865,2865],\"disallowed\"],[[2866,2867],\"valid\"],[[2868,2868],\"disallowed\"],[[2869,2869],\"valid\"],[[2870,2873],\"valid\"],[[2874,2875],\"disallowed\"],[[2876,2883],\"valid\"],[[2884,2884],\"valid\"],[[2885,2886],\"disallowed\"],[[2887,2888],\"valid\"],[[2889,2890],\"disallowed\"],[[2891,2893],\"valid\"],[[2894,2901],\"disallowed\"],[[2902,2903],\"valid\"],[[2904,2907],\"disallowed\"],[[2908,2908],\"mapped\",[2849,2876]],[[2909,2909],\"mapped\",[2850,2876]],[[2910,2910],\"disallowed\"],[[2911,2913],\"valid\"],[[2914,2915],\"valid\"],[[2916,2917],\"disallowed\"],[[2918,2927],\"valid\"],[[2928,2928],\"valid\",[],\"NV8\"],[[2929,2929],\"valid\"],[[2930,2935],\"valid\",[],\"NV8\"],[[2936,2945],\"disallowed\"],[[2946,2947],\"valid\"],[[2948,2948],\"disallowed\"],[[2949,2954],\"valid\"],[[2955,2957],\"disallowed\"],[[2958,2960],\"valid\"],[[2961,2961],\"disallowed\"],[[2962,2965],\"valid\"],[[2966,2968],\"disallowed\"],[[2969,2970],\"valid\"],[[2971,2971],\"disallowed\"],[[2972,2972],\"valid\"],[[2973,2973],\"disallowed\"],[[2974,2975],\"valid\"],[[2976,2978],\"disallowed\"],[[2979,2980],\"valid\"],[[2981,2983],\"disallowed\"],[[2984,2986],\"valid\"],[[2987,2989],\"disallowed\"],[[2990,2997],\"valid\"],[[2998,2998],\"valid\"],[[2999,3001],\"valid\"],[[3002,3005],\"disallowed\"],[[3006,3010],\"valid\"],[[3011,3013],\"disallowed\"],[[3014,3016],\"valid\"],[[3017,3017],\"disallowed\"],[[3018,3021],\"valid\"],[[3022,3023],\"disallowed\"],[[3024,3024],\"valid\"],[[3025,3030],\"disallowed\"],[[3031,3031],\"valid\"],[[3032,3045],\"disallowed\"],[[3046,3046],\"valid\"],[[3047,3055],\"valid\"],[[3056,3058],\"valid\",[],\"NV8\"],[[3059,3066],\"valid\",[],\"NV8\"],[[3067,3071],\"disallowed\"],[[3072,3072],\"valid\"],[[3073,3075],\"valid\"],[[3076,3076],\"disallowed\"],[[3077,3084],\"valid\"],[[3085,3085],\"disallowed\"],[[3086,3088],\"valid\"],[[3089,3089],\"disallowed\"],[[3090,3112],\"valid\"],[[3113,3113],\"disallowed\"],[[3114,3123],\"valid\"],[[3124,3124],\"valid\"],[[3125,3129],\"valid\"],[[3130,3132],\"disallowed\"],[[3133,3133],\"valid\"],[[3134,3140],\"valid\"],[[3141,3141],\"disallowed\"],[[3142,3144],\"valid\"],[[3145,3145],\"disallowed\"],[[3146,3149],\"valid\"],[[3150,3156],\"disallowed\"],[[3157,3158],\"valid\"],[[3159,3159],\"disallowed\"],[[3160,3161],\"valid\"],[[3162,3162],\"valid\"],[[3163,3167],\"disallowed\"],[[3168,3169],\"valid\"],[[3170,3171],\"valid\"],[[3172,3173],\"disallowed\"],[[3174,3183],\"valid\"],[[3184,3191],\"disallowed\"],[[3192,3199],\"valid\",[],\"NV8\"],[[3200,3200],\"disallowed\"],[[3201,3201],\"valid\"],[[3202,3203],\"valid\"],[[3204,3204],\"disallowed\"],[[3205,3212],\"valid\"],[[3213,3213],\"disallowed\"],[[3214,3216],\"valid\"],[[3217,3217],\"disallowed\"],[[3218,3240],\"valid\"],[[3241,3241],\"disallowed\"],[[3242,3251],\"valid\"],[[3252,3252],\"disallowed\"],[[3253,3257],\"valid\"],[[3258,3259],\"disallowed\"],[[3260,3261],\"valid\"],[[3262,3268],\"valid\"],[[3269,3269],\"disallowed\"],[[3270,3272],\"valid\"],[[3273,3273],\"disallowed\"],[[3274,3277],\"valid\"],[[3278,3284],\"disallowed\"],[[3285,3286],\"valid\"],[[3287,3293],\"disallowed\"],[[3294,3294],\"valid\"],[[3295,3295],\"disallowed\"],[[3296,3297],\"valid\"],[[3298,3299],\"valid\"],[[3300,3301],\"disallowed\"],[[3302,3311],\"valid\"],[[3312,3312],\"disallowed\"],[[3313,3314],\"valid\"],[[3315,3328],\"disallowed\"],[[3329,3329],\"valid\"],[[3330,3331],\"valid\"],[[3332,3332],\"disallowed\"],[[3333,3340],\"valid\"],[[3341,3341],\"disallowed\"],[[3342,3344],\"valid\"],[[3345,3345],\"disallowed\"],[[3346,3368],\"valid\"],[[3369,3369],\"valid\"],[[3370,3385],\"valid\"],[[3386,3386],\"valid\"],[[3387,3388],\"disallowed\"],[[3389,3389],\"valid\"],[[3390,3395],\"valid\"],[[3396,3396],\"valid\"],[[3397,3397],\"disallowed\"],[[3398,3400],\"valid\"],[[3401,3401],\"disallowed\"],[[3402,3405],\"valid\"],[[3406,3406],\"valid\"],[[3407,3414],\"disallowed\"],[[3415,3415],\"valid\"],[[3416,3422],\"disallowed\"],[[3423,3423],\"valid\"],[[3424,3425],\"valid\"],[[3426,3427],\"valid\"],[[3428,3429],\"disallowed\"],[[3430,3439],\"valid\"],[[3440,3445],\"valid\",[],\"NV8\"],[[3446,3448],\"disallowed\"],[[3449,3449],\"valid\",[],\"NV8\"],[[3450,3455],\"valid\"],[[3456,3457],\"disallowed\"],[[3458,3459],\"valid\"],[[3460,3460],\"disallowed\"],[[3461,3478],\"valid\"],[[3479,3481],\"disallowed\"],[[3482,3505],\"valid\"],[[3506,3506],\"disallowed\"],[[3507,3515],\"valid\"],[[3516,3516],\"disallowed\"],[[3517,3517],\"valid\"],[[3518,3519],\"disallowed\"],[[3520,3526],\"valid\"],[[3527,3529],\"disallowed\"],[[3530,3530],\"valid\"],[[3531,3534],\"disallowed\"],[[3535,3540],\"valid\"],[[3541,3541],\"disallowed\"],[[3542,3542],\"valid\"],[[3543,3543],\"disallowed\"],[[3544,3551],\"valid\"],[[3552,3557],\"disallowed\"],[[3558,3567],\"valid\"],[[3568,3569],\"disallowed\"],[[3570,3571],\"valid\"],[[3572,3572],\"valid\",[],\"NV8\"],[[3573,3584],\"disallowed\"],[[3585,3634],\"valid\"],[[3635,3635],\"mapped\",[3661,3634]],[[3636,3642],\"valid\"],[[3643,3646],\"disallowed\"],[[3647,3647],\"valid\",[],\"NV8\"],[[3648,3662],\"valid\"],[[3663,3663],\"valid\",[],\"NV8\"],[[3664,3673],\"valid\"],[[3674,3675],\"valid\",[],\"NV8\"],[[3676,3712],\"disallowed\"],[[3713,3714],\"valid\"],[[3715,3715],\"disallowed\"],[[3716,3716],\"valid\"],[[3717,3718],\"disallowed\"],[[3719,3720],\"valid\"],[[3721,3721],\"disallowed\"],[[3722,3722],\"valid\"],[[3723,3724],\"disallowed\"],[[3725,3725],\"valid\"],[[3726,3731],\"disallowed\"],[[3732,3735],\"valid\"],[[3736,3736],\"disallowed\"],[[3737,3743],\"valid\"],[[3744,3744],\"disallowed\"],[[3745,3747],\"valid\"],[[3748,3748],\"disallowed\"],[[3749,3749],\"valid\"],[[3750,3750],\"disallowed\"],[[3751,3751],\"valid\"],[[3752,3753],\"disallowed\"],[[3754,3755],\"valid\"],[[3756,3756],\"disallowed\"],[[3757,3762],\"valid\"],[[3763,3763],\"mapped\",[3789,3762]],[[3764,3769],\"valid\"],[[3770,3770],\"disallowed\"],[[3771,3773],\"valid\"],[[3774,3775],\"disallowed\"],[[3776,3780],\"valid\"],[[3781,3781],\"disallowed\"],[[3782,3782],\"valid\"],[[3783,3783],\"disallowed\"],[[3784,3789],\"valid\"],[[3790,3791],\"disallowed\"],[[3792,3801],\"valid\"],[[3802,3803],\"disallowed\"],[[3804,3804],\"mapped\",[3755,3737]],[[3805,3805],\"mapped\",[3755,3745]],[[3806,3807],\"valid\"],[[3808,3839],\"disallowed\"],[[3840,3840],\"valid\"],[[3841,3850],\"valid\",[],\"NV8\"],[[3851,3851],\"valid\"],[[3852,3852],\"mapped\",[3851]],[[3853,3863],\"valid\",[],\"NV8\"],[[3864,3865],\"valid\"],[[3866,3871],\"valid\",[],\"NV8\"],[[3872,3881],\"valid\"],[[3882,3892],\"valid\",[],\"NV8\"],[[3893,3893],\"valid\"],[[3894,3894],\"valid\",[],\"NV8\"],[[3895,3895],\"valid\"],[[3896,3896],\"valid\",[],\"NV8\"],[[3897,3897],\"valid\"],[[3898,3901],\"valid\",[],\"NV8\"],[[3902,3906],\"valid\"],[[3907,3907],\"mapped\",[3906,4023]],[[3908,3911],\"valid\"],[[3912,3912],\"disallowed\"],[[3913,3916],\"valid\"],[[3917,3917],\"mapped\",[3916,4023]],[[3918,3921],\"valid\"],[[3922,3922],\"mapped\",[3921,4023]],[[3923,3926],\"valid\"],[[3927,3927],\"mapped\",[3926,4023]],[[3928,3931],\"valid\"],[[3932,3932],\"mapped\",[3931,4023]],[[3933,3944],\"valid\"],[[3945,3945],\"mapped\",[3904,4021]],[[3946,3946],\"valid\"],[[3947,3948],\"valid\"],[[3949,3952],\"disallowed\"],[[3953,3954],\"valid\"],[[3955,3955],\"mapped\",[3953,3954]],[[3956,3956],\"valid\"],[[3957,3957],\"mapped\",[3953,3956]],[[3958,3958],\"mapped\",[4018,3968]],[[3959,3959],\"mapped\",[4018,3953,3968]],[[3960,3960],\"mapped\",[4019,3968]],[[3961,3961],\"mapped\",[4019,3953,3968]],[[3962,3968],\"valid\"],[[3969,3969],\"mapped\",[3953,3968]],[[3970,3972],\"valid\"],[[3973,3973],\"valid\",[],\"NV8\"],[[3974,3979],\"valid\"],[[3980,3983],\"valid\"],[[3984,3986],\"valid\"],[[3987,3987],\"mapped\",[3986,4023]],[[3988,3989],\"valid\"],[[3990,3990],\"valid\"],[[3991,3991],\"valid\"],[[3992,3992],\"disallowed\"],[[3993,3996],\"valid\"],[[3997,3997],\"mapped\",[3996,4023]],[[3998,4001],\"valid\"],[[4002,4002],\"mapped\",[4001,4023]],[[4003,4006],\"valid\"],[[4007,4007],\"mapped\",[4006,4023]],[[4008,4011],\"valid\"],[[4012,4012],\"mapped\",[4011,4023]],[[4013,4013],\"valid\"],[[4014,4016],\"valid\"],[[4017,4023],\"valid\"],[[4024,4024],\"valid\"],[[4025,4025],\"mapped\",[3984,4021]],[[4026,4028],\"valid\"],[[4029,4029],\"disallowed\"],[[4030,4037],\"valid\",[],\"NV8\"],[[4038,4038],\"valid\"],[[4039,4044],\"valid\",[],\"NV8\"],[[4045,4045],\"disallowed\"],[[4046,4046],\"valid\",[],\"NV8\"],[[4047,4047],\"valid\",[],\"NV8\"],[[4048,4049],\"valid\",[],\"NV8\"],[[4050,4052],\"valid\",[],\"NV8\"],[[4053,4056],\"valid\",[],\"NV8\"],[[4057,4058],\"valid\",[],\"NV8\"],[[4059,4095],\"disallowed\"],[[4096,4129],\"valid\"],[[4130,4130],\"valid\"],[[4131,4135],\"valid\"],[[4136,4136],\"valid\"],[[4137,4138],\"valid\"],[[4139,4139],\"valid\"],[[4140,4146],\"valid\"],[[4147,4149],\"valid\"],[[4150,4153],\"valid\"],[[4154,4159],\"valid\"],[[4160,4169],\"valid\"],[[4170,4175],\"valid\",[],\"NV8\"],[[4176,4185],\"valid\"],[[4186,4249],\"valid\"],[[4250,4253],\"valid\"],[[4254,4255],\"valid\",[],\"NV8\"],[[4256,4293],\"disallowed\"],[[4294,4294],\"disallowed\"],[[4295,4295],\"mapped\",[11559]],[[4296,4300],\"disallowed\"],[[4301,4301],\"mapped\",[11565]],[[4302,4303],\"disallowed\"],[[4304,4342],\"valid\"],[[4343,4344],\"valid\"],[[4345,4346],\"valid\"],[[4347,4347],\"valid\",[],\"NV8\"],[[4348,4348],\"mapped\",[4316]],[[4349,4351],\"valid\"],[[4352,4441],\"valid\",[],\"NV8\"],[[4442,4446],\"valid\",[],\"NV8\"],[[4447,4448],\"disallowed\"],[[4449,4514],\"valid\",[],\"NV8\"],[[4515,4519],\"valid\",[],\"NV8\"],[[4520,4601],\"valid\",[],\"NV8\"],[[4602,4607],\"valid\",[],\"NV8\"],[[4608,4614],\"valid\"],[[4615,4615],\"valid\"],[[4616,4678],\"valid\"],[[4679,4679],\"valid\"],[[4680,4680],\"valid\"],[[4681,4681],\"disallowed\"],[[4682,4685],\"valid\"],[[4686,4687],\"disallowed\"],[[4688,4694],\"valid\"],[[4695,4695],\"disallowed\"],[[4696,4696],\"valid\"],[[4697,4697],\"disallowed\"],[[4698,4701],\"valid\"],[[4702,4703],\"disallowed\"],[[4704,4742],\"valid\"],[[4743,4743],\"valid\"],[[4744,4744],\"valid\"],[[4745,4745],\"disallowed\"],[[4746,4749],\"valid\"],[[4750,4751],\"disallowed\"],[[4752,4782],\"valid\"],[[4783,4783],\"valid\"],[[4784,4784],\"valid\"],[[4785,4785],\"disallowed\"],[[4786,4789],\"valid\"],[[4790,4791],\"disallowed\"],[[4792,4798],\"valid\"],[[4799,4799],\"disallowed\"],[[4800,4800],\"valid\"],[[4801,4801],\"disallowed\"],[[4802,4805],\"valid\"],[[4806,4807],\"disallowed\"],[[4808,4814],\"valid\"],[[4815,4815],\"valid\"],[[4816,4822],\"valid\"],[[4823,4823],\"disallowed\"],[[4824,4846],\"valid\"],[[4847,4847],\"valid\"],[[4848,4878],\"valid\"],[[4879,4879],\"valid\"],[[4880,4880],\"valid\"],[[4881,4881],\"disallowed\"],[[4882,4885],\"valid\"],[[4886,4887],\"disallowed\"],[[4888,4894],\"valid\"],[[4895,4895],\"valid\"],[[4896,4934],\"valid\"],[[4935,4935],\"valid\"],[[4936,4954],\"valid\"],[[4955,4956],\"disallowed\"],[[4957,4958],\"valid\"],[[4959,4959],\"valid\"],[[4960,4960],\"valid\",[],\"NV8\"],[[4961,4988],\"valid\",[],\"NV8\"],[[4989,4991],\"disallowed\"],[[4992,5007],\"valid\"],[[5008,5017],\"valid\",[],\"NV8\"],[[5018,5023],\"disallowed\"],[[5024,5108],\"valid\"],[[5109,5109],\"valid\"],[[5110,5111],\"disallowed\"],[[5112,5112],\"mapped\",[5104]],[[5113,5113],\"mapped\",[5105]],[[5114,5114],\"mapped\",[5106]],[[5115,5115],\"mapped\",[5107]],[[5116,5116],\"mapped\",[5108]],[[5117,5117],\"mapped\",[5109]],[[5118,5119],\"disallowed\"],[[5120,5120],\"valid\",[],\"NV8\"],[[5121,5740],\"valid\"],[[5741,5742],\"valid\",[],\"NV8\"],[[5743,5750],\"valid\"],[[5751,5759],\"valid\"],[[5760,5760],\"disallowed\"],[[5761,5786],\"valid\"],[[5787,5788],\"valid\",[],\"NV8\"],[[5789,5791],\"disallowed\"],[[5792,5866],\"valid\"],[[5867,5872],\"valid\",[],\"NV8\"],[[5873,5880],\"valid\"],[[5881,5887],\"disallowed\"],[[5888,5900],\"valid\"],[[5901,5901],\"disallowed\"],[[5902,5908],\"valid\"],[[5909,5919],\"disallowed\"],[[5920,5940],\"valid\"],[[5941,5942],\"valid\",[],\"NV8\"],[[5943,5951],\"disallowed\"],[[5952,5971],\"valid\"],[[5972,5983],\"disallowed\"],[[5984,5996],\"valid\"],[[5997,5997],\"disallowed\"],[[5998,6000],\"valid\"],[[6001,6001],\"disallowed\"],[[6002,6003],\"valid\"],[[6004,6015],\"disallowed\"],[[6016,6067],\"valid\"],[[6068,6069],\"disallowed\"],[[6070,6099],\"valid\"],[[6100,6102],\"valid\",[],\"NV8\"],[[6103,6103],\"valid\"],[[6104,6107],\"valid\",[],\"NV8\"],[[6108,6108],\"valid\"],[[6109,6109],\"valid\"],[[6110,6111],\"disallowed\"],[[6112,6121],\"valid\"],[[6122,6127],\"disallowed\"],[[6128,6137],\"valid\",[],\"NV8\"],[[6138,6143],\"disallowed\"],[[6144,6149],\"valid\",[],\"NV8\"],[[6150,6150],\"disallowed\"],[[6151,6154],\"valid\",[],\"NV8\"],[[6155,6157],\"ignored\"],[[6158,6158],\"disallowed\"],[[6159,6159],\"disallowed\"],[[6160,6169],\"valid\"],[[6170,6175],\"disallowed\"],[[6176,6263],\"valid\"],[[6264,6271],\"disallowed\"],[[6272,6313],\"valid\"],[[6314,6314],\"valid\"],[[6315,6319],\"disallowed\"],[[6320,6389],\"valid\"],[[6390,6399],\"disallowed\"],[[6400,6428],\"valid\"],[[6429,6430],\"valid\"],[[6431,6431],\"disallowed\"],[[6432,6443],\"valid\"],[[6444,6447],\"disallowed\"],[[6448,6459],\"valid\"],[[6460,6463],\"disallowed\"],[[6464,6464],\"valid\",[],\"NV8\"],[[6465,6467],\"disallowed\"],[[6468,6469],\"valid\",[],\"NV8\"],[[6470,6509],\"valid\"],[[6510,6511],\"disallowed\"],[[6512,6516],\"valid\"],[[6517,6527],\"disallowed\"],[[6528,6569],\"valid\"],[[6570,6571],\"valid\"],[[6572,6575],\"disallowed\"],[[6576,6601],\"valid\"],[[6602,6607],\"disallowed\"],[[6608,6617],\"valid\"],[[6618,6618],\"valid\",[],\"XV8\"],[[6619,6621],\"disallowed\"],[[6622,6623],\"valid\",[],\"NV8\"],[[6624,6655],\"valid\",[],\"NV8\"],[[6656,6683],\"valid\"],[[6684,6685],\"disallowed\"],[[6686,6687],\"valid\",[],\"NV8\"],[[6688,6750],\"valid\"],[[6751,6751],\"disallowed\"],[[6752,6780],\"valid\"],[[6781,6782],\"disallowed\"],[[6783,6793],\"valid\"],[[6794,6799],\"disallowed\"],[[6800,6809],\"valid\"],[[6810,6815],\"disallowed\"],[[6816,6822],\"valid\",[],\"NV8\"],[[6823,6823],\"valid\"],[[6824,6829],\"valid\",[],\"NV8\"],[[6830,6831],\"disallowed\"],[[6832,6845],\"valid\"],[[6846,6846],\"valid\",[],\"NV8\"],[[6847,6911],\"disallowed\"],[[6912,6987],\"valid\"],[[6988,6991],\"disallowed\"],[[6992,7001],\"valid\"],[[7002,7018],\"valid\",[],\"NV8\"],[[7019,7027],\"valid\"],[[7028,7036],\"valid\",[],\"NV8\"],[[7037,7039],\"disallowed\"],[[7040,7082],\"valid\"],[[7083,7085],\"valid\"],[[7086,7097],\"valid\"],[[7098,7103],\"valid\"],[[7104,7155],\"valid\"],[[7156,7163],\"disallowed\"],[[7164,7167],\"valid\",[],\"NV8\"],[[7168,7223],\"valid\"],[[7224,7226],\"disallowed\"],[[7227,7231],\"valid\",[],\"NV8\"],[[7232,7241],\"valid\"],[[7242,7244],\"disallowed\"],[[7245,7293],\"valid\"],[[7294,7295],\"valid\",[],\"NV8\"],[[7296,7359],\"disallowed\"],[[7360,7367],\"valid\",[],\"NV8\"],[[7368,7375],\"disallowed\"],[[7376,7378],\"valid\"],[[7379,7379],\"valid\",[],\"NV8\"],[[7380,7410],\"valid\"],[[7411,7414],\"valid\"],[[7415,7415],\"disallowed\"],[[7416,7417],\"valid\"],[[7418,7423],\"disallowed\"],[[7424,7467],\"valid\"],[[7468,7468],\"mapped\",[97]],[[7469,7469],\"mapped\",[230]],[[7470,7470],\"mapped\",[98]],[[7471,7471],\"valid\"],[[7472,7472],\"mapped\",[100]],[[7473,7473],\"mapped\",[101]],[[7474,7474],\"mapped\",[477]],[[7475,7475],\"mapped\",[103]],[[7476,7476],\"mapped\",[104]],[[7477,7477],\"mapped\",[105]],[[7478,7478],\"mapped\",[106]],[[7479,7479],\"mapped\",[107]],[[7480,7480],\"mapped\",[108]],[[7481,7481],\"mapped\",[109]],[[7482,7482],\"mapped\",[110]],[[7483,7483],\"valid\"],[[7484,7484],\"mapped\",[111]],[[7485,7485],\"mapped\",[547]],[[7486,7486],\"mapped\",[112]],[[7487,7487],\"mapped\",[114]],[[7488,7488],\"mapped\",[116]],[[7489,7489],\"mapped\",[117]],[[7490,7490],\"mapped\",[119]],[[7491,7491],\"mapped\",[97]],[[7492,7492],\"mapped\",[592]],[[7493,7493],\"mapped\",[593]],[[7494,7494],\"mapped\",[7426]],[[7495,7495],\"mapped\",[98]],[[7496,7496],\"mapped\",[100]],[[7497,7497],\"mapped\",[101]],[[7498,7498],\"mapped\",[601]],[[7499,7499],\"mapped\",[603]],[[7500,7500],\"mapped\",[604]],[[7501,7501],\"mapped\",[103]],[[7502,7502],\"valid\"],[[7503,7503],\"mapped\",[107]],[[7504,7504],\"mapped\",[109]],[[7505,7505],\"mapped\",[331]],[[7506,7506],\"mapped\",[111]],[[7507,7507],\"mapped\",[596]],[[7508,7508],\"mapped\",[7446]],[[7509,7509],\"mapped\",[7447]],[[7510,7510],\"mapped\",[112]],[[7511,7511],\"mapped\",[116]],[[7512,7512],\"mapped\",[117]],[[7513,7513],\"mapped\",[7453]],[[7514,7514],\"mapped\",[623]],[[7515,7515],\"mapped\",[118]],[[7516,7516],\"mapped\",[7461]],[[7517,7517],\"mapped\",[946]],[[7518,7518],\"mapped\",[947]],[[7519,7519],\"mapped\",[948]],[[7520,7520],\"mapped\",[966]],[[7521,7521],\"mapped\",[967]],[[7522,7522],\"mapped\",[105]],[[7523,7523],\"mapped\",[114]],[[7524,7524],\"mapped\",[117]],[[7525,7525],\"mapped\",[118]],[[7526,7526],\"mapped\",[946]],[[7527,7527],\"mapped\",[947]],[[7528,7528],\"mapped\",[961]],[[7529,7529],\"mapped\",[966]],[[7530,7530],\"mapped\",[967]],[[7531,7531],\"valid\"],[[7532,7543],\"valid\"],[[7544,7544],\"mapped\",[1085]],[[7545,7578],\"valid\"],[[7579,7579],\"mapped\",[594]],[[7580,7580],\"mapped\",[99]],[[7581,7581],\"mapped\",[597]],[[7582,7582],\"mapped\",[240]],[[7583,7583],\"mapped\",[604]],[[7584,7584],\"mapped\",[102]],[[7585,7585],\"mapped\",[607]],[[7586,7586],\"mapped\",[609]],[[7587,7587],\"mapped\",[613]],[[7588,7588],\"mapped\",[616]],[[7589,7589],\"mapped\",[617]],[[7590,7590],\"mapped\",[618]],[[7591,7591],\"mapped\",[7547]],[[7592,7592],\"mapped\",[669]],[[7593,7593],\"mapped\",[621]],[[7594,7594],\"mapped\",[7557]],[[7595,7595],\"mapped\",[671]],[[7596,7596],\"mapped\",[625]],[[7597,7597],\"mapped\",[624]],[[7598,7598],\"mapped\",[626]],[[7599,7599],\"mapped\",[627]],[[7600,7600],\"mapped\",[628]],[[7601,7601],\"mapped\",[629]],[[7602,7602],\"mapped\",[632]],[[7603,7603],\"mapped\",[642]],[[7604,7604],\"mapped\",[643]],[[7605,7605],\"mapped\",[427]],[[7606,7606],\"mapped\",[649]],[[7607,7607],\"mapped\",[650]],[[7608,7608],\"mapped\",[7452]],[[7609,7609],\"mapped\",[651]],[[7610,7610],\"mapped\",[652]],[[7611,7611],\"mapped\",[122]],[[7612,7612],\"mapped\",[656]],[[7613,7613],\"mapped\",[657]],[[7614,7614],\"mapped\",[658]],[[7615,7615],\"mapped\",[952]],[[7616,7619],\"valid\"],[[7620,7626],\"valid\"],[[7627,7654],\"valid\"],[[7655,7669],\"valid\"],[[7670,7675],\"disallowed\"],[[7676,7676],\"valid\"],[[7677,7677],\"valid\"],[[7678,7679],\"valid\"],[[7680,7680],\"mapped\",[7681]],[[7681,7681],\"valid\"],[[7682,7682],\"mapped\",[7683]],[[7683,7683],\"valid\"],[[7684,7684],\"mapped\",[7685]],[[7685,7685],\"valid\"],[[7686,7686],\"mapped\",[7687]],[[7687,7687],\"valid\"],[[7688,7688],\"mapped\",[7689]],[[7689,7689],\"valid\"],[[7690,7690],\"mapped\",[7691]],[[7691,7691],\"valid\"],[[7692,7692],\"mapped\",[7693]],[[7693,7693],\"valid\"],[[7694,7694],\"mapped\",[7695]],[[7695,7695],\"valid\"],[[7696,7696],\"mapped\",[7697]],[[7697,7697],\"valid\"],[[7698,7698],\"mapped\",[7699]],[[7699,7699],\"valid\"],[[7700,7700],\"mapped\",[7701]],[[7701,7701],\"valid\"],[[7702,7702],\"mapped\",[7703]],[[7703,7703],\"valid\"],[[7704,7704],\"mapped\",[7705]],[[7705,7705],\"valid\"],[[7706,7706],\"mapped\",[7707]],[[7707,7707],\"valid\"],[[7708,7708],\"mapped\",[7709]],[[7709,7709],\"valid\"],[[7710,7710],\"mapped\",[7711]],[[7711,7711],\"valid\"],[[7712,7712],\"mapped\",[7713]],[[7713,7713],\"valid\"],[[7714,7714],\"mapped\",[7715]],[[7715,7715],\"valid\"],[[7716,7716],\"mapped\",[7717]],[[7717,7717],\"valid\"],[[7718,7718],\"mapped\",[7719]],[[7719,7719],\"valid\"],[[7720,7720],\"mapped\",[7721]],[[7721,7721],\"valid\"],[[7722,7722],\"mapped\",[7723]],[[7723,7723],\"valid\"],[[7724,7724],\"mapped\",[7725]],[[7725,7725],\"valid\"],[[7726,7726],\"mapped\",[7727]],[[7727,7727],\"valid\"],[[7728,7728],\"mapped\",[7729]],[[7729,7729],\"valid\"],[[7730,7730],\"mapped\",[7731]],[[7731,7731],\"valid\"],[[7732,7732],\"mapped\",[7733]],[[7733,7733],\"valid\"],[[7734,7734],\"mapped\",[7735]],[[7735,7735],\"valid\"],[[7736,7736],\"mapped\",[7737]],[[7737,7737],\"valid\"],[[7738,7738],\"mapped\",[7739]],[[7739,7739],\"valid\"],[[7740,7740],\"mapped\",[7741]],[[7741,7741],\"valid\"],[[7742,7742],\"mapped\",[7743]],[[7743,7743],\"valid\"],[[7744,7744],\"mapped\",[7745]],[[7745,7745],\"valid\"],[[7746,7746],\"mapped\",[7747]],[[7747,7747],\"valid\"],[[7748,7748],\"mapped\",[7749]],[[7749,7749],\"valid\"],[[7750,7750],\"mapped\",[7751]],[[7751,7751],\"valid\"],[[7752,7752],\"mapped\",[7753]],[[7753,7753],\"valid\"],[[7754,7754],\"mapped\",[7755]],[[7755,7755],\"valid\"],[[7756,7756],\"mapped\",[7757]],[[7757,7757],\"valid\"],[[7758,7758],\"mapped\",[7759]],[[7759,7759],\"valid\"],[[7760,7760],\"mapped\",[7761]],[[7761,7761],\"valid\"],[[7762,7762],\"mapped\",[7763]],[[7763,7763],\"valid\"],[[7764,7764],\"mapped\",[7765]],[[7765,7765],\"valid\"],[[7766,7766],\"mapped\",[7767]],[[7767,7767],\"valid\"],[[7768,7768],\"mapped\",[7769]],[[7769,7769],\"valid\"],[[7770,7770],\"mapped\",[7771]],[[7771,7771],\"valid\"],[[7772,7772],\"mapped\",[7773]],[[7773,7773],\"valid\"],[[7774,7774],\"mapped\",[7775]],[[7775,7775],\"valid\"],[[7776,7776],\"mapped\",[7777]],[[7777,7777],\"valid\"],[[7778,7778],\"mapped\",[7779]],[[7779,7779],\"valid\"],[[7780,7780],\"mapped\",[7781]],[[7781,7781],\"valid\"],[[7782,7782],\"mapped\",[7783]],[[7783,7783],\"valid\"],[[7784,7784],\"mapped\",[7785]],[[7785,7785],\"valid\"],[[7786,7786],\"mapped\",[7787]],[[7787,7787],\"valid\"],[[7788,7788],\"mapped\",[7789]],[[7789,7789],\"valid\"],[[7790,7790],\"mapped\",[7791]],[[7791,7791],\"valid\"],[[7792,7792],\"mapped\",[7793]],[[7793,7793],\"valid\"],[[7794,7794],\"mapped\",[7795]],[[7795,7795],\"valid\"],[[7796,7796],\"mapped\",[7797]],[[7797,7797],\"valid\"],[[7798,7798],\"mapped\",[7799]],[[7799,7799],\"valid\"],[[7800,7800],\"mapped\",[7801]],[[7801,7801],\"valid\"],[[7802,7802],\"mapped\",[7803]],[[7803,7803],\"valid\"],[[7804,7804],\"mapped\",[7805]],[[7805,7805],\"valid\"],[[7806,7806],\"mapped\",[7807]],[[7807,7807],\"valid\"],[[7808,7808],\"mapped\",[7809]],[[7809,7809],\"valid\"],[[7810,7810],\"mapped\",[7811]],[[7811,7811],\"valid\"],[[7812,7812],\"mapped\",[7813]],[[7813,7813],\"valid\"],[[7814,7814],\"mapped\",[7815]],[[7815,7815],\"valid\"],[[7816,7816],\"mapped\",[7817]],[[7817,7817],\"valid\"],[[7818,7818],\"mapped\",[7819]],[[7819,7819],\"valid\"],[[7820,7820],\"mapped\",[7821]],[[7821,7821],\"valid\"],[[7822,7822],\"mapped\",[7823]],[[7823,7823],\"valid\"],[[7824,7824],\"mapped\",[7825]],[[7825,7825],\"valid\"],[[7826,7826],\"mapped\",[7827]],[[7827,7827],\"valid\"],[[7828,7828],\"mapped\",[7829]],[[7829,7833],\"valid\"],[[7834,7834],\"mapped\",[97,702]],[[7835,7835],\"mapped\",[7777]],[[7836,7837],\"valid\"],[[7838,7838],\"mapped\",[115,115]],[[7839,7839],\"valid\"],[[7840,7840],\"mapped\",[7841]],[[7841,7841],\"valid\"],[[7842,7842],\"mapped\",[7843]],[[7843,7843],\"valid\"],[[7844,7844],\"mapped\",[7845]],[[7845,7845],\"valid\"],[[7846,7846],\"mapped\",[7847]],[[7847,7847],\"valid\"],[[7848,7848],\"mapped\",[7849]],[[7849,7849],\"valid\"],[[7850,7850],\"mapped\",[7851]],[[7851,7851],\"valid\"],[[7852,7852],\"mapped\",[7853]],[[7853,7853],\"valid\"],[[7854,7854],\"mapped\",[7855]],[[7855,7855],\"valid\"],[[7856,7856],\"mapped\",[7857]],[[7857,7857],\"valid\"],[[7858,7858],\"mapped\",[7859]],[[7859,7859],\"valid\"],[[7860,7860],\"mapped\",[7861]],[[7861,7861],\"valid\"],[[7862,7862],\"mapped\",[7863]],[[7863,7863],\"valid\"],[[7864,7864],\"mapped\",[7865]],[[7865,7865],\"valid\"],[[7866,7866],\"mapped\",[7867]],[[7867,7867],\"valid\"],[[7868,7868],\"mapped\",[7869]],[[7869,7869],\"valid\"],[[7870,7870],\"mapped\",[7871]],[[7871,7871],\"valid\"],[[7872,7872],\"mapped\",[7873]],[[7873,7873],\"valid\"],[[7874,7874],\"mapped\",[7875]],[[7875,7875],\"valid\"],[[7876,7876],\"mapped\",[7877]],[[7877,7877],\"valid\"],[[7878,7878],\"mapped\",[7879]],[[7879,7879],\"valid\"],[[7880,7880],\"mapped\",[7881]],[[7881,7881],\"valid\"],[[7882,7882],\"mapped\",[7883]],[[7883,7883],\"valid\"],[[7884,7884],\"mapped\",[7885]],[[7885,7885],\"valid\"],[[7886,7886],\"mapped\",[7887]],[[7887,7887],\"valid\"],[[7888,7888],\"mapped\",[7889]],[[7889,7889],\"valid\"],[[7890,7890],\"mapped\",[7891]],[[7891,7891],\"valid\"],[[7892,7892],\"mapped\",[7893]],[[7893,7893],\"valid\"],[[7894,7894],\"mapped\",[7895]],[[7895,7895],\"valid\"],[[7896,7896],\"mapped\",[7897]],[[7897,7897],\"valid\"],[[7898,7898],\"mapped\",[7899]],[[7899,7899],\"valid\"],[[7900,7900],\"mapped\",[7901]],[[7901,7901],\"valid\"],[[7902,7902],\"mapped\",[7903]],[[7903,7903],\"valid\"],[[7904,7904],\"mapped\",[7905]],[[7905,7905],\"valid\"],[[7906,7906],\"mapped\",[7907]],[[7907,7907],\"valid\"],[[7908,7908],\"mapped\",[7909]],[[7909,7909],\"valid\"],[[7910,7910],\"mapped\",[7911]],[[7911,7911],\"valid\"],[[7912,7912],\"mapped\",[7913]],[[7913,7913],\"valid\"],[[7914,7914],\"mapped\",[7915]],[[7915,7915],\"valid\"],[[7916,7916],\"mapped\",[7917]],[[7917,7917],\"valid\"],[[7918,7918],\"mapped\",[7919]],[[7919,7919],\"valid\"],[[7920,7920],\"mapped\",[7921]],[[7921,7921],\"valid\"],[[7922,7922],\"mapped\",[7923]],[[7923,7923],\"valid\"],[[7924,7924],\"mapped\",[7925]],[[7925,7925],\"valid\"],[[7926,7926],\"mapped\",[7927]],[[7927,7927],\"valid\"],[[7928,7928],\"mapped\",[7929]],[[7929,7929],\"valid\"],[[7930,7930],\"mapped\",[7931]],[[7931,7931],\"valid\"],[[7932,7932],\"mapped\",[7933]],[[7933,7933],\"valid\"],[[7934,7934],\"mapped\",[7935]],[[7935,7935],\"valid\"],[[7936,7943],\"valid\"],[[7944,7944],\"mapped\",[7936]],[[7945,7945],\"mapped\",[7937]],[[7946,7946],\"mapped\",[7938]],[[7947,7947],\"mapped\",[7939]],[[7948,7948],\"mapped\",[7940]],[[7949,7949],\"mapped\",[7941]],[[7950,7950],\"mapped\",[7942]],[[7951,7951],\"mapped\",[7943]],[[7952,7957],\"valid\"],[[7958,7959],\"disallowed\"],[[7960,7960],\"mapped\",[7952]],[[7961,7961],\"mapped\",[7953]],[[7962,7962],\"mapped\",[7954]],[[7963,7963],\"mapped\",[7955]],[[7964,7964],\"mapped\",[7956]],[[7965,7965],\"mapped\",[7957]],[[7966,7967],\"disallowed\"],[[7968,7975],\"valid\"],[[7976,7976],\"mapped\",[7968]],[[7977,7977],\"mapped\",[7969]],[[7978,7978],\"mapped\",[7970]],[[7979,7979],\"mapped\",[7971]],[[7980,7980],\"mapped\",[7972]],[[7981,7981],\"mapped\",[7973]],[[7982,7982],\"mapped\",[7974]],[[7983,7983],\"mapped\",[7975]],[[7984,7991],\"valid\"],[[7992,7992],\"mapped\",[7984]],[[7993,7993],\"mapped\",[7985]],[[7994,7994],\"mapped\",[7986]],[[7995,7995],\"mapped\",[7987]],[[7996,7996],\"mapped\",[7988]],[[7997,7997],\"mapped\",[7989]],[[7998,7998],\"mapped\",[7990]],[[7999,7999],\"mapped\",[7991]],[[8000,8005],\"valid\"],[[8006,8007],\"disallowed\"],[[8008,8008],\"mapped\",[8000]],[[8009,8009],\"mapped\",[8001]],[[8010,8010],\"mapped\",[8002]],[[8011,8011],\"mapped\",[8003]],[[8012,8012],\"mapped\",[8004]],[[8013,8013],\"mapped\",[8005]],[[8014,8015],\"disallowed\"],[[8016,8023],\"valid\"],[[8024,8024],\"disallowed\"],[[8025,8025],\"mapped\",[8017]],[[8026,8026],\"disallowed\"],[[8027,8027],\"mapped\",[8019]],[[8028,8028],\"disallowed\"],[[8029,8029],\"mapped\",[8021]],[[8030,8030],\"disallowed\"],[[8031,8031],\"mapped\",[8023]],[[8032,8039],\"valid\"],[[8040,8040],\"mapped\",[8032]],[[8041,8041],\"mapped\",[8033]],[[8042,8042],\"mapped\",[8034]],[[8043,8043],\"mapped\",[8035]],[[8044,8044],\"mapped\",[8036]],[[8045,8045],\"mapped\",[8037]],[[8046,8046],\"mapped\",[8038]],[[8047,8047],\"mapped\",[8039]],[[8048,8048],\"valid\"],[[8049,8049],\"mapped\",[940]],[[8050,8050],\"valid\"],[[8051,8051],\"mapped\",[941]],[[8052,8052],\"valid\"],[[8053,8053],\"mapped\",[942]],[[8054,8054],\"valid\"],[[8055,8055],\"mapped\",[943]],[[8056,8056],\"valid\"],[[8057,8057],\"mapped\",[972]],[[8058,8058],\"valid\"],[[8059,8059],\"mapped\",[973]],[[8060,8060],\"valid\"],[[8061,8061],\"mapped\",[974]],[[8062,8063],\"disallowed\"],[[8064,8064],\"mapped\",[7936,953]],[[8065,8065],\"mapped\",[7937,953]],[[8066,8066],\"mapped\",[7938,953]],[[8067,8067],\"mapped\",[7939,953]],[[8068,8068],\"mapped\",[7940,953]],[[8069,8069],\"mapped\",[7941,953]],[[8070,8070],\"mapped\",[7942,953]],[[8071,8071],\"mapped\",[7943,953]],[[8072,8072],\"mapped\",[7936,953]],[[8073,8073],\"mapped\",[7937,953]],[[8074,8074],\"mapped\",[7938,953]],[[8075,8075],\"mapped\",[7939,953]],[[8076,8076],\"mapped\",[7940,953]],[[8077,8077],\"mapped\",[7941,953]],[[8078,8078],\"mapped\",[7942,953]],[[8079,8079],\"mapped\",[7943,953]],[[8080,8080],\"mapped\",[7968,953]],[[8081,8081],\"mapped\",[7969,953]],[[8082,8082],\"mapped\",[7970,953]],[[8083,8083],\"mapped\",[7971,953]],[[8084,8084],\"mapped\",[7972,953]],[[8085,8085],\"mapped\",[7973,953]],[[8086,8086],\"mapped\",[7974,953]],[[8087,8087],\"mapped\",[7975,953]],[[8088,8088],\"mapped\",[7968,953]],[[8089,8089],\"mapped\",[7969,953]],[[8090,8090],\"mapped\",[7970,953]],[[8091,8091],\"mapped\",[7971,953]],[[8092,8092],\"mapped\",[7972,953]],[[8093,8093],\"mapped\",[7973,953]],[[8094,8094],\"mapped\",[7974,953]],[[8095,8095],\"mapped\",[7975,953]],[[8096,8096],\"mapped\",[8032,953]],[[8097,8097],\"mapped\",[8033,953]],[[8098,8098],\"mapped\",[8034,953]],[[8099,8099],\"mapped\",[8035,953]],[[8100,8100],\"mapped\",[8036,953]],[[8101,8101],\"mapped\",[8037,953]],[[8102,8102],\"mapped\",[8038,953]],[[8103,8103],\"mapped\",[8039,953]],[[8104,8104],\"mapped\",[8032,953]],[[8105,8105],\"mapped\",[8033,953]],[[8106,8106],\"mapped\",[8034,953]],[[8107,8107],\"mapped\",[8035,953]],[[8108,8108],\"mapped\",[8036,953]],[[8109,8109],\"mapped\",[8037,953]],[[8110,8110],\"mapped\",[8038,953]],[[8111,8111],\"mapped\",[8039,953]],[[8112,8113],\"valid\"],[[8114,8114],\"mapped\",[8048,953]],[[8115,8115],\"mapped\",[945,953]],[[8116,8116],\"mapped\",[940,953]],[[8117,8117],\"disallowed\"],[[8118,8118],\"valid\"],[[8119,8119],\"mapped\",[8118,953]],[[8120,8120],\"mapped\",[8112]],[[8121,8121],\"mapped\",[8113]],[[8122,8122],\"mapped\",[8048]],[[8123,8123],\"mapped\",[940]],[[8124,8124],\"mapped\",[945,953]],[[8125,8125],\"disallowed_STD3_mapped\",[32,787]],[[8126,8126],\"mapped\",[953]],[[8127,8127],\"disallowed_STD3_mapped\",[32,787]],[[8128,8128],\"disallowed_STD3_mapped\",[32,834]],[[8129,8129],\"disallowed_STD3_mapped\",[32,776,834]],[[8130,8130],\"mapped\",[8052,953]],[[8131,8131],\"mapped\",[951,953]],[[8132,8132],\"mapped\",[942,953]],[[8133,8133],\"disallowed\"],[[8134,8134],\"valid\"],[[8135,8135],\"mapped\",[8134,953]],[[8136,8136],\"mapped\",[8050]],[[8137,8137],\"mapped\",[941]],[[8138,8138],\"mapped\",[8052]],[[8139,8139],\"mapped\",[942]],[[8140,8140],\"mapped\",[951,953]],[[8141,8141],\"disallowed_STD3_mapped\",[32,787,768]],[[8142,8142],\"disallowed_STD3_mapped\",[32,787,769]],[[8143,8143],\"disallowed_STD3_mapped\",[32,787,834]],[[8144,8146],\"valid\"],[[8147,8147],\"mapped\",[912]],[[8148,8149],\"disallowed\"],[[8150,8151],\"valid\"],[[8152,8152],\"mapped\",[8144]],[[8153,8153],\"mapped\",[8145]],[[8154,8154],\"mapped\",[8054]],[[8155,8155],\"mapped\",[943]],[[8156,8156],\"disallowed\"],[[8157,8157],\"disallowed_STD3_mapped\",[32,788,768]],[[8158,8158],\"disallowed_STD3_mapped\",[32,788,769]],[[8159,8159],\"disallowed_STD3_mapped\",[32,788,834]],[[8160,8162],\"valid\"],[[8163,8163],\"mapped\",[944]],[[8164,8167],\"valid\"],[[8168,8168],\"mapped\",[8160]],[[8169,8169],\"mapped\",[8161]],[[8170,8170],\"mapped\",[8058]],[[8171,8171],\"mapped\",[973]],[[8172,8172],\"mapped\",[8165]],[[8173,8173],\"disallowed_STD3_mapped\",[32,776,768]],[[8174,8174],\"disallowed_STD3_mapped\",[32,776,769]],[[8175,8175],\"disallowed_STD3_mapped\",[96]],[[8176,8177],\"disallowed\"],[[8178,8178],\"mapped\",[8060,953]],[[8179,8179],\"mapped\",[969,953]],[[8180,8180],\"mapped\",[974,953]],[[8181,8181],\"disallowed\"],[[8182,8182],\"valid\"],[[8183,8183],\"mapped\",[8182,953]],[[8184,8184],\"mapped\",[8056]],[[8185,8185],\"mapped\",[972]],[[8186,8186],\"mapped\",[8060]],[[8187,8187],\"mapped\",[974]],[[8188,8188],\"mapped\",[969,953]],[[8189,8189],\"disallowed_STD3_mapped\",[32,769]],[[8190,8190],\"disallowed_STD3_mapped\",[32,788]],[[8191,8191],\"disallowed\"],[[8192,8202],\"disallowed_STD3_mapped\",[32]],[[8203,8203],\"ignored\"],[[8204,8205],\"deviation\",[]],[[8206,8207],\"disallowed\"],[[8208,8208],\"valid\",[],\"NV8\"],[[8209,8209],\"mapped\",[8208]],[[8210,8214],\"valid\",[],\"NV8\"],[[8215,8215],\"disallowed_STD3_mapped\",[32,819]],[[8216,8227],\"valid\",[],\"NV8\"],[[8228,8230],\"disallowed\"],[[8231,8231],\"valid\",[],\"NV8\"],[[8232,8238],\"disallowed\"],[[8239,8239],\"disallowed_STD3_mapped\",[32]],[[8240,8242],\"valid\",[],\"NV8\"],[[8243,8243],\"mapped\",[8242,8242]],[[8244,8244],\"mapped\",[8242,8242,8242]],[[8245,8245],\"valid\",[],\"NV8\"],[[8246,8246],\"mapped\",[8245,8245]],[[8247,8247],\"mapped\",[8245,8245,8245]],[[8248,8251],\"valid\",[],\"NV8\"],[[8252,8252],\"disallowed_STD3_mapped\",[33,33]],[[8253,8253],\"valid\",[],\"NV8\"],[[8254,8254],\"disallowed_STD3_mapped\",[32,773]],[[8255,8262],\"valid\",[],\"NV8\"],[[8263,8263],\"disallowed_STD3_mapped\",[63,63]],[[8264,8264],\"disallowed_STD3_mapped\",[63,33]],[[8265,8265],\"disallowed_STD3_mapped\",[33,63]],[[8266,8269],\"valid\",[],\"NV8\"],[[8270,8274],\"valid\",[],\"NV8\"],[[8275,8276],\"valid\",[],\"NV8\"],[[8277,8278],\"valid\",[],\"NV8\"],[[8279,8279],\"mapped\",[8242,8242,8242,8242]],[[8280,8286],\"valid\",[],\"NV8\"],[[8287,8287],\"disallowed_STD3_mapped\",[32]],[[8288,8288],\"ignored\"],[[8289,8291],\"disallowed\"],[[8292,8292],\"ignored\"],[[8293,8293],\"disallowed\"],[[8294,8297],\"disallowed\"],[[8298,8303],\"disallowed\"],[[8304,8304],\"mapped\",[48]],[[8305,8305],\"mapped\",[105]],[[8306,8307],\"disallowed\"],[[8308,8308],\"mapped\",[52]],[[8309,8309],\"mapped\",[53]],[[8310,8310],\"mapped\",[54]],[[8311,8311],\"mapped\",[55]],[[8312,8312],\"mapped\",[56]],[[8313,8313],\"mapped\",[57]],[[8314,8314],\"disallowed_STD3_mapped\",[43]],[[8315,8315],\"mapped\",[8722]],[[8316,8316],\"disallowed_STD3_mapped\",[61]],[[8317,8317],\"disallowed_STD3_mapped\",[40]],[[8318,8318],\"disallowed_STD3_mapped\",[41]],[[8319,8319],\"mapped\",[110]],[[8320,8320],\"mapped\",[48]],[[8321,8321],\"mapped\",[49]],[[8322,8322],\"mapped\",[50]],[[8323,8323],\"mapped\",[51]],[[8324,8324],\"mapped\",[52]],[[8325,8325],\"mapped\",[53]],[[8326,8326],\"mapped\",[54]],[[8327,8327],\"mapped\",[55]],[[8328,8328],\"mapped\",[56]],[[8329,8329],\"mapped\",[57]],[[8330,8330],\"disallowed_STD3_mapped\",[43]],[[8331,8331],\"mapped\",[8722]],[[8332,8332],\"disallowed_STD3_mapped\",[61]],[[8333,8333],\"disallowed_STD3_mapped\",[40]],[[8334,8334],\"disallowed_STD3_mapped\",[41]],[[8335,8335],\"disallowed\"],[[8336,8336],\"mapped\",[97]],[[8337,8337],\"mapped\",[101]],[[8338,8338],\"mapped\",[111]],[[8339,8339],\"mapped\",[120]],[[8340,8340],\"mapped\",[601]],[[8341,8341],\"mapped\",[104]],[[8342,8342],\"mapped\",[107]],[[8343,8343],\"mapped\",[108]],[[8344,8344],\"mapped\",[109]],[[8345,8345],\"mapped\",[110]],[[8346,8346],\"mapped\",[112]],[[8347,8347],\"mapped\",[115]],[[8348,8348],\"mapped\",[116]],[[8349,8351],\"disallowed\"],[[8352,8359],\"valid\",[],\"NV8\"],[[8360,8360],\"mapped\",[114,115]],[[8361,8362],\"valid\",[],\"NV8\"],[[8363,8363],\"valid\",[],\"NV8\"],[[8364,8364],\"valid\",[],\"NV8\"],[[8365,8367],\"valid\",[],\"NV8\"],[[8368,8369],\"valid\",[],\"NV8\"],[[8370,8373],\"valid\",[],\"NV8\"],[[8374,8376],\"valid\",[],\"NV8\"],[[8377,8377],\"valid\",[],\"NV8\"],[[8378,8378],\"valid\",[],\"NV8\"],[[8379,8381],\"valid\",[],\"NV8\"],[[8382,8382],\"valid\",[],\"NV8\"],[[8383,8399],\"disallowed\"],[[8400,8417],\"valid\",[],\"NV8\"],[[8418,8419],\"valid\",[],\"NV8\"],[[8420,8426],\"valid\",[],\"NV8\"],[[8427,8427],\"valid\",[],\"NV8\"],[[8428,8431],\"valid\",[],\"NV8\"],[[8432,8432],\"valid\",[],\"NV8\"],[[8433,8447],\"disallowed\"],[[8448,8448],\"disallowed_STD3_mapped\",[97,47,99]],[[8449,8449],\"disallowed_STD3_mapped\",[97,47,115]],[[8450,8450],\"mapped\",[99]],[[8451,8451],\"mapped\",[176,99]],[[8452,8452],\"valid\",[],\"NV8\"],[[8453,8453],\"disallowed_STD3_mapped\",[99,47,111]],[[8454,8454],\"disallowed_STD3_mapped\",[99,47,117]],[[8455,8455],\"mapped\",[603]],[[8456,8456],\"valid\",[],\"NV8\"],[[8457,8457],\"mapped\",[176,102]],[[8458,8458],\"mapped\",[103]],[[8459,8462],\"mapped\",[104]],[[8463,8463],\"mapped\",[295]],[[8464,8465],\"mapped\",[105]],[[8466,8467],\"mapped\",[108]],[[8468,8468],\"valid\",[],\"NV8\"],[[8469,8469],\"mapped\",[110]],[[8470,8470],\"mapped\",[110,111]],[[8471,8472],\"valid\",[],\"NV8\"],[[8473,8473],\"mapped\",[112]],[[8474,8474],\"mapped\",[113]],[[8475,8477],\"mapped\",[114]],[[8478,8479],\"valid\",[],\"NV8\"],[[8480,8480],\"mapped\",[115,109]],[[8481,8481],\"mapped\",[116,101,108]],[[8482,8482],\"mapped\",[116,109]],[[8483,8483],\"valid\",[],\"NV8\"],[[8484,8484],\"mapped\",[122]],[[8485,8485],\"valid\",[],\"NV8\"],[[8486,8486],\"mapped\",[969]],[[8487,8487],\"valid\",[],\"NV8\"],[[8488,8488],\"mapped\",[122]],[[8489,8489],\"valid\",[],\"NV8\"],[[8490,8490],\"mapped\",[107]],[[8491,8491],\"mapped\",[229]],[[8492,8492],\"mapped\",[98]],[[8493,8493],\"mapped\",[99]],[[8494,8494],\"valid\",[],\"NV8\"],[[8495,8496],\"mapped\",[101]],[[8497,8497],\"mapped\",[102]],[[8498,8498],\"disallowed\"],[[8499,8499],\"mapped\",[109]],[[8500,8500],\"mapped\",[111]],[[8501,8501],\"mapped\",[1488]],[[8502,8502],\"mapped\",[1489]],[[8503,8503],\"mapped\",[1490]],[[8504,8504],\"mapped\",[1491]],[[8505,8505],\"mapped\",[105]],[[8506,8506],\"valid\",[],\"NV8\"],[[8507,8507],\"mapped\",[102,97,120]],[[8508,8508],\"mapped\",[960]],[[8509,8510],\"mapped\",[947]],[[8511,8511],\"mapped\",[960]],[[8512,8512],\"mapped\",[8721]],[[8513,8516],\"valid\",[],\"NV8\"],[[8517,8518],\"mapped\",[100]],[[8519,8519],\"mapped\",[101]],[[8520,8520],\"mapped\",[105]],[[8521,8521],\"mapped\",[106]],[[8522,8523],\"valid\",[],\"NV8\"],[[8524,8524],\"valid\",[],\"NV8\"],[[8525,8525],\"valid\",[],\"NV8\"],[[8526,8526],\"valid\"],[[8527,8527],\"valid\",[],\"NV8\"],[[8528,8528],\"mapped\",[49,8260,55]],[[8529,8529],\"mapped\",[49,8260,57]],[[8530,8530],\"mapped\",[49,8260,49,48]],[[8531,8531],\"mapped\",[49,8260,51]],[[8532,8532],\"mapped\",[50,8260,51]],[[8533,8533],\"mapped\",[49,8260,53]],[[8534,8534],\"mapped\",[50,8260,53]],[[8535,8535],\"mapped\",[51,8260,53]],[[8536,8536],\"mapped\",[52,8260,53]],[[8537,8537],\"mapped\",[49,8260,54]],[[8538,8538],\"mapped\",[53,8260,54]],[[8539,8539],\"mapped\",[49,8260,56]],[[8540,8540],\"mapped\",[51,8260,56]],[[8541,8541],\"mapped\",[53,8260,56]],[[8542,8542],\"mapped\",[55,8260,56]],[[8543,8543],\"mapped\",[49,8260]],[[8544,8544],\"mapped\",[105]],[[8545,8545],\"mapped\",[105,105]],[[8546,8546],\"mapped\",[105,105,105]],[[8547,8547],\"mapped\",[105,118]],[[8548,8548],\"mapped\",[118]],[[8549,8549],\"mapped\",[118,105]],[[8550,8550],\"mapped\",[118,105,105]],[[8551,8551],\"mapped\",[118,105,105,105]],[[8552,8552],\"mapped\",[105,120]],[[8553,8553],\"mapped\",[120]],[[8554,8554],\"mapped\",[120,105]],[[8555,8555],\"mapped\",[120,105,105]],[[8556,8556],\"mapped\",[108]],[[8557,8557],\"mapped\",[99]],[[8558,8558],\"mapped\",[100]],[[8559,8559],\"mapped\",[109]],[[8560,8560],\"mapped\",[105]],[[8561,8561],\"mapped\",[105,105]],[[8562,8562],\"mapped\",[105,105,105]],[[8563,8563],\"mapped\",[105,118]],[[8564,8564],\"mapped\",[118]],[[8565,8565],\"mapped\",[118,105]],[[8566,8566],\"mapped\",[118,105,105]],[[8567,8567],\"mapped\",[118,105,105,105]],[[8568,8568],\"mapped\",[105,120]],[[8569,8569],\"mapped\",[120]],[[8570,8570],\"mapped\",[120,105]],[[8571,8571],\"mapped\",[120,105,105]],[[8572,8572],\"mapped\",[108]],[[8573,8573],\"mapped\",[99]],[[8574,8574],\"mapped\",[100]],[[8575,8575],\"mapped\",[109]],[[8576,8578],\"valid\",[],\"NV8\"],[[8579,8579],\"disallowed\"],[[8580,8580],\"valid\"],[[8581,8584],\"valid\",[],\"NV8\"],[[8585,8585],\"mapped\",[48,8260,51]],[[8586,8587],\"valid\",[],\"NV8\"],[[8588,8591],\"disallowed\"],[[8592,8682],\"valid\",[],\"NV8\"],[[8683,8691],\"valid\",[],\"NV8\"],[[8692,8703],\"valid\",[],\"NV8\"],[[8704,8747],\"valid\",[],\"NV8\"],[[8748,8748],\"mapped\",[8747,8747]],[[8749,8749],\"mapped\",[8747,8747,8747]],[[8750,8750],\"valid\",[],\"NV8\"],[[8751,8751],\"mapped\",[8750,8750]],[[8752,8752],\"mapped\",[8750,8750,8750]],[[8753,8799],\"valid\",[],\"NV8\"],[[8800,8800],\"disallowed_STD3_valid\"],[[8801,8813],\"valid\",[],\"NV8\"],[[8814,8815],\"disallowed_STD3_valid\"],[[8816,8945],\"valid\",[],\"NV8\"],[[8946,8959],\"valid\",[],\"NV8\"],[[8960,8960],\"valid\",[],\"NV8\"],[[8961,8961],\"valid\",[],\"NV8\"],[[8962,9000],\"valid\",[],\"NV8\"],[[9001,9001],\"mapped\",[12296]],[[9002,9002],\"mapped\",[12297]],[[9003,9082],\"valid\",[],\"NV8\"],[[9083,9083],\"valid\",[],\"NV8\"],[[9084,9084],\"valid\",[],\"NV8\"],[[9085,9114],\"valid\",[],\"NV8\"],[[9115,9166],\"valid\",[],\"NV8\"],[[9167,9168],\"valid\",[],\"NV8\"],[[9169,9179],\"valid\",[],\"NV8\"],[[9180,9191],\"valid\",[],\"NV8\"],[[9192,9192],\"valid\",[],\"NV8\"],[[9193,9203],\"valid\",[],\"NV8\"],[[9204,9210],\"valid\",[],\"NV8\"],[[9211,9215],\"disallowed\"],[[9216,9252],\"valid\",[],\"NV8\"],[[9253,9254],\"valid\",[],\"NV8\"],[[9255,9279],\"disallowed\"],[[9280,9290],\"valid\",[],\"NV8\"],[[9291,9311],\"disallowed\"],[[9312,9312],\"mapped\",[49]],[[9313,9313],\"mapped\",[50]],[[9314,9314],\"mapped\",[51]],[[9315,9315],\"mapped\",[52]],[[9316,9316],\"mapped\",[53]],[[9317,9317],\"mapped\",[54]],[[9318,9318],\"mapped\",[55]],[[9319,9319],\"mapped\",[56]],[[9320,9320],\"mapped\",[57]],[[9321,9321],\"mapped\",[49,48]],[[9322,9322],\"mapped\",[49,49]],[[9323,9323],\"mapped\",[49,50]],[[9324,9324],\"mapped\",[49,51]],[[9325,9325],\"mapped\",[49,52]],[[9326,9326],\"mapped\",[49,53]],[[9327,9327],\"mapped\",[49,54]],[[9328,9328],\"mapped\",[49,55]],[[9329,9329],\"mapped\",[49,56]],[[9330,9330],\"mapped\",[49,57]],[[9331,9331],\"mapped\",[50,48]],[[9332,9332],\"disallowed_STD3_mapped\",[40,49,41]],[[9333,9333],\"disallowed_STD3_mapped\",[40,50,41]],[[9334,9334],\"disallowed_STD3_mapped\",[40,51,41]],[[9335,9335],\"disallowed_STD3_mapped\",[40,52,41]],[[9336,9336],\"disallowed_STD3_mapped\",[40,53,41]],[[9337,9337],\"disallowed_STD3_mapped\",[40,54,41]],[[9338,9338],\"disallowed_STD3_mapped\",[40,55,41]],[[9339,9339],\"disallowed_STD3_mapped\",[40,56,41]],[[9340,9340],\"disallowed_STD3_mapped\",[40,57,41]],[[9341,9341],\"disallowed_STD3_mapped\",[40,49,48,41]],[[9342,9342],\"disallowed_STD3_mapped\",[40,49,49,41]],[[9343,9343],\"disallowed_STD3_mapped\",[40,49,50,41]],[[9344,9344],\"disallowed_STD3_mapped\",[40,49,51,41]],[[9345,9345],\"disallowed_STD3_mapped\",[40,49,52,41]],[[9346,9346],\"disallowed_STD3_mapped\",[40,49,53,41]],[[9347,9347],\"disallowed_STD3_mapped\",[40,49,54,41]],[[9348,9348],\"disallowed_STD3_mapped\",[40,49,55,41]],[[9349,9349],\"disallowed_STD3_mapped\",[40,49,56,41]],[[9350,9350],\"disallowed_STD3_mapped\",[40,49,57,41]],[[9351,9351],\"disallowed_STD3_mapped\",[40,50,48,41]],[[9352,9371],\"disallowed\"],[[9372,9372],\"disallowed_STD3_mapped\",[40,97,41]],[[9373,9373],\"disallowed_STD3_mapped\",[40,98,41]],[[9374,9374],\"disallowed_STD3_mapped\",[40,99,41]],[[9375,9375],\"disallowed_STD3_mapped\",[40,100,41]],[[9376,9376],\"disallowed_STD3_mapped\",[40,101,41]],[[9377,9377],\"disallowed_STD3_mapped\",[40,102,41]],[[9378,9378],\"disallowed_STD3_mapped\",[40,103,41]],[[9379,9379],\"disallowed_STD3_mapped\",[40,104,41]],[[9380,9380],\"disallowed_STD3_mapped\",[40,105,41]],[[9381,9381],\"disallowed_STD3_mapped\",[40,106,41]],[[9382,9382],\"disallowed_STD3_mapped\",[40,107,41]],[[9383,9383],\"disallowed_STD3_mapped\",[40,108,41]],[[9384,9384],\"disallowed_STD3_mapped\",[40,109,41]],[[9385,9385],\"disallowed_STD3_mapped\",[40,110,41]],[[9386,9386],\"disallowed_STD3_mapped\",[40,111,41]],[[9387,9387],\"disallowed_STD3_mapped\",[40,112,41]],[[9388,9388],\"disallowed_STD3_mapped\",[40,113,41]],[[9389,9389],\"disallowed_STD3_mapped\",[40,114,41]],[[9390,9390],\"disallowed_STD3_mapped\",[40,115,41]],[[9391,9391],\"disallowed_STD3_mapped\",[40,116,41]],[[9392,9392],\"disallowed_STD3_mapped\",[40,117,41]],[[9393,9393],\"disallowed_STD3_mapped\",[40,118,41]],[[9394,9394],\"disallowed_STD3_mapped\",[40,119,41]],[[9395,9395],\"disallowed_STD3_mapped\",[40,120,41]],[[9396,9396],\"disallowed_STD3_mapped\",[40,121,41]],[[9397,9397],\"disallowed_STD3_mapped\",[40,122,41]],[[9398,9398],\"mapped\",[97]],[[9399,9399],\"mapped\",[98]],[[9400,9400],\"mapped\",[99]],[[9401,9401],\"mapped\",[100]],[[9402,9402],\"mapped\",[101]],[[9403,9403],\"mapped\",[102]],[[9404,9404],\"mapped\",[103]],[[9405,9405],\"mapped\",[104]],[[9406,9406],\"mapped\",[105]],[[9407,9407],\"mapped\",[106]],[[9408,9408],\"mapped\",[107]],[[9409,9409],\"mapped\",[108]],[[9410,9410],\"mapped\",[109]],[[9411,9411],\"mapped\",[110]],[[9412,9412],\"mapped\",[111]],[[9413,9413],\"mapped\",[112]],[[9414,9414],\"mapped\",[113]],[[9415,9415],\"mapped\",[114]],[[9416,9416],\"mapped\",[115]],[[9417,9417],\"mapped\",[116]],[[9418,9418],\"mapped\",[117]],[[9419,9419],\"mapped\",[118]],[[9420,9420],\"mapped\",[119]],[[9421,9421],\"mapped\",[120]],[[9422,9422],\"mapped\",[121]],[[9423,9423],\"mapped\",[122]],[[9424,9424],\"mapped\",[97]],[[9425,9425],\"mapped\",[98]],[[9426,9426],\"mapped\",[99]],[[9427,9427],\"mapped\",[100]],[[9428,9428],\"mapped\",[101]],[[9429,9429],\"mapped\",[102]],[[9430,9430],\"mapped\",[103]],[[9431,9431],\"mapped\",[104]],[[9432,9432],\"mapped\",[105]],[[9433,9433],\"mapped\",[106]],[[9434,9434],\"mapped\",[107]],[[9435,9435],\"mapped\",[108]],[[9436,9436],\"mapped\",[109]],[[9437,9437],\"mapped\",[110]],[[9438,9438],\"mapped\",[111]],[[9439,9439],\"mapped\",[112]],[[9440,9440],\"mapped\",[113]],[[9441,9441],\"mapped\",[114]],[[9442,9442],\"mapped\",[115]],[[9443,9443],\"mapped\",[116]],[[9444,9444],\"mapped\",[117]],[[9445,9445],\"mapped\",[118]],[[9446,9446],\"mapped\",[119]],[[9447,9447],\"mapped\",[120]],[[9448,9448],\"mapped\",[121]],[[9449,9449],\"mapped\",[122]],[[9450,9450],\"mapped\",[48]],[[9451,9470],\"valid\",[],\"NV8\"],[[9471,9471],\"valid\",[],\"NV8\"],[[9472,9621],\"valid\",[],\"NV8\"],[[9622,9631],\"valid\",[],\"NV8\"],[[9632,9711],\"valid\",[],\"NV8\"],[[9712,9719],\"valid\",[],\"NV8\"],[[9720,9727],\"valid\",[],\"NV8\"],[[9728,9747],\"valid\",[],\"NV8\"],[[9748,9749],\"valid\",[],\"NV8\"],[[9750,9751],\"valid\",[],\"NV8\"],[[9752,9752],\"valid\",[],\"NV8\"],[[9753,9753],\"valid\",[],\"NV8\"],[[9754,9839],\"valid\",[],\"NV8\"],[[9840,9841],\"valid\",[],\"NV8\"],[[9842,9853],\"valid\",[],\"NV8\"],[[9854,9855],\"valid\",[],\"NV8\"],[[9856,9865],\"valid\",[],\"NV8\"],[[9866,9873],\"valid\",[],\"NV8\"],[[9874,9884],\"valid\",[],\"NV8\"],[[9885,9885],\"valid\",[],\"NV8\"],[[9886,9887],\"valid\",[],\"NV8\"],[[9888,9889],\"valid\",[],\"NV8\"],[[9890,9905],\"valid\",[],\"NV8\"],[[9906,9906],\"valid\",[],\"NV8\"],[[9907,9916],\"valid\",[],\"NV8\"],[[9917,9919],\"valid\",[],\"NV8\"],[[9920,9923],\"valid\",[],\"NV8\"],[[9924,9933],\"valid\",[],\"NV8\"],[[9934,9934],\"valid\",[],\"NV8\"],[[9935,9953],\"valid\",[],\"NV8\"],[[9954,9954],\"valid\",[],\"NV8\"],[[9955,9955],\"valid\",[],\"NV8\"],[[9956,9959],\"valid\",[],\"NV8\"],[[9960,9983],\"valid\",[],\"NV8\"],[[9984,9984],\"valid\",[],\"NV8\"],[[9985,9988],\"valid\",[],\"NV8\"],[[9989,9989],\"valid\",[],\"NV8\"],[[9990,9993],\"valid\",[],\"NV8\"],[[9994,9995],\"valid\",[],\"NV8\"],[[9996,10023],\"valid\",[],\"NV8\"],[[10024,10024],\"valid\",[],\"NV8\"],[[10025,10059],\"valid\",[],\"NV8\"],[[10060,10060],\"valid\",[],\"NV8\"],[[10061,10061],\"valid\",[],\"NV8\"],[[10062,10062],\"valid\",[],\"NV8\"],[[10063,10066],\"valid\",[],\"NV8\"],[[10067,10069],\"valid\",[],\"NV8\"],[[10070,10070],\"valid\",[],\"NV8\"],[[10071,10071],\"valid\",[],\"NV8\"],[[10072,10078],\"valid\",[],\"NV8\"],[[10079,10080],\"valid\",[],\"NV8\"],[[10081,10087],\"valid\",[],\"NV8\"],[[10088,10101],\"valid\",[],\"NV8\"],[[10102,10132],\"valid\",[],\"NV8\"],[[10133,10135],\"valid\",[],\"NV8\"],[[10136,10159],\"valid\",[],\"NV8\"],[[10160,10160],\"valid\",[],\"NV8\"],[[10161,10174],\"valid\",[],\"NV8\"],[[10175,10175],\"valid\",[],\"NV8\"],[[10176,10182],\"valid\",[],\"NV8\"],[[10183,10186],\"valid\",[],\"NV8\"],[[10187,10187],\"valid\",[],\"NV8\"],[[10188,10188],\"valid\",[],\"NV8\"],[[10189,10189],\"valid\",[],\"NV8\"],[[10190,10191],\"valid\",[],\"NV8\"],[[10192,10219],\"valid\",[],\"NV8\"],[[10220,10223],\"valid\",[],\"NV8\"],[[10224,10239],\"valid\",[],\"NV8\"],[[10240,10495],\"valid\",[],\"NV8\"],[[10496,10763],\"valid\",[],\"NV8\"],[[10764,10764],\"mapped\",[8747,8747,8747,8747]],[[10765,10867],\"valid\",[],\"NV8\"],[[10868,10868],\"disallowed_STD3_mapped\",[58,58,61]],[[10869,10869],\"disallowed_STD3_mapped\",[61,61]],[[10870,10870],\"disallowed_STD3_mapped\",[61,61,61]],[[10871,10971],\"valid\",[],\"NV8\"],[[10972,10972],\"mapped\",[10973,824]],[[10973,11007],\"valid\",[],\"NV8\"],[[11008,11021],\"valid\",[],\"NV8\"],[[11022,11027],\"valid\",[],\"NV8\"],[[11028,11034],\"valid\",[],\"NV8\"],[[11035,11039],\"valid\",[],\"NV8\"],[[11040,11043],\"valid\",[],\"NV8\"],[[11044,11084],\"valid\",[],\"NV8\"],[[11085,11087],\"valid\",[],\"NV8\"],[[11088,11092],\"valid\",[],\"NV8\"],[[11093,11097],\"valid\",[],\"NV8\"],[[11098,11123],\"valid\",[],\"NV8\"],[[11124,11125],\"disallowed\"],[[11126,11157],\"valid\",[],\"NV8\"],[[11158,11159],\"disallowed\"],[[11160,11193],\"valid\",[],\"NV8\"],[[11194,11196],\"disallowed\"],[[11197,11208],\"valid\",[],\"NV8\"],[[11209,11209],\"disallowed\"],[[11210,11217],\"valid\",[],\"NV8\"],[[11218,11243],\"disallowed\"],[[11244,11247],\"valid\",[],\"NV8\"],[[11248,11263],\"disallowed\"],[[11264,11264],\"mapped\",[11312]],[[11265,11265],\"mapped\",[11313]],[[11266,11266],\"mapped\",[11314]],[[11267,11267],\"mapped\",[11315]],[[11268,11268],\"mapped\",[11316]],[[11269,11269],\"mapped\",[11317]],[[11270,11270],\"mapped\",[11318]],[[11271,11271],\"mapped\",[11319]],[[11272,11272],\"mapped\",[11320]],[[11273,11273],\"mapped\",[11321]],[[11274,11274],\"mapped\",[11322]],[[11275,11275],\"mapped\",[11323]],[[11276,11276],\"mapped\",[11324]],[[11277,11277],\"mapped\",[11325]],[[11278,11278],\"mapped\",[11326]],[[11279,11279],\"mapped\",[11327]],[[11280,11280],\"mapped\",[11328]],[[11281,11281],\"mapped\",[11329]],[[11282,11282],\"mapped\",[11330]],[[11283,11283],\"mapped\",[11331]],[[11284,11284],\"mapped\",[11332]],[[11285,11285],\"mapped\",[11333]],[[11286,11286],\"mapped\",[11334]],[[11287,11287],\"mapped\",[11335]],[[11288,11288],\"mapped\",[11336]],[[11289,11289],\"mapped\",[11337]],[[11290,11290],\"mapped\",[11338]],[[11291,11291],\"mapped\",[11339]],[[11292,11292],\"mapped\",[11340]],[[11293,11293],\"mapped\",[11341]],[[11294,11294],\"mapped\",[11342]],[[11295,11295],\"mapped\",[11343]],[[11296,11296],\"mapped\",[11344]],[[11297,11297],\"mapped\",[11345]],[[11298,11298],\"mapped\",[11346]],[[11299,11299],\"mapped\",[11347]],[[11300,11300],\"mapped\",[11348]],[[11301,11301],\"mapped\",[11349]],[[11302,11302],\"mapped\",[11350]],[[11303,11303],\"mapped\",[11351]],[[11304,11304],\"mapped\",[11352]],[[11305,11305],\"mapped\",[11353]],[[11306,11306],\"mapped\",[11354]],[[11307,11307],\"mapped\",[11355]],[[11308,11308],\"mapped\",[11356]],[[11309,11309],\"mapped\",[11357]],[[11310,11310],\"mapped\",[11358]],[[11311,11311],\"disallowed\"],[[11312,11358],\"valid\"],[[11359,11359],\"disallowed\"],[[11360,11360],\"mapped\",[11361]],[[11361,11361],\"valid\"],[[11362,11362],\"mapped\",[619]],[[11363,11363],\"mapped\",[7549]],[[11364,11364],\"mapped\",[637]],[[11365,11366],\"valid\"],[[11367,11367],\"mapped\",[11368]],[[11368,11368],\"valid\"],[[11369,11369],\"mapped\",[11370]],[[11370,11370],\"valid\"],[[11371,11371],\"mapped\",[11372]],[[11372,11372],\"valid\"],[[11373,11373],\"mapped\",[593]],[[11374,11374],\"mapped\",[625]],[[11375,11375],\"mapped\",[592]],[[11376,11376],\"mapped\",[594]],[[11377,11377],\"valid\"],[[11378,11378],\"mapped\",[11379]],[[11379,11379],\"valid\"],[[11380,11380],\"valid\"],[[11381,11381],\"mapped\",[11382]],[[11382,11383],\"valid\"],[[11384,11387],\"valid\"],[[11388,11388],\"mapped\",[106]],[[11389,11389],\"mapped\",[118]],[[11390,11390],\"mapped\",[575]],[[11391,11391],\"mapped\",[576]],[[11392,11392],\"mapped\",[11393]],[[11393,11393],\"valid\"],[[11394,11394],\"mapped\",[11395]],[[11395,11395],\"valid\"],[[11396,11396],\"mapped\",[11397]],[[11397,11397],\"valid\"],[[11398,11398],\"mapped\",[11399]],[[11399,11399],\"valid\"],[[11400,11400],\"mapped\",[11401]],[[11401,11401],\"valid\"],[[11402,11402],\"mapped\",[11403]],[[11403,11403],\"valid\"],[[11404,11404],\"mapped\",[11405]],[[11405,11405],\"valid\"],[[11406,11406],\"mapped\",[11407]],[[11407,11407],\"valid\"],[[11408,11408],\"mapped\",[11409]],[[11409,11409],\"valid\"],[[11410,11410],\"mapped\",[11411]],[[11411,11411],\"valid\"],[[11412,11412],\"mapped\",[11413]],[[11413,11413],\"valid\"],[[11414,11414],\"mapped\",[11415]],[[11415,11415],\"valid\"],[[11416,11416],\"mapped\",[11417]],[[11417,11417],\"valid\"],[[11418,11418],\"mapped\",[11419]],[[11419,11419],\"valid\"],[[11420,11420],\"mapped\",[11421]],[[11421,11421],\"valid\"],[[11422,11422],\"mapped\",[11423]],[[11423,11423],\"valid\"],[[11424,11424],\"mapped\",[11425]],[[11425,11425],\"valid\"],[[11426,11426],\"mapped\",[11427]],[[11427,11427],\"valid\"],[[11428,11428],\"mapped\",[11429]],[[11429,11429],\"valid\"],[[11430,11430],\"mapped\",[11431]],[[11431,11431],\"valid\"],[[11432,11432],\"mapped\",[11433]],[[11433,11433],\"valid\"],[[11434,11434],\"mapped\",[11435]],[[11435,11435],\"valid\"],[[11436,11436],\"mapped\",[11437]],[[11437,11437],\"valid\"],[[11438,11438],\"mapped\",[11439]],[[11439,11439],\"valid\"],[[11440,11440],\"mapped\",[11441]],[[11441,11441],\"valid\"],[[11442,11442],\"mapped\",[11443]],[[11443,11443],\"valid\"],[[11444,11444],\"mapped\",[11445]],[[11445,11445],\"valid\"],[[11446,11446],\"mapped\",[11447]],[[11447,11447],\"valid\"],[[11448,11448],\"mapped\",[11449]],[[11449,11449],\"valid\"],[[11450,11450],\"mapped\",[11451]],[[11451,11451],\"valid\"],[[11452,11452],\"mapped\",[11453]],[[11453,11453],\"valid\"],[[11454,11454],\"mapped\",[11455]],[[11455,11455],\"valid\"],[[11456,11456],\"mapped\",[11457]],[[11457,11457],\"valid\"],[[11458,11458],\"mapped\",[11459]],[[11459,11459],\"valid\"],[[11460,11460],\"mapped\",[11461]],[[11461,11461],\"valid\"],[[11462,11462],\"mapped\",[11463]],[[11463,11463],\"valid\"],[[11464,11464],\"mapped\",[11465]],[[11465,11465],\"valid\"],[[11466,11466],\"mapped\",[11467]],[[11467,11467],\"valid\"],[[11468,11468],\"mapped\",[11469]],[[11469,11469],\"valid\"],[[11470,11470],\"mapped\",[11471]],[[11471,11471],\"valid\"],[[11472,11472],\"mapped\",[11473]],[[11473,11473],\"valid\"],[[11474,11474],\"mapped\",[11475]],[[11475,11475],\"valid\"],[[11476,11476],\"mapped\",[11477]],[[11477,11477],\"valid\"],[[11478,11478],\"mapped\",[11479]],[[11479,11479],\"valid\"],[[11480,11480],\"mapped\",[11481]],[[11481,11481],\"valid\"],[[11482,11482],\"mapped\",[11483]],[[11483,11483],\"valid\"],[[11484,11484],\"mapped\",[11485]],[[11485,11485],\"valid\"],[[11486,11486],\"mapped\",[11487]],[[11487,11487],\"valid\"],[[11488,11488],\"mapped\",[11489]],[[11489,11489],\"valid\"],[[11490,11490],\"mapped\",[11491]],[[11491,11492],\"valid\"],[[11493,11498],\"valid\",[],\"NV8\"],[[11499,11499],\"mapped\",[11500]],[[11500,11500],\"valid\"],[[11501,11501],\"mapped\",[11502]],[[11502,11505],\"valid\"],[[11506,11506],\"mapped\",[11507]],[[11507,11507],\"valid\"],[[11508,11512],\"disallowed\"],[[11513,11519],\"valid\",[],\"NV8\"],[[11520,11557],\"valid\"],[[11558,11558],\"disallowed\"],[[11559,11559],\"valid\"],[[11560,11564],\"disallowed\"],[[11565,11565],\"valid\"],[[11566,11567],\"disallowed\"],[[11568,11621],\"valid\"],[[11622,11623],\"valid\"],[[11624,11630],\"disallowed\"],[[11631,11631],\"mapped\",[11617]],[[11632,11632],\"valid\",[],\"NV8\"],[[11633,11646],\"disallowed\"],[[11647,11647],\"valid\"],[[11648,11670],\"valid\"],[[11671,11679],\"disallowed\"],[[11680,11686],\"valid\"],[[11687,11687],\"disallowed\"],[[11688,11694],\"valid\"],[[11695,11695],\"disallowed\"],[[11696,11702],\"valid\"],[[11703,11703],\"disallowed\"],[[11704,11710],\"valid\"],[[11711,11711],\"disallowed\"],[[11712,11718],\"valid\"],[[11719,11719],\"disallowed\"],[[11720,11726],\"valid\"],[[11727,11727],\"disallowed\"],[[11728,11734],\"valid\"],[[11735,11735],\"disallowed\"],[[11736,11742],\"valid\"],[[11743,11743],\"disallowed\"],[[11744,11775],\"valid\"],[[11776,11799],\"valid\",[],\"NV8\"],[[11800,11803],\"valid\",[],\"NV8\"],[[11804,11805],\"valid\",[],\"NV8\"],[[11806,11822],\"valid\",[],\"NV8\"],[[11823,11823],\"valid\"],[[11824,11824],\"valid\",[],\"NV8\"],[[11825,11825],\"valid\",[],\"NV8\"],[[11826,11835],\"valid\",[],\"NV8\"],[[11836,11842],\"valid\",[],\"NV8\"],[[11843,11903],\"disallowed\"],[[11904,11929],\"valid\",[],\"NV8\"],[[11930,11930],\"disallowed\"],[[11931,11934],\"valid\",[],\"NV8\"],[[11935,11935],\"mapped\",[27597]],[[11936,12018],\"valid\",[],\"NV8\"],[[12019,12019],\"mapped\",[40863]],[[12020,12031],\"disallowed\"],[[12032,12032],\"mapped\",[19968]],[[12033,12033],\"mapped\",[20008]],[[12034,12034],\"mapped\",[20022]],[[12035,12035],\"mapped\",[20031]],[[12036,12036],\"mapped\",[20057]],[[12037,12037],\"mapped\",[20101]],[[12038,12038],\"mapped\",[20108]],[[12039,12039],\"mapped\",[20128]],[[12040,12040],\"mapped\",[20154]],[[12041,12041],\"mapped\",[20799]],[[12042,12042],\"mapped\",[20837]],[[12043,12043],\"mapped\",[20843]],[[12044,12044],\"mapped\",[20866]],[[12045,12045],\"mapped\",[20886]],[[12046,12046],\"mapped\",[20907]],[[12047,12047],\"mapped\",[20960]],[[12048,12048],\"mapped\",[20981]],[[12049,12049],\"mapped\",[20992]],[[12050,12050],\"mapped\",[21147]],[[12051,12051],\"mapped\",[21241]],[[12052,12052],\"mapped\",[21269]],[[12053,12053],\"mapped\",[21274]],[[12054,12054],\"mapped\",[21304]],[[12055,12055],\"mapped\",[21313]],[[12056,12056],\"mapped\",[21340]],[[12057,12057],\"mapped\",[21353]],[[12058,12058],\"mapped\",[21378]],[[12059,12059],\"mapped\",[21430]],[[12060,12060],\"mapped\",[21448]],[[12061,12061],\"mapped\",[21475]],[[12062,12062],\"mapped\",[22231]],[[12063,12063],\"mapped\",[22303]],[[12064,12064],\"mapped\",[22763]],[[12065,12065],\"mapped\",[22786]],[[12066,12066],\"mapped\",[22794]],[[12067,12067],\"mapped\",[22805]],[[12068,12068],\"mapped\",[22823]],[[12069,12069],\"mapped\",[22899]],[[12070,12070],\"mapped\",[23376]],[[12071,12071],\"mapped\",[23424]],[[12072,12072],\"mapped\",[23544]],[[12073,12073],\"mapped\",[23567]],[[12074,12074],\"mapped\",[23586]],[[12075,12075],\"mapped\",[23608]],[[12076,12076],\"mapped\",[23662]],[[12077,12077],\"mapped\",[23665]],[[12078,12078],\"mapped\",[24027]],[[12079,12079],\"mapped\",[24037]],[[12080,12080],\"mapped\",[24049]],[[12081,12081],\"mapped\",[24062]],[[12082,12082],\"mapped\",[24178]],[[12083,12083],\"mapped\",[24186]],[[12084,12084],\"mapped\",[24191]],[[12085,12085],\"mapped\",[24308]],[[12086,12086],\"mapped\",[24318]],[[12087,12087],\"mapped\",[24331]],[[12088,12088],\"mapped\",[24339]],[[12089,12089],\"mapped\",[24400]],[[12090,12090],\"mapped\",[24417]],[[12091,12091],\"mapped\",[24435]],[[12092,12092],\"mapped\",[24515]],[[12093,12093],\"mapped\",[25096]],[[12094,12094],\"mapped\",[25142]],[[12095,12095],\"mapped\",[25163]],[[12096,12096],\"mapped\",[25903]],[[12097,12097],\"mapped\",[25908]],[[12098,12098],\"mapped\",[25991]],[[12099,12099],\"mapped\",[26007]],[[12100,12100],\"mapped\",[26020]],[[12101,12101],\"mapped\",[26041]],[[12102,12102],\"mapped\",[26080]],[[12103,12103],\"mapped\",[26085]],[[12104,12104],\"mapped\",[26352]],[[12105,12105],\"mapped\",[26376]],[[12106,12106],\"mapped\",[26408]],[[12107,12107],\"mapped\",[27424]],[[12108,12108],\"mapped\",[27490]],[[12109,12109],\"mapped\",[27513]],[[12110,12110],\"mapped\",[27571]],[[12111,12111],\"mapped\",[27595]],[[12112,12112],\"mapped\",[27604]],[[12113,12113],\"mapped\",[27611]],[[12114,12114],\"mapped\",[27663]],[[12115,12115],\"mapped\",[27668]],[[12116,12116],\"mapped\",[27700]],[[12117,12117],\"mapped\",[28779]],[[12118,12118],\"mapped\",[29226]],[[12119,12119],\"mapped\",[29238]],[[12120,12120],\"mapped\",[29243]],[[12121,12121],\"mapped\",[29247]],[[12122,12122],\"mapped\",[29255]],[[12123,12123],\"mapped\",[29273]],[[12124,12124],\"mapped\",[29275]],[[12125,12125],\"mapped\",[29356]],[[12126,12126],\"mapped\",[29572]],[[12127,12127],\"mapped\",[29577]],[[12128,12128],\"mapped\",[29916]],[[12129,12129],\"mapped\",[29926]],[[12130,12130],\"mapped\",[29976]],[[12131,12131],\"mapped\",[29983]],[[12132,12132],\"mapped\",[29992]],[[12133,12133],\"mapped\",[30000]],[[12134,12134],\"mapped\",[30091]],[[12135,12135],\"mapped\",[30098]],[[12136,12136],\"mapped\",[30326]],[[12137,12137],\"mapped\",[30333]],[[12138,12138],\"mapped\",[30382]],[[12139,12139],\"mapped\",[30399]],[[12140,12140],\"mapped\",[30446]],[[12141,12141],\"mapped\",[30683]],[[12142,12142],\"mapped\",[30690]],[[12143,12143],\"mapped\",[30707]],[[12144,12144],\"mapped\",[31034]],[[12145,12145],\"mapped\",[31160]],[[12146,12146],\"mapped\",[31166]],[[12147,12147],\"mapped\",[31348]],[[12148,12148],\"mapped\",[31435]],[[12149,12149],\"mapped\",[31481]],[[12150,12150],\"mapped\",[31859]],[[12151,12151],\"mapped\",[31992]],[[12152,12152],\"mapped\",[32566]],[[12153,12153],\"mapped\",[32593]],[[12154,12154],\"mapped\",[32650]],[[12155,12155],\"mapped\",[32701]],[[12156,12156],\"mapped\",[32769]],[[12157,12157],\"mapped\",[32780]],[[12158,12158],\"mapped\",[32786]],[[12159,12159],\"mapped\",[32819]],[[12160,12160],\"mapped\",[32895]],[[12161,12161],\"mapped\",[32905]],[[12162,12162],\"mapped\",[33251]],[[12163,12163],\"mapped\",[33258]],[[12164,12164],\"mapped\",[33267]],[[12165,12165],\"mapped\",[33276]],[[12166,12166],\"mapped\",[33292]],[[12167,12167],\"mapped\",[33307]],[[12168,12168],\"mapped\",[33311]],[[12169,12169],\"mapped\",[33390]],[[12170,12170],\"mapped\",[33394]],[[12171,12171],\"mapped\",[33400]],[[12172,12172],\"mapped\",[34381]],[[12173,12173],\"mapped\",[34411]],[[12174,12174],\"mapped\",[34880]],[[12175,12175],\"mapped\",[34892]],[[12176,12176],\"mapped\",[34915]],[[12177,12177],\"mapped\",[35198]],[[12178,12178],\"mapped\",[35211]],[[12179,12179],\"mapped\",[35282]],[[12180,12180],\"mapped\",[35328]],[[12181,12181],\"mapped\",[35895]],[[12182,12182],\"mapped\",[35910]],[[12183,12183],\"mapped\",[35925]],[[12184,12184],\"mapped\",[35960]],[[12185,12185],\"mapped\",[35997]],[[12186,12186],\"mapped\",[36196]],[[12187,12187],\"mapped\",[36208]],[[12188,12188],\"mapped\",[36275]],[[12189,12189],\"mapped\",[36523]],[[12190,12190],\"mapped\",[36554]],[[12191,12191],\"mapped\",[36763]],[[12192,12192],\"mapped\",[36784]],[[12193,12193],\"mapped\",[36789]],[[12194,12194],\"mapped\",[37009]],[[12195,12195],\"mapped\",[37193]],[[12196,12196],\"mapped\",[37318]],[[12197,12197],\"mapped\",[37324]],[[12198,12198],\"mapped\",[37329]],[[12199,12199],\"mapped\",[38263]],[[12200,12200],\"mapped\",[38272]],[[12201,12201],\"mapped\",[38428]],[[12202,12202],\"mapped\",[38582]],[[12203,12203],\"mapped\",[38585]],[[12204,12204],\"mapped\",[38632]],[[12205,12205],\"mapped\",[38737]],[[12206,12206],\"mapped\",[38750]],[[12207,12207],\"mapped\",[38754]],[[12208,12208],\"mapped\",[38761]],[[12209,12209],\"mapped\",[38859]],[[12210,12210],\"mapped\",[38893]],[[12211,12211],\"mapped\",[38899]],[[12212,12212],\"mapped\",[38913]],[[12213,12213],\"mapped\",[39080]],[[12214,12214],\"mapped\",[39131]],[[12215,12215],\"mapped\",[39135]],[[12216,12216],\"mapped\",[39318]],[[12217,12217],\"mapped\",[39321]],[[12218,12218],\"mapped\",[39340]],[[12219,12219],\"mapped\",[39592]],[[12220,12220],\"mapped\",[39640]],[[12221,12221],\"mapped\",[39647]],[[12222,12222],\"mapped\",[39717]],[[12223,12223],\"mapped\",[39727]],[[12224,12224],\"mapped\",[39730]],[[12225,12225],\"mapped\",[39740]],[[12226,12226],\"mapped\",[39770]],[[12227,12227],\"mapped\",[40165]],[[12228,12228],\"mapped\",[40565]],[[12229,12229],\"mapped\",[40575]],[[12230,12230],\"mapped\",[40613]],[[12231,12231],\"mapped\",[40635]],[[12232,12232],\"mapped\",[40643]],[[12233,12233],\"mapped\",[40653]],[[12234,12234],\"mapped\",[40657]],[[12235,12235],\"mapped\",[40697]],[[12236,12236],\"mapped\",[40701]],[[12237,12237],\"mapped\",[40718]],[[12238,12238],\"mapped\",[40723]],[[12239,12239],\"mapped\",[40736]],[[12240,12240],\"mapped\",[40763]],[[12241,12241],\"mapped\",[40778]],[[12242,12242],\"mapped\",[40786]],[[12243,12243],\"mapped\",[40845]],[[12244,12244],\"mapped\",[40860]],[[12245,12245],\"mapped\",[40864]],[[12246,12271],\"disallowed\"],[[12272,12283],\"disallowed\"],[[12284,12287],\"disallowed\"],[[12288,12288],\"disallowed_STD3_mapped\",[32]],[[12289,12289],\"valid\",[],\"NV8\"],[[12290,12290],\"mapped\",[46]],[[12291,12292],\"valid\",[],\"NV8\"],[[12293,12295],\"valid\"],[[12296,12329],\"valid\",[],\"NV8\"],[[12330,12333],\"valid\"],[[12334,12341],\"valid\",[],\"NV8\"],[[12342,12342],\"mapped\",[12306]],[[12343,12343],\"valid\",[],\"NV8\"],[[12344,12344],\"mapped\",[21313]],[[12345,12345],\"mapped\",[21316]],[[12346,12346],\"mapped\",[21317]],[[12347,12347],\"valid\",[],\"NV8\"],[[12348,12348],\"valid\"],[[12349,12349],\"valid\",[],\"NV8\"],[[12350,12350],\"valid\",[],\"NV8\"],[[12351,12351],\"valid\",[],\"NV8\"],[[12352,12352],\"disallowed\"],[[12353,12436],\"valid\"],[[12437,12438],\"valid\"],[[12439,12440],\"disallowed\"],[[12441,12442],\"valid\"],[[12443,12443],\"disallowed_STD3_mapped\",[32,12441]],[[12444,12444],\"disallowed_STD3_mapped\",[32,12442]],[[12445,12446],\"valid\"],[[12447,12447],\"mapped\",[12424,12426]],[[12448,12448],\"valid\",[],\"NV8\"],[[12449,12542],\"valid\"],[[12543,12543],\"mapped\",[12467,12488]],[[12544,12548],\"disallowed\"],[[12549,12588],\"valid\"],[[12589,12589],\"valid\"],[[12590,12592],\"disallowed\"],[[12593,12593],\"mapped\",[4352]],[[12594,12594],\"mapped\",[4353]],[[12595,12595],\"mapped\",[4522]],[[12596,12596],\"mapped\",[4354]],[[12597,12597],\"mapped\",[4524]],[[12598,12598],\"mapped\",[4525]],[[12599,12599],\"mapped\",[4355]],[[12600,12600],\"mapped\",[4356]],[[12601,12601],\"mapped\",[4357]],[[12602,12602],\"mapped\",[4528]],[[12603,12603],\"mapped\",[4529]],[[12604,12604],\"mapped\",[4530]],[[12605,12605],\"mapped\",[4531]],[[12606,12606],\"mapped\",[4532]],[[12607,12607],\"mapped\",[4533]],[[12608,12608],\"mapped\",[4378]],[[12609,12609],\"mapped\",[4358]],[[12610,12610],\"mapped\",[4359]],[[12611,12611],\"mapped\",[4360]],[[12612,12612],\"mapped\",[4385]],[[12613,12613],\"mapped\",[4361]],[[12614,12614],\"mapped\",[4362]],[[12615,12615],\"mapped\",[4363]],[[12616,12616],\"mapped\",[4364]],[[12617,12617],\"mapped\",[4365]],[[12618,12618],\"mapped\",[4366]],[[12619,12619],\"mapped\",[4367]],[[12620,12620],\"mapped\",[4368]],[[12621,12621],\"mapped\",[4369]],[[12622,12622],\"mapped\",[4370]],[[12623,12623],\"mapped\",[4449]],[[12624,12624],\"mapped\",[4450]],[[12625,12625],\"mapped\",[4451]],[[12626,12626],\"mapped\",[4452]],[[12627,12627],\"mapped\",[4453]],[[12628,12628],\"mapped\",[4454]],[[12629,12629],\"mapped\",[4455]],[[12630,12630],\"mapped\",[4456]],[[12631,12631],\"mapped\",[4457]],[[12632,12632],\"mapped\",[4458]],[[12633,12633],\"mapped\",[4459]],[[12634,12634],\"mapped\",[4460]],[[12635,12635],\"mapped\",[4461]],[[12636,12636],\"mapped\",[4462]],[[12637,12637],\"mapped\",[4463]],[[12638,12638],\"mapped\",[4464]],[[12639,12639],\"mapped\",[4465]],[[12640,12640],\"mapped\",[4466]],[[12641,12641],\"mapped\",[4467]],[[12642,12642],\"mapped\",[4468]],[[12643,12643],\"mapped\",[4469]],[[12644,12644],\"disallowed\"],[[12645,12645],\"mapped\",[4372]],[[12646,12646],\"mapped\",[4373]],[[12647,12647],\"mapped\",[4551]],[[12648,12648],\"mapped\",[4552]],[[12649,12649],\"mapped\",[4556]],[[12650,12650],\"mapped\",[4558]],[[12651,12651],\"mapped\",[4563]],[[12652,12652],\"mapped\",[4567]],[[12653,12653],\"mapped\",[4569]],[[12654,12654],\"mapped\",[4380]],[[12655,12655],\"mapped\",[4573]],[[12656,12656],\"mapped\",[4575]],[[12657,12657],\"mapped\",[4381]],[[12658,12658],\"mapped\",[4382]],[[12659,12659],\"mapped\",[4384]],[[12660,12660],\"mapped\",[4386]],[[12661,12661],\"mapped\",[4387]],[[12662,12662],\"mapped\",[4391]],[[12663,12663],\"mapped\",[4393]],[[12664,12664],\"mapped\",[4395]],[[12665,12665],\"mapped\",[4396]],[[12666,12666],\"mapped\",[4397]],[[12667,12667],\"mapped\",[4398]],[[12668,12668],\"mapped\",[4399]],[[12669,12669],\"mapped\",[4402]],[[12670,12670],\"mapped\",[4406]],[[12671,12671],\"mapped\",[4416]],[[12672,12672],\"mapped\",[4423]],[[12673,12673],\"mapped\",[4428]],[[12674,12674],\"mapped\",[4593]],[[12675,12675],\"mapped\",[4594]],[[12676,12676],\"mapped\",[4439]],[[12677,12677],\"mapped\",[4440]],[[12678,12678],\"mapped\",[4441]],[[12679,12679],\"mapped\",[4484]],[[12680,12680],\"mapped\",[4485]],[[12681,12681],\"mapped\",[4488]],[[12682,12682],\"mapped\",[4497]],[[12683,12683],\"mapped\",[4498]],[[12684,12684],\"mapped\",[4500]],[[12685,12685],\"mapped\",[4510]],[[12686,12686],\"mapped\",[4513]],[[12687,12687],\"disallowed\"],[[12688,12689],\"valid\",[],\"NV8\"],[[12690,12690],\"mapped\",[19968]],[[12691,12691],\"mapped\",[20108]],[[12692,12692],\"mapped\",[19977]],[[12693,12693],\"mapped\",[22235]],[[12694,12694],\"mapped\",[19978]],[[12695,12695],\"mapped\",[20013]],[[12696,12696],\"mapped\",[19979]],[[12697,12697],\"mapped\",[30002]],[[12698,12698],\"mapped\",[20057]],[[12699,12699],\"mapped\",[19993]],[[12700,12700],\"mapped\",[19969]],[[12701,12701],\"mapped\",[22825]],[[12702,12702],\"mapped\",[22320]],[[12703,12703],\"mapped\",[20154]],[[12704,12727],\"valid\"],[[12728,12730],\"valid\"],[[12731,12735],\"disallowed\"],[[12736,12751],\"valid\",[],\"NV8\"],[[12752,12771],\"valid\",[],\"NV8\"],[[12772,12783],\"disallowed\"],[[12784,12799],\"valid\"],[[12800,12800],\"disallowed_STD3_mapped\",[40,4352,41]],[[12801,12801],\"disallowed_STD3_mapped\",[40,4354,41]],[[12802,12802],\"disallowed_STD3_mapped\",[40,4355,41]],[[12803,12803],\"disallowed_STD3_mapped\",[40,4357,41]],[[12804,12804],\"disallowed_STD3_mapped\",[40,4358,41]],[[12805,12805],\"disallowed_STD3_mapped\",[40,4359,41]],[[12806,12806],\"disallowed_STD3_mapped\",[40,4361,41]],[[12807,12807],\"disallowed_STD3_mapped\",[40,4363,41]],[[12808,12808],\"disallowed_STD3_mapped\",[40,4364,41]],[[12809,12809],\"disallowed_STD3_mapped\",[40,4366,41]],[[12810,12810],\"disallowed_STD3_mapped\",[40,4367,41]],[[12811,12811],\"disallowed_STD3_mapped\",[40,4368,41]],[[12812,12812],\"disallowed_STD3_mapped\",[40,4369,41]],[[12813,12813],\"disallowed_STD3_mapped\",[40,4370,41]],[[12814,12814],\"disallowed_STD3_mapped\",[40,44032,41]],[[12815,12815],\"disallowed_STD3_mapped\",[40,45208,41]],[[12816,12816],\"disallowed_STD3_mapped\",[40,45796,41]],[[12817,12817],\"disallowed_STD3_mapped\",[40,46972,41]],[[12818,12818],\"disallowed_STD3_mapped\",[40,47560,41]],[[12819,12819],\"disallowed_STD3_mapped\",[40,48148,41]],[[12820,12820],\"disallowed_STD3_mapped\",[40,49324,41]],[[12821,12821],\"disallowed_STD3_mapped\",[40,50500,41]],[[12822,12822],\"disallowed_STD3_mapped\",[40,51088,41]],[[12823,12823],\"disallowed_STD3_mapped\",[40,52264,41]],[[12824,12824],\"disallowed_STD3_mapped\",[40,52852,41]],[[12825,12825],\"disallowed_STD3_mapped\",[40,53440,41]],[[12826,12826],\"disallowed_STD3_mapped\",[40,54028,41]],[[12827,12827],\"disallowed_STD3_mapped\",[40,54616,41]],[[12828,12828],\"disallowed_STD3_mapped\",[40,51452,41]],[[12829,12829],\"disallowed_STD3_mapped\",[40,50724,51204,41]],[[12830,12830],\"disallowed_STD3_mapped\",[40,50724,54980,41]],[[12831,12831],\"disallowed\"],[[12832,12832],\"disallowed_STD3_mapped\",[40,19968,41]],[[12833,12833],\"disallowed_STD3_mapped\",[40,20108,41]],[[12834,12834],\"disallowed_STD3_mapped\",[40,19977,41]],[[12835,12835],\"disallowed_STD3_mapped\",[40,22235,41]],[[12836,12836],\"disallowed_STD3_mapped\",[40,20116,41]],[[12837,12837],\"disallowed_STD3_mapped\",[40,20845,41]],[[12838,12838],\"disallowed_STD3_mapped\",[40,19971,41]],[[12839,12839],\"disallowed_STD3_mapped\",[40,20843,41]],[[12840,12840],\"disallowed_STD3_mapped\",[40,20061,41]],[[12841,12841],\"disallowed_STD3_mapped\",[40,21313,41]],[[12842,12842],\"disallowed_STD3_mapped\",[40,26376,41]],[[12843,12843],\"disallowed_STD3_mapped\",[40,28779,41]],[[12844,12844],\"disallowed_STD3_mapped\",[40,27700,41]],[[12845,12845],\"disallowed_STD3_mapped\",[40,26408,41]],[[12846,12846],\"disallowed_STD3_mapped\",[40,37329,41]],[[12847,12847],\"disallowed_STD3_mapped\",[40,22303,41]],[[12848,12848],\"disallowed_STD3_mapped\",[40,26085,41]],[[12849,12849],\"disallowed_STD3_mapped\",[40,26666,41]],[[12850,12850],\"disallowed_STD3_mapped\",[40,26377,41]],[[12851,12851],\"disallowed_STD3_mapped\",[40,31038,41]],[[12852,12852],\"disallowed_STD3_mapped\",[40,21517,41]],[[12853,12853],\"disallowed_STD3_mapped\",[40,29305,41]],[[12854,12854],\"disallowed_STD3_mapped\",[40,36001,41]],[[12855,12855],\"disallowed_STD3_mapped\",[40,31069,41]],[[12856,12856],\"disallowed_STD3_mapped\",[40,21172,41]],[[12857,12857],\"disallowed_STD3_mapped\",[40,20195,41]],[[12858,12858],\"disallowed_STD3_mapped\",[40,21628,41]],[[12859,12859],\"disallowed_STD3_mapped\",[40,23398,41]],[[12860,12860],\"disallowed_STD3_mapped\",[40,30435,41]],[[12861,12861],\"disallowed_STD3_mapped\",[40,20225,41]],[[12862,12862],\"disallowed_STD3_mapped\",[40,36039,41]],[[12863,12863],\"disallowed_STD3_mapped\",[40,21332,41]],[[12864,12864],\"disallowed_STD3_mapped\",[40,31085,41]],[[12865,12865],\"disallowed_STD3_mapped\",[40,20241,41]],[[12866,12866],\"disallowed_STD3_mapped\",[40,33258,41]],[[12867,12867],\"disallowed_STD3_mapped\",[40,33267,41]],[[12868,12868],\"mapped\",[21839]],[[12869,12869],\"mapped\",[24188]],[[12870,12870],\"mapped\",[25991]],[[12871,12871],\"mapped\",[31631]],[[12872,12879],\"valid\",[],\"NV8\"],[[12880,12880],\"mapped\",[112,116,101]],[[12881,12881],\"mapped\",[50,49]],[[12882,12882],\"mapped\",[50,50]],[[12883,12883],\"mapped\",[50,51]],[[12884,12884],\"mapped\",[50,52]],[[12885,12885],\"mapped\",[50,53]],[[12886,12886],\"mapped\",[50,54]],[[12887,12887],\"mapped\",[50,55]],[[12888,12888],\"mapped\",[50,56]],[[12889,12889],\"mapped\",[50,57]],[[12890,12890],\"mapped\",[51,48]],[[12891,12891],\"mapped\",[51,49]],[[12892,12892],\"mapped\",[51,50]],[[12893,12893],\"mapped\",[51,51]],[[12894,12894],\"mapped\",[51,52]],[[12895,12895],\"mapped\",[51,53]],[[12896,12896],\"mapped\",[4352]],[[12897,12897],\"mapped\",[4354]],[[12898,12898],\"mapped\",[4355]],[[12899,12899],\"mapped\",[4357]],[[12900,12900],\"mapped\",[4358]],[[12901,12901],\"mapped\",[4359]],[[12902,12902],\"mapped\",[4361]],[[12903,12903],\"mapped\",[4363]],[[12904,12904],\"mapped\",[4364]],[[12905,12905],\"mapped\",[4366]],[[12906,12906],\"mapped\",[4367]],[[12907,12907],\"mapped\",[4368]],[[12908,12908],\"mapped\",[4369]],[[12909,12909],\"mapped\",[4370]],[[12910,12910],\"mapped\",[44032]],[[12911,12911],\"mapped\",[45208]],[[12912,12912],\"mapped\",[45796]],[[12913,12913],\"mapped\",[46972]],[[12914,12914],\"mapped\",[47560]],[[12915,12915],\"mapped\",[48148]],[[12916,12916],\"mapped\",[49324]],[[12917,12917],\"mapped\",[50500]],[[12918,12918],\"mapped\",[51088]],[[12919,12919],\"mapped\",[52264]],[[12920,12920],\"mapped\",[52852]],[[12921,12921],\"mapped\",[53440]],[[12922,12922],\"mapped\",[54028]],[[12923,12923],\"mapped\",[54616]],[[12924,12924],\"mapped\",[52280,44256]],[[12925,12925],\"mapped\",[51452,51032]],[[12926,12926],\"mapped\",[50864]],[[12927,12927],\"valid\",[],\"NV8\"],[[12928,12928],\"mapped\",[19968]],[[12929,12929],\"mapped\",[20108]],[[12930,12930],\"mapped\",[19977]],[[12931,12931],\"mapped\",[22235]],[[12932,12932],\"mapped\",[20116]],[[12933,12933],\"mapped\",[20845]],[[12934,12934],\"mapped\",[19971]],[[12935,12935],\"mapped\",[20843]],[[12936,12936],\"mapped\",[20061]],[[12937,12937],\"mapped\",[21313]],[[12938,12938],\"mapped\",[26376]],[[12939,12939],\"mapped\",[28779]],[[12940,12940],\"mapped\",[27700]],[[12941,12941],\"mapped\",[26408]],[[12942,12942],\"mapped\",[37329]],[[12943,12943],\"mapped\",[22303]],[[12944,12944],\"mapped\",[26085]],[[12945,12945],\"mapped\",[26666]],[[12946,12946],\"mapped\",[26377]],[[12947,12947],\"mapped\",[31038]],[[12948,12948],\"mapped\",[21517]],[[12949,12949],\"mapped\",[29305]],[[12950,12950],\"mapped\",[36001]],[[12951,12951],\"mapped\",[31069]],[[12952,12952],\"mapped\",[21172]],[[12953,12953],\"mapped\",[31192]],[[12954,12954],\"mapped\",[30007]],[[12955,12955],\"mapped\",[22899]],[[12956,12956],\"mapped\",[36969]],[[12957,12957],\"mapped\",[20778]],[[12958,12958],\"mapped\",[21360]],[[12959,12959],\"mapped\",[27880]],[[12960,12960],\"mapped\",[38917]],[[12961,12961],\"mapped\",[20241]],[[12962,12962],\"mapped\",[20889]],[[12963,12963],\"mapped\",[27491]],[[12964,12964],\"mapped\",[19978]],[[12965,12965],\"mapped\",[20013]],[[12966,12966],\"mapped\",[19979]],[[12967,12967],\"mapped\",[24038]],[[12968,12968],\"mapped\",[21491]],[[12969,12969],\"mapped\",[21307]],[[12970,12970],\"mapped\",[23447]],[[12971,12971],\"mapped\",[23398]],[[12972,12972],\"mapped\",[30435]],[[12973,12973],\"mapped\",[20225]],[[12974,12974],\"mapped\",[36039]],[[12975,12975],\"mapped\",[21332]],[[12976,12976],\"mapped\",[22812]],[[12977,12977],\"mapped\",[51,54]],[[12978,12978],\"mapped\",[51,55]],[[12979,12979],\"mapped\",[51,56]],[[12980,12980],\"mapped\",[51,57]],[[12981,12981],\"mapped\",[52,48]],[[12982,12982],\"mapped\",[52,49]],[[12983,12983],\"mapped\",[52,50]],[[12984,12984],\"mapped\",[52,51]],[[12985,12985],\"mapped\",[52,52]],[[12986,12986],\"mapped\",[52,53]],[[12987,12987],\"mapped\",[52,54]],[[12988,12988],\"mapped\",[52,55]],[[12989,12989],\"mapped\",[52,56]],[[12990,12990],\"mapped\",[52,57]],[[12991,12991],\"mapped\",[53,48]],[[12992,12992],\"mapped\",[49,26376]],[[12993,12993],\"mapped\",[50,26376]],[[12994,12994],\"mapped\",[51,26376]],[[12995,12995],\"mapped\",[52,26376]],[[12996,12996],\"mapped\",[53,26376]],[[12997,12997],\"mapped\",[54,26376]],[[12998,12998],\"mapped\",[55,26376]],[[12999,12999],\"mapped\",[56,26376]],[[13000,13000],\"mapped\",[57,26376]],[[13001,13001],\"mapped\",[49,48,26376]],[[13002,13002],\"mapped\",[49,49,26376]],[[13003,13003],\"mapped\",[49,50,26376]],[[13004,13004],\"mapped\",[104,103]],[[13005,13005],\"mapped\",[101,114,103]],[[13006,13006],\"mapped\",[101,118]],[[13007,13007],\"mapped\",[108,116,100]],[[13008,13008],\"mapped\",[12450]],[[13009,13009],\"mapped\",[12452]],[[13010,13010],\"mapped\",[12454]],[[13011,13011],\"mapped\",[12456]],[[13012,13012],\"mapped\",[12458]],[[13013,13013],\"mapped\",[12459]],[[13014,13014],\"mapped\",[12461]],[[13015,13015],\"mapped\",[12463]],[[13016,13016],\"mapped\",[12465]],[[13017,13017],\"mapped\",[12467]],[[13018,13018],\"mapped\",[12469]],[[13019,13019],\"mapped\",[12471]],[[13020,13020],\"mapped\",[12473]],[[13021,13021],\"mapped\",[12475]],[[13022,13022],\"mapped\",[12477]],[[13023,13023],\"mapped\",[12479]],[[13024,13024],\"mapped\",[12481]],[[13025,13025],\"mapped\",[12484]],[[13026,13026],\"mapped\",[12486]],[[13027,13027],\"mapped\",[12488]],[[13028,13028],\"mapped\",[12490]],[[13029,13029],\"mapped\",[12491]],[[13030,13030],\"mapped\",[12492]],[[13031,13031],\"mapped\",[12493]],[[13032,13032],\"mapped\",[12494]],[[13033,13033],\"mapped\",[12495]],[[13034,13034],\"mapped\",[12498]],[[13035,13035],\"mapped\",[12501]],[[13036,13036],\"mapped\",[12504]],[[13037,13037],\"mapped\",[12507]],[[13038,13038],\"mapped\",[12510]],[[13039,13039],\"mapped\",[12511]],[[13040,13040],\"mapped\",[12512]],[[13041,13041],\"mapped\",[12513]],[[13042,13042],\"mapped\",[12514]],[[13043,13043],\"mapped\",[12516]],[[13044,13044],\"mapped\",[12518]],[[13045,13045],\"mapped\",[12520]],[[13046,13046],\"mapped\",[12521]],[[13047,13047],\"mapped\",[12522]],[[13048,13048],\"mapped\",[12523]],[[13049,13049],\"mapped\",[12524]],[[13050,13050],\"mapped\",[12525]],[[13051,13051],\"mapped\",[12527]],[[13052,13052],\"mapped\",[12528]],[[13053,13053],\"mapped\",[12529]],[[13054,13054],\"mapped\",[12530]],[[13055,13055],\"disallowed\"],[[13056,13056],\"mapped\",[12450,12497,12540,12488]],[[13057,13057],\"mapped\",[12450,12523,12501,12449]],[[13058,13058],\"mapped\",[12450,12531,12506,12450]],[[13059,13059],\"mapped\",[12450,12540,12523]],[[13060,13060],\"mapped\",[12452,12491,12531,12464]],[[13061,13061],\"mapped\",[12452,12531,12481]],[[13062,13062],\"mapped\",[12454,12457,12531]],[[13063,13063],\"mapped\",[12456,12473,12463,12540,12489]],[[13064,13064],\"mapped\",[12456,12540,12459,12540]],[[13065,13065],\"mapped\",[12458,12531,12473]],[[13066,13066],\"mapped\",[12458,12540,12512]],[[13067,13067],\"mapped\",[12459,12452,12522]],[[13068,13068],\"mapped\",[12459,12521,12483,12488]],[[13069,13069],\"mapped\",[12459,12525,12522,12540]],[[13070,13070],\"mapped\",[12460,12525,12531]],[[13071,13071],\"mapped\",[12460,12531,12510]],[[13072,13072],\"mapped\",[12462,12460]],[[13073,13073],\"mapped\",[12462,12491,12540]],[[13074,13074],\"mapped\",[12461,12517,12522,12540]],[[13075,13075],\"mapped\",[12462,12523,12480,12540]],[[13076,13076],\"mapped\",[12461,12525]],[[13077,13077],\"mapped\",[12461,12525,12464,12521,12512]],[[13078,13078],\"mapped\",[12461,12525,12513,12540,12488,12523]],[[13079,13079],\"mapped\",[12461,12525,12527,12483,12488]],[[13080,13080],\"mapped\",[12464,12521,12512]],[[13081,13081],\"mapped\",[12464,12521,12512,12488,12531]],[[13082,13082],\"mapped\",[12463,12523,12476,12452,12525]],[[13083,13083],\"mapped\",[12463,12525,12540,12493]],[[13084,13084],\"mapped\",[12465,12540,12473]],[[13085,13085],\"mapped\",[12467,12523,12490]],[[13086,13086],\"mapped\",[12467,12540,12509]],[[13087,13087],\"mapped\",[12469,12452,12463,12523]],[[13088,13088],\"mapped\",[12469,12531,12481,12540,12512]],[[13089,13089],\"mapped\",[12471,12522,12531,12464]],[[13090,13090],\"mapped\",[12475,12531,12481]],[[13091,13091],\"mapped\",[12475,12531,12488]],[[13092,13092],\"mapped\",[12480,12540,12473]],[[13093,13093],\"mapped\",[12487,12471]],[[13094,13094],\"mapped\",[12489,12523]],[[13095,13095],\"mapped\",[12488,12531]],[[13096,13096],\"mapped\",[12490,12494]],[[13097,13097],\"mapped\",[12494,12483,12488]],[[13098,13098],\"mapped\",[12495,12452,12484]],[[13099,13099],\"mapped\",[12497,12540,12475,12531,12488]],[[13100,13100],\"mapped\",[12497,12540,12484]],[[13101,13101],\"mapped\",[12496,12540,12524,12523]],[[13102,13102],\"mapped\",[12500,12450,12473,12488,12523]],[[13103,13103],\"mapped\",[12500,12463,12523]],[[13104,13104],\"mapped\",[12500,12467]],[[13105,13105],\"mapped\",[12499,12523]],[[13106,13106],\"mapped\",[12501,12449,12521,12483,12489]],[[13107,13107],\"mapped\",[12501,12451,12540,12488]],[[13108,13108],\"mapped\",[12502,12483,12471,12455,12523]],[[13109,13109],\"mapped\",[12501,12521,12531]],[[13110,13110],\"mapped\",[12504,12463,12479,12540,12523]],[[13111,13111],\"mapped\",[12506,12477]],[[13112,13112],\"mapped\",[12506,12491,12498]],[[13113,13113],\"mapped\",[12504,12523,12484]],[[13114,13114],\"mapped\",[12506,12531,12473]],[[13115,13115],\"mapped\",[12506,12540,12472]],[[13116,13116],\"mapped\",[12505,12540,12479]],[[13117,13117],\"mapped\",[12509,12452,12531,12488]],[[13118,13118],\"mapped\",[12508,12523,12488]],[[13119,13119],\"mapped\",[12507,12531]],[[13120,13120],\"mapped\",[12509,12531,12489]],[[13121,13121],\"mapped\",[12507,12540,12523]],[[13122,13122],\"mapped\",[12507,12540,12531]],[[13123,13123],\"mapped\",[12510,12452,12463,12525]],[[13124,13124],\"mapped\",[12510,12452,12523]],[[13125,13125],\"mapped\",[12510,12483,12495]],[[13126,13126],\"mapped\",[12510,12523,12463]],[[13127,13127],\"mapped\",[12510,12531,12471,12519,12531]],[[13128,13128],\"mapped\",[12511,12463,12525,12531]],[[13129,13129],\"mapped\",[12511,12522]],[[13130,13130],\"mapped\",[12511,12522,12496,12540,12523]],[[13131,13131],\"mapped\",[12513,12460]],[[13132,13132],\"mapped\",[12513,12460,12488,12531]],[[13133,13133],\"mapped\",[12513,12540,12488,12523]],[[13134,13134],\"mapped\",[12516,12540,12489]],[[13135,13135],\"mapped\",[12516,12540,12523]],[[13136,13136],\"mapped\",[12518,12450,12531]],[[13137,13137],\"mapped\",[12522,12483,12488,12523]],[[13138,13138],\"mapped\",[12522,12521]],[[13139,13139],\"mapped\",[12523,12500,12540]],[[13140,13140],\"mapped\",[12523,12540,12502,12523]],[[13141,13141],\"mapped\",[12524,12512]],[[13142,13142],\"mapped\",[12524,12531,12488,12466,12531]],[[13143,13143],\"mapped\",[12527,12483,12488]],[[13144,13144],\"mapped\",[48,28857]],[[13145,13145],\"mapped\",[49,28857]],[[13146,13146],\"mapped\",[50,28857]],[[13147,13147],\"mapped\",[51,28857]],[[13148,13148],\"mapped\",[52,28857]],[[13149,13149],\"mapped\",[53,28857]],[[13150,13150],\"mapped\",[54,28857]],[[13151,13151],\"mapped\",[55,28857]],[[13152,13152],\"mapped\",[56,28857]],[[13153,13153],\"mapped\",[57,28857]],[[13154,13154],\"mapped\",[49,48,28857]],[[13155,13155],\"mapped\",[49,49,28857]],[[13156,13156],\"mapped\",[49,50,28857]],[[13157,13157],\"mapped\",[49,51,28857]],[[13158,13158],\"mapped\",[49,52,28857]],[[13159,13159],\"mapped\",[49,53,28857]],[[13160,13160],\"mapped\",[49,54,28857]],[[13161,13161],\"mapped\",[49,55,28857]],[[13162,13162],\"mapped\",[49,56,28857]],[[13163,13163],\"mapped\",[49,57,28857]],[[13164,13164],\"mapped\",[50,48,28857]],[[13165,13165],\"mapped\",[50,49,28857]],[[13166,13166],\"mapped\",[50,50,28857]],[[13167,13167],\"mapped\",[50,51,28857]],[[13168,13168],\"mapped\",[50,52,28857]],[[13169,13169],\"mapped\",[104,112,97]],[[13170,13170],\"mapped\",[100,97]],[[13171,13171],\"mapped\",[97,117]],[[13172,13172],\"mapped\",[98,97,114]],[[13173,13173],\"mapped\",[111,118]],[[13174,13174],\"mapped\",[112,99]],[[13175,13175],\"mapped\",[100,109]],[[13176,13176],\"mapped\",[100,109,50]],[[13177,13177],\"mapped\",[100,109,51]],[[13178,13178],\"mapped\",[105,117]],[[13179,13179],\"mapped\",[24179,25104]],[[13180,13180],\"mapped\",[26157,21644]],[[13181,13181],\"mapped\",[22823,27491]],[[13182,13182],\"mapped\",[26126,27835]],[[13183,13183],\"mapped\",[26666,24335,20250,31038]],[[13184,13184],\"mapped\",[112,97]],[[13185,13185],\"mapped\",[110,97]],[[13186,13186],\"mapped\",[956,97]],[[13187,13187],\"mapped\",[109,97]],[[13188,13188],\"mapped\",[107,97]],[[13189,13189],\"mapped\",[107,98]],[[13190,13190],\"mapped\",[109,98]],[[13191,13191],\"mapped\",[103,98]],[[13192,13192],\"mapped\",[99,97,108]],[[13193,13193],\"mapped\",[107,99,97,108]],[[13194,13194],\"mapped\",[112,102]],[[13195,13195],\"mapped\",[110,102]],[[13196,13196],\"mapped\",[956,102]],[[13197,13197],\"mapped\",[956,103]],[[13198,13198],\"mapped\",[109,103]],[[13199,13199],\"mapped\",[107,103]],[[13200,13200],\"mapped\",[104,122]],[[13201,13201],\"mapped\",[107,104,122]],[[13202,13202],\"mapped\",[109,104,122]],[[13203,13203],\"mapped\",[103,104,122]],[[13204,13204],\"mapped\",[116,104,122]],[[13205,13205],\"mapped\",[956,108]],[[13206,13206],\"mapped\",[109,108]],[[13207,13207],\"mapped\",[100,108]],[[13208,13208],\"mapped\",[107,108]],[[13209,13209],\"mapped\",[102,109]],[[13210,13210],\"mapped\",[110,109]],[[13211,13211],\"mapped\",[956,109]],[[13212,13212],\"mapped\",[109,109]],[[13213,13213],\"mapped\",[99,109]],[[13214,13214],\"mapped\",[107,109]],[[13215,13215],\"mapped\",[109,109,50]],[[13216,13216],\"mapped\",[99,109,50]],[[13217,13217],\"mapped\",[109,50]],[[13218,13218],\"mapped\",[107,109,50]],[[13219,13219],\"mapped\",[109,109,51]],[[13220,13220],\"mapped\",[99,109,51]],[[13221,13221],\"mapped\",[109,51]],[[13222,13222],\"mapped\",[107,109,51]],[[13223,13223],\"mapped\",[109,8725,115]],[[13224,13224],\"mapped\",[109,8725,115,50]],[[13225,13225],\"mapped\",[112,97]],[[13226,13226],\"mapped\",[107,112,97]],[[13227,13227],\"mapped\",[109,112,97]],[[13228,13228],\"mapped\",[103,112,97]],[[13229,13229],\"mapped\",[114,97,100]],[[13230,13230],\"mapped\",[114,97,100,8725,115]],[[13231,13231],\"mapped\",[114,97,100,8725,115,50]],[[13232,13232],\"mapped\",[112,115]],[[13233,13233],\"mapped\",[110,115]],[[13234,13234],\"mapped\",[956,115]],[[13235,13235],\"mapped\",[109,115]],[[13236,13236],\"mapped\",[112,118]],[[13237,13237],\"mapped\",[110,118]],[[13238,13238],\"mapped\",[956,118]],[[13239,13239],\"mapped\",[109,118]],[[13240,13240],\"mapped\",[107,118]],[[13241,13241],\"mapped\",[109,118]],[[13242,13242],\"mapped\",[112,119]],[[13243,13243],\"mapped\",[110,119]],[[13244,13244],\"mapped\",[956,119]],[[13245,13245],\"mapped\",[109,119]],[[13246,13246],\"mapped\",[107,119]],[[13247,13247],\"mapped\",[109,119]],[[13248,13248],\"mapped\",[107,969]],[[13249,13249],\"mapped\",[109,969]],[[13250,13250],\"disallowed\"],[[13251,13251],\"mapped\",[98,113]],[[13252,13252],\"mapped\",[99,99]],[[13253,13253],\"mapped\",[99,100]],[[13254,13254],\"mapped\",[99,8725,107,103]],[[13255,13255],\"disallowed\"],[[13256,13256],\"mapped\",[100,98]],[[13257,13257],\"mapped\",[103,121]],[[13258,13258],\"mapped\",[104,97]],[[13259,13259],\"mapped\",[104,112]],[[13260,13260],\"mapped\",[105,110]],[[13261,13261],\"mapped\",[107,107]],[[13262,13262],\"mapped\",[107,109]],[[13263,13263],\"mapped\",[107,116]],[[13264,13264],\"mapped\",[108,109]],[[13265,13265],\"mapped\",[108,110]],[[13266,13266],\"mapped\",[108,111,103]],[[13267,13267],\"mapped\",[108,120]],[[13268,13268],\"mapped\",[109,98]],[[13269,13269],\"mapped\",[109,105,108]],[[13270,13270],\"mapped\",[109,111,108]],[[13271,13271],\"mapped\",[112,104]],[[13272,13272],\"disallowed\"],[[13273,13273],\"mapped\",[112,112,109]],[[13274,13274],\"mapped\",[112,114]],[[13275,13275],\"mapped\",[115,114]],[[13276,13276],\"mapped\",[115,118]],[[13277,13277],\"mapped\",[119,98]],[[13278,13278],\"mapped\",[118,8725,109]],[[13279,13279],\"mapped\",[97,8725,109]],[[13280,13280],\"mapped\",[49,26085]],[[13281,13281],\"mapped\",[50,26085]],[[13282,13282],\"mapped\",[51,26085]],[[13283,13283],\"mapped\",[52,26085]],[[13284,13284],\"mapped\",[53,26085]],[[13285,13285],\"mapped\",[54,26085]],[[13286,13286],\"mapped\",[55,26085]],[[13287,13287],\"mapped\",[56,26085]],[[13288,13288],\"mapped\",[57,26085]],[[13289,13289],\"mapped\",[49,48,26085]],[[13290,13290],\"mapped\",[49,49,26085]],[[13291,13291],\"mapped\",[49,50,26085]],[[13292,13292],\"mapped\",[49,51,26085]],[[13293,13293],\"mapped\",[49,52,26085]],[[13294,13294],\"mapped\",[49,53,26085]],[[13295,13295],\"mapped\",[49,54,26085]],[[13296,13296],\"mapped\",[49,55,26085]],[[13297,13297],\"mapped\",[49,56,26085]],[[13298,13298],\"mapped\",[49,57,26085]],[[13299,13299],\"mapped\",[50,48,26085]],[[13300,13300],\"mapped\",[50,49,26085]],[[13301,13301],\"mapped\",[50,50,26085]],[[13302,13302],\"mapped\",[50,51,26085]],[[13303,13303],\"mapped\",[50,52,26085]],[[13304,13304],\"mapped\",[50,53,26085]],[[13305,13305],\"mapped\",[50,54,26085]],[[13306,13306],\"mapped\",[50,55,26085]],[[13307,13307],\"mapped\",[50,56,26085]],[[13308,13308],\"mapped\",[50,57,26085]],[[13309,13309],\"mapped\",[51,48,26085]],[[13310,13310],\"mapped\",[51,49,26085]],[[13311,13311],\"mapped\",[103,97,108]],[[13312,19893],\"valid\"],[[19894,19903],\"disallowed\"],[[19904,19967],\"valid\",[],\"NV8\"],[[19968,40869],\"valid\"],[[40870,40891],\"valid\"],[[40892,40899],\"valid\"],[[40900,40907],\"valid\"],[[40908,40908],\"valid\"],[[40909,40917],\"valid\"],[[40918,40959],\"disallowed\"],[[40960,42124],\"valid\"],[[42125,42127],\"disallowed\"],[[42128,42145],\"valid\",[],\"NV8\"],[[42146,42147],\"valid\",[],\"NV8\"],[[42148,42163],\"valid\",[],\"NV8\"],[[42164,42164],\"valid\",[],\"NV8\"],[[42165,42176],\"valid\",[],\"NV8\"],[[42177,42177],\"valid\",[],\"NV8\"],[[42178,42180],\"valid\",[],\"NV8\"],[[42181,42181],\"valid\",[],\"NV8\"],[[42182,42182],\"valid\",[],\"NV8\"],[[42183,42191],\"disallowed\"],[[42192,42237],\"valid\"],[[42238,42239],\"valid\",[],\"NV8\"],[[42240,42508],\"valid\"],[[42509,42511],\"valid\",[],\"NV8\"],[[42512,42539],\"valid\"],[[42540,42559],\"disallowed\"],[[42560,42560],\"mapped\",[42561]],[[42561,42561],\"valid\"],[[42562,42562],\"mapped\",[42563]],[[42563,42563],\"valid\"],[[42564,42564],\"mapped\",[42565]],[[42565,42565],\"valid\"],[[42566,42566],\"mapped\",[42567]],[[42567,42567],\"valid\"],[[42568,42568],\"mapped\",[42569]],[[42569,42569],\"valid\"],[[42570,42570],\"mapped\",[42571]],[[42571,42571],\"valid\"],[[42572,42572],\"mapped\",[42573]],[[42573,42573],\"valid\"],[[42574,42574],\"mapped\",[42575]],[[42575,42575],\"valid\"],[[42576,42576],\"mapped\",[42577]],[[42577,42577],\"valid\"],[[42578,42578],\"mapped\",[42579]],[[42579,42579],\"valid\"],[[42580,42580],\"mapped\",[42581]],[[42581,42581],\"valid\"],[[42582,42582],\"mapped\",[42583]],[[42583,42583],\"valid\"],[[42584,42584],\"mapped\",[42585]],[[42585,42585],\"valid\"],[[42586,42586],\"mapped\",[42587]],[[42587,42587],\"valid\"],[[42588,42588],\"mapped\",[42589]],[[42589,42589],\"valid\"],[[42590,42590],\"mapped\",[42591]],[[42591,42591],\"valid\"],[[42592,42592],\"mapped\",[42593]],[[42593,42593],\"valid\"],[[42594,42594],\"mapped\",[42595]],[[42595,42595],\"valid\"],[[42596,42596],\"mapped\",[42597]],[[42597,42597],\"valid\"],[[42598,42598],\"mapped\",[42599]],[[42599,42599],\"valid\"],[[42600,42600],\"mapped\",[42601]],[[42601,42601],\"valid\"],[[42602,42602],\"mapped\",[42603]],[[42603,42603],\"valid\"],[[42604,42604],\"mapped\",[42605]],[[42605,42607],\"valid\"],[[42608,42611],\"valid\",[],\"NV8\"],[[42612,42619],\"valid\"],[[42620,42621],\"valid\"],[[42622,42622],\"valid\",[],\"NV8\"],[[42623,42623],\"valid\"],[[42624,42624],\"mapped\",[42625]],[[42625,42625],\"valid\"],[[42626,42626],\"mapped\",[42627]],[[42627,42627],\"valid\"],[[42628,42628],\"mapped\",[42629]],[[42629,42629],\"valid\"],[[42630,42630],\"mapped\",[42631]],[[42631,42631],\"valid\"],[[42632,42632],\"mapped\",[42633]],[[42633,42633],\"valid\"],[[42634,42634],\"mapped\",[42635]],[[42635,42635],\"valid\"],[[42636,42636],\"mapped\",[42637]],[[42637,42637],\"valid\"],[[42638,42638],\"mapped\",[42639]],[[42639,42639],\"valid\"],[[42640,42640],\"mapped\",[42641]],[[42641,42641],\"valid\"],[[42642,42642],\"mapped\",[42643]],[[42643,42643],\"valid\"],[[42644,42644],\"mapped\",[42645]],[[42645,42645],\"valid\"],[[42646,42646],\"mapped\",[42647]],[[42647,42647],\"valid\"],[[42648,42648],\"mapped\",[42649]],[[42649,42649],\"valid\"],[[42650,42650],\"mapped\",[42651]],[[42651,42651],\"valid\"],[[42652,42652],\"mapped\",[1098]],[[42653,42653],\"mapped\",[1100]],[[42654,42654],\"valid\"],[[42655,42655],\"valid\"],[[42656,42725],\"valid\"],[[42726,42735],\"valid\",[],\"NV8\"],[[42736,42737],\"valid\"],[[42738,42743],\"valid\",[],\"NV8\"],[[42744,42751],\"disallowed\"],[[42752,42774],\"valid\",[],\"NV8\"],[[42775,42778],\"valid\"],[[42779,42783],\"valid\"],[[42784,42785],\"valid\",[],\"NV8\"],[[42786,42786],\"mapped\",[42787]],[[42787,42787],\"valid\"],[[42788,42788],\"mapped\",[42789]],[[42789,42789],\"valid\"],[[42790,42790],\"mapped\",[42791]],[[42791,42791],\"valid\"],[[42792,42792],\"mapped\",[42793]],[[42793,42793],\"valid\"],[[42794,42794],\"mapped\",[42795]],[[42795,42795],\"valid\"],[[42796,42796],\"mapped\",[42797]],[[42797,42797],\"valid\"],[[42798,42798],\"mapped\",[42799]],[[42799,42801],\"valid\"],[[42802,42802],\"mapped\",[42803]],[[42803,42803],\"valid\"],[[42804,42804],\"mapped\",[42805]],[[42805,42805],\"valid\"],[[42806,42806],\"mapped\",[42807]],[[42807,42807],\"valid\"],[[42808,42808],\"mapped\",[42809]],[[42809,42809],\"valid\"],[[42810,42810],\"mapped\",[42811]],[[42811,42811],\"valid\"],[[42812,42812],\"mapped\",[42813]],[[42813,42813],\"valid\"],[[42814,42814],\"mapped\",[42815]],[[42815,42815],\"valid\"],[[42816,42816],\"mapped\",[42817]],[[42817,42817],\"valid\"],[[42818,42818],\"mapped\",[42819]],[[42819,42819],\"valid\"],[[42820,42820],\"mapped\",[42821]],[[42821,42821],\"valid\"],[[42822,42822],\"mapped\",[42823]],[[42823,42823],\"valid\"],[[42824,42824],\"mapped\",[42825]],[[42825,42825],\"valid\"],[[42826,42826],\"mapped\",[42827]],[[42827,42827],\"valid\"],[[42828,42828],\"mapped\",[42829]],[[42829,42829],\"valid\"],[[42830,42830],\"mapped\",[42831]],[[42831,42831],\"valid\"],[[42832,42832],\"mapped\",[42833]],[[42833,42833],\"valid\"],[[42834,42834],\"mapped\",[42835]],[[42835,42835],\"valid\"],[[42836,42836],\"mapped\",[42837]],[[42837,42837],\"valid\"],[[42838,42838],\"mapped\",[42839]],[[42839,42839],\"valid\"],[[42840,42840],\"mapped\",[42841]],[[42841,42841],\"valid\"],[[42842,42842],\"mapped\",[42843]],[[42843,42843],\"valid\"],[[42844,42844],\"mapped\",[42845]],[[42845,42845],\"valid\"],[[42846,42846],\"mapped\",[42847]],[[42847,42847],\"valid\"],[[42848,42848],\"mapped\",[42849]],[[42849,42849],\"valid\"],[[42850,42850],\"mapped\",[42851]],[[42851,42851],\"valid\"],[[42852,42852],\"mapped\",[42853]],[[42853,42853],\"valid\"],[[42854,42854],\"mapped\",[42855]],[[42855,42855],\"valid\"],[[42856,42856],\"mapped\",[42857]],[[42857,42857],\"valid\"],[[42858,42858],\"mapped\",[42859]],[[42859,42859],\"valid\"],[[42860,42860],\"mapped\",[42861]],[[42861,42861],\"valid\"],[[42862,42862],\"mapped\",[42863]],[[42863,42863],\"valid\"],[[42864,42864],\"mapped\",[42863]],[[42865,42872],\"valid\"],[[42873,42873],\"mapped\",[42874]],[[42874,42874],\"valid\"],[[42875,42875],\"mapped\",[42876]],[[42876,42876],\"valid\"],[[42877,42877],\"mapped\",[7545]],[[42878,42878],\"mapped\",[42879]],[[42879,42879],\"valid\"],[[42880,42880],\"mapped\",[42881]],[[42881,42881],\"valid\"],[[42882,42882],\"mapped\",[42883]],[[42883,42883],\"valid\"],[[42884,42884],\"mapped\",[42885]],[[42885,42885],\"valid\"],[[42886,42886],\"mapped\",[42887]],[[42887,42888],\"valid\"],[[42889,42890],\"valid\",[],\"NV8\"],[[42891,42891],\"mapped\",[42892]],[[42892,42892],\"valid\"],[[42893,42893],\"mapped\",[613]],[[42894,42894],\"valid\"],[[42895,42895],\"valid\"],[[42896,42896],\"mapped\",[42897]],[[42897,42897],\"valid\"],[[42898,42898],\"mapped\",[42899]],[[42899,42899],\"valid\"],[[42900,42901],\"valid\"],[[42902,42902],\"mapped\",[42903]],[[42903,42903],\"valid\"],[[42904,42904],\"mapped\",[42905]],[[42905,42905],\"valid\"],[[42906,42906],\"mapped\",[42907]],[[42907,42907],\"valid\"],[[42908,42908],\"mapped\",[42909]],[[42909,42909],\"valid\"],[[42910,42910],\"mapped\",[42911]],[[42911,42911],\"valid\"],[[42912,42912],\"mapped\",[42913]],[[42913,42913],\"valid\"],[[42914,42914],\"mapped\",[42915]],[[42915,42915],\"valid\"],[[42916,42916],\"mapped\",[42917]],[[42917,42917],\"valid\"],[[42918,42918],\"mapped\",[42919]],[[42919,42919],\"valid\"],[[42920,42920],\"mapped\",[42921]],[[42921,42921],\"valid\"],[[42922,42922],\"mapped\",[614]],[[42923,42923],\"mapped\",[604]],[[42924,42924],\"mapped\",[609]],[[42925,42925],\"mapped\",[620]],[[42926,42927],\"disallowed\"],[[42928,42928],\"mapped\",[670]],[[42929,42929],\"mapped\",[647]],[[42930,42930],\"mapped\",[669]],[[42931,42931],\"mapped\",[43859]],[[42932,42932],\"mapped\",[42933]],[[42933,42933],\"valid\"],[[42934,42934],\"mapped\",[42935]],[[42935,42935],\"valid\"],[[42936,42998],\"disallowed\"],[[42999,42999],\"valid\"],[[43000,43000],\"mapped\",[295]],[[43001,43001],\"mapped\",[339]],[[43002,43002],\"valid\"],[[43003,43007],\"valid\"],[[43008,43047],\"valid\"],[[43048,43051],\"valid\",[],\"NV8\"],[[43052,43055],\"disallowed\"],[[43056,43065],\"valid\",[],\"NV8\"],[[43066,43071],\"disallowed\"],[[43072,43123],\"valid\"],[[43124,43127],\"valid\",[],\"NV8\"],[[43128,43135],\"disallowed\"],[[43136,43204],\"valid\"],[[43205,43213],\"disallowed\"],[[43214,43215],\"valid\",[],\"NV8\"],[[43216,43225],\"valid\"],[[43226,43231],\"disallowed\"],[[43232,43255],\"valid\"],[[43256,43258],\"valid\",[],\"NV8\"],[[43259,43259],\"valid\"],[[43260,43260],\"valid\",[],\"NV8\"],[[43261,43261],\"valid\"],[[43262,43263],\"disallowed\"],[[43264,43309],\"valid\"],[[43310,43311],\"valid\",[],\"NV8\"],[[43312,43347],\"valid\"],[[43348,43358],\"disallowed\"],[[43359,43359],\"valid\",[],\"NV8\"],[[43360,43388],\"valid\",[],\"NV8\"],[[43389,43391],\"disallowed\"],[[43392,43456],\"valid\"],[[43457,43469],\"valid\",[],\"NV8\"],[[43470,43470],\"disallowed\"],[[43471,43481],\"valid\"],[[43482,43485],\"disallowed\"],[[43486,43487],\"valid\",[],\"NV8\"],[[43488,43518],\"valid\"],[[43519,43519],\"disallowed\"],[[43520,43574],\"valid\"],[[43575,43583],\"disallowed\"],[[43584,43597],\"valid\"],[[43598,43599],\"disallowed\"],[[43600,43609],\"valid\"],[[43610,43611],\"disallowed\"],[[43612,43615],\"valid\",[],\"NV8\"],[[43616,43638],\"valid\"],[[43639,43641],\"valid\",[],\"NV8\"],[[43642,43643],\"valid\"],[[43644,43647],\"valid\"],[[43648,43714],\"valid\"],[[43715,43738],\"disallowed\"],[[43739,43741],\"valid\"],[[43742,43743],\"valid\",[],\"NV8\"],[[43744,43759],\"valid\"],[[43760,43761],\"valid\",[],\"NV8\"],[[43762,43766],\"valid\"],[[43767,43776],\"disallowed\"],[[43777,43782],\"valid\"],[[43783,43784],\"disallowed\"],[[43785,43790],\"valid\"],[[43791,43792],\"disallowed\"],[[43793,43798],\"valid\"],[[43799,43807],\"disallowed\"],[[43808,43814],\"valid\"],[[43815,43815],\"disallowed\"],[[43816,43822],\"valid\"],[[43823,43823],\"disallowed\"],[[43824,43866],\"valid\"],[[43867,43867],\"valid\",[],\"NV8\"],[[43868,43868],\"mapped\",[42791]],[[43869,43869],\"mapped\",[43831]],[[43870,43870],\"mapped\",[619]],[[43871,43871],\"mapped\",[43858]],[[43872,43875],\"valid\"],[[43876,43877],\"valid\"],[[43878,43887],\"disallowed\"],[[43888,43888],\"mapped\",[5024]],[[43889,43889],\"mapped\",[5025]],[[43890,43890],\"mapped\",[5026]],[[43891,43891],\"mapped\",[5027]],[[43892,43892],\"mapped\",[5028]],[[43893,43893],\"mapped\",[5029]],[[43894,43894],\"mapped\",[5030]],[[43895,43895],\"mapped\",[5031]],[[43896,43896],\"mapped\",[5032]],[[43897,43897],\"mapped\",[5033]],[[43898,43898],\"mapped\",[5034]],[[43899,43899],\"mapped\",[5035]],[[43900,43900],\"mapped\",[5036]],[[43901,43901],\"mapped\",[5037]],[[43902,43902],\"mapped\",[5038]],[[43903,43903],\"mapped\",[5039]],[[43904,43904],\"mapped\",[5040]],[[43905,43905],\"mapped\",[5041]],[[43906,43906],\"mapped\",[5042]],[[43907,43907],\"mapped\",[5043]],[[43908,43908],\"mapped\",[5044]],[[43909,43909],\"mapped\",[5045]],[[43910,43910],\"mapped\",[5046]],[[43911,43911],\"mapped\",[5047]],[[43912,43912],\"mapped\",[5048]],[[43913,43913],\"mapped\",[5049]],[[43914,43914],\"mapped\",[5050]],[[43915,43915],\"mapped\",[5051]],[[43916,43916],\"mapped\",[5052]],[[43917,43917],\"mapped\",[5053]],[[43918,43918],\"mapped\",[5054]],[[43919,43919],\"mapped\",[5055]],[[43920,43920],\"mapped\",[5056]],[[43921,43921],\"mapped\",[5057]],[[43922,43922],\"mapped\",[5058]],[[43923,43923],\"mapped\",[5059]],[[43924,43924],\"mapped\",[5060]],[[43925,43925],\"mapped\",[5061]],[[43926,43926],\"mapped\",[5062]],[[43927,43927],\"mapped\",[5063]],[[43928,43928],\"mapped\",[5064]],[[43929,43929],\"mapped\",[5065]],[[43930,43930],\"mapped\",[5066]],[[43931,43931],\"mapped\",[5067]],[[43932,43932],\"mapped\",[5068]],[[43933,43933],\"mapped\",[5069]],[[43934,43934],\"mapped\",[5070]],[[43935,43935],\"mapped\",[5071]],[[43936,43936],\"mapped\",[5072]],[[43937,43937],\"mapped\",[5073]],[[43938,43938],\"mapped\",[5074]],[[43939,43939],\"mapped\",[5075]],[[43940,43940],\"mapped\",[5076]],[[43941,43941],\"mapped\",[5077]],[[43942,43942],\"mapped\",[5078]],[[43943,43943],\"mapped\",[5079]],[[43944,43944],\"mapped\",[5080]],[[43945,43945],\"mapped\",[5081]],[[43946,43946],\"mapped\",[5082]],[[43947,43947],\"mapped\",[5083]],[[43948,43948],\"mapped\",[5084]],[[43949,43949],\"mapped\",[5085]],[[43950,43950],\"mapped\",[5086]],[[43951,43951],\"mapped\",[5087]],[[43952,43952],\"mapped\",[5088]],[[43953,43953],\"mapped\",[5089]],[[43954,43954],\"mapped\",[5090]],[[43955,43955],\"mapped\",[5091]],[[43956,43956],\"mapped\",[5092]],[[43957,43957],\"mapped\",[5093]],[[43958,43958],\"mapped\",[5094]],[[43959,43959],\"mapped\",[5095]],[[43960,43960],\"mapped\",[5096]],[[43961,43961],\"mapped\",[5097]],[[43962,43962],\"mapped\",[5098]],[[43963,43963],\"mapped\",[5099]],[[43964,43964],\"mapped\",[5100]],[[43965,43965],\"mapped\",[5101]],[[43966,43966],\"mapped\",[5102]],[[43967,43967],\"mapped\",[5103]],[[43968,44010],\"valid\"],[[44011,44011],\"valid\",[],\"NV8\"],[[44012,44013],\"valid\"],[[44014,44015],\"disallowed\"],[[44016,44025],\"valid\"],[[44026,44031],\"disallowed\"],[[44032,55203],\"valid\"],[[55204,55215],\"disallowed\"],[[55216,55238],\"valid\",[],\"NV8\"],[[55239,55242],\"disallowed\"],[[55243,55291],\"valid\",[],\"NV8\"],[[55292,55295],\"disallowed\"],[[55296,57343],\"disallowed\"],[[57344,63743],\"disallowed\"],[[63744,63744],\"mapped\",[35912]],[[63745,63745],\"mapped\",[26356]],[[63746,63746],\"mapped\",[36554]],[[63747,63747],\"mapped\",[36040]],[[63748,63748],\"mapped\",[28369]],[[63749,63749],\"mapped\",[20018]],[[63750,63750],\"mapped\",[21477]],[[63751,63752],\"mapped\",[40860]],[[63753,63753],\"mapped\",[22865]],[[63754,63754],\"mapped\",[37329]],[[63755,63755],\"mapped\",[21895]],[[63756,63756],\"mapped\",[22856]],[[63757,63757],\"mapped\",[25078]],[[63758,63758],\"mapped\",[30313]],[[63759,63759],\"mapped\",[32645]],[[63760,63760],\"mapped\",[34367]],[[63761,63761],\"mapped\",[34746]],[[63762,63762],\"mapped\",[35064]],[[63763,63763],\"mapped\",[37007]],[[63764,63764],\"mapped\",[27138]],[[63765,63765],\"mapped\",[27931]],[[63766,63766],\"mapped\",[28889]],[[63767,63767],\"mapped\",[29662]],[[63768,63768],\"mapped\",[33853]],[[63769,63769],\"mapped\",[37226]],[[63770,63770],\"mapped\",[39409]],[[63771,63771],\"mapped\",[20098]],[[63772,63772],\"mapped\",[21365]],[[63773,63773],\"mapped\",[27396]],[[63774,63774],\"mapped\",[29211]],[[63775,63775],\"mapped\",[34349]],[[63776,63776],\"mapped\",[40478]],[[63777,63777],\"mapped\",[23888]],[[63778,63778],\"mapped\",[28651]],[[63779,63779],\"mapped\",[34253]],[[63780,63780],\"mapped\",[35172]],[[63781,63781],\"mapped\",[25289]],[[63782,63782],\"mapped\",[33240]],[[63783,63783],\"mapped\",[34847]],[[63784,63784],\"mapped\",[24266]],[[63785,63785],\"mapped\",[26391]],[[63786,63786],\"mapped\",[28010]],[[63787,63787],\"mapped\",[29436]],[[63788,63788],\"mapped\",[37070]],[[63789,63789],\"mapped\",[20358]],[[63790,63790],\"mapped\",[20919]],[[63791,63791],\"mapped\",[21214]],[[63792,63792],\"mapped\",[25796]],[[63793,63793],\"mapped\",[27347]],[[63794,63794],\"mapped\",[29200]],[[63795,63795],\"mapped\",[30439]],[[63796,63796],\"mapped\",[32769]],[[63797,63797],\"mapped\",[34310]],[[63798,63798],\"mapped\",[34396]],[[63799,63799],\"mapped\",[36335]],[[63800,63800],\"mapped\",[38706]],[[63801,63801],\"mapped\",[39791]],[[63802,63802],\"mapped\",[40442]],[[63803,63803],\"mapped\",[30860]],[[63804,63804],\"mapped\",[31103]],[[63805,63805],\"mapped\",[32160]],[[63806,63806],\"mapped\",[33737]],[[63807,63807],\"mapped\",[37636]],[[63808,63808],\"mapped\",[40575]],[[63809,63809],\"mapped\",[35542]],[[63810,63810],\"mapped\",[22751]],[[63811,63811],\"mapped\",[24324]],[[63812,63812],\"mapped\",[31840]],[[63813,63813],\"mapped\",[32894]],[[63814,63814],\"mapped\",[29282]],[[63815,63815],\"mapped\",[30922]],[[63816,63816],\"mapped\",[36034]],[[63817,63817],\"mapped\",[38647]],[[63818,63818],\"mapped\",[22744]],[[63819,63819],\"mapped\",[23650]],[[63820,63820],\"mapped\",[27155]],[[63821,63821],\"mapped\",[28122]],[[63822,63822],\"mapped\",[28431]],[[63823,63823],\"mapped\",[32047]],[[63824,63824],\"mapped\",[32311]],[[63825,63825],\"mapped\",[38475]],[[63826,63826],\"mapped\",[21202]],[[63827,63827],\"mapped\",[32907]],[[63828,63828],\"mapped\",[20956]],[[63829,63829],\"mapped\",[20940]],[[63830,63830],\"mapped\",[31260]],[[63831,63831],\"mapped\",[32190]],[[63832,63832],\"mapped\",[33777]],[[63833,63833],\"mapped\",[38517]],[[63834,63834],\"mapped\",[35712]],[[63835,63835],\"mapped\",[25295]],[[63836,63836],\"mapped\",[27138]],[[63837,63837],\"mapped\",[35582]],[[63838,63838],\"mapped\",[20025]],[[63839,63839],\"mapped\",[23527]],[[63840,63840],\"mapped\",[24594]],[[63841,63841],\"mapped\",[29575]],[[63842,63842],\"mapped\",[30064]],[[63843,63843],\"mapped\",[21271]],[[63844,63844],\"mapped\",[30971]],[[63845,63845],\"mapped\",[20415]],[[63846,63846],\"mapped\",[24489]],[[63847,63847],\"mapped\",[19981]],[[63848,63848],\"mapped\",[27852]],[[63849,63849],\"mapped\",[25976]],[[63850,63850],\"mapped\",[32034]],[[63851,63851],\"mapped\",[21443]],[[63852,63852],\"mapped\",[22622]],[[63853,63853],\"mapped\",[30465]],[[63854,63854],\"mapped\",[33865]],[[63855,63855],\"mapped\",[35498]],[[63856,63856],\"mapped\",[27578]],[[63857,63857],\"mapped\",[36784]],[[63858,63858],\"mapped\",[27784]],[[63859,63859],\"mapped\",[25342]],[[63860,63860],\"mapped\",[33509]],[[63861,63861],\"mapped\",[25504]],[[63862,63862],\"mapped\",[30053]],[[63863,63863],\"mapped\",[20142]],[[63864,63864],\"mapped\",[20841]],[[63865,63865],\"mapped\",[20937]],[[63866,63866],\"mapped\",[26753]],[[63867,63867],\"mapped\",[31975]],[[63868,63868],\"mapped\",[33391]],[[63869,63869],\"mapped\",[35538]],[[63870,63870],\"mapped\",[37327]],[[63871,63871],\"mapped\",[21237]],[[63872,63872],\"mapped\",[21570]],[[63873,63873],\"mapped\",[22899]],[[63874,63874],\"mapped\",[24300]],[[63875,63875],\"mapped\",[26053]],[[63876,63876],\"mapped\",[28670]],[[63877,63877],\"mapped\",[31018]],[[63878,63878],\"mapped\",[38317]],[[63879,63879],\"mapped\",[39530]],[[63880,63880],\"mapped\",[40599]],[[63881,63881],\"mapped\",[40654]],[[63882,63882],\"mapped\",[21147]],[[63883,63883],\"mapped\",[26310]],[[63884,63884],\"mapped\",[27511]],[[63885,63885],\"mapped\",[36706]],[[63886,63886],\"mapped\",[24180]],[[63887,63887],\"mapped\",[24976]],[[63888,63888],\"mapped\",[25088]],[[63889,63889],\"mapped\",[25754]],[[63890,63890],\"mapped\",[28451]],[[63891,63891],\"mapped\",[29001]],[[63892,63892],\"mapped\",[29833]],[[63893,63893],\"mapped\",[31178]],[[63894,63894],\"mapped\",[32244]],[[63895,63895],\"mapped\",[32879]],[[63896,63896],\"mapped\",[36646]],[[63897,63897],\"mapped\",[34030]],[[63898,63898],\"mapped\",[36899]],[[63899,63899],\"mapped\",[37706]],[[63900,63900],\"mapped\",[21015]],[[63901,63901],\"mapped\",[21155]],[[63902,63902],\"mapped\",[21693]],[[63903,63903],\"mapped\",[28872]],[[63904,63904],\"mapped\",[35010]],[[63905,63905],\"mapped\",[35498]],[[63906,63906],\"mapped\",[24265]],[[63907,63907],\"mapped\",[24565]],[[63908,63908],\"mapped\",[25467]],[[63909,63909],\"mapped\",[27566]],[[63910,63910],\"mapped\",[31806]],[[63911,63911],\"mapped\",[29557]],[[63912,63912],\"mapped\",[20196]],[[63913,63913],\"mapped\",[22265]],[[63914,63914],\"mapped\",[23527]],[[63915,63915],\"mapped\",[23994]],[[63916,63916],\"mapped\",[24604]],[[63917,63917],\"mapped\",[29618]],[[63918,63918],\"mapped\",[29801]],[[63919,63919],\"mapped\",[32666]],[[63920,63920],\"mapped\",[32838]],[[63921,63921],\"mapped\",[37428]],[[63922,63922],\"mapped\",[38646]],[[63923,63923],\"mapped\",[38728]],[[63924,63924],\"mapped\",[38936]],[[63925,63925],\"mapped\",[20363]],[[63926,63926],\"mapped\",[31150]],[[63927,63927],\"mapped\",[37300]],[[63928,63928],\"mapped\",[38584]],[[63929,63929],\"mapped\",[24801]],[[63930,63930],\"mapped\",[20102]],[[63931,63931],\"mapped\",[20698]],[[63932,63932],\"mapped\",[23534]],[[63933,63933],\"mapped\",[23615]],[[63934,63934],\"mapped\",[26009]],[[63935,63935],\"mapped\",[27138]],[[63936,63936],\"mapped\",[29134]],[[63937,63937],\"mapped\",[30274]],[[63938,63938],\"mapped\",[34044]],[[63939,63939],\"mapped\",[36988]],[[63940,63940],\"mapped\",[40845]],[[63941,63941],\"mapped\",[26248]],[[63942,63942],\"mapped\",[38446]],[[63943,63943],\"mapped\",[21129]],[[63944,63944],\"mapped\",[26491]],[[63945,63945],\"mapped\",[26611]],[[63946,63946],\"mapped\",[27969]],[[63947,63947],\"mapped\",[28316]],[[63948,63948],\"mapped\",[29705]],[[63949,63949],\"mapped\",[30041]],[[63950,63950],\"mapped\",[30827]],[[63951,63951],\"mapped\",[32016]],[[63952,63952],\"mapped\",[39006]],[[63953,63953],\"mapped\",[20845]],[[63954,63954],\"mapped\",[25134]],[[63955,63955],\"mapped\",[38520]],[[63956,63956],\"mapped\",[20523]],[[63957,63957],\"mapped\",[23833]],[[63958,63958],\"mapped\",[28138]],[[63959,63959],\"mapped\",[36650]],[[63960,63960],\"mapped\",[24459]],[[63961,63961],\"mapped\",[24900]],[[63962,63962],\"mapped\",[26647]],[[63963,63963],\"mapped\",[29575]],[[63964,63964],\"mapped\",[38534]],[[63965,63965],\"mapped\",[21033]],[[63966,63966],\"mapped\",[21519]],[[63967,63967],\"mapped\",[23653]],[[63968,63968],\"mapped\",[26131]],[[63969,63969],\"mapped\",[26446]],[[63970,63970],\"mapped\",[26792]],[[63971,63971],\"mapped\",[27877]],[[63972,63972],\"mapped\",[29702]],[[63973,63973],\"mapped\",[30178]],[[63974,63974],\"mapped\",[32633]],[[63975,63975],\"mapped\",[35023]],[[63976,63976],\"mapped\",[35041]],[[63977,63977],\"mapped\",[37324]],[[63978,63978],\"mapped\",[38626]],[[63979,63979],\"mapped\",[21311]],[[63980,63980],\"mapped\",[28346]],[[63981,63981],\"mapped\",[21533]],[[63982,63982],\"mapped\",[29136]],[[63983,63983],\"mapped\",[29848]],[[63984,63984],\"mapped\",[34298]],[[63985,63985],\"mapped\",[38563]],[[63986,63986],\"mapped\",[40023]],[[63987,63987],\"mapped\",[40607]],[[63988,63988],\"mapped\",[26519]],[[63989,63989],\"mapped\",[28107]],[[63990,63990],\"mapped\",[33256]],[[63991,63991],\"mapped\",[31435]],[[63992,63992],\"mapped\",[31520]],[[63993,63993],\"mapped\",[31890]],[[63994,63994],\"mapped\",[29376]],[[63995,63995],\"mapped\",[28825]],[[63996,63996],\"mapped\",[35672]],[[63997,63997],\"mapped\",[20160]],[[63998,63998],\"mapped\",[33590]],[[63999,63999],\"mapped\",[21050]],[[64000,64000],\"mapped\",[20999]],[[64001,64001],\"mapped\",[24230]],[[64002,64002],\"mapped\",[25299]],[[64003,64003],\"mapped\",[31958]],[[64004,64004],\"mapped\",[23429]],[[64005,64005],\"mapped\",[27934]],[[64006,64006],\"mapped\",[26292]],[[64007,64007],\"mapped\",[36667]],[[64008,64008],\"mapped\",[34892]],[[64009,64009],\"mapped\",[38477]],[[64010,64010],\"mapped\",[35211]],[[64011,64011],\"mapped\",[24275]],[[64012,64012],\"mapped\",[20800]],[[64013,64013],\"mapped\",[21952]],[[64014,64015],\"valid\"],[[64016,64016],\"mapped\",[22618]],[[64017,64017],\"valid\"],[[64018,64018],\"mapped\",[26228]],[[64019,64020],\"valid\"],[[64021,64021],\"mapped\",[20958]],[[64022,64022],\"mapped\",[29482]],[[64023,64023],\"mapped\",[30410]],[[64024,64024],\"mapped\",[31036]],[[64025,64025],\"mapped\",[31070]],[[64026,64026],\"mapped\",[31077]],[[64027,64027],\"mapped\",[31119]],[[64028,64028],\"mapped\",[38742]],[[64029,64029],\"mapped\",[31934]],[[64030,64030],\"mapped\",[32701]],[[64031,64031],\"valid\"],[[64032,64032],\"mapped\",[34322]],[[64033,64033],\"valid\"],[[64034,64034],\"mapped\",[35576]],[[64035,64036],\"valid\"],[[64037,64037],\"mapped\",[36920]],[[64038,64038],\"mapped\",[37117]],[[64039,64041],\"valid\"],[[64042,64042],\"mapped\",[39151]],[[64043,64043],\"mapped\",[39164]],[[64044,64044],\"mapped\",[39208]],[[64045,64045],\"mapped\",[40372]],[[64046,64046],\"mapped\",[37086]],[[64047,64047],\"mapped\",[38583]],[[64048,64048],\"mapped\",[20398]],[[64049,64049],\"mapped\",[20711]],[[64050,64050],\"mapped\",[20813]],[[64051,64051],\"mapped\",[21193]],[[64052,64052],\"mapped\",[21220]],[[64053,64053],\"mapped\",[21329]],[[64054,64054],\"mapped\",[21917]],[[64055,64055],\"mapped\",[22022]],[[64056,64056],\"mapped\",[22120]],[[64057,64057],\"mapped\",[22592]],[[64058,64058],\"mapped\",[22696]],[[64059,64059],\"mapped\",[23652]],[[64060,64060],\"mapped\",[23662]],[[64061,64061],\"mapped\",[24724]],[[64062,64062],\"mapped\",[24936]],[[64063,64063],\"mapped\",[24974]],[[64064,64064],\"mapped\",[25074]],[[64065,64065],\"mapped\",[25935]],[[64066,64066],\"mapped\",[26082]],[[64067,64067],\"mapped\",[26257]],[[64068,64068],\"mapped\",[26757]],[[64069,64069],\"mapped\",[28023]],[[64070,64070],\"mapped\",[28186]],[[64071,64071],\"mapped\",[28450]],[[64072,64072],\"mapped\",[29038]],[[64073,64073],\"mapped\",[29227]],[[64074,64074],\"mapped\",[29730]],[[64075,64075],\"mapped\",[30865]],[[64076,64076],\"mapped\",[31038]],[[64077,64077],\"mapped\",[31049]],[[64078,64078],\"mapped\",[31048]],[[64079,64079],\"mapped\",[31056]],[[64080,64080],\"mapped\",[31062]],[[64081,64081],\"mapped\",[31069]],[[64082,64082],\"mapped\",[31117]],[[64083,64083],\"mapped\",[31118]],[[64084,64084],\"mapped\",[31296]],[[64085,64085],\"mapped\",[31361]],[[64086,64086],\"mapped\",[31680]],[[64087,64087],\"mapped\",[32244]],[[64088,64088],\"mapped\",[32265]],[[64089,64089],\"mapped\",[32321]],[[64090,64090],\"mapped\",[32626]],[[64091,64091],\"mapped\",[32773]],[[64092,64092],\"mapped\",[33261]],[[64093,64094],\"mapped\",[33401]],[[64095,64095],\"mapped\",[33879]],[[64096,64096],\"mapped\",[35088]],[[64097,64097],\"mapped\",[35222]],[[64098,64098],\"mapped\",[35585]],[[64099,64099],\"mapped\",[35641]],[[64100,64100],\"mapped\",[36051]],[[64101,64101],\"mapped\",[36104]],[[64102,64102],\"mapped\",[36790]],[[64103,64103],\"mapped\",[36920]],[[64104,64104],\"mapped\",[38627]],[[64105,64105],\"mapped\",[38911]],[[64106,64106],\"mapped\",[38971]],[[64107,64107],\"mapped\",[24693]],[[64108,64108],\"mapped\",[148206]],[[64109,64109],\"mapped\",[33304]],[[64110,64111],\"disallowed\"],[[64112,64112],\"mapped\",[20006]],[[64113,64113],\"mapped\",[20917]],[[64114,64114],\"mapped\",[20840]],[[64115,64115],\"mapped\",[20352]],[[64116,64116],\"mapped\",[20805]],[[64117,64117],\"mapped\",[20864]],[[64118,64118],\"mapped\",[21191]],[[64119,64119],\"mapped\",[21242]],[[64120,64120],\"mapped\",[21917]],[[64121,64121],\"mapped\",[21845]],[[64122,64122],\"mapped\",[21913]],[[64123,64123],\"mapped\",[21986]],[[64124,64124],\"mapped\",[22618]],[[64125,64125],\"mapped\",[22707]],[[64126,64126],\"mapped\",[22852]],[[64127,64127],\"mapped\",[22868]],[[64128,64128],\"mapped\",[23138]],[[64129,64129],\"mapped\",[23336]],[[64130,64130],\"mapped\",[24274]],[[64131,64131],\"mapped\",[24281]],[[64132,64132],\"mapped\",[24425]],[[64133,64133],\"mapped\",[24493]],[[64134,64134],\"mapped\",[24792]],[[64135,64135],\"mapped\",[24910]],[[64136,64136],\"mapped\",[24840]],[[64137,64137],\"mapped\",[24974]],[[64138,64138],\"mapped\",[24928]],[[64139,64139],\"mapped\",[25074]],[[64140,64140],\"mapped\",[25140]],[[64141,64141],\"mapped\",[25540]],[[64142,64142],\"mapped\",[25628]],[[64143,64143],\"mapped\",[25682]],[[64144,64144],\"mapped\",[25942]],[[64145,64145],\"mapped\",[26228]],[[64146,64146],\"mapped\",[26391]],[[64147,64147],\"mapped\",[26395]],[[64148,64148],\"mapped\",[26454]],[[64149,64149],\"mapped\",[27513]],[[64150,64150],\"mapped\",[27578]],[[64151,64151],\"mapped\",[27969]],[[64152,64152],\"mapped\",[28379]],[[64153,64153],\"mapped\",[28363]],[[64154,64154],\"mapped\",[28450]],[[64155,64155],\"mapped\",[28702]],[[64156,64156],\"mapped\",[29038]],[[64157,64157],\"mapped\",[30631]],[[64158,64158],\"mapped\",[29237]],[[64159,64159],\"mapped\",[29359]],[[64160,64160],\"mapped\",[29482]],[[64161,64161],\"mapped\",[29809]],[[64162,64162],\"mapped\",[29958]],[[64163,64163],\"mapped\",[30011]],[[64164,64164],\"mapped\",[30237]],[[64165,64165],\"mapped\",[30239]],[[64166,64166],\"mapped\",[30410]],[[64167,64167],\"mapped\",[30427]],[[64168,64168],\"mapped\",[30452]],[[64169,64169],\"mapped\",[30538]],[[64170,64170],\"mapped\",[30528]],[[64171,64171],\"mapped\",[30924]],[[64172,64172],\"mapped\",[31409]],[[64173,64173],\"mapped\",[31680]],[[64174,64174],\"mapped\",[31867]],[[64175,64175],\"mapped\",[32091]],[[64176,64176],\"mapped\",[32244]],[[64177,64177],\"mapped\",[32574]],[[64178,64178],\"mapped\",[32773]],[[64179,64179],\"mapped\",[33618]],[[64180,64180],\"mapped\",[33775]],[[64181,64181],\"mapped\",[34681]],[[64182,64182],\"mapped\",[35137]],[[64183,64183],\"mapped\",[35206]],[[64184,64184],\"mapped\",[35222]],[[64185,64185],\"mapped\",[35519]],[[64186,64186],\"mapped\",[35576]],[[64187,64187],\"mapped\",[35531]],[[64188,64188],\"mapped\",[35585]],[[64189,64189],\"mapped\",[35582]],[[64190,64190],\"mapped\",[35565]],[[64191,64191],\"mapped\",[35641]],[[64192,64192],\"mapped\",[35722]],[[64193,64193],\"mapped\",[36104]],[[64194,64194],\"mapped\",[36664]],[[64195,64195],\"mapped\",[36978]],[[64196,64196],\"mapped\",[37273]],[[64197,64197],\"mapped\",[37494]],[[64198,64198],\"mapped\",[38524]],[[64199,64199],\"mapped\",[38627]],[[64200,64200],\"mapped\",[38742]],[[64201,64201],\"mapped\",[38875]],[[64202,64202],\"mapped\",[38911]],[[64203,64203],\"mapped\",[38923]],[[64204,64204],\"mapped\",[38971]],[[64205,64205],\"mapped\",[39698]],[[64206,64206],\"mapped\",[40860]],[[64207,64207],\"mapped\",[141386]],[[64208,64208],\"mapped\",[141380]],[[64209,64209],\"mapped\",[144341]],[[64210,64210],\"mapped\",[15261]],[[64211,64211],\"mapped\",[16408]],[[64212,64212],\"mapped\",[16441]],[[64213,64213],\"mapped\",[152137]],[[64214,64214],\"mapped\",[154832]],[[64215,64215],\"mapped\",[163539]],[[64216,64216],\"mapped\",[40771]],[[64217,64217],\"mapped\",[40846]],[[64218,64255],\"disallowed\"],[[64256,64256],\"mapped\",[102,102]],[[64257,64257],\"mapped\",[102,105]],[[64258,64258],\"mapped\",[102,108]],[[64259,64259],\"mapped\",[102,102,105]],[[64260,64260],\"mapped\",[102,102,108]],[[64261,64262],\"mapped\",[115,116]],[[64263,64274],\"disallowed\"],[[64275,64275],\"mapped\",[1396,1398]],[[64276,64276],\"mapped\",[1396,1381]],[[64277,64277],\"mapped\",[1396,1387]],[[64278,64278],\"mapped\",[1406,1398]],[[64279,64279],\"mapped\",[1396,1389]],[[64280,64284],\"disallowed\"],[[64285,64285],\"mapped\",[1497,1460]],[[64286,64286],\"valid\"],[[64287,64287],\"mapped\",[1522,1463]],[[64288,64288],\"mapped\",[1506]],[[64289,64289],\"mapped\",[1488]],[[64290,64290],\"mapped\",[1491]],[[64291,64291],\"mapped\",[1492]],[[64292,64292],\"mapped\",[1499]],[[64293,64293],\"mapped\",[1500]],[[64294,64294],\"mapped\",[1501]],[[64295,64295],\"mapped\",[1512]],[[64296,64296],\"mapped\",[1514]],[[64297,64297],\"disallowed_STD3_mapped\",[43]],[[64298,64298],\"mapped\",[1513,1473]],[[64299,64299],\"mapped\",[1513,1474]],[[64300,64300],\"mapped\",[1513,1468,1473]],[[64301,64301],\"mapped\",[1513,1468,1474]],[[64302,64302],\"mapped\",[1488,1463]],[[64303,64303],\"mapped\",[1488,1464]],[[64304,64304],\"mapped\",[1488,1468]],[[64305,64305],\"mapped\",[1489,1468]],[[64306,64306],\"mapped\",[1490,1468]],[[64307,64307],\"mapped\",[1491,1468]],[[64308,64308],\"mapped\",[1492,1468]],[[64309,64309],\"mapped\",[1493,1468]],[[64310,64310],\"mapped\",[1494,1468]],[[64311,64311],\"disallowed\"],[[64312,64312],\"mapped\",[1496,1468]],[[64313,64313],\"mapped\",[1497,1468]],[[64314,64314],\"mapped\",[1498,1468]],[[64315,64315],\"mapped\",[1499,1468]],[[64316,64316],\"mapped\",[1500,1468]],[[64317,64317],\"disallowed\"],[[64318,64318],\"mapped\",[1502,1468]],[[64319,64319],\"disallowed\"],[[64320,64320],\"mapped\",[1504,1468]],[[64321,64321],\"mapped\",[1505,1468]],[[64322,64322],\"disallowed\"],[[64323,64323],\"mapped\",[1507,1468]],[[64324,64324],\"mapped\",[1508,1468]],[[64325,64325],\"disallowed\"],[[64326,64326],\"mapped\",[1510,1468]],[[64327,64327],\"mapped\",[1511,1468]],[[64328,64328],\"mapped\",[1512,1468]],[[64329,64329],\"mapped\",[1513,1468]],[[64330,64330],\"mapped\",[1514,1468]],[[64331,64331],\"mapped\",[1493,1465]],[[64332,64332],\"mapped\",[1489,1471]],[[64333,64333],\"mapped\",[1499,1471]],[[64334,64334],\"mapped\",[1508,1471]],[[64335,64335],\"mapped\",[1488,1500]],[[64336,64337],\"mapped\",[1649]],[[64338,64341],\"mapped\",[1659]],[[64342,64345],\"mapped\",[1662]],[[64346,64349],\"mapped\",[1664]],[[64350,64353],\"mapped\",[1658]],[[64354,64357],\"mapped\",[1663]],[[64358,64361],\"mapped\",[1657]],[[64362,64365],\"mapped\",[1700]],[[64366,64369],\"mapped\",[1702]],[[64370,64373],\"mapped\",[1668]],[[64374,64377],\"mapped\",[1667]],[[64378,64381],\"mapped\",[1670]],[[64382,64385],\"mapped\",[1671]],[[64386,64387],\"mapped\",[1677]],[[64388,64389],\"mapped\",[1676]],[[64390,64391],\"mapped\",[1678]],[[64392,64393],\"mapped\",[1672]],[[64394,64395],\"mapped\",[1688]],[[64396,64397],\"mapped\",[1681]],[[64398,64401],\"mapped\",[1705]],[[64402,64405],\"mapped\",[1711]],[[64406,64409],\"mapped\",[1715]],[[64410,64413],\"mapped\",[1713]],[[64414,64415],\"mapped\",[1722]],[[64416,64419],\"mapped\",[1723]],[[64420,64421],\"mapped\",[1728]],[[64422,64425],\"mapped\",[1729]],[[64426,64429],\"mapped\",[1726]],[[64430,64431],\"mapped\",[1746]],[[64432,64433],\"mapped\",[1747]],[[64434,64449],\"valid\",[],\"NV8\"],[[64450,64466],\"disallowed\"],[[64467,64470],\"mapped\",[1709]],[[64471,64472],\"mapped\",[1735]],[[64473,64474],\"mapped\",[1734]],[[64475,64476],\"mapped\",[1736]],[[64477,64477],\"mapped\",[1735,1652]],[[64478,64479],\"mapped\",[1739]],[[64480,64481],\"mapped\",[1733]],[[64482,64483],\"mapped\",[1737]],[[64484,64487],\"mapped\",[1744]],[[64488,64489],\"mapped\",[1609]],[[64490,64491],\"mapped\",[1574,1575]],[[64492,64493],\"mapped\",[1574,1749]],[[64494,64495],\"mapped\",[1574,1608]],[[64496,64497],\"mapped\",[1574,1735]],[[64498,64499],\"mapped\",[1574,1734]],[[64500,64501],\"mapped\",[1574,1736]],[[64502,64504],\"mapped\",[1574,1744]],[[64505,64507],\"mapped\",[1574,1609]],[[64508,64511],\"mapped\",[1740]],[[64512,64512],\"mapped\",[1574,1580]],[[64513,64513],\"mapped\",[1574,1581]],[[64514,64514],\"mapped\",[1574,1605]],[[64515,64515],\"mapped\",[1574,1609]],[[64516,64516],\"mapped\",[1574,1610]],[[64517,64517],\"mapped\",[1576,1580]],[[64518,64518],\"mapped\",[1576,1581]],[[64519,64519],\"mapped\",[1576,1582]],[[64520,64520],\"mapped\",[1576,1605]],[[64521,64521],\"mapped\",[1576,1609]],[[64522,64522],\"mapped\",[1576,1610]],[[64523,64523],\"mapped\",[1578,1580]],[[64524,64524],\"mapped\",[1578,1581]],[[64525,64525],\"mapped\",[1578,1582]],[[64526,64526],\"mapped\",[1578,1605]],[[64527,64527],\"mapped\",[1578,1609]],[[64528,64528],\"mapped\",[1578,1610]],[[64529,64529],\"mapped\",[1579,1580]],[[64530,64530],\"mapped\",[1579,1605]],[[64531,64531],\"mapped\",[1579,1609]],[[64532,64532],\"mapped\",[1579,1610]],[[64533,64533],\"mapped\",[1580,1581]],[[64534,64534],\"mapped\",[1580,1605]],[[64535,64535],\"mapped\",[1581,1580]],[[64536,64536],\"mapped\",[1581,1605]],[[64537,64537],\"mapped\",[1582,1580]],[[64538,64538],\"mapped\",[1582,1581]],[[64539,64539],\"mapped\",[1582,1605]],[[64540,64540],\"mapped\",[1587,1580]],[[64541,64541],\"mapped\",[1587,1581]],[[64542,64542],\"mapped\",[1587,1582]],[[64543,64543],\"mapped\",[1587,1605]],[[64544,64544],\"mapped\",[1589,1581]],[[64545,64545],\"mapped\",[1589,1605]],[[64546,64546],\"mapped\",[1590,1580]],[[64547,64547],\"mapped\",[1590,1581]],[[64548,64548],\"mapped\",[1590,1582]],[[64549,64549],\"mapped\",[1590,1605]],[[64550,64550],\"mapped\",[1591,1581]],[[64551,64551],\"mapped\",[1591,1605]],[[64552,64552],\"mapped\",[1592,1605]],[[64553,64553],\"mapped\",[1593,1580]],[[64554,64554],\"mapped\",[1593,1605]],[[64555,64555],\"mapped\",[1594,1580]],[[64556,64556],\"mapped\",[1594,1605]],[[64557,64557],\"mapped\",[1601,1580]],[[64558,64558],\"mapped\",[1601,1581]],[[64559,64559],\"mapped\",[1601,1582]],[[64560,64560],\"mapped\",[1601,1605]],[[64561,64561],\"mapped\",[1601,1609]],[[64562,64562],\"mapped\",[1601,1610]],[[64563,64563],\"mapped\",[1602,1581]],[[64564,64564],\"mapped\",[1602,1605]],[[64565,64565],\"mapped\",[1602,1609]],[[64566,64566],\"mapped\",[1602,1610]],[[64567,64567],\"mapped\",[1603,1575]],[[64568,64568],\"mapped\",[1603,1580]],[[64569,64569],\"mapped\",[1603,1581]],[[64570,64570],\"mapped\",[1603,1582]],[[64571,64571],\"mapped\",[1603,1604]],[[64572,64572],\"mapped\",[1603,1605]],[[64573,64573],\"mapped\",[1603,1609]],[[64574,64574],\"mapped\",[1603,1610]],[[64575,64575],\"mapped\",[1604,1580]],[[64576,64576],\"mapped\",[1604,1581]],[[64577,64577],\"mapped\",[1604,1582]],[[64578,64578],\"mapped\",[1604,1605]],[[64579,64579],\"mapped\",[1604,1609]],[[64580,64580],\"mapped\",[1604,1610]],[[64581,64581],\"mapped\",[1605,1580]],[[64582,64582],\"mapped\",[1605,1581]],[[64583,64583],\"mapped\",[1605,1582]],[[64584,64584],\"mapped\",[1605,1605]],[[64585,64585],\"mapped\",[1605,1609]],[[64586,64586],\"mapped\",[1605,1610]],[[64587,64587],\"mapped\",[1606,1580]],[[64588,64588],\"mapped\",[1606,1581]],[[64589,64589],\"mapped\",[1606,1582]],[[64590,64590],\"mapped\",[1606,1605]],[[64591,64591],\"mapped\",[1606,1609]],[[64592,64592],\"mapped\",[1606,1610]],[[64593,64593],\"mapped\",[1607,1580]],[[64594,64594],\"mapped\",[1607,1605]],[[64595,64595],\"mapped\",[1607,1609]],[[64596,64596],\"mapped\",[1607,1610]],[[64597,64597],\"mapped\",[1610,1580]],[[64598,64598],\"mapped\",[1610,1581]],[[64599,64599],\"mapped\",[1610,1582]],[[64600,64600],\"mapped\",[1610,1605]],[[64601,64601],\"mapped\",[1610,1609]],[[64602,64602],\"mapped\",[1610,1610]],[[64603,64603],\"mapped\",[1584,1648]],[[64604,64604],\"mapped\",[1585,1648]],[[64605,64605],\"mapped\",[1609,1648]],[[64606,64606],\"disallowed_STD3_mapped\",[32,1612,1617]],[[64607,64607],\"disallowed_STD3_mapped\",[32,1613,1617]],[[64608,64608],\"disallowed_STD3_mapped\",[32,1614,1617]],[[64609,64609],\"disallowed_STD3_mapped\",[32,1615,1617]],[[64610,64610],\"disallowed_STD3_mapped\",[32,1616,1617]],[[64611,64611],\"disallowed_STD3_mapped\",[32,1617,1648]],[[64612,64612],\"mapped\",[1574,1585]],[[64613,64613],\"mapped\",[1574,1586]],[[64614,64614],\"mapped\",[1574,1605]],[[64615,64615],\"mapped\",[1574,1606]],[[64616,64616],\"mapped\",[1574,1609]],[[64617,64617],\"mapped\",[1574,1610]],[[64618,64618],\"mapped\",[1576,1585]],[[64619,64619],\"mapped\",[1576,1586]],[[64620,64620],\"mapped\",[1576,1605]],[[64621,64621],\"mapped\",[1576,1606]],[[64622,64622],\"mapped\",[1576,1609]],[[64623,64623],\"mapped\",[1576,1610]],[[64624,64624],\"mapped\",[1578,1585]],[[64625,64625],\"mapped\",[1578,1586]],[[64626,64626],\"mapped\",[1578,1605]],[[64627,64627],\"mapped\",[1578,1606]],[[64628,64628],\"mapped\",[1578,1609]],[[64629,64629],\"mapped\",[1578,1610]],[[64630,64630],\"mapped\",[1579,1585]],[[64631,64631],\"mapped\",[1579,1586]],[[64632,64632],\"mapped\",[1579,1605]],[[64633,64633],\"mapped\",[1579,1606]],[[64634,64634],\"mapped\",[1579,1609]],[[64635,64635],\"mapped\",[1579,1610]],[[64636,64636],\"mapped\",[1601,1609]],[[64637,64637],\"mapped\",[1601,1610]],[[64638,64638],\"mapped\",[1602,1609]],[[64639,64639],\"mapped\",[1602,1610]],[[64640,64640],\"mapped\",[1603,1575]],[[64641,64641],\"mapped\",[1603,1604]],[[64642,64642],\"mapped\",[1603,1605]],[[64643,64643],\"mapped\",[1603,1609]],[[64644,64644],\"mapped\",[1603,1610]],[[64645,64645],\"mapped\",[1604,1605]],[[64646,64646],\"mapped\",[1604,1609]],[[64647,64647],\"mapped\",[1604,1610]],[[64648,64648],\"mapped\",[1605,1575]],[[64649,64649],\"mapped\",[1605,1605]],[[64650,64650],\"mapped\",[1606,1585]],[[64651,64651],\"mapped\",[1606,1586]],[[64652,64652],\"mapped\",[1606,1605]],[[64653,64653],\"mapped\",[1606,1606]],[[64654,64654],\"mapped\",[1606,1609]],[[64655,64655],\"mapped\",[1606,1610]],[[64656,64656],\"mapped\",[1609,1648]],[[64657,64657],\"mapped\",[1610,1585]],[[64658,64658],\"mapped\",[1610,1586]],[[64659,64659],\"mapped\",[1610,1605]],[[64660,64660],\"mapped\",[1610,1606]],[[64661,64661],\"mapped\",[1610,1609]],[[64662,64662],\"mapped\",[1610,1610]],[[64663,64663],\"mapped\",[1574,1580]],[[64664,64664],\"mapped\",[1574,1581]],[[64665,64665],\"mapped\",[1574,1582]],[[64666,64666],\"mapped\",[1574,1605]],[[64667,64667],\"mapped\",[1574,1607]],[[64668,64668],\"mapped\",[1576,1580]],[[64669,64669],\"mapped\",[1576,1581]],[[64670,64670],\"mapped\",[1576,1582]],[[64671,64671],\"mapped\",[1576,1605]],[[64672,64672],\"mapped\",[1576,1607]],[[64673,64673],\"mapped\",[1578,1580]],[[64674,64674],\"mapped\",[1578,1581]],[[64675,64675],\"mapped\",[1578,1582]],[[64676,64676],\"mapped\",[1578,1605]],[[64677,64677],\"mapped\",[1578,1607]],[[64678,64678],\"mapped\",[1579,1605]],[[64679,64679],\"mapped\",[1580,1581]],[[64680,64680],\"mapped\",[1580,1605]],[[64681,64681],\"mapped\",[1581,1580]],[[64682,64682],\"mapped\",[1581,1605]],[[64683,64683],\"mapped\",[1582,1580]],[[64684,64684],\"mapped\",[1582,1605]],[[64685,64685],\"mapped\",[1587,1580]],[[64686,64686],\"mapped\",[1587,1581]],[[64687,64687],\"mapped\",[1587,1582]],[[64688,64688],\"mapped\",[1587,1605]],[[64689,64689],\"mapped\",[1589,1581]],[[64690,64690],\"mapped\",[1589,1582]],[[64691,64691],\"mapped\",[1589,1605]],[[64692,64692],\"mapped\",[1590,1580]],[[64693,64693],\"mapped\",[1590,1581]],[[64694,64694],\"mapped\",[1590,1582]],[[64695,64695],\"mapped\",[1590,1605]],[[64696,64696],\"mapped\",[1591,1581]],[[64697,64697],\"mapped\",[1592,1605]],[[64698,64698],\"mapped\",[1593,1580]],[[64699,64699],\"mapped\",[1593,1605]],[[64700,64700],\"mapped\",[1594,1580]],[[64701,64701],\"mapped\",[1594,1605]],[[64702,64702],\"mapped\",[1601,1580]],[[64703,64703],\"mapped\",[1601,1581]],[[64704,64704],\"mapped\",[1601,1582]],[[64705,64705],\"mapped\",[1601,1605]],[[64706,64706],\"mapped\",[1602,1581]],[[64707,64707],\"mapped\",[1602,1605]],[[64708,64708],\"mapped\",[1603,1580]],[[64709,64709],\"mapped\",[1603,1581]],[[64710,64710],\"mapped\",[1603,1582]],[[64711,64711],\"mapped\",[1603,1604]],[[64712,64712],\"mapped\",[1603,1605]],[[64713,64713],\"mapped\",[1604,1580]],[[64714,64714],\"mapped\",[1604,1581]],[[64715,64715],\"mapped\",[1604,1582]],[[64716,64716],\"mapped\",[1604,1605]],[[64717,64717],\"mapped\",[1604,1607]],[[64718,64718],\"mapped\",[1605,1580]],[[64719,64719],\"mapped\",[1605,1581]],[[64720,64720],\"mapped\",[1605,1582]],[[64721,64721],\"mapped\",[1605,1605]],[[64722,64722],\"mapped\",[1606,1580]],[[64723,64723],\"mapped\",[1606,1581]],[[64724,64724],\"mapped\",[1606,1582]],[[64725,64725],\"mapped\",[1606,1605]],[[64726,64726],\"mapped\",[1606,1607]],[[64727,64727],\"mapped\",[1607,1580]],[[64728,64728],\"mapped\",[1607,1605]],[[64729,64729],\"mapped\",[1607,1648]],[[64730,64730],\"mapped\",[1610,1580]],[[64731,64731],\"mapped\",[1610,1581]],[[64732,64732],\"mapped\",[1610,1582]],[[64733,64733],\"mapped\",[1610,1605]],[[64734,64734],\"mapped\",[1610,1607]],[[64735,64735],\"mapped\",[1574,1605]],[[64736,64736],\"mapped\",[1574,1607]],[[64737,64737],\"mapped\",[1576,1605]],[[64738,64738],\"mapped\",[1576,1607]],[[64739,64739],\"mapped\",[1578,1605]],[[64740,64740],\"mapped\",[1578,1607]],[[64741,64741],\"mapped\",[1579,1605]],[[64742,64742],\"mapped\",[1579,1607]],[[64743,64743],\"mapped\",[1587,1605]],[[64744,64744],\"mapped\",[1587,1607]],[[64745,64745],\"mapped\",[1588,1605]],[[64746,64746],\"mapped\",[1588,1607]],[[64747,64747],\"mapped\",[1603,1604]],[[64748,64748],\"mapped\",[1603,1605]],[[64749,64749],\"mapped\",[1604,1605]],[[64750,64750],\"mapped\",[1606,1605]],[[64751,64751],\"mapped\",[1606,1607]],[[64752,64752],\"mapped\",[1610,1605]],[[64753,64753],\"mapped\",[1610,1607]],[[64754,64754],\"mapped\",[1600,1614,1617]],[[64755,64755],\"mapped\",[1600,1615,1617]],[[64756,64756],\"mapped\",[1600,1616,1617]],[[64757,64757],\"mapped\",[1591,1609]],[[64758,64758],\"mapped\",[1591,1610]],[[64759,64759],\"mapped\",[1593,1609]],[[64760,64760],\"mapped\",[1593,1610]],[[64761,64761],\"mapped\",[1594,1609]],[[64762,64762],\"mapped\",[1594,1610]],[[64763,64763],\"mapped\",[1587,1609]],[[64764,64764],\"mapped\",[1587,1610]],[[64765,64765],\"mapped\",[1588,1609]],[[64766,64766],\"mapped\",[1588,1610]],[[64767,64767],\"mapped\",[1581,1609]],[[64768,64768],\"mapped\",[1581,1610]],[[64769,64769],\"mapped\",[1580,1609]],[[64770,64770],\"mapped\",[1580,1610]],[[64771,64771],\"mapped\",[1582,1609]],[[64772,64772],\"mapped\",[1582,1610]],[[64773,64773],\"mapped\",[1589,1609]],[[64774,64774],\"mapped\",[1589,1610]],[[64775,64775],\"mapped\",[1590,1609]],[[64776,64776],\"mapped\",[1590,1610]],[[64777,64777],\"mapped\",[1588,1580]],[[64778,64778],\"mapped\",[1588,1581]],[[64779,64779],\"mapped\",[1588,1582]],[[64780,64780],\"mapped\",[1588,1605]],[[64781,64781],\"mapped\",[1588,1585]],[[64782,64782],\"mapped\",[1587,1585]],[[64783,64783],\"mapped\",[1589,1585]],[[64784,64784],\"mapped\",[1590,1585]],[[64785,64785],\"mapped\",[1591,1609]],[[64786,64786],\"mapped\",[1591,1610]],[[64787,64787],\"mapped\",[1593,1609]],[[64788,64788],\"mapped\",[1593,1610]],[[64789,64789],\"mapped\",[1594,1609]],[[64790,64790],\"mapped\",[1594,1610]],[[64791,64791],\"mapped\",[1587,1609]],[[64792,64792],\"mapped\",[1587,1610]],[[64793,64793],\"mapped\",[1588,1609]],[[64794,64794],\"mapped\",[1588,1610]],[[64795,64795],\"mapped\",[1581,1609]],[[64796,64796],\"mapped\",[1581,1610]],[[64797,64797],\"mapped\",[1580,1609]],[[64798,64798],\"mapped\",[1580,1610]],[[64799,64799],\"mapped\",[1582,1609]],[[64800,64800],\"mapped\",[1582,1610]],[[64801,64801],\"mapped\",[1589,1609]],[[64802,64802],\"mapped\",[1589,1610]],[[64803,64803],\"mapped\",[1590,1609]],[[64804,64804],\"mapped\",[1590,1610]],[[64805,64805],\"mapped\",[1588,1580]],[[64806,64806],\"mapped\",[1588,1581]],[[64807,64807],\"mapped\",[1588,1582]],[[64808,64808],\"mapped\",[1588,1605]],[[64809,64809],\"mapped\",[1588,1585]],[[64810,64810],\"mapped\",[1587,1585]],[[64811,64811],\"mapped\",[1589,1585]],[[64812,64812],\"mapped\",[1590,1585]],[[64813,64813],\"mapped\",[1588,1580]],[[64814,64814],\"mapped\",[1588,1581]],[[64815,64815],\"mapped\",[1588,1582]],[[64816,64816],\"mapped\",[1588,1605]],[[64817,64817],\"mapped\",[1587,1607]],[[64818,64818],\"mapped\",[1588,1607]],[[64819,64819],\"mapped\",[1591,1605]],[[64820,64820],\"mapped\",[1587,1580]],[[64821,64821],\"mapped\",[1587,1581]],[[64822,64822],\"mapped\",[1587,1582]],[[64823,64823],\"mapped\",[1588,1580]],[[64824,64824],\"mapped\",[1588,1581]],[[64825,64825],\"mapped\",[1588,1582]],[[64826,64826],\"mapped\",[1591,1605]],[[64827,64827],\"mapped\",[1592,1605]],[[64828,64829],\"mapped\",[1575,1611]],[[64830,64831],\"valid\",[],\"NV8\"],[[64832,64847],\"disallowed\"],[[64848,64848],\"mapped\",[1578,1580,1605]],[[64849,64850],\"mapped\",[1578,1581,1580]],[[64851,64851],\"mapped\",[1578,1581,1605]],[[64852,64852],\"mapped\",[1578,1582,1605]],[[64853,64853],\"mapped\",[1578,1605,1580]],[[64854,64854],\"mapped\",[1578,1605,1581]],[[64855,64855],\"mapped\",[1578,1605,1582]],[[64856,64857],\"mapped\",[1580,1605,1581]],[[64858,64858],\"mapped\",[1581,1605,1610]],[[64859,64859],\"mapped\",[1581,1605,1609]],[[64860,64860],\"mapped\",[1587,1581,1580]],[[64861,64861],\"mapped\",[1587,1580,1581]],[[64862,64862],\"mapped\",[1587,1580,1609]],[[64863,64864],\"mapped\",[1587,1605,1581]],[[64865,64865],\"mapped\",[1587,1605,1580]],[[64866,64867],\"mapped\",[1587,1605,1605]],[[64868,64869],\"mapped\",[1589,1581,1581]],[[64870,64870],\"mapped\",[1589,1605,1605]],[[64871,64872],\"mapped\",[1588,1581,1605]],[[64873,64873],\"mapped\",[1588,1580,1610]],[[64874,64875],\"mapped\",[1588,1605,1582]],[[64876,64877],\"mapped\",[1588,1605,1605]],[[64878,64878],\"mapped\",[1590,1581,1609]],[[64879,64880],\"mapped\",[1590,1582,1605]],[[64881,64882],\"mapped\",[1591,1605,1581]],[[64883,64883],\"mapped\",[1591,1605,1605]],[[64884,64884],\"mapped\",[1591,1605,1610]],[[64885,64885],\"mapped\",[1593,1580,1605]],[[64886,64887],\"mapped\",[1593,1605,1605]],[[64888,64888],\"mapped\",[1593,1605,1609]],[[64889,64889],\"mapped\",[1594,1605,1605]],[[64890,64890],\"mapped\",[1594,1605,1610]],[[64891,64891],\"mapped\",[1594,1605,1609]],[[64892,64893],\"mapped\",[1601,1582,1605]],[[64894,64894],\"mapped\",[1602,1605,1581]],[[64895,64895],\"mapped\",[1602,1605,1605]],[[64896,64896],\"mapped\",[1604,1581,1605]],[[64897,64897],\"mapped\",[1604,1581,1610]],[[64898,64898],\"mapped\",[1604,1581,1609]],[[64899,64900],\"mapped\",[1604,1580,1580]],[[64901,64902],\"mapped\",[1604,1582,1605]],[[64903,64904],\"mapped\",[1604,1605,1581]],[[64905,64905],\"mapped\",[1605,1581,1580]],[[64906,64906],\"mapped\",[1605,1581,1605]],[[64907,64907],\"mapped\",[1605,1581,1610]],[[64908,64908],\"mapped\",[1605,1580,1581]],[[64909,64909],\"mapped\",[1605,1580,1605]],[[64910,64910],\"mapped\",[1605,1582,1580]],[[64911,64911],\"mapped\",[1605,1582,1605]],[[64912,64913],\"disallowed\"],[[64914,64914],\"mapped\",[1605,1580,1582]],[[64915,64915],\"mapped\",[1607,1605,1580]],[[64916,64916],\"mapped\",[1607,1605,1605]],[[64917,64917],\"mapped\",[1606,1581,1605]],[[64918,64918],\"mapped\",[1606,1581,1609]],[[64919,64920],\"mapped\",[1606,1580,1605]],[[64921,64921],\"mapped\",[1606,1580,1609]],[[64922,64922],\"mapped\",[1606,1605,1610]],[[64923,64923],\"mapped\",[1606,1605,1609]],[[64924,64925],\"mapped\",[1610,1605,1605]],[[64926,64926],\"mapped\",[1576,1582,1610]],[[64927,64927],\"mapped\",[1578,1580,1610]],[[64928,64928],\"mapped\",[1578,1580,1609]],[[64929,64929],\"mapped\",[1578,1582,1610]],[[64930,64930],\"mapped\",[1578,1582,1609]],[[64931,64931],\"mapped\",[1578,1605,1610]],[[64932,64932],\"mapped\",[1578,1605,1609]],[[64933,64933],\"mapped\",[1580,1605,1610]],[[64934,64934],\"mapped\",[1580,1581,1609]],[[64935,64935],\"mapped\",[1580,1605,1609]],[[64936,64936],\"mapped\",[1587,1582,1609]],[[64937,64937],\"mapped\",[1589,1581,1610]],[[64938,64938],\"mapped\",[1588,1581,1610]],[[64939,64939],\"mapped\",[1590,1581,1610]],[[64940,64940],\"mapped\",[1604,1580,1610]],[[64941,64941],\"mapped\",[1604,1605,1610]],[[64942,64942],\"mapped\",[1610,1581,1610]],[[64943,64943],\"mapped\",[1610,1580,1610]],[[64944,64944],\"mapped\",[1610,1605,1610]],[[64945,64945],\"mapped\",[1605,1605,1610]],[[64946,64946],\"mapped\",[1602,1605,1610]],[[64947,64947],\"mapped\",[1606,1581,1610]],[[64948,64948],\"mapped\",[1602,1605,1581]],[[64949,64949],\"mapped\",[1604,1581,1605]],[[64950,64950],\"mapped\",[1593,1605,1610]],[[64951,64951],\"mapped\",[1603,1605,1610]],[[64952,64952],\"mapped\",[1606,1580,1581]],[[64953,64953],\"mapped\",[1605,1582,1610]],[[64954,64954],\"mapped\",[1604,1580,1605]],[[64955,64955],\"mapped\",[1603,1605,1605]],[[64956,64956],\"mapped\",[1604,1580,1605]],[[64957,64957],\"mapped\",[1606,1580,1581]],[[64958,64958],\"mapped\",[1580,1581,1610]],[[64959,64959],\"mapped\",[1581,1580,1610]],[[64960,64960],\"mapped\",[1605,1580,1610]],[[64961,64961],\"mapped\",[1601,1605,1610]],[[64962,64962],\"mapped\",[1576,1581,1610]],[[64963,64963],\"mapped\",[1603,1605,1605]],[[64964,64964],\"mapped\",[1593,1580,1605]],[[64965,64965],\"mapped\",[1589,1605,1605]],[[64966,64966],\"mapped\",[1587,1582,1610]],[[64967,64967],\"mapped\",[1606,1580,1610]],[[64968,64975],\"disallowed\"],[[64976,65007],\"disallowed\"],[[65008,65008],\"mapped\",[1589,1604,1746]],[[65009,65009],\"mapped\",[1602,1604,1746]],[[65010,65010],\"mapped\",[1575,1604,1604,1607]],[[65011,65011],\"mapped\",[1575,1603,1576,1585]],[[65012,65012],\"mapped\",[1605,1581,1605,1583]],[[65013,65013],\"mapped\",[1589,1604,1593,1605]],[[65014,65014],\"mapped\",[1585,1587,1608,1604]],[[65015,65015],\"mapped\",[1593,1604,1610,1607]],[[65016,65016],\"mapped\",[1608,1587,1604,1605]],[[65017,65017],\"mapped\",[1589,1604,1609]],[[65018,65018],\"disallowed_STD3_mapped\",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],\"disallowed_STD3_mapped\",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],\"mapped\",[1585,1740,1575,1604]],[[65021,65021],\"valid\",[],\"NV8\"],[[65022,65023],\"disallowed\"],[[65024,65039],\"ignored\"],[[65040,65040],\"disallowed_STD3_mapped\",[44]],[[65041,65041],\"mapped\",[12289]],[[65042,65042],\"disallowed\"],[[65043,65043],\"disallowed_STD3_mapped\",[58]],[[65044,65044],\"disallowed_STD3_mapped\",[59]],[[65045,65045],\"disallowed_STD3_mapped\",[33]],[[65046,65046],\"disallowed_STD3_mapped\",[63]],[[65047,65047],\"mapped\",[12310]],[[65048,65048],\"mapped\",[12311]],[[65049,65049],\"disallowed\"],[[65050,65055],\"disallowed\"],[[65056,65059],\"valid\"],[[65060,65062],\"valid\"],[[65063,65069],\"valid\"],[[65070,65071],\"valid\"],[[65072,65072],\"disallowed\"],[[65073,65073],\"mapped\",[8212]],[[65074,65074],\"mapped\",[8211]],[[65075,65076],\"disallowed_STD3_mapped\",[95]],[[65077,65077],\"disallowed_STD3_mapped\",[40]],[[65078,65078],\"disallowed_STD3_mapped\",[41]],[[65079,65079],\"disallowed_STD3_mapped\",[123]],[[65080,65080],\"disallowed_STD3_mapped\",[125]],[[65081,65081],\"mapped\",[12308]],[[65082,65082],\"mapped\",[12309]],[[65083,65083],\"mapped\",[12304]],[[65084,65084],\"mapped\",[12305]],[[65085,65085],\"mapped\",[12298]],[[65086,65086],\"mapped\",[12299]],[[65087,65087],\"mapped\",[12296]],[[65088,65088],\"mapped\",[12297]],[[65089,65089],\"mapped\",[12300]],[[65090,65090],\"mapped\",[12301]],[[65091,65091],\"mapped\",[12302]],[[65092,65092],\"mapped\",[12303]],[[65093,65094],\"valid\",[],\"NV8\"],[[65095,65095],\"disallowed_STD3_mapped\",[91]],[[65096,65096],\"disallowed_STD3_mapped\",[93]],[[65097,65100],\"disallowed_STD3_mapped\",[32,773]],[[65101,65103],\"disallowed_STD3_mapped\",[95]],[[65104,65104],\"disallowed_STD3_mapped\",[44]],[[65105,65105],\"mapped\",[12289]],[[65106,65106],\"disallowed\"],[[65107,65107],\"disallowed\"],[[65108,65108],\"disallowed_STD3_mapped\",[59]],[[65109,65109],\"disallowed_STD3_mapped\",[58]],[[65110,65110],\"disallowed_STD3_mapped\",[63]],[[65111,65111],\"disallowed_STD3_mapped\",[33]],[[65112,65112],\"mapped\",[8212]],[[65113,65113],\"disallowed_STD3_mapped\",[40]],[[65114,65114],\"disallowed_STD3_mapped\",[41]],[[65115,65115],\"disallowed_STD3_mapped\",[123]],[[65116,65116],\"disallowed_STD3_mapped\",[125]],[[65117,65117],\"mapped\",[12308]],[[65118,65118],\"mapped\",[12309]],[[65119,65119],\"disallowed_STD3_mapped\",[35]],[[65120,65120],\"disallowed_STD3_mapped\",[38]],[[65121,65121],\"disallowed_STD3_mapped\",[42]],[[65122,65122],\"disallowed_STD3_mapped\",[43]],[[65123,65123],\"mapped\",[45]],[[65124,65124],\"disallowed_STD3_mapped\",[60]],[[65125,65125],\"disallowed_STD3_mapped\",[62]],[[65126,65126],\"disallowed_STD3_mapped\",[61]],[[65127,65127],\"disallowed\"],[[65128,65128],\"disallowed_STD3_mapped\",[92]],[[65129,65129],\"disallowed_STD3_mapped\",[36]],[[65130,65130],\"disallowed_STD3_mapped\",[37]],[[65131,65131],\"disallowed_STD3_mapped\",[64]],[[65132,65135],\"disallowed\"],[[65136,65136],\"disallowed_STD3_mapped\",[32,1611]],[[65137,65137],\"mapped\",[1600,1611]],[[65138,65138],\"disallowed_STD3_mapped\",[32,1612]],[[65139,65139],\"valid\"],[[65140,65140],\"disallowed_STD3_mapped\",[32,1613]],[[65141,65141],\"disallowed\"],[[65142,65142],\"disallowed_STD3_mapped\",[32,1614]],[[65143,65143],\"mapped\",[1600,1614]],[[65144,65144],\"disallowed_STD3_mapped\",[32,1615]],[[65145,65145],\"mapped\",[1600,1615]],[[65146,65146],\"disallowed_STD3_mapped\",[32,1616]],[[65147,65147],\"mapped\",[1600,1616]],[[65148,65148],\"disallowed_STD3_mapped\",[32,1617]],[[65149,65149],\"mapped\",[1600,1617]],[[65150,65150],\"disallowed_STD3_mapped\",[32,1618]],[[65151,65151],\"mapped\",[1600,1618]],[[65152,65152],\"mapped\",[1569]],[[65153,65154],\"mapped\",[1570]],[[65155,65156],\"mapped\",[1571]],[[65157,65158],\"mapped\",[1572]],[[65159,65160],\"mapped\",[1573]],[[65161,65164],\"mapped\",[1574]],[[65165,65166],\"mapped\",[1575]],[[65167,65170],\"mapped\",[1576]],[[65171,65172],\"mapped\",[1577]],[[65173,65176],\"mapped\",[1578]],[[65177,65180],\"mapped\",[1579]],[[65181,65184],\"mapped\",[1580]],[[65185,65188],\"mapped\",[1581]],[[65189,65192],\"mapped\",[1582]],[[65193,65194],\"mapped\",[1583]],[[65195,65196],\"mapped\",[1584]],[[65197,65198],\"mapped\",[1585]],[[65199,65200],\"mapped\",[1586]],[[65201,65204],\"mapped\",[1587]],[[65205,65208],\"mapped\",[1588]],[[65209,65212],\"mapped\",[1589]],[[65213,65216],\"mapped\",[1590]],[[65217,65220],\"mapped\",[1591]],[[65221,65224],\"mapped\",[1592]],[[65225,65228],\"mapped\",[1593]],[[65229,65232],\"mapped\",[1594]],[[65233,65236],\"mapped\",[1601]],[[65237,65240],\"mapped\",[1602]],[[65241,65244],\"mapped\",[1603]],[[65245,65248],\"mapped\",[1604]],[[65249,65252],\"mapped\",[1605]],[[65253,65256],\"mapped\",[1606]],[[65257,65260],\"mapped\",[1607]],[[65261,65262],\"mapped\",[1608]],[[65263,65264],\"mapped\",[1609]],[[65265,65268],\"mapped\",[1610]],[[65269,65270],\"mapped\",[1604,1570]],[[65271,65272],\"mapped\",[1604,1571]],[[65273,65274],\"mapped\",[1604,1573]],[[65275,65276],\"mapped\",[1604,1575]],[[65277,65278],\"disallowed\"],[[65279,65279],\"ignored\"],[[65280,65280],\"disallowed\"],[[65281,65281],\"disallowed_STD3_mapped\",[33]],[[65282,65282],\"disallowed_STD3_mapped\",[34]],[[65283,65283],\"disallowed_STD3_mapped\",[35]],[[65284,65284],\"disallowed_STD3_mapped\",[36]],[[65285,65285],\"disallowed_STD3_mapped\",[37]],[[65286,65286],\"disallowed_STD3_mapped\",[38]],[[65287,65287],\"disallowed_STD3_mapped\",[39]],[[65288,65288],\"disallowed_STD3_mapped\",[40]],[[65289,65289],\"disallowed_STD3_mapped\",[41]],[[65290,65290],\"disallowed_STD3_mapped\",[42]],[[65291,65291],\"disallowed_STD3_mapped\",[43]],[[65292,65292],\"disallowed_STD3_mapped\",[44]],[[65293,65293],\"mapped\",[45]],[[65294,65294],\"mapped\",[46]],[[65295,65295],\"disallowed_STD3_mapped\",[47]],[[65296,65296],\"mapped\",[48]],[[65297,65297],\"mapped\",[49]],[[65298,65298],\"mapped\",[50]],[[65299,65299],\"mapped\",[51]],[[65300,65300],\"mapped\",[52]],[[65301,65301],\"mapped\",[53]],[[65302,65302],\"mapped\",[54]],[[65303,65303],\"mapped\",[55]],[[65304,65304],\"mapped\",[56]],[[65305,65305],\"mapped\",[57]],[[65306,65306],\"disallowed_STD3_mapped\",[58]],[[65307,65307],\"disallowed_STD3_mapped\",[59]],[[65308,65308],\"disallowed_STD3_mapped\",[60]],[[65309,65309],\"disallowed_STD3_mapped\",[61]],[[65310,65310],\"disallowed_STD3_mapped\",[62]],[[65311,65311],\"disallowed_STD3_mapped\",[63]],[[65312,65312],\"disallowed_STD3_mapped\",[64]],[[65313,65313],\"mapped\",[97]],[[65314,65314],\"mapped\",[98]],[[65315,65315],\"mapped\",[99]],[[65316,65316],\"mapped\",[100]],[[65317,65317],\"mapped\",[101]],[[65318,65318],\"mapped\",[102]],[[65319,65319],\"mapped\",[103]],[[65320,65320],\"mapped\",[104]],[[65321,65321],\"mapped\",[105]],[[65322,65322],\"mapped\",[106]],[[65323,65323],\"mapped\",[107]],[[65324,65324],\"mapped\",[108]],[[65325,65325],\"mapped\",[109]],[[65326,65326],\"mapped\",[110]],[[65327,65327],\"mapped\",[111]],[[65328,65328],\"mapped\",[112]],[[65329,65329],\"mapped\",[113]],[[65330,65330],\"mapped\",[114]],[[65331,65331],\"mapped\",[115]],[[65332,65332],\"mapped\",[116]],[[65333,65333],\"mapped\",[117]],[[65334,65334],\"mapped\",[118]],[[65335,65335],\"mapped\",[119]],[[65336,65336],\"mapped\",[120]],[[65337,65337],\"mapped\",[121]],[[65338,65338],\"mapped\",[122]],[[65339,65339],\"disallowed_STD3_mapped\",[91]],[[65340,65340],\"disallowed_STD3_mapped\",[92]],[[65341,65341],\"disallowed_STD3_mapped\",[93]],[[65342,65342],\"disallowed_STD3_mapped\",[94]],[[65343,65343],\"disallowed_STD3_mapped\",[95]],[[65344,65344],\"disallowed_STD3_mapped\",[96]],[[65345,65345],\"mapped\",[97]],[[65346,65346],\"mapped\",[98]],[[65347,65347],\"mapped\",[99]],[[65348,65348],\"mapped\",[100]],[[65349,65349],\"mapped\",[101]],[[65350,65350],\"mapped\",[102]],[[65351,65351],\"mapped\",[103]],[[65352,65352],\"mapped\",[104]],[[65353,65353],\"mapped\",[105]],[[65354,65354],\"mapped\",[106]],[[65355,65355],\"mapped\",[107]],[[65356,65356],\"mapped\",[108]],[[65357,65357],\"mapped\",[109]],[[65358,65358],\"mapped\",[110]],[[65359,65359],\"mapped\",[111]],[[65360,65360],\"mapped\",[112]],[[65361,65361],\"mapped\",[113]],[[65362,65362],\"mapped\",[114]],[[65363,65363],\"mapped\",[115]],[[65364,65364],\"mapped\",[116]],[[65365,65365],\"mapped\",[117]],[[65366,65366],\"mapped\",[118]],[[65367,65367],\"mapped\",[119]],[[65368,65368],\"mapped\",[120]],[[65369,65369],\"mapped\",[121]],[[65370,65370],\"mapped\",[122]],[[65371,65371],\"disallowed_STD3_mapped\",[123]],[[65372,65372],\"disallowed_STD3_mapped\",[124]],[[65373,65373],\"disallowed_STD3_mapped\",[125]],[[65374,65374],\"disallowed_STD3_mapped\",[126]],[[65375,65375],\"mapped\",[10629]],[[65376,65376],\"mapped\",[10630]],[[65377,65377],\"mapped\",[46]],[[65378,65378],\"mapped\",[12300]],[[65379,65379],\"mapped\",[12301]],[[65380,65380],\"mapped\",[12289]],[[65381,65381],\"mapped\",[12539]],[[65382,65382],\"mapped\",[12530]],[[65383,65383],\"mapped\",[12449]],[[65384,65384],\"mapped\",[12451]],[[65385,65385],\"mapped\",[12453]],[[65386,65386],\"mapped\",[12455]],[[65387,65387],\"mapped\",[12457]],[[65388,65388],\"mapped\",[12515]],[[65389,65389],\"mapped\",[12517]],[[65390,65390],\"mapped\",[12519]],[[65391,65391],\"mapped\",[12483]],[[65392,65392],\"mapped\",[12540]],[[65393,65393],\"mapped\",[12450]],[[65394,65394],\"mapped\",[12452]],[[65395,65395],\"mapped\",[12454]],[[65396,65396],\"mapped\",[12456]],[[65397,65397],\"mapped\",[12458]],[[65398,65398],\"mapped\",[12459]],[[65399,65399],\"mapped\",[12461]],[[65400,65400],\"mapped\",[12463]],[[65401,65401],\"mapped\",[12465]],[[65402,65402],\"mapped\",[12467]],[[65403,65403],\"mapped\",[12469]],[[65404,65404],\"mapped\",[12471]],[[65405,65405],\"mapped\",[12473]],[[65406,65406],\"mapped\",[12475]],[[65407,65407],\"mapped\",[12477]],[[65408,65408],\"mapped\",[12479]],[[65409,65409],\"mapped\",[12481]],[[65410,65410],\"mapped\",[12484]],[[65411,65411],\"mapped\",[12486]],[[65412,65412],\"mapped\",[12488]],[[65413,65413],\"mapped\",[12490]],[[65414,65414],\"mapped\",[12491]],[[65415,65415],\"mapped\",[12492]],[[65416,65416],\"mapped\",[12493]],[[65417,65417],\"mapped\",[12494]],[[65418,65418],\"mapped\",[12495]],[[65419,65419],\"mapped\",[12498]],[[65420,65420],\"mapped\",[12501]],[[65421,65421],\"mapped\",[12504]],[[65422,65422],\"mapped\",[12507]],[[65423,65423],\"mapped\",[12510]],[[65424,65424],\"mapped\",[12511]],[[65425,65425],\"mapped\",[12512]],[[65426,65426],\"mapped\",[12513]],[[65427,65427],\"mapped\",[12514]],[[65428,65428],\"mapped\",[12516]],[[65429,65429],\"mapped\",[12518]],[[65430,65430],\"mapped\",[12520]],[[65431,65431],\"mapped\",[12521]],[[65432,65432],\"mapped\",[12522]],[[65433,65433],\"mapped\",[12523]],[[65434,65434],\"mapped\",[12524]],[[65435,65435],\"mapped\",[12525]],[[65436,65436],\"mapped\",[12527]],[[65437,65437],\"mapped\",[12531]],[[65438,65438],\"mapped\",[12441]],[[65439,65439],\"mapped\",[12442]],[[65440,65440],\"disallowed\"],[[65441,65441],\"mapped\",[4352]],[[65442,65442],\"mapped\",[4353]],[[65443,65443],\"mapped\",[4522]],[[65444,65444],\"mapped\",[4354]],[[65445,65445],\"mapped\",[4524]],[[65446,65446],\"mapped\",[4525]],[[65447,65447],\"mapped\",[4355]],[[65448,65448],\"mapped\",[4356]],[[65449,65449],\"mapped\",[4357]],[[65450,65450],\"mapped\",[4528]],[[65451,65451],\"mapped\",[4529]],[[65452,65452],\"mapped\",[4530]],[[65453,65453],\"mapped\",[4531]],[[65454,65454],\"mapped\",[4532]],[[65455,65455],\"mapped\",[4533]],[[65456,65456],\"mapped\",[4378]],[[65457,65457],\"mapped\",[4358]],[[65458,65458],\"mapped\",[4359]],[[65459,65459],\"mapped\",[4360]],[[65460,65460],\"mapped\",[4385]],[[65461,65461],\"mapped\",[4361]],[[65462,65462],\"mapped\",[4362]],[[65463,65463],\"mapped\",[4363]],[[65464,65464],\"mapped\",[4364]],[[65465,65465],\"mapped\",[4365]],[[65466,65466],\"mapped\",[4366]],[[65467,65467],\"mapped\",[4367]],[[65468,65468],\"mapped\",[4368]],[[65469,65469],\"mapped\",[4369]],[[65470,65470],\"mapped\",[4370]],[[65471,65473],\"disallowed\"],[[65474,65474],\"mapped\",[4449]],[[65475,65475],\"mapped\",[4450]],[[65476,65476],\"mapped\",[4451]],[[65477,65477],\"mapped\",[4452]],[[65478,65478],\"mapped\",[4453]],[[65479,65479],\"mapped\",[4454]],[[65480,65481],\"disallowed\"],[[65482,65482],\"mapped\",[4455]],[[65483,65483],\"mapped\",[4456]],[[65484,65484],\"mapped\",[4457]],[[65485,65485],\"mapped\",[4458]],[[65486,65486],\"mapped\",[4459]],[[65487,65487],\"mapped\",[4460]],[[65488,65489],\"disallowed\"],[[65490,65490],\"mapped\",[4461]],[[65491,65491],\"mapped\",[4462]],[[65492,65492],\"mapped\",[4463]],[[65493,65493],\"mapped\",[4464]],[[65494,65494],\"mapped\",[4465]],[[65495,65495],\"mapped\",[4466]],[[65496,65497],\"disallowed\"],[[65498,65498],\"mapped\",[4467]],[[65499,65499],\"mapped\",[4468]],[[65500,65500],\"mapped\",[4469]],[[65501,65503],\"disallowed\"],[[65504,65504],\"mapped\",[162]],[[65505,65505],\"mapped\",[163]],[[65506,65506],\"mapped\",[172]],[[65507,65507],\"disallowed_STD3_mapped\",[32,772]],[[65508,65508],\"mapped\",[166]],[[65509,65509],\"mapped\",[165]],[[65510,65510],\"mapped\",[8361]],[[65511,65511],\"disallowed\"],[[65512,65512],\"mapped\",[9474]],[[65513,65513],\"mapped\",[8592]],[[65514,65514],\"mapped\",[8593]],[[65515,65515],\"mapped\",[8594]],[[65516,65516],\"mapped\",[8595]],[[65517,65517],\"mapped\",[9632]],[[65518,65518],\"mapped\",[9675]],[[65519,65528],\"disallowed\"],[[65529,65531],\"disallowed\"],[[65532,65532],\"disallowed\"],[[65533,65533],\"disallowed\"],[[65534,65535],\"disallowed\"],[[65536,65547],\"valid\"],[[65548,65548],\"disallowed\"],[[65549,65574],\"valid\"],[[65575,65575],\"disallowed\"],[[65576,65594],\"valid\"],[[65595,65595],\"disallowed\"],[[65596,65597],\"valid\"],[[65598,65598],\"disallowed\"],[[65599,65613],\"valid\"],[[65614,65615],\"disallowed\"],[[65616,65629],\"valid\"],[[65630,65663],\"disallowed\"],[[65664,65786],\"valid\"],[[65787,65791],\"disallowed\"],[[65792,65794],\"valid\",[],\"NV8\"],[[65795,65798],\"disallowed\"],[[65799,65843],\"valid\",[],\"NV8\"],[[65844,65846],\"disallowed\"],[[65847,65855],\"valid\",[],\"NV8\"],[[65856,65930],\"valid\",[],\"NV8\"],[[65931,65932],\"valid\",[],\"NV8\"],[[65933,65935],\"disallowed\"],[[65936,65947],\"valid\",[],\"NV8\"],[[65948,65951],\"disallowed\"],[[65952,65952],\"valid\",[],\"NV8\"],[[65953,65999],\"disallowed\"],[[66000,66044],\"valid\",[],\"NV8\"],[[66045,66045],\"valid\"],[[66046,66175],\"disallowed\"],[[66176,66204],\"valid\"],[[66205,66207],\"disallowed\"],[[66208,66256],\"valid\"],[[66257,66271],\"disallowed\"],[[66272,66272],\"valid\"],[[66273,66299],\"valid\",[],\"NV8\"],[[66300,66303],\"disallowed\"],[[66304,66334],\"valid\"],[[66335,66335],\"valid\"],[[66336,66339],\"valid\",[],\"NV8\"],[[66340,66351],\"disallowed\"],[[66352,66368],\"valid\"],[[66369,66369],\"valid\",[],\"NV8\"],[[66370,66377],\"valid\"],[[66378,66378],\"valid\",[],\"NV8\"],[[66379,66383],\"disallowed\"],[[66384,66426],\"valid\"],[[66427,66431],\"disallowed\"],[[66432,66461],\"valid\"],[[66462,66462],\"disallowed\"],[[66463,66463],\"valid\",[],\"NV8\"],[[66464,66499],\"valid\"],[[66500,66503],\"disallowed\"],[[66504,66511],\"valid\"],[[66512,66517],\"valid\",[],\"NV8\"],[[66518,66559],\"disallowed\"],[[66560,66560],\"mapped\",[66600]],[[66561,66561],\"mapped\",[66601]],[[66562,66562],\"mapped\",[66602]],[[66563,66563],\"mapped\",[66603]],[[66564,66564],\"mapped\",[66604]],[[66565,66565],\"mapped\",[66605]],[[66566,66566],\"mapped\",[66606]],[[66567,66567],\"mapped\",[66607]],[[66568,66568],\"mapped\",[66608]],[[66569,66569],\"mapped\",[66609]],[[66570,66570],\"mapped\",[66610]],[[66571,66571],\"mapped\",[66611]],[[66572,66572],\"mapped\",[66612]],[[66573,66573],\"mapped\",[66613]],[[66574,66574],\"mapped\",[66614]],[[66575,66575],\"mapped\",[66615]],[[66576,66576],\"mapped\",[66616]],[[66577,66577],\"mapped\",[66617]],[[66578,66578],\"mapped\",[66618]],[[66579,66579],\"mapped\",[66619]],[[66580,66580],\"mapped\",[66620]],[[66581,66581],\"mapped\",[66621]],[[66582,66582],\"mapped\",[66622]],[[66583,66583],\"mapped\",[66623]],[[66584,66584],\"mapped\",[66624]],[[66585,66585],\"mapped\",[66625]],[[66586,66586],\"mapped\",[66626]],[[66587,66587],\"mapped\",[66627]],[[66588,66588],\"mapped\",[66628]],[[66589,66589],\"mapped\",[66629]],[[66590,66590],\"mapped\",[66630]],[[66591,66591],\"mapped\",[66631]],[[66592,66592],\"mapped\",[66632]],[[66593,66593],\"mapped\",[66633]],[[66594,66594],\"mapped\",[66634]],[[66595,66595],\"mapped\",[66635]],[[66596,66596],\"mapped\",[66636]],[[66597,66597],\"mapped\",[66637]],[[66598,66598],\"mapped\",[66638]],[[66599,66599],\"mapped\",[66639]],[[66600,66637],\"valid\"],[[66638,66717],\"valid\"],[[66718,66719],\"disallowed\"],[[66720,66729],\"valid\"],[[66730,66815],\"disallowed\"],[[66816,66855],\"valid\"],[[66856,66863],\"disallowed\"],[[66864,66915],\"valid\"],[[66916,66926],\"disallowed\"],[[66927,66927],\"valid\",[],\"NV8\"],[[66928,67071],\"disallowed\"],[[67072,67382],\"valid\"],[[67383,67391],\"disallowed\"],[[67392,67413],\"valid\"],[[67414,67423],\"disallowed\"],[[67424,67431],\"valid\"],[[67432,67583],\"disallowed\"],[[67584,67589],\"valid\"],[[67590,67591],\"disallowed\"],[[67592,67592],\"valid\"],[[67593,67593],\"disallowed\"],[[67594,67637],\"valid\"],[[67638,67638],\"disallowed\"],[[67639,67640],\"valid\"],[[67641,67643],\"disallowed\"],[[67644,67644],\"valid\"],[[67645,67646],\"disallowed\"],[[67647,67647],\"valid\"],[[67648,67669],\"valid\"],[[67670,67670],\"disallowed\"],[[67671,67679],\"valid\",[],\"NV8\"],[[67680,67702],\"valid\"],[[67703,67711],\"valid\",[],\"NV8\"],[[67712,67742],\"valid\"],[[67743,67750],\"disallowed\"],[[67751,67759],\"valid\",[],\"NV8\"],[[67760,67807],\"disallowed\"],[[67808,67826],\"valid\"],[[67827,67827],\"disallowed\"],[[67828,67829],\"valid\"],[[67830,67834],\"disallowed\"],[[67835,67839],\"valid\",[],\"NV8\"],[[67840,67861],\"valid\"],[[67862,67865],\"valid\",[],\"NV8\"],[[67866,67867],\"valid\",[],\"NV8\"],[[67868,67870],\"disallowed\"],[[67871,67871],\"valid\",[],\"NV8\"],[[67872,67897],\"valid\"],[[67898,67902],\"disallowed\"],[[67903,67903],\"valid\",[],\"NV8\"],[[67904,67967],\"disallowed\"],[[67968,68023],\"valid\"],[[68024,68027],\"disallowed\"],[[68028,68029],\"valid\",[],\"NV8\"],[[68030,68031],\"valid\"],[[68032,68047],\"valid\",[],\"NV8\"],[[68048,68049],\"disallowed\"],[[68050,68095],\"valid\",[],\"NV8\"],[[68096,68099],\"valid\"],[[68100,68100],\"disallowed\"],[[68101,68102],\"valid\"],[[68103,68107],\"disallowed\"],[[68108,68115],\"valid\"],[[68116,68116],\"disallowed\"],[[68117,68119],\"valid\"],[[68120,68120],\"disallowed\"],[[68121,68147],\"valid\"],[[68148,68151],\"disallowed\"],[[68152,68154],\"valid\"],[[68155,68158],\"disallowed\"],[[68159,68159],\"valid\"],[[68160,68167],\"valid\",[],\"NV8\"],[[68168,68175],\"disallowed\"],[[68176,68184],\"valid\",[],\"NV8\"],[[68185,68191],\"disallowed\"],[[68192,68220],\"valid\"],[[68221,68223],\"valid\",[],\"NV8\"],[[68224,68252],\"valid\"],[[68253,68255],\"valid\",[],\"NV8\"],[[68256,68287],\"disallowed\"],[[68288,68295],\"valid\"],[[68296,68296],\"valid\",[],\"NV8\"],[[68297,68326],\"valid\"],[[68327,68330],\"disallowed\"],[[68331,68342],\"valid\",[],\"NV8\"],[[68343,68351],\"disallowed\"],[[68352,68405],\"valid\"],[[68406,68408],\"disallowed\"],[[68409,68415],\"valid\",[],\"NV8\"],[[68416,68437],\"valid\"],[[68438,68439],\"disallowed\"],[[68440,68447],\"valid\",[],\"NV8\"],[[68448,68466],\"valid\"],[[68467,68471],\"disallowed\"],[[68472,68479],\"valid\",[],\"NV8\"],[[68480,68497],\"valid\"],[[68498,68504],\"disallowed\"],[[68505,68508],\"valid\",[],\"NV8\"],[[68509,68520],\"disallowed\"],[[68521,68527],\"valid\",[],\"NV8\"],[[68528,68607],\"disallowed\"],[[68608,68680],\"valid\"],[[68681,68735],\"disallowed\"],[[68736,68736],\"mapped\",[68800]],[[68737,68737],\"mapped\",[68801]],[[68738,68738],\"mapped\",[68802]],[[68739,68739],\"mapped\",[68803]],[[68740,68740],\"mapped\",[68804]],[[68741,68741],\"mapped\",[68805]],[[68742,68742],\"mapped\",[68806]],[[68743,68743],\"mapped\",[68807]],[[68744,68744],\"mapped\",[68808]],[[68745,68745],\"mapped\",[68809]],[[68746,68746],\"mapped\",[68810]],[[68747,68747],\"mapped\",[68811]],[[68748,68748],\"mapped\",[68812]],[[68749,68749],\"mapped\",[68813]],[[68750,68750],\"mapped\",[68814]],[[68751,68751],\"mapped\",[68815]],[[68752,68752],\"mapped\",[68816]],[[68753,68753],\"mapped\",[68817]],[[68754,68754],\"mapped\",[68818]],[[68755,68755],\"mapped\",[68819]],[[68756,68756],\"mapped\",[68820]],[[68757,68757],\"mapped\",[68821]],[[68758,68758],\"mapped\",[68822]],[[68759,68759],\"mapped\",[68823]],[[68760,68760],\"mapped\",[68824]],[[68761,68761],\"mapped\",[68825]],[[68762,68762],\"mapped\",[68826]],[[68763,68763],\"mapped\",[68827]],[[68764,68764],\"mapped\",[68828]],[[68765,68765],\"mapped\",[68829]],[[68766,68766],\"mapped\",[68830]],[[68767,68767],\"mapped\",[68831]],[[68768,68768],\"mapped\",[68832]],[[68769,68769],\"mapped\",[68833]],[[68770,68770],\"mapped\",[68834]],[[68771,68771],\"mapped\",[68835]],[[68772,68772],\"mapped\",[68836]],[[68773,68773],\"mapped\",[68837]],[[68774,68774],\"mapped\",[68838]],[[68775,68775],\"mapped\",[68839]],[[68776,68776],\"mapped\",[68840]],[[68777,68777],\"mapped\",[68841]],[[68778,68778],\"mapped\",[68842]],[[68779,68779],\"mapped\",[68843]],[[68780,68780],\"mapped\",[68844]],[[68781,68781],\"mapped\",[68845]],[[68782,68782],\"mapped\",[68846]],[[68783,68783],\"mapped\",[68847]],[[68784,68784],\"mapped\",[68848]],[[68785,68785],\"mapped\",[68849]],[[68786,68786],\"mapped\",[68850]],[[68787,68799],\"disallowed\"],[[68800,68850],\"valid\"],[[68851,68857],\"disallowed\"],[[68858,68863],\"valid\",[],\"NV8\"],[[68864,69215],\"disallowed\"],[[69216,69246],\"valid\",[],\"NV8\"],[[69247,69631],\"disallowed\"],[[69632,69702],\"valid\"],[[69703,69709],\"valid\",[],\"NV8\"],[[69710,69713],\"disallowed\"],[[69714,69733],\"valid\",[],\"NV8\"],[[69734,69743],\"valid\"],[[69744,69758],\"disallowed\"],[[69759,69759],\"valid\"],[[69760,69818],\"valid\"],[[69819,69820],\"valid\",[],\"NV8\"],[[69821,69821],\"disallowed\"],[[69822,69825],\"valid\",[],\"NV8\"],[[69826,69839],\"disallowed\"],[[69840,69864],\"valid\"],[[69865,69871],\"disallowed\"],[[69872,69881],\"valid\"],[[69882,69887],\"disallowed\"],[[69888,69940],\"valid\"],[[69941,69941],\"disallowed\"],[[69942,69951],\"valid\"],[[69952,69955],\"valid\",[],\"NV8\"],[[69956,69967],\"disallowed\"],[[69968,70003],\"valid\"],[[70004,70005],\"valid\",[],\"NV8\"],[[70006,70006],\"valid\"],[[70007,70015],\"disallowed\"],[[70016,70084],\"valid\"],[[70085,70088],\"valid\",[],\"NV8\"],[[70089,70089],\"valid\",[],\"NV8\"],[[70090,70092],\"valid\"],[[70093,70093],\"valid\",[],\"NV8\"],[[70094,70095],\"disallowed\"],[[70096,70105],\"valid\"],[[70106,70106],\"valid\"],[[70107,70107],\"valid\",[],\"NV8\"],[[70108,70108],\"valid\"],[[70109,70111],\"valid\",[],\"NV8\"],[[70112,70112],\"disallowed\"],[[70113,70132],\"valid\",[],\"NV8\"],[[70133,70143],\"disallowed\"],[[70144,70161],\"valid\"],[[70162,70162],\"disallowed\"],[[70163,70199],\"valid\"],[[70200,70205],\"valid\",[],\"NV8\"],[[70206,70271],\"disallowed\"],[[70272,70278],\"valid\"],[[70279,70279],\"disallowed\"],[[70280,70280],\"valid\"],[[70281,70281],\"disallowed\"],[[70282,70285],\"valid\"],[[70286,70286],\"disallowed\"],[[70287,70301],\"valid\"],[[70302,70302],\"disallowed\"],[[70303,70312],\"valid\"],[[70313,70313],\"valid\",[],\"NV8\"],[[70314,70319],\"disallowed\"],[[70320,70378],\"valid\"],[[70379,70383],\"disallowed\"],[[70384,70393],\"valid\"],[[70394,70399],\"disallowed\"],[[70400,70400],\"valid\"],[[70401,70403],\"valid\"],[[70404,70404],\"disallowed\"],[[70405,70412],\"valid\"],[[70413,70414],\"disallowed\"],[[70415,70416],\"valid\"],[[70417,70418],\"disallowed\"],[[70419,70440],\"valid\"],[[70441,70441],\"disallowed\"],[[70442,70448],\"valid\"],[[70449,70449],\"disallowed\"],[[70450,70451],\"valid\"],[[70452,70452],\"disallowed\"],[[70453,70457],\"valid\"],[[70458,70459],\"disallowed\"],[[70460,70468],\"valid\"],[[70469,70470],\"disallowed\"],[[70471,70472],\"valid\"],[[70473,70474],\"disallowed\"],[[70475,70477],\"valid\"],[[70478,70479],\"disallowed\"],[[70480,70480],\"valid\"],[[70481,70486],\"disallowed\"],[[70487,70487],\"valid\"],[[70488,70492],\"disallowed\"],[[70493,70499],\"valid\"],[[70500,70501],\"disallowed\"],[[70502,70508],\"valid\"],[[70509,70511],\"disallowed\"],[[70512,70516],\"valid\"],[[70517,70783],\"disallowed\"],[[70784,70853],\"valid\"],[[70854,70854],\"valid\",[],\"NV8\"],[[70855,70855],\"valid\"],[[70856,70863],\"disallowed\"],[[70864,70873],\"valid\"],[[70874,71039],\"disallowed\"],[[71040,71093],\"valid\"],[[71094,71095],\"disallowed\"],[[71096,71104],\"valid\"],[[71105,71113],\"valid\",[],\"NV8\"],[[71114,71127],\"valid\",[],\"NV8\"],[[71128,71133],\"valid\"],[[71134,71167],\"disallowed\"],[[71168,71232],\"valid\"],[[71233,71235],\"valid\",[],\"NV8\"],[[71236,71236],\"valid\"],[[71237,71247],\"disallowed\"],[[71248,71257],\"valid\"],[[71258,71295],\"disallowed\"],[[71296,71351],\"valid\"],[[71352,71359],\"disallowed\"],[[71360,71369],\"valid\"],[[71370,71423],\"disallowed\"],[[71424,71449],\"valid\"],[[71450,71452],\"disallowed\"],[[71453,71467],\"valid\"],[[71468,71471],\"disallowed\"],[[71472,71481],\"valid\"],[[71482,71487],\"valid\",[],\"NV8\"],[[71488,71839],\"disallowed\"],[[71840,71840],\"mapped\",[71872]],[[71841,71841],\"mapped\",[71873]],[[71842,71842],\"mapped\",[71874]],[[71843,71843],\"mapped\",[71875]],[[71844,71844],\"mapped\",[71876]],[[71845,71845],\"mapped\",[71877]],[[71846,71846],\"mapped\",[71878]],[[71847,71847],\"mapped\",[71879]],[[71848,71848],\"mapped\",[71880]],[[71849,71849],\"mapped\",[71881]],[[71850,71850],\"mapped\",[71882]],[[71851,71851],\"mapped\",[71883]],[[71852,71852],\"mapped\",[71884]],[[71853,71853],\"mapped\",[71885]],[[71854,71854],\"mapped\",[71886]],[[71855,71855],\"mapped\",[71887]],[[71856,71856],\"mapped\",[71888]],[[71857,71857],\"mapped\",[71889]],[[71858,71858],\"mapped\",[71890]],[[71859,71859],\"mapped\",[71891]],[[71860,71860],\"mapped\",[71892]],[[71861,71861],\"mapped\",[71893]],[[71862,71862],\"mapped\",[71894]],[[71863,71863],\"mapped\",[71895]],[[71864,71864],\"mapped\",[71896]],[[71865,71865],\"mapped\",[71897]],[[71866,71866],\"mapped\",[71898]],[[71867,71867],\"mapped\",[71899]],[[71868,71868],\"mapped\",[71900]],[[71869,71869],\"mapped\",[71901]],[[71870,71870],\"mapped\",[71902]],[[71871,71871],\"mapped\",[71903]],[[71872,71913],\"valid\"],[[71914,71922],\"valid\",[],\"NV8\"],[[71923,71934],\"disallowed\"],[[71935,71935],\"valid\"],[[71936,72383],\"disallowed\"],[[72384,72440],\"valid\"],[[72441,73727],\"disallowed\"],[[73728,74606],\"valid\"],[[74607,74648],\"valid\"],[[74649,74649],\"valid\"],[[74650,74751],\"disallowed\"],[[74752,74850],\"valid\",[],\"NV8\"],[[74851,74862],\"valid\",[],\"NV8\"],[[74863,74863],\"disallowed\"],[[74864,74867],\"valid\",[],\"NV8\"],[[74868,74868],\"valid\",[],\"NV8\"],[[74869,74879],\"disallowed\"],[[74880,75075],\"valid\"],[[75076,77823],\"disallowed\"],[[77824,78894],\"valid\"],[[78895,82943],\"disallowed\"],[[82944,83526],\"valid\"],[[83527,92159],\"disallowed\"],[[92160,92728],\"valid\"],[[92729,92735],\"disallowed\"],[[92736,92766],\"valid\"],[[92767,92767],\"disallowed\"],[[92768,92777],\"valid\"],[[92778,92781],\"disallowed\"],[[92782,92783],\"valid\",[],\"NV8\"],[[92784,92879],\"disallowed\"],[[92880,92909],\"valid\"],[[92910,92911],\"disallowed\"],[[92912,92916],\"valid\"],[[92917,92917],\"valid\",[],\"NV8\"],[[92918,92927],\"disallowed\"],[[92928,92982],\"valid\"],[[92983,92991],\"valid\",[],\"NV8\"],[[92992,92995],\"valid\"],[[92996,92997],\"valid\",[],\"NV8\"],[[92998,93007],\"disallowed\"],[[93008,93017],\"valid\"],[[93018,93018],\"disallowed\"],[[93019,93025],\"valid\",[],\"NV8\"],[[93026,93026],\"disallowed\"],[[93027,93047],\"valid\"],[[93048,93052],\"disallowed\"],[[93053,93071],\"valid\"],[[93072,93951],\"disallowed\"],[[93952,94020],\"valid\"],[[94021,94031],\"disallowed\"],[[94032,94078],\"valid\"],[[94079,94094],\"disallowed\"],[[94095,94111],\"valid\"],[[94112,110591],\"disallowed\"],[[110592,110593],\"valid\"],[[110594,113663],\"disallowed\"],[[113664,113770],\"valid\"],[[113771,113775],\"disallowed\"],[[113776,113788],\"valid\"],[[113789,113791],\"disallowed\"],[[113792,113800],\"valid\"],[[113801,113807],\"disallowed\"],[[113808,113817],\"valid\"],[[113818,113819],\"disallowed\"],[[113820,113820],\"valid\",[],\"NV8\"],[[113821,113822],\"valid\"],[[113823,113823],\"valid\",[],\"NV8\"],[[113824,113827],\"ignored\"],[[113828,118783],\"disallowed\"],[[118784,119029],\"valid\",[],\"NV8\"],[[119030,119039],\"disallowed\"],[[119040,119078],\"valid\",[],\"NV8\"],[[119079,119080],\"disallowed\"],[[119081,119081],\"valid\",[],\"NV8\"],[[119082,119133],\"valid\",[],\"NV8\"],[[119134,119134],\"mapped\",[119127,119141]],[[119135,119135],\"mapped\",[119128,119141]],[[119136,119136],\"mapped\",[119128,119141,119150]],[[119137,119137],\"mapped\",[119128,119141,119151]],[[119138,119138],\"mapped\",[119128,119141,119152]],[[119139,119139],\"mapped\",[119128,119141,119153]],[[119140,119140],\"mapped\",[119128,119141,119154]],[[119141,119154],\"valid\",[],\"NV8\"],[[119155,119162],\"disallowed\"],[[119163,119226],\"valid\",[],\"NV8\"],[[119227,119227],\"mapped\",[119225,119141]],[[119228,119228],\"mapped\",[119226,119141]],[[119229,119229],\"mapped\",[119225,119141,119150]],[[119230,119230],\"mapped\",[119226,119141,119150]],[[119231,119231],\"mapped\",[119225,119141,119151]],[[119232,119232],\"mapped\",[119226,119141,119151]],[[119233,119261],\"valid\",[],\"NV8\"],[[119262,119272],\"valid\",[],\"NV8\"],[[119273,119295],\"disallowed\"],[[119296,119365],\"valid\",[],\"NV8\"],[[119366,119551],\"disallowed\"],[[119552,119638],\"valid\",[],\"NV8\"],[[119639,119647],\"disallowed\"],[[119648,119665],\"valid\",[],\"NV8\"],[[119666,119807],\"disallowed\"],[[119808,119808],\"mapped\",[97]],[[119809,119809],\"mapped\",[98]],[[119810,119810],\"mapped\",[99]],[[119811,119811],\"mapped\",[100]],[[119812,119812],\"mapped\",[101]],[[119813,119813],\"mapped\",[102]],[[119814,119814],\"mapped\",[103]],[[119815,119815],\"mapped\",[104]],[[119816,119816],\"mapped\",[105]],[[119817,119817],\"mapped\",[106]],[[119818,119818],\"mapped\",[107]],[[119819,119819],\"mapped\",[108]],[[119820,119820],\"mapped\",[109]],[[119821,119821],\"mapped\",[110]],[[119822,119822],\"mapped\",[111]],[[119823,119823],\"mapped\",[112]],[[119824,119824],\"mapped\",[113]],[[119825,119825],\"mapped\",[114]],[[119826,119826],\"mapped\",[115]],[[119827,119827],\"mapped\",[116]],[[119828,119828],\"mapped\",[117]],[[119829,119829],\"mapped\",[118]],[[119830,119830],\"mapped\",[119]],[[119831,119831],\"mapped\",[120]],[[119832,119832],\"mapped\",[121]],[[119833,119833],\"mapped\",[122]],[[119834,119834],\"mapped\",[97]],[[119835,119835],\"mapped\",[98]],[[119836,119836],\"mapped\",[99]],[[119837,119837],\"mapped\",[100]],[[119838,119838],\"mapped\",[101]],[[119839,119839],\"mapped\",[102]],[[119840,119840],\"mapped\",[103]],[[119841,119841],\"mapped\",[104]],[[119842,119842],\"mapped\",[105]],[[119843,119843],\"mapped\",[106]],[[119844,119844],\"mapped\",[107]],[[119845,119845],\"mapped\",[108]],[[119846,119846],\"mapped\",[109]],[[119847,119847],\"mapped\",[110]],[[119848,119848],\"mapped\",[111]],[[119849,119849],\"mapped\",[112]],[[119850,119850],\"mapped\",[113]],[[119851,119851],\"mapped\",[114]],[[119852,119852],\"mapped\",[115]],[[119853,119853],\"mapped\",[116]],[[119854,119854],\"mapped\",[117]],[[119855,119855],\"mapped\",[118]],[[119856,119856],\"mapped\",[119]],[[119857,119857],\"mapped\",[120]],[[119858,119858],\"mapped\",[121]],[[119859,119859],\"mapped\",[122]],[[119860,119860],\"mapped\",[97]],[[119861,119861],\"mapped\",[98]],[[119862,119862],\"mapped\",[99]],[[119863,119863],\"mapped\",[100]],[[119864,119864],\"mapped\",[101]],[[119865,119865],\"mapped\",[102]],[[119866,119866],\"mapped\",[103]],[[119867,119867],\"mapped\",[104]],[[119868,119868],\"mapped\",[105]],[[119869,119869],\"mapped\",[106]],[[119870,119870],\"mapped\",[107]],[[119871,119871],\"mapped\",[108]],[[119872,119872],\"mapped\",[109]],[[119873,119873],\"mapped\",[110]],[[119874,119874],\"mapped\",[111]],[[119875,119875],\"mapped\",[112]],[[119876,119876],\"mapped\",[113]],[[119877,119877],\"mapped\",[114]],[[119878,119878],\"mapped\",[115]],[[119879,119879],\"mapped\",[116]],[[119880,119880],\"mapped\",[117]],[[119881,119881],\"mapped\",[118]],[[119882,119882],\"mapped\",[119]],[[119883,119883],\"mapped\",[120]],[[119884,119884],\"mapped\",[121]],[[119885,119885],\"mapped\",[122]],[[119886,119886],\"mapped\",[97]],[[119887,119887],\"mapped\",[98]],[[119888,119888],\"mapped\",[99]],[[119889,119889],\"mapped\",[100]],[[119890,119890],\"mapped\",[101]],[[119891,119891],\"mapped\",[102]],[[119892,119892],\"mapped\",[103]],[[119893,119893],\"disallowed\"],[[119894,119894],\"mapped\",[105]],[[119895,119895],\"mapped\",[106]],[[119896,119896],\"mapped\",[107]],[[119897,119897],\"mapped\",[108]],[[119898,119898],\"mapped\",[109]],[[119899,119899],\"mapped\",[110]],[[119900,119900],\"mapped\",[111]],[[119901,119901],\"mapped\",[112]],[[119902,119902],\"mapped\",[113]],[[119903,119903],\"mapped\",[114]],[[119904,119904],\"mapped\",[115]],[[119905,119905],\"mapped\",[116]],[[119906,119906],\"mapped\",[117]],[[119907,119907],\"mapped\",[118]],[[119908,119908],\"mapped\",[119]],[[119909,119909],\"mapped\",[120]],[[119910,119910],\"mapped\",[121]],[[119911,119911],\"mapped\",[122]],[[119912,119912],\"mapped\",[97]],[[119913,119913],\"mapped\",[98]],[[119914,119914],\"mapped\",[99]],[[119915,119915],\"mapped\",[100]],[[119916,119916],\"mapped\",[101]],[[119917,119917],\"mapped\",[102]],[[119918,119918],\"mapped\",[103]],[[119919,119919],\"mapped\",[104]],[[119920,119920],\"mapped\",[105]],[[119921,119921],\"mapped\",[106]],[[119922,119922],\"mapped\",[107]],[[119923,119923],\"mapped\",[108]],[[119924,119924],\"mapped\",[109]],[[119925,119925],\"mapped\",[110]],[[119926,119926],\"mapped\",[111]],[[119927,119927],\"mapped\",[112]],[[119928,119928],\"mapped\",[113]],[[119929,119929],\"mapped\",[114]],[[119930,119930],\"mapped\",[115]],[[119931,119931],\"mapped\",[116]],[[119932,119932],\"mapped\",[117]],[[119933,119933],\"mapped\",[118]],[[119934,119934],\"mapped\",[119]],[[119935,119935],\"mapped\",[120]],[[119936,119936],\"mapped\",[121]],[[119937,119937],\"mapped\",[122]],[[119938,119938],\"mapped\",[97]],[[119939,119939],\"mapped\",[98]],[[119940,119940],\"mapped\",[99]],[[119941,119941],\"mapped\",[100]],[[119942,119942],\"mapped\",[101]],[[119943,119943],\"mapped\",[102]],[[119944,119944],\"mapped\",[103]],[[119945,119945],\"mapped\",[104]],[[119946,119946],\"mapped\",[105]],[[119947,119947],\"mapped\",[106]],[[119948,119948],\"mapped\",[107]],[[119949,119949],\"mapped\",[108]],[[119950,119950],\"mapped\",[109]],[[119951,119951],\"mapped\",[110]],[[119952,119952],\"mapped\",[111]],[[119953,119953],\"mapped\",[112]],[[119954,119954],\"mapped\",[113]],[[119955,119955],\"mapped\",[114]],[[119956,119956],\"mapped\",[115]],[[119957,119957],\"mapped\",[116]],[[119958,119958],\"mapped\",[117]],[[119959,119959],\"mapped\",[118]],[[119960,119960],\"mapped\",[119]],[[119961,119961],\"mapped\",[120]],[[119962,119962],\"mapped\",[121]],[[119963,119963],\"mapped\",[122]],[[119964,119964],\"mapped\",[97]],[[119965,119965],\"disallowed\"],[[119966,119966],\"mapped\",[99]],[[119967,119967],\"mapped\",[100]],[[119968,119969],\"disallowed\"],[[119970,119970],\"mapped\",[103]],[[119971,119972],\"disallowed\"],[[119973,119973],\"mapped\",[106]],[[119974,119974],\"mapped\",[107]],[[119975,119976],\"disallowed\"],[[119977,119977],\"mapped\",[110]],[[119978,119978],\"mapped\",[111]],[[119979,119979],\"mapped\",[112]],[[119980,119980],\"mapped\",[113]],[[119981,119981],\"disallowed\"],[[119982,119982],\"mapped\",[115]],[[119983,119983],\"mapped\",[116]],[[119984,119984],\"mapped\",[117]],[[119985,119985],\"mapped\",[118]],[[119986,119986],\"mapped\",[119]],[[119987,119987],\"mapped\",[120]],[[119988,119988],\"mapped\",[121]],[[119989,119989],\"mapped\",[122]],[[119990,119990],\"mapped\",[97]],[[119991,119991],\"mapped\",[98]],[[119992,119992],\"mapped\",[99]],[[119993,119993],\"mapped\",[100]],[[119994,119994],\"disallowed\"],[[119995,119995],\"mapped\",[102]],[[119996,119996],\"disallowed\"],[[119997,119997],\"mapped\",[104]],[[119998,119998],\"mapped\",[105]],[[119999,119999],\"mapped\",[106]],[[120000,120000],\"mapped\",[107]],[[120001,120001],\"mapped\",[108]],[[120002,120002],\"mapped\",[109]],[[120003,120003],\"mapped\",[110]],[[120004,120004],\"disallowed\"],[[120005,120005],\"mapped\",[112]],[[120006,120006],\"mapped\",[113]],[[120007,120007],\"mapped\",[114]],[[120008,120008],\"mapped\",[115]],[[120009,120009],\"mapped\",[116]],[[120010,120010],\"mapped\",[117]],[[120011,120011],\"mapped\",[118]],[[120012,120012],\"mapped\",[119]],[[120013,120013],\"mapped\",[120]],[[120014,120014],\"mapped\",[121]],[[120015,120015],\"mapped\",[122]],[[120016,120016],\"mapped\",[97]],[[120017,120017],\"mapped\",[98]],[[120018,120018],\"mapped\",[99]],[[120019,120019],\"mapped\",[100]],[[120020,120020],\"mapped\",[101]],[[120021,120021],\"mapped\",[102]],[[120022,120022],\"mapped\",[103]],[[120023,120023],\"mapped\",[104]],[[120024,120024],\"mapped\",[105]],[[120025,120025],\"mapped\",[106]],[[120026,120026],\"mapped\",[107]],[[120027,120027],\"mapped\",[108]],[[120028,120028],\"mapped\",[109]],[[120029,120029],\"mapped\",[110]],[[120030,120030],\"mapped\",[111]],[[120031,120031],\"mapped\",[112]],[[120032,120032],\"mapped\",[113]],[[120033,120033],\"mapped\",[114]],[[120034,120034],\"mapped\",[115]],[[120035,120035],\"mapped\",[116]],[[120036,120036],\"mapped\",[117]],[[120037,120037],\"mapped\",[118]],[[120038,120038],\"mapped\",[119]],[[120039,120039],\"mapped\",[120]],[[120040,120040],\"mapped\",[121]],[[120041,120041],\"mapped\",[122]],[[120042,120042],\"mapped\",[97]],[[120043,120043],\"mapped\",[98]],[[120044,120044],\"mapped\",[99]],[[120045,120045],\"mapped\",[100]],[[120046,120046],\"mapped\",[101]],[[120047,120047],\"mapped\",[102]],[[120048,120048],\"mapped\",[103]],[[120049,120049],\"mapped\",[104]],[[120050,120050],\"mapped\",[105]],[[120051,120051],\"mapped\",[106]],[[120052,120052],\"mapped\",[107]],[[120053,120053],\"mapped\",[108]],[[120054,120054],\"mapped\",[109]],[[120055,120055],\"mapped\",[110]],[[120056,120056],\"mapped\",[111]],[[120057,120057],\"mapped\",[112]],[[120058,120058],\"mapped\",[113]],[[120059,120059],\"mapped\",[114]],[[120060,120060],\"mapped\",[115]],[[120061,120061],\"mapped\",[116]],[[120062,120062],\"mapped\",[117]],[[120063,120063],\"mapped\",[118]],[[120064,120064],\"mapped\",[119]],[[120065,120065],\"mapped\",[120]],[[120066,120066],\"mapped\",[121]],[[120067,120067],\"mapped\",[122]],[[120068,120068],\"mapped\",[97]],[[120069,120069],\"mapped\",[98]],[[120070,120070],\"disallowed\"],[[120071,120071],\"mapped\",[100]],[[120072,120072],\"mapped\",[101]],[[120073,120073],\"mapped\",[102]],[[120074,120074],\"mapped\",[103]],[[120075,120076],\"disallowed\"],[[120077,120077],\"mapped\",[106]],[[120078,120078],\"mapped\",[107]],[[120079,120079],\"mapped\",[108]],[[120080,120080],\"mapped\",[109]],[[120081,120081],\"mapped\",[110]],[[120082,120082],\"mapped\",[111]],[[120083,120083],\"mapped\",[112]],[[120084,120084],\"mapped\",[113]],[[120085,120085],\"disallowed\"],[[120086,120086],\"mapped\",[115]],[[120087,120087],\"mapped\",[116]],[[120088,120088],\"mapped\",[117]],[[120089,120089],\"mapped\",[118]],[[120090,120090],\"mapped\",[119]],[[120091,120091],\"mapped\",[120]],[[120092,120092],\"mapped\",[121]],[[120093,120093],\"disallowed\"],[[120094,120094],\"mapped\",[97]],[[120095,120095],\"mapped\",[98]],[[120096,120096],\"mapped\",[99]],[[120097,120097],\"mapped\",[100]],[[120098,120098],\"mapped\",[101]],[[120099,120099],\"mapped\",[102]],[[120100,120100],\"mapped\",[103]],[[120101,120101],\"mapped\",[104]],[[120102,120102],\"mapped\",[105]],[[120103,120103],\"mapped\",[106]],[[120104,120104],\"mapped\",[107]],[[120105,120105],\"mapped\",[108]],[[120106,120106],\"mapped\",[109]],[[120107,120107],\"mapped\",[110]],[[120108,120108],\"mapped\",[111]],[[120109,120109],\"mapped\",[112]],[[120110,120110],\"mapped\",[113]],[[120111,120111],\"mapped\",[114]],[[120112,120112],\"mapped\",[115]],[[120113,120113],\"mapped\",[116]],[[120114,120114],\"mapped\",[117]],[[120115,120115],\"mapped\",[118]],[[120116,120116],\"mapped\",[119]],[[120117,120117],\"mapped\",[120]],[[120118,120118],\"mapped\",[121]],[[120119,120119],\"mapped\",[122]],[[120120,120120],\"mapped\",[97]],[[120121,120121],\"mapped\",[98]],[[120122,120122],\"disallowed\"],[[120123,120123],\"mapped\",[100]],[[120124,120124],\"mapped\",[101]],[[120125,120125],\"mapped\",[102]],[[120126,120126],\"mapped\",[103]],[[120127,120127],\"disallowed\"],[[120128,120128],\"mapped\",[105]],[[120129,120129],\"mapped\",[106]],[[120130,120130],\"mapped\",[107]],[[120131,120131],\"mapped\",[108]],[[120132,120132],\"mapped\",[109]],[[120133,120133],\"disallowed\"],[[120134,120134],\"mapped\",[111]],[[120135,120137],\"disallowed\"],[[120138,120138],\"mapped\",[115]],[[120139,120139],\"mapped\",[116]],[[120140,120140],\"mapped\",[117]],[[120141,120141],\"mapped\",[118]],[[120142,120142],\"mapped\",[119]],[[120143,120143],\"mapped\",[120]],[[120144,120144],\"mapped\",[121]],[[120145,120145],\"disallowed\"],[[120146,120146],\"mapped\",[97]],[[120147,120147],\"mapped\",[98]],[[120148,120148],\"mapped\",[99]],[[120149,120149],\"mapped\",[100]],[[120150,120150],\"mapped\",[101]],[[120151,120151],\"mapped\",[102]],[[120152,120152],\"mapped\",[103]],[[120153,120153],\"mapped\",[104]],[[120154,120154],\"mapped\",[105]],[[120155,120155],\"mapped\",[106]],[[120156,120156],\"mapped\",[107]],[[120157,120157],\"mapped\",[108]],[[120158,120158],\"mapped\",[109]],[[120159,120159],\"mapped\",[110]],[[120160,120160],\"mapped\",[111]],[[120161,120161],\"mapped\",[112]],[[120162,120162],\"mapped\",[113]],[[120163,120163],\"mapped\",[114]],[[120164,120164],\"mapped\",[115]],[[120165,120165],\"mapped\",[116]],[[120166,120166],\"mapped\",[117]],[[120167,120167],\"mapped\",[118]],[[120168,120168],\"mapped\",[119]],[[120169,120169],\"mapped\",[120]],[[120170,120170],\"mapped\",[121]],[[120171,120171],\"mapped\",[122]],[[120172,120172],\"mapped\",[97]],[[120173,120173],\"mapped\",[98]],[[120174,120174],\"mapped\",[99]],[[120175,120175],\"mapped\",[100]],[[120176,120176],\"mapped\",[101]],[[120177,120177],\"mapped\",[102]],[[120178,120178],\"mapped\",[103]],[[120179,120179],\"mapped\",[104]],[[120180,120180],\"mapped\",[105]],[[120181,120181],\"mapped\",[106]],[[120182,120182],\"mapped\",[107]],[[120183,120183],\"mapped\",[108]],[[120184,120184],\"mapped\",[109]],[[120185,120185],\"mapped\",[110]],[[120186,120186],\"mapped\",[111]],[[120187,120187],\"mapped\",[112]],[[120188,120188],\"mapped\",[113]],[[120189,120189],\"mapped\",[114]],[[120190,120190],\"mapped\",[115]],[[120191,120191],\"mapped\",[116]],[[120192,120192],\"mapped\",[117]],[[120193,120193],\"mapped\",[118]],[[120194,120194],\"mapped\",[119]],[[120195,120195],\"mapped\",[120]],[[120196,120196],\"mapped\",[121]],[[120197,120197],\"mapped\",[122]],[[120198,120198],\"mapped\",[97]],[[120199,120199],\"mapped\",[98]],[[120200,120200],\"mapped\",[99]],[[120201,120201],\"mapped\",[100]],[[120202,120202],\"mapped\",[101]],[[120203,120203],\"mapped\",[102]],[[120204,120204],\"mapped\",[103]],[[120205,120205],\"mapped\",[104]],[[120206,120206],\"mapped\",[105]],[[120207,120207],\"mapped\",[106]],[[120208,120208],\"mapped\",[107]],[[120209,120209],\"mapped\",[108]],[[120210,120210],\"mapped\",[109]],[[120211,120211],\"mapped\",[110]],[[120212,120212],\"mapped\",[111]],[[120213,120213],\"mapped\",[112]],[[120214,120214],\"mapped\",[113]],[[120215,120215],\"mapped\",[114]],[[120216,120216],\"mapped\",[115]],[[120217,120217],\"mapped\",[116]],[[120218,120218],\"mapped\",[117]],[[120219,120219],\"mapped\",[118]],[[120220,120220],\"mapped\",[119]],[[120221,120221],\"mapped\",[120]],[[120222,120222],\"mapped\",[121]],[[120223,120223],\"mapped\",[122]],[[120224,120224],\"mapped\",[97]],[[120225,120225],\"mapped\",[98]],[[120226,120226],\"mapped\",[99]],[[120227,120227],\"mapped\",[100]],[[120228,120228],\"mapped\",[101]],[[120229,120229],\"mapped\",[102]],[[120230,120230],\"mapped\",[103]],[[120231,120231],\"mapped\",[104]],[[120232,120232],\"mapped\",[105]],[[120233,120233],\"mapped\",[106]],[[120234,120234],\"mapped\",[107]],[[120235,120235],\"mapped\",[108]],[[120236,120236],\"mapped\",[109]],[[120237,120237],\"mapped\",[110]],[[120238,120238],\"mapped\",[111]],[[120239,120239],\"mapped\",[112]],[[120240,120240],\"mapped\",[113]],[[120241,120241],\"mapped\",[114]],[[120242,120242],\"mapped\",[115]],[[120243,120243],\"mapped\",[116]],[[120244,120244],\"mapped\",[117]],[[120245,120245],\"mapped\",[118]],[[120246,120246],\"mapped\",[119]],[[120247,120247],\"mapped\",[120]],[[120248,120248],\"mapped\",[121]],[[120249,120249],\"mapped\",[122]],[[120250,120250],\"mapped\",[97]],[[120251,120251],\"mapped\",[98]],[[120252,120252],\"mapped\",[99]],[[120253,120253],\"mapped\",[100]],[[120254,120254],\"mapped\",[101]],[[120255,120255],\"mapped\",[102]],[[120256,120256],\"mapped\",[103]],[[120257,120257],\"mapped\",[104]],[[120258,120258],\"mapped\",[105]],[[120259,120259],\"mapped\",[106]],[[120260,120260],\"mapped\",[107]],[[120261,120261],\"mapped\",[108]],[[120262,120262],\"mapped\",[109]],[[120263,120263],\"mapped\",[110]],[[120264,120264],\"mapped\",[111]],[[120265,120265],\"mapped\",[112]],[[120266,120266],\"mapped\",[113]],[[120267,120267],\"mapped\",[114]],[[120268,120268],\"mapped\",[115]],[[120269,120269],\"mapped\",[116]],[[120270,120270],\"mapped\",[117]],[[120271,120271],\"mapped\",[118]],[[120272,120272],\"mapped\",[119]],[[120273,120273],\"mapped\",[120]],[[120274,120274],\"mapped\",[121]],[[120275,120275],\"mapped\",[122]],[[120276,120276],\"mapped\",[97]],[[120277,120277],\"mapped\",[98]],[[120278,120278],\"mapped\",[99]],[[120279,120279],\"mapped\",[100]],[[120280,120280],\"mapped\",[101]],[[120281,120281],\"mapped\",[102]],[[120282,120282],\"mapped\",[103]],[[120283,120283],\"mapped\",[104]],[[120284,120284],\"mapped\",[105]],[[120285,120285],\"mapped\",[106]],[[120286,120286],\"mapped\",[107]],[[120287,120287],\"mapped\",[108]],[[120288,120288],\"mapped\",[109]],[[120289,120289],\"mapped\",[110]],[[120290,120290],\"mapped\",[111]],[[120291,120291],\"mapped\",[112]],[[120292,120292],\"mapped\",[113]],[[120293,120293],\"mapped\",[114]],[[120294,120294],\"mapped\",[115]],[[120295,120295],\"mapped\",[116]],[[120296,120296],\"mapped\",[117]],[[120297,120297],\"mapped\",[118]],[[120298,120298],\"mapped\",[119]],[[120299,120299],\"mapped\",[120]],[[120300,120300],\"mapped\",[121]],[[120301,120301],\"mapped\",[122]],[[120302,120302],\"mapped\",[97]],[[120303,120303],\"mapped\",[98]],[[120304,120304],\"mapped\",[99]],[[120305,120305],\"mapped\",[100]],[[120306,120306],\"mapped\",[101]],[[120307,120307],\"mapped\",[102]],[[120308,120308],\"mapped\",[103]],[[120309,120309],\"mapped\",[104]],[[120310,120310],\"mapped\",[105]],[[120311,120311],\"mapped\",[106]],[[120312,120312],\"mapped\",[107]],[[120313,120313],\"mapped\",[108]],[[120314,120314],\"mapped\",[109]],[[120315,120315],\"mapped\",[110]],[[120316,120316],\"mapped\",[111]],[[120317,120317],\"mapped\",[112]],[[120318,120318],\"mapped\",[113]],[[120319,120319],\"mapped\",[114]],[[120320,120320],\"mapped\",[115]],[[120321,120321],\"mapped\",[116]],[[120322,120322],\"mapped\",[117]],[[120323,120323],\"mapped\",[118]],[[120324,120324],\"mapped\",[119]],[[120325,120325],\"mapped\",[120]],[[120326,120326],\"mapped\",[121]],[[120327,120327],\"mapped\",[122]],[[120328,120328],\"mapped\",[97]],[[120329,120329],\"mapped\",[98]],[[120330,120330],\"mapped\",[99]],[[120331,120331],\"mapped\",[100]],[[120332,120332],\"mapped\",[101]],[[120333,120333],\"mapped\",[102]],[[120334,120334],\"mapped\",[103]],[[120335,120335],\"mapped\",[104]],[[120336,120336],\"mapped\",[105]],[[120337,120337],\"mapped\",[106]],[[120338,120338],\"mapped\",[107]],[[120339,120339],\"mapped\",[108]],[[120340,120340],\"mapped\",[109]],[[120341,120341],\"mapped\",[110]],[[120342,120342],\"mapped\",[111]],[[120343,120343],\"mapped\",[112]],[[120344,120344],\"mapped\",[113]],[[120345,120345],\"mapped\",[114]],[[120346,120346],\"mapped\",[115]],[[120347,120347],\"mapped\",[116]],[[120348,120348],\"mapped\",[117]],[[120349,120349],\"mapped\",[118]],[[120350,120350],\"mapped\",[119]],[[120351,120351],\"mapped\",[120]],[[120352,120352],\"mapped\",[121]],[[120353,120353],\"mapped\",[122]],[[120354,120354],\"mapped\",[97]],[[120355,120355],\"mapped\",[98]],[[120356,120356],\"mapped\",[99]],[[120357,120357],\"mapped\",[100]],[[120358,120358],\"mapped\",[101]],[[120359,120359],\"mapped\",[102]],[[120360,120360],\"mapped\",[103]],[[120361,120361],\"mapped\",[104]],[[120362,120362],\"mapped\",[105]],[[120363,120363],\"mapped\",[106]],[[120364,120364],\"mapped\",[107]],[[120365,120365],\"mapped\",[108]],[[120366,120366],\"mapped\",[109]],[[120367,120367],\"mapped\",[110]],[[120368,120368],\"mapped\",[111]],[[120369,120369],\"mapped\",[112]],[[120370,120370],\"mapped\",[113]],[[120371,120371],\"mapped\",[114]],[[120372,120372],\"mapped\",[115]],[[120373,120373],\"mapped\",[116]],[[120374,120374],\"mapped\",[117]],[[120375,120375],\"mapped\",[118]],[[120376,120376],\"mapped\",[119]],[[120377,120377],\"mapped\",[120]],[[120378,120378],\"mapped\",[121]],[[120379,120379],\"mapped\",[122]],[[120380,120380],\"mapped\",[97]],[[120381,120381],\"mapped\",[98]],[[120382,120382],\"mapped\",[99]],[[120383,120383],\"mapped\",[100]],[[120384,120384],\"mapped\",[101]],[[120385,120385],\"mapped\",[102]],[[120386,120386],\"mapped\",[103]],[[120387,120387],\"mapped\",[104]],[[120388,120388],\"mapped\",[105]],[[120389,120389],\"mapped\",[106]],[[120390,120390],\"mapped\",[107]],[[120391,120391],\"mapped\",[108]],[[120392,120392],\"mapped\",[109]],[[120393,120393],\"mapped\",[110]],[[120394,120394],\"mapped\",[111]],[[120395,120395],\"mapped\",[112]],[[120396,120396],\"mapped\",[113]],[[120397,120397],\"mapped\",[114]],[[120398,120398],\"mapped\",[115]],[[120399,120399],\"mapped\",[116]],[[120400,120400],\"mapped\",[117]],[[120401,120401],\"mapped\",[118]],[[120402,120402],\"mapped\",[119]],[[120403,120403],\"mapped\",[120]],[[120404,120404],\"mapped\",[121]],[[120405,120405],\"mapped\",[122]],[[120406,120406],\"mapped\",[97]],[[120407,120407],\"mapped\",[98]],[[120408,120408],\"mapped\",[99]],[[120409,120409],\"mapped\",[100]],[[120410,120410],\"mapped\",[101]],[[120411,120411],\"mapped\",[102]],[[120412,120412],\"mapped\",[103]],[[120413,120413],\"mapped\",[104]],[[120414,120414],\"mapped\",[105]],[[120415,120415],\"mapped\",[106]],[[120416,120416],\"mapped\",[107]],[[120417,120417],\"mapped\",[108]],[[120418,120418],\"mapped\",[109]],[[120419,120419],\"mapped\",[110]],[[120420,120420],\"mapped\",[111]],[[120421,120421],\"mapped\",[112]],[[120422,120422],\"mapped\",[113]],[[120423,120423],\"mapped\",[114]],[[120424,120424],\"mapped\",[115]],[[120425,120425],\"mapped\",[116]],[[120426,120426],\"mapped\",[117]],[[120427,120427],\"mapped\",[118]],[[120428,120428],\"mapped\",[119]],[[120429,120429],\"mapped\",[120]],[[120430,120430],\"mapped\",[121]],[[120431,120431],\"mapped\",[122]],[[120432,120432],\"mapped\",[97]],[[120433,120433],\"mapped\",[98]],[[120434,120434],\"mapped\",[99]],[[120435,120435],\"mapped\",[100]],[[120436,120436],\"mapped\",[101]],[[120437,120437],\"mapped\",[102]],[[120438,120438],\"mapped\",[103]],[[120439,120439],\"mapped\",[104]],[[120440,120440],\"mapped\",[105]],[[120441,120441],\"mapped\",[106]],[[120442,120442],\"mapped\",[107]],[[120443,120443],\"mapped\",[108]],[[120444,120444],\"mapped\",[109]],[[120445,120445],\"mapped\",[110]],[[120446,120446],\"mapped\",[111]],[[120447,120447],\"mapped\",[112]],[[120448,120448],\"mapped\",[113]],[[120449,120449],\"mapped\",[114]],[[120450,120450],\"mapped\",[115]],[[120451,120451],\"mapped\",[116]],[[120452,120452],\"mapped\",[117]],[[120453,120453],\"mapped\",[118]],[[120454,120454],\"mapped\",[119]],[[120455,120455],\"mapped\",[120]],[[120456,120456],\"mapped\",[121]],[[120457,120457],\"mapped\",[122]],[[120458,120458],\"mapped\",[97]],[[120459,120459],\"mapped\",[98]],[[120460,120460],\"mapped\",[99]],[[120461,120461],\"mapped\",[100]],[[120462,120462],\"mapped\",[101]],[[120463,120463],\"mapped\",[102]],[[120464,120464],\"mapped\",[103]],[[120465,120465],\"mapped\",[104]],[[120466,120466],\"mapped\",[105]],[[120467,120467],\"mapped\",[106]],[[120468,120468],\"mapped\",[107]],[[120469,120469],\"mapped\",[108]],[[120470,120470],\"mapped\",[109]],[[120471,120471],\"mapped\",[110]],[[120472,120472],\"mapped\",[111]],[[120473,120473],\"mapped\",[112]],[[120474,120474],\"mapped\",[113]],[[120475,120475],\"mapped\",[114]],[[120476,120476],\"mapped\",[115]],[[120477,120477],\"mapped\",[116]],[[120478,120478],\"mapped\",[117]],[[120479,120479],\"mapped\",[118]],[[120480,120480],\"mapped\",[119]],[[120481,120481],\"mapped\",[120]],[[120482,120482],\"mapped\",[121]],[[120483,120483],\"mapped\",[122]],[[120484,120484],\"mapped\",[305]],[[120485,120485],\"mapped\",[567]],[[120486,120487],\"disallowed\"],[[120488,120488],\"mapped\",[945]],[[120489,120489],\"mapped\",[946]],[[120490,120490],\"mapped\",[947]],[[120491,120491],\"mapped\",[948]],[[120492,120492],\"mapped\",[949]],[[120493,120493],\"mapped\",[950]],[[120494,120494],\"mapped\",[951]],[[120495,120495],\"mapped\",[952]],[[120496,120496],\"mapped\",[953]],[[120497,120497],\"mapped\",[954]],[[120498,120498],\"mapped\",[955]],[[120499,120499],\"mapped\",[956]],[[120500,120500],\"mapped\",[957]],[[120501,120501],\"mapped\",[958]],[[120502,120502],\"mapped\",[959]],[[120503,120503],\"mapped\",[960]],[[120504,120504],\"mapped\",[961]],[[120505,120505],\"mapped\",[952]],[[120506,120506],\"mapped\",[963]],[[120507,120507],\"mapped\",[964]],[[120508,120508],\"mapped\",[965]],[[120509,120509],\"mapped\",[966]],[[120510,120510],\"mapped\",[967]],[[120511,120511],\"mapped\",[968]],[[120512,120512],\"mapped\",[969]],[[120513,120513],\"mapped\",[8711]],[[120514,120514],\"mapped\",[945]],[[120515,120515],\"mapped\",[946]],[[120516,120516],\"mapped\",[947]],[[120517,120517],\"mapped\",[948]],[[120518,120518],\"mapped\",[949]],[[120519,120519],\"mapped\",[950]],[[120520,120520],\"mapped\",[951]],[[120521,120521],\"mapped\",[952]],[[120522,120522],\"mapped\",[953]],[[120523,120523],\"mapped\",[954]],[[120524,120524],\"mapped\",[955]],[[120525,120525],\"mapped\",[956]],[[120526,120526],\"mapped\",[957]],[[120527,120527],\"mapped\",[958]],[[120528,120528],\"mapped\",[959]],[[120529,120529],\"mapped\",[960]],[[120530,120530],\"mapped\",[961]],[[120531,120532],\"mapped\",[963]],[[120533,120533],\"mapped\",[964]],[[120534,120534],\"mapped\",[965]],[[120535,120535],\"mapped\",[966]],[[120536,120536],\"mapped\",[967]],[[120537,120537],\"mapped\",[968]],[[120538,120538],\"mapped\",[969]],[[120539,120539],\"mapped\",[8706]],[[120540,120540],\"mapped\",[949]],[[120541,120541],\"mapped\",[952]],[[120542,120542],\"mapped\",[954]],[[120543,120543],\"mapped\",[966]],[[120544,120544],\"mapped\",[961]],[[120545,120545],\"mapped\",[960]],[[120546,120546],\"mapped\",[945]],[[120547,120547],\"mapped\",[946]],[[120548,120548],\"mapped\",[947]],[[120549,120549],\"mapped\",[948]],[[120550,120550],\"mapped\",[949]],[[120551,120551],\"mapped\",[950]],[[120552,120552],\"mapped\",[951]],[[120553,120553],\"mapped\",[952]],[[120554,120554],\"mapped\",[953]],[[120555,120555],\"mapped\",[954]],[[120556,120556],\"mapped\",[955]],[[120557,120557],\"mapped\",[956]],[[120558,120558],\"mapped\",[957]],[[120559,120559],\"mapped\",[958]],[[120560,120560],\"mapped\",[959]],[[120561,120561],\"mapped\",[960]],[[120562,120562],\"mapped\",[961]],[[120563,120563],\"mapped\",[952]],[[120564,120564],\"mapped\",[963]],[[120565,120565],\"mapped\",[964]],[[120566,120566],\"mapped\",[965]],[[120567,120567],\"mapped\",[966]],[[120568,120568],\"mapped\",[967]],[[120569,120569],\"mapped\",[968]],[[120570,120570],\"mapped\",[969]],[[120571,120571],\"mapped\",[8711]],[[120572,120572],\"mapped\",[945]],[[120573,120573],\"mapped\",[946]],[[120574,120574],\"mapped\",[947]],[[120575,120575],\"mapped\",[948]],[[120576,120576],\"mapped\",[949]],[[120577,120577],\"mapped\",[950]],[[120578,120578],\"mapped\",[951]],[[120579,120579],\"mapped\",[952]],[[120580,120580],\"mapped\",[953]],[[120581,120581],\"mapped\",[954]],[[120582,120582],\"mapped\",[955]],[[120583,120583],\"mapped\",[956]],[[120584,120584],\"mapped\",[957]],[[120585,120585],\"mapped\",[958]],[[120586,120586],\"mapped\",[959]],[[120587,120587],\"mapped\",[960]],[[120588,120588],\"mapped\",[961]],[[120589,120590],\"mapped\",[963]],[[120591,120591],\"mapped\",[964]],[[120592,120592],\"mapped\",[965]],[[120593,120593],\"mapped\",[966]],[[120594,120594],\"mapped\",[967]],[[120595,120595],\"mapped\",[968]],[[120596,120596],\"mapped\",[969]],[[120597,120597],\"mapped\",[8706]],[[120598,120598],\"mapped\",[949]],[[120599,120599],\"mapped\",[952]],[[120600,120600],\"mapped\",[954]],[[120601,120601],\"mapped\",[966]],[[120602,120602],\"mapped\",[961]],[[120603,120603],\"mapped\",[960]],[[120604,120604],\"mapped\",[945]],[[120605,120605],\"mapped\",[946]],[[120606,120606],\"mapped\",[947]],[[120607,120607],\"mapped\",[948]],[[120608,120608],\"mapped\",[949]],[[120609,120609],\"mapped\",[950]],[[120610,120610],\"mapped\",[951]],[[120611,120611],\"mapped\",[952]],[[120612,120612],\"mapped\",[953]],[[120613,120613],\"mapped\",[954]],[[120614,120614],\"mapped\",[955]],[[120615,120615],\"mapped\",[956]],[[120616,120616],\"mapped\",[957]],[[120617,120617],\"mapped\",[958]],[[120618,120618],\"mapped\",[959]],[[120619,120619],\"mapped\",[960]],[[120620,120620],\"mapped\",[961]],[[120621,120621],\"mapped\",[952]],[[120622,120622],\"mapped\",[963]],[[120623,120623],\"mapped\",[964]],[[120624,120624],\"mapped\",[965]],[[120625,120625],\"mapped\",[966]],[[120626,120626],\"mapped\",[967]],[[120627,120627],\"mapped\",[968]],[[120628,120628],\"mapped\",[969]],[[120629,120629],\"mapped\",[8711]],[[120630,120630],\"mapped\",[945]],[[120631,120631],\"mapped\",[946]],[[120632,120632],\"mapped\",[947]],[[120633,120633],\"mapped\",[948]],[[120634,120634],\"mapped\",[949]],[[120635,120635],\"mapped\",[950]],[[120636,120636],\"mapped\",[951]],[[120637,120637],\"mapped\",[952]],[[120638,120638],\"mapped\",[953]],[[120639,120639],\"mapped\",[954]],[[120640,120640],\"mapped\",[955]],[[120641,120641],\"mapped\",[956]],[[120642,120642],\"mapped\",[957]],[[120643,120643],\"mapped\",[958]],[[120644,120644],\"mapped\",[959]],[[120645,120645],\"mapped\",[960]],[[120646,120646],\"mapped\",[961]],[[120647,120648],\"mapped\",[963]],[[120649,120649],\"mapped\",[964]],[[120650,120650],\"mapped\",[965]],[[120651,120651],\"mapped\",[966]],[[120652,120652],\"mapped\",[967]],[[120653,120653],\"mapped\",[968]],[[120654,120654],\"mapped\",[969]],[[120655,120655],\"mapped\",[8706]],[[120656,120656],\"mapped\",[949]],[[120657,120657],\"mapped\",[952]],[[120658,120658],\"mapped\",[954]],[[120659,120659],\"mapped\",[966]],[[120660,120660],\"mapped\",[961]],[[120661,120661],\"mapped\",[960]],[[120662,120662],\"mapped\",[945]],[[120663,120663],\"mapped\",[946]],[[120664,120664],\"mapped\",[947]],[[120665,120665],\"mapped\",[948]],[[120666,120666],\"mapped\",[949]],[[120667,120667],\"mapped\",[950]],[[120668,120668],\"mapped\",[951]],[[120669,120669],\"mapped\",[952]],[[120670,120670],\"mapped\",[953]],[[120671,120671],\"mapped\",[954]],[[120672,120672],\"mapped\",[955]],[[120673,120673],\"mapped\",[956]],[[120674,120674],\"mapped\",[957]],[[120675,120675],\"mapped\",[958]],[[120676,120676],\"mapped\",[959]],[[120677,120677],\"mapped\",[960]],[[120678,120678],\"mapped\",[961]],[[120679,120679],\"mapped\",[952]],[[120680,120680],\"mapped\",[963]],[[120681,120681],\"mapped\",[964]],[[120682,120682],\"mapped\",[965]],[[120683,120683],\"mapped\",[966]],[[120684,120684],\"mapped\",[967]],[[120685,120685],\"mapped\",[968]],[[120686,120686],\"mapped\",[969]],[[120687,120687],\"mapped\",[8711]],[[120688,120688],\"mapped\",[945]],[[120689,120689],\"mapped\",[946]],[[120690,120690],\"mapped\",[947]],[[120691,120691],\"mapped\",[948]],[[120692,120692],\"mapped\",[949]],[[120693,120693],\"mapped\",[950]],[[120694,120694],\"mapped\",[951]],[[120695,120695],\"mapped\",[952]],[[120696,120696],\"mapped\",[953]],[[120697,120697],\"mapped\",[954]],[[120698,120698],\"mapped\",[955]],[[120699,120699],\"mapped\",[956]],[[120700,120700],\"mapped\",[957]],[[120701,120701],\"mapped\",[958]],[[120702,120702],\"mapped\",[959]],[[120703,120703],\"mapped\",[960]],[[120704,120704],\"mapped\",[961]],[[120705,120706],\"mapped\",[963]],[[120707,120707],\"mapped\",[964]],[[120708,120708],\"mapped\",[965]],[[120709,120709],\"mapped\",[966]],[[120710,120710],\"mapped\",[967]],[[120711,120711],\"mapped\",[968]],[[120712,120712],\"mapped\",[969]],[[120713,120713],\"mapped\",[8706]],[[120714,120714],\"mapped\",[949]],[[120715,120715],\"mapped\",[952]],[[120716,120716],\"mapped\",[954]],[[120717,120717],\"mapped\",[966]],[[120718,120718],\"mapped\",[961]],[[120719,120719],\"mapped\",[960]],[[120720,120720],\"mapped\",[945]],[[120721,120721],\"mapped\",[946]],[[120722,120722],\"mapped\",[947]],[[120723,120723],\"mapped\",[948]],[[120724,120724],\"mapped\",[949]],[[120725,120725],\"mapped\",[950]],[[120726,120726],\"mapped\",[951]],[[120727,120727],\"mapped\",[952]],[[120728,120728],\"mapped\",[953]],[[120729,120729],\"mapped\",[954]],[[120730,120730],\"mapped\",[955]],[[120731,120731],\"mapped\",[956]],[[120732,120732],\"mapped\",[957]],[[120733,120733],\"mapped\",[958]],[[120734,120734],\"mapped\",[959]],[[120735,120735],\"mapped\",[960]],[[120736,120736],\"mapped\",[961]],[[120737,120737],\"mapped\",[952]],[[120738,120738],\"mapped\",[963]],[[120739,120739],\"mapped\",[964]],[[120740,120740],\"mapped\",[965]],[[120741,120741],\"mapped\",[966]],[[120742,120742],\"mapped\",[967]],[[120743,120743],\"mapped\",[968]],[[120744,120744],\"mapped\",[969]],[[120745,120745],\"mapped\",[8711]],[[120746,120746],\"mapped\",[945]],[[120747,120747],\"mapped\",[946]],[[120748,120748],\"mapped\",[947]],[[120749,120749],\"mapped\",[948]],[[120750,120750],\"mapped\",[949]],[[120751,120751],\"mapped\",[950]],[[120752,120752],\"mapped\",[951]],[[120753,120753],\"mapped\",[952]],[[120754,120754],\"mapped\",[953]],[[120755,120755],\"mapped\",[954]],[[120756,120756],\"mapped\",[955]],[[120757,120757],\"mapped\",[956]],[[120758,120758],\"mapped\",[957]],[[120759,120759],\"mapped\",[958]],[[120760,120760],\"mapped\",[959]],[[120761,120761],\"mapped\",[960]],[[120762,120762],\"mapped\",[961]],[[120763,120764],\"mapped\",[963]],[[120765,120765],\"mapped\",[964]],[[120766,120766],\"mapped\",[965]],[[120767,120767],\"mapped\",[966]],[[120768,120768],\"mapped\",[967]],[[120769,120769],\"mapped\",[968]],[[120770,120770],\"mapped\",[969]],[[120771,120771],\"mapped\",[8706]],[[120772,120772],\"mapped\",[949]],[[120773,120773],\"mapped\",[952]],[[120774,120774],\"mapped\",[954]],[[120775,120775],\"mapped\",[966]],[[120776,120776],\"mapped\",[961]],[[120777,120777],\"mapped\",[960]],[[120778,120779],\"mapped\",[989]],[[120780,120781],\"disallowed\"],[[120782,120782],\"mapped\",[48]],[[120783,120783],\"mapped\",[49]],[[120784,120784],\"mapped\",[50]],[[120785,120785],\"mapped\",[51]],[[120786,120786],\"mapped\",[52]],[[120787,120787],\"mapped\",[53]],[[120788,120788],\"mapped\",[54]],[[120789,120789],\"mapped\",[55]],[[120790,120790],\"mapped\",[56]],[[120791,120791],\"mapped\",[57]],[[120792,120792],\"mapped\",[48]],[[120793,120793],\"mapped\",[49]],[[120794,120794],\"mapped\",[50]],[[120795,120795],\"mapped\",[51]],[[120796,120796],\"mapped\",[52]],[[120797,120797],\"mapped\",[53]],[[120798,120798],\"mapped\",[54]],[[120799,120799],\"mapped\",[55]],[[120800,120800],\"mapped\",[56]],[[120801,120801],\"mapped\",[57]],[[120802,120802],\"mapped\",[48]],[[120803,120803],\"mapped\",[49]],[[120804,120804],\"mapped\",[50]],[[120805,120805],\"mapped\",[51]],[[120806,120806],\"mapped\",[52]],[[120807,120807],\"mapped\",[53]],[[120808,120808],\"mapped\",[54]],[[120809,120809],\"mapped\",[55]],[[120810,120810],\"mapped\",[56]],[[120811,120811],\"mapped\",[57]],[[120812,120812],\"mapped\",[48]],[[120813,120813],\"mapped\",[49]],[[120814,120814],\"mapped\",[50]],[[120815,120815],\"mapped\",[51]],[[120816,120816],\"mapped\",[52]],[[120817,120817],\"mapped\",[53]],[[120818,120818],\"mapped\",[54]],[[120819,120819],\"mapped\",[55]],[[120820,120820],\"mapped\",[56]],[[120821,120821],\"mapped\",[57]],[[120822,120822],\"mapped\",[48]],[[120823,120823],\"mapped\",[49]],[[120824,120824],\"mapped\",[50]],[[120825,120825],\"mapped\",[51]],[[120826,120826],\"mapped\",[52]],[[120827,120827],\"mapped\",[53]],[[120828,120828],\"mapped\",[54]],[[120829,120829],\"mapped\",[55]],[[120830,120830],\"mapped\",[56]],[[120831,120831],\"mapped\",[57]],[[120832,121343],\"valid\",[],\"NV8\"],[[121344,121398],\"valid\"],[[121399,121402],\"valid\",[],\"NV8\"],[[121403,121452],\"valid\"],[[121453,121460],\"valid\",[],\"NV8\"],[[121461,121461],\"valid\"],[[121462,121475],\"valid\",[],\"NV8\"],[[121476,121476],\"valid\"],[[121477,121483],\"valid\",[],\"NV8\"],[[121484,121498],\"disallowed\"],[[121499,121503],\"valid\"],[[121504,121504],\"disallowed\"],[[121505,121519],\"valid\"],[[121520,124927],\"disallowed\"],[[124928,125124],\"valid\"],[[125125,125126],\"disallowed\"],[[125127,125135],\"valid\",[],\"NV8\"],[[125136,125142],\"valid\"],[[125143,126463],\"disallowed\"],[[126464,126464],\"mapped\",[1575]],[[126465,126465],\"mapped\",[1576]],[[126466,126466],\"mapped\",[1580]],[[126467,126467],\"mapped\",[1583]],[[126468,126468],\"disallowed\"],[[126469,126469],\"mapped\",[1608]],[[126470,126470],\"mapped\",[1586]],[[126471,126471],\"mapped\",[1581]],[[126472,126472],\"mapped\",[1591]],[[126473,126473],\"mapped\",[1610]],[[126474,126474],\"mapped\",[1603]],[[126475,126475],\"mapped\",[1604]],[[126476,126476],\"mapped\",[1605]],[[126477,126477],\"mapped\",[1606]],[[126478,126478],\"mapped\",[1587]],[[126479,126479],\"mapped\",[1593]],[[126480,126480],\"mapped\",[1601]],[[126481,126481],\"mapped\",[1589]],[[126482,126482],\"mapped\",[1602]],[[126483,126483],\"mapped\",[1585]],[[126484,126484],\"mapped\",[1588]],[[126485,126485],\"mapped\",[1578]],[[126486,126486],\"mapped\",[1579]],[[126487,126487],\"mapped\",[1582]],[[126488,126488],\"mapped\",[1584]],[[126489,126489],\"mapped\",[1590]],[[126490,126490],\"mapped\",[1592]],[[126491,126491],\"mapped\",[1594]],[[126492,126492],\"mapped\",[1646]],[[126493,126493],\"mapped\",[1722]],[[126494,126494],\"mapped\",[1697]],[[126495,126495],\"mapped\",[1647]],[[126496,126496],\"disallowed\"],[[126497,126497],\"mapped\",[1576]],[[126498,126498],\"mapped\",[1580]],[[126499,126499],\"disallowed\"],[[126500,126500],\"mapped\",[1607]],[[126501,126502],\"disallowed\"],[[126503,126503],\"mapped\",[1581]],[[126504,126504],\"disallowed\"],[[126505,126505],\"mapped\",[1610]],[[126506,126506],\"mapped\",[1603]],[[126507,126507],\"mapped\",[1604]],[[126508,126508],\"mapped\",[1605]],[[126509,126509],\"mapped\",[1606]],[[126510,126510],\"mapped\",[1587]],[[126511,126511],\"mapped\",[1593]],[[126512,126512],\"mapped\",[1601]],[[126513,126513],\"mapped\",[1589]],[[126514,126514],\"mapped\",[1602]],[[126515,126515],\"disallowed\"],[[126516,126516],\"mapped\",[1588]],[[126517,126517],\"mapped\",[1578]],[[126518,126518],\"mapped\",[1579]],[[126519,126519],\"mapped\",[1582]],[[126520,126520],\"disallowed\"],[[126521,126521],\"mapped\",[1590]],[[126522,126522],\"disallowed\"],[[126523,126523],\"mapped\",[1594]],[[126524,126529],\"disallowed\"],[[126530,126530],\"mapped\",[1580]],[[126531,126534],\"disallowed\"],[[126535,126535],\"mapped\",[1581]],[[126536,126536],\"disallowed\"],[[126537,126537],\"mapped\",[1610]],[[126538,126538],\"disallowed\"],[[126539,126539],\"mapped\",[1604]],[[126540,126540],\"disallowed\"],[[126541,126541],\"mapped\",[1606]],[[126542,126542],\"mapped\",[1587]],[[126543,126543],\"mapped\",[1593]],[[126544,126544],\"disallowed\"],[[126545,126545],\"mapped\",[1589]],[[126546,126546],\"mapped\",[1602]],[[126547,126547],\"disallowed\"],[[126548,126548],\"mapped\",[1588]],[[126549,126550],\"disallowed\"],[[126551,126551],\"mapped\",[1582]],[[126552,126552],\"disallowed\"],[[126553,126553],\"mapped\",[1590]],[[126554,126554],\"disallowed\"],[[126555,126555],\"mapped\",[1594]],[[126556,126556],\"disallowed\"],[[126557,126557],\"mapped\",[1722]],[[126558,126558],\"disallowed\"],[[126559,126559],\"mapped\",[1647]],[[126560,126560],\"disallowed\"],[[126561,126561],\"mapped\",[1576]],[[126562,126562],\"mapped\",[1580]],[[126563,126563],\"disallowed\"],[[126564,126564],\"mapped\",[1607]],[[126565,126566],\"disallowed\"],[[126567,126567],\"mapped\",[1581]],[[126568,126568],\"mapped\",[1591]],[[126569,126569],\"mapped\",[1610]],[[126570,126570],\"mapped\",[1603]],[[126571,126571],\"disallowed\"],[[126572,126572],\"mapped\",[1605]],[[126573,126573],\"mapped\",[1606]],[[126574,126574],\"mapped\",[1587]],[[126575,126575],\"mapped\",[1593]],[[126576,126576],\"mapped\",[1601]],[[126577,126577],\"mapped\",[1589]],[[126578,126578],\"mapped\",[1602]],[[126579,126579],\"disallowed\"],[[126580,126580],\"mapped\",[1588]],[[126581,126581],\"mapped\",[1578]],[[126582,126582],\"mapped\",[1579]],[[126583,126583],\"mapped\",[1582]],[[126584,126584],\"disallowed\"],[[126585,126585],\"mapped\",[1590]],[[126586,126586],\"mapped\",[1592]],[[126587,126587],\"mapped\",[1594]],[[126588,126588],\"mapped\",[1646]],[[126589,126589],\"disallowed\"],[[126590,126590],\"mapped\",[1697]],[[126591,126591],\"disallowed\"],[[126592,126592],\"mapped\",[1575]],[[126593,126593],\"mapped\",[1576]],[[126594,126594],\"mapped\",[1580]],[[126595,126595],\"mapped\",[1583]],[[126596,126596],\"mapped\",[1607]],[[126597,126597],\"mapped\",[1608]],[[126598,126598],\"mapped\",[1586]],[[126599,126599],\"mapped\",[1581]],[[126600,126600],\"mapped\",[1591]],[[126601,126601],\"mapped\",[1610]],[[126602,126602],\"disallowed\"],[[126603,126603],\"mapped\",[1604]],[[126604,126604],\"mapped\",[1605]],[[126605,126605],\"mapped\",[1606]],[[126606,126606],\"mapped\",[1587]],[[126607,126607],\"mapped\",[1593]],[[126608,126608],\"mapped\",[1601]],[[126609,126609],\"mapped\",[1589]],[[126610,126610],\"mapped\",[1602]],[[126611,126611],\"mapped\",[1585]],[[126612,126612],\"mapped\",[1588]],[[126613,126613],\"mapped\",[1578]],[[126614,126614],\"mapped\",[1579]],[[126615,126615],\"mapped\",[1582]],[[126616,126616],\"mapped\",[1584]],[[126617,126617],\"mapped\",[1590]],[[126618,126618],\"mapped\",[1592]],[[126619,126619],\"mapped\",[1594]],[[126620,126624],\"disallowed\"],[[126625,126625],\"mapped\",[1576]],[[126626,126626],\"mapped\",[1580]],[[126627,126627],\"mapped\",[1583]],[[126628,126628],\"disallowed\"],[[126629,126629],\"mapped\",[1608]],[[126630,126630],\"mapped\",[1586]],[[126631,126631],\"mapped\",[1581]],[[126632,126632],\"mapped\",[1591]],[[126633,126633],\"mapped\",[1610]],[[126634,126634],\"disallowed\"],[[126635,126635],\"mapped\",[1604]],[[126636,126636],\"mapped\",[1605]],[[126637,126637],\"mapped\",[1606]],[[126638,126638],\"mapped\",[1587]],[[126639,126639],\"mapped\",[1593]],[[126640,126640],\"mapped\",[1601]],[[126641,126641],\"mapped\",[1589]],[[126642,126642],\"mapped\",[1602]],[[126643,126643],\"mapped\",[1585]],[[126644,126644],\"mapped\",[1588]],[[126645,126645],\"mapped\",[1578]],[[126646,126646],\"mapped\",[1579]],[[126647,126647],\"mapped\",[1582]],[[126648,126648],\"mapped\",[1584]],[[126649,126649],\"mapped\",[1590]],[[126650,126650],\"mapped\",[1592]],[[126651,126651],\"mapped\",[1594]],[[126652,126703],\"disallowed\"],[[126704,126705],\"valid\",[],\"NV8\"],[[126706,126975],\"disallowed\"],[[126976,127019],\"valid\",[],\"NV8\"],[[127020,127023],\"disallowed\"],[[127024,127123],\"valid\",[],\"NV8\"],[[127124,127135],\"disallowed\"],[[127136,127150],\"valid\",[],\"NV8\"],[[127151,127152],\"disallowed\"],[[127153,127166],\"valid\",[],\"NV8\"],[[127167,127167],\"valid\",[],\"NV8\"],[[127168,127168],\"disallowed\"],[[127169,127183],\"valid\",[],\"NV8\"],[[127184,127184],\"disallowed\"],[[127185,127199],\"valid\",[],\"NV8\"],[[127200,127221],\"valid\",[],\"NV8\"],[[127222,127231],\"disallowed\"],[[127232,127232],\"disallowed\"],[[127233,127233],\"disallowed_STD3_mapped\",[48,44]],[[127234,127234],\"disallowed_STD3_mapped\",[49,44]],[[127235,127235],\"disallowed_STD3_mapped\",[50,44]],[[127236,127236],\"disallowed_STD3_mapped\",[51,44]],[[127237,127237],\"disallowed_STD3_mapped\",[52,44]],[[127238,127238],\"disallowed_STD3_mapped\",[53,44]],[[127239,127239],\"disallowed_STD3_mapped\",[54,44]],[[127240,127240],\"disallowed_STD3_mapped\",[55,44]],[[127241,127241],\"disallowed_STD3_mapped\",[56,44]],[[127242,127242],\"disallowed_STD3_mapped\",[57,44]],[[127243,127244],\"valid\",[],\"NV8\"],[[127245,127247],\"disallowed\"],[[127248,127248],\"disallowed_STD3_mapped\",[40,97,41]],[[127249,127249],\"disallowed_STD3_mapped\",[40,98,41]],[[127250,127250],\"disallowed_STD3_mapped\",[40,99,41]],[[127251,127251],\"disallowed_STD3_mapped\",[40,100,41]],[[127252,127252],\"disallowed_STD3_mapped\",[40,101,41]],[[127253,127253],\"disallowed_STD3_mapped\",[40,102,41]],[[127254,127254],\"disallowed_STD3_mapped\",[40,103,41]],[[127255,127255],\"disallowed_STD3_mapped\",[40,104,41]],[[127256,127256],\"disallowed_STD3_mapped\",[40,105,41]],[[127257,127257],\"disallowed_STD3_mapped\",[40,106,41]],[[127258,127258],\"disallowed_STD3_mapped\",[40,107,41]],[[127259,127259],\"disallowed_STD3_mapped\",[40,108,41]],[[127260,127260],\"disallowed_STD3_mapped\",[40,109,41]],[[127261,127261],\"disallowed_STD3_mapped\",[40,110,41]],[[127262,127262],\"disallowed_STD3_mapped\",[40,111,41]],[[127263,127263],\"disallowed_STD3_mapped\",[40,112,41]],[[127264,127264],\"disallowed_STD3_mapped\",[40,113,41]],[[127265,127265],\"disallowed_STD3_mapped\",[40,114,41]],[[127266,127266],\"disallowed_STD3_mapped\",[40,115,41]],[[127267,127267],\"disallowed_STD3_mapped\",[40,116,41]],[[127268,127268],\"disallowed_STD3_mapped\",[40,117,41]],[[127269,127269],\"disallowed_STD3_mapped\",[40,118,41]],[[127270,127270],\"disallowed_STD3_mapped\",[40,119,41]],[[127271,127271],\"disallowed_STD3_mapped\",[40,120,41]],[[127272,127272],\"disallowed_STD3_mapped\",[40,121,41]],[[127273,127273],\"disallowed_STD3_mapped\",[40,122,41]],[[127274,127274],\"mapped\",[12308,115,12309]],[[127275,127275],\"mapped\",[99]],[[127276,127276],\"mapped\",[114]],[[127277,127277],\"mapped\",[99,100]],[[127278,127278],\"mapped\",[119,122]],[[127279,127279],\"disallowed\"],[[127280,127280],\"mapped\",[97]],[[127281,127281],\"mapped\",[98]],[[127282,127282],\"mapped\",[99]],[[127283,127283],\"mapped\",[100]],[[127284,127284],\"mapped\",[101]],[[127285,127285],\"mapped\",[102]],[[127286,127286],\"mapped\",[103]],[[127287,127287],\"mapped\",[104]],[[127288,127288],\"mapped\",[105]],[[127289,127289],\"mapped\",[106]],[[127290,127290],\"mapped\",[107]],[[127291,127291],\"mapped\",[108]],[[127292,127292],\"mapped\",[109]],[[127293,127293],\"mapped\",[110]],[[127294,127294],\"mapped\",[111]],[[127295,127295],\"mapped\",[112]],[[127296,127296],\"mapped\",[113]],[[127297,127297],\"mapped\",[114]],[[127298,127298],\"mapped\",[115]],[[127299,127299],\"mapped\",[116]],[[127300,127300],\"mapped\",[117]],[[127301,127301],\"mapped\",[118]],[[127302,127302],\"mapped\",[119]],[[127303,127303],\"mapped\",[120]],[[127304,127304],\"mapped\",[121]],[[127305,127305],\"mapped\",[122]],[[127306,127306],\"mapped\",[104,118]],[[127307,127307],\"mapped\",[109,118]],[[127308,127308],\"mapped\",[115,100]],[[127309,127309],\"mapped\",[115,115]],[[127310,127310],\"mapped\",[112,112,118]],[[127311,127311],\"mapped\",[119,99]],[[127312,127318],\"valid\",[],\"NV8\"],[[127319,127319],\"valid\",[],\"NV8\"],[[127320,127326],\"valid\",[],\"NV8\"],[[127327,127327],\"valid\",[],\"NV8\"],[[127328,127337],\"valid\",[],\"NV8\"],[[127338,127338],\"mapped\",[109,99]],[[127339,127339],\"mapped\",[109,100]],[[127340,127343],\"disallowed\"],[[127344,127352],\"valid\",[],\"NV8\"],[[127353,127353],\"valid\",[],\"NV8\"],[[127354,127354],\"valid\",[],\"NV8\"],[[127355,127356],\"valid\",[],\"NV8\"],[[127357,127358],\"valid\",[],\"NV8\"],[[127359,127359],\"valid\",[],\"NV8\"],[[127360,127369],\"valid\",[],\"NV8\"],[[127370,127373],\"valid\",[],\"NV8\"],[[127374,127375],\"valid\",[],\"NV8\"],[[127376,127376],\"mapped\",[100,106]],[[127377,127386],\"valid\",[],\"NV8\"],[[127387,127461],\"disallowed\"],[[127462,127487],\"valid\",[],\"NV8\"],[[127488,127488],\"mapped\",[12411,12363]],[[127489,127489],\"mapped\",[12467,12467]],[[127490,127490],\"mapped\",[12469]],[[127491,127503],\"disallowed\"],[[127504,127504],\"mapped\",[25163]],[[127505,127505],\"mapped\",[23383]],[[127506,127506],\"mapped\",[21452]],[[127507,127507],\"mapped\",[12487]],[[127508,127508],\"mapped\",[20108]],[[127509,127509],\"mapped\",[22810]],[[127510,127510],\"mapped\",[35299]],[[127511,127511],\"mapped\",[22825]],[[127512,127512],\"mapped\",[20132]],[[127513,127513],\"mapped\",[26144]],[[127514,127514],\"mapped\",[28961]],[[127515,127515],\"mapped\",[26009]],[[127516,127516],\"mapped\",[21069]],[[127517,127517],\"mapped\",[24460]],[[127518,127518],\"mapped\",[20877]],[[127519,127519],\"mapped\",[26032]],[[127520,127520],\"mapped\",[21021]],[[127521,127521],\"mapped\",[32066]],[[127522,127522],\"mapped\",[29983]],[[127523,127523],\"mapped\",[36009]],[[127524,127524],\"mapped\",[22768]],[[127525,127525],\"mapped\",[21561]],[[127526,127526],\"mapped\",[28436]],[[127527,127527],\"mapped\",[25237]],[[127528,127528],\"mapped\",[25429]],[[127529,127529],\"mapped\",[19968]],[[127530,127530],\"mapped\",[19977]],[[127531,127531],\"mapped\",[36938]],[[127532,127532],\"mapped\",[24038]],[[127533,127533],\"mapped\",[20013]],[[127534,127534],\"mapped\",[21491]],[[127535,127535],\"mapped\",[25351]],[[127536,127536],\"mapped\",[36208]],[[127537,127537],\"mapped\",[25171]],[[127538,127538],\"mapped\",[31105]],[[127539,127539],\"mapped\",[31354]],[[127540,127540],\"mapped\",[21512]],[[127541,127541],\"mapped\",[28288]],[[127542,127542],\"mapped\",[26377]],[[127543,127543],\"mapped\",[26376]],[[127544,127544],\"mapped\",[30003]],[[127545,127545],\"mapped\",[21106]],[[127546,127546],\"mapped\",[21942]],[[127547,127551],\"disallowed\"],[[127552,127552],\"mapped\",[12308,26412,12309]],[[127553,127553],\"mapped\",[12308,19977,12309]],[[127554,127554],\"mapped\",[12308,20108,12309]],[[127555,127555],\"mapped\",[12308,23433,12309]],[[127556,127556],\"mapped\",[12308,28857,12309]],[[127557,127557],\"mapped\",[12308,25171,12309]],[[127558,127558],\"mapped\",[12308,30423,12309]],[[127559,127559],\"mapped\",[12308,21213,12309]],[[127560,127560],\"mapped\",[12308,25943,12309]],[[127561,127567],\"disallowed\"],[[127568,127568],\"mapped\",[24471]],[[127569,127569],\"mapped\",[21487]],[[127570,127743],\"disallowed\"],[[127744,127776],\"valid\",[],\"NV8\"],[[127777,127788],\"valid\",[],\"NV8\"],[[127789,127791],\"valid\",[],\"NV8\"],[[127792,127797],\"valid\",[],\"NV8\"],[[127798,127798],\"valid\",[],\"NV8\"],[[127799,127868],\"valid\",[],\"NV8\"],[[127869,127869],\"valid\",[],\"NV8\"],[[127870,127871],\"valid\",[],\"NV8\"],[[127872,127891],\"valid\",[],\"NV8\"],[[127892,127903],\"valid\",[],\"NV8\"],[[127904,127940],\"valid\",[],\"NV8\"],[[127941,127941],\"valid\",[],\"NV8\"],[[127942,127946],\"valid\",[],\"NV8\"],[[127947,127950],\"valid\",[],\"NV8\"],[[127951,127955],\"valid\",[],\"NV8\"],[[127956,127967],\"valid\",[],\"NV8\"],[[127968,127984],\"valid\",[],\"NV8\"],[[127985,127991],\"valid\",[],\"NV8\"],[[127992,127999],\"valid\",[],\"NV8\"],[[128000,128062],\"valid\",[],\"NV8\"],[[128063,128063],\"valid\",[],\"NV8\"],[[128064,128064],\"valid\",[],\"NV8\"],[[128065,128065],\"valid\",[],\"NV8\"],[[128066,128247],\"valid\",[],\"NV8\"],[[128248,128248],\"valid\",[],\"NV8\"],[[128249,128252],\"valid\",[],\"NV8\"],[[128253,128254],\"valid\",[],\"NV8\"],[[128255,128255],\"valid\",[],\"NV8\"],[[128256,128317],\"valid\",[],\"NV8\"],[[128318,128319],\"valid\",[],\"NV8\"],[[128320,128323],\"valid\",[],\"NV8\"],[[128324,128330],\"valid\",[],\"NV8\"],[[128331,128335],\"valid\",[],\"NV8\"],[[128336,128359],\"valid\",[],\"NV8\"],[[128360,128377],\"valid\",[],\"NV8\"],[[128378,128378],\"disallowed\"],[[128379,128419],\"valid\",[],\"NV8\"],[[128420,128420],\"disallowed\"],[[128421,128506],\"valid\",[],\"NV8\"],[[128507,128511],\"valid\",[],\"NV8\"],[[128512,128512],\"valid\",[],\"NV8\"],[[128513,128528],\"valid\",[],\"NV8\"],[[128529,128529],\"valid\",[],\"NV8\"],[[128530,128532],\"valid\",[],\"NV8\"],[[128533,128533],\"valid\",[],\"NV8\"],[[128534,128534],\"valid\",[],\"NV8\"],[[128535,128535],\"valid\",[],\"NV8\"],[[128536,128536],\"valid\",[],\"NV8\"],[[128537,128537],\"valid\",[],\"NV8\"],[[128538,128538],\"valid\",[],\"NV8\"],[[128539,128539],\"valid\",[],\"NV8\"],[[128540,128542],\"valid\",[],\"NV8\"],[[128543,128543],\"valid\",[],\"NV8\"],[[128544,128549],\"valid\",[],\"NV8\"],[[128550,128551],\"valid\",[],\"NV8\"],[[128552,128555],\"valid\",[],\"NV8\"],[[128556,128556],\"valid\",[],\"NV8\"],[[128557,128557],\"valid\",[],\"NV8\"],[[128558,128559],\"valid\",[],\"NV8\"],[[128560,128563],\"valid\",[],\"NV8\"],[[128564,128564],\"valid\",[],\"NV8\"],[[128565,128576],\"valid\",[],\"NV8\"],[[128577,128578],\"valid\",[],\"NV8\"],[[128579,128580],\"valid\",[],\"NV8\"],[[128581,128591],\"valid\",[],\"NV8\"],[[128592,128639],\"valid\",[],\"NV8\"],[[128640,128709],\"valid\",[],\"NV8\"],[[128710,128719],\"valid\",[],\"NV8\"],[[128720,128720],\"valid\",[],\"NV8\"],[[128721,128735],\"disallowed\"],[[128736,128748],\"valid\",[],\"NV8\"],[[128749,128751],\"disallowed\"],[[128752,128755],\"valid\",[],\"NV8\"],[[128756,128767],\"disallowed\"],[[128768,128883],\"valid\",[],\"NV8\"],[[128884,128895],\"disallowed\"],[[128896,128980],\"valid\",[],\"NV8\"],[[128981,129023],\"disallowed\"],[[129024,129035],\"valid\",[],\"NV8\"],[[129036,129039],\"disallowed\"],[[129040,129095],\"valid\",[],\"NV8\"],[[129096,129103],\"disallowed\"],[[129104,129113],\"valid\",[],\"NV8\"],[[129114,129119],\"disallowed\"],[[129120,129159],\"valid\",[],\"NV8\"],[[129160,129167],\"disallowed\"],[[129168,129197],\"valid\",[],\"NV8\"],[[129198,129295],\"disallowed\"],[[129296,129304],\"valid\",[],\"NV8\"],[[129305,129407],\"disallowed\"],[[129408,129412],\"valid\",[],\"NV8\"],[[129413,129471],\"disallowed\"],[[129472,129472],\"valid\",[],\"NV8\"],[[129473,131069],\"disallowed\"],[[131070,131071],\"disallowed\"],[[131072,173782],\"valid\"],[[173783,173823],\"disallowed\"],[[173824,177972],\"valid\"],[[177973,177983],\"disallowed\"],[[177984,178205],\"valid\"],[[178206,178207],\"disallowed\"],[[178208,183969],\"valid\"],[[183970,194559],\"disallowed\"],[[194560,194560],\"mapped\",[20029]],[[194561,194561],\"mapped\",[20024]],[[194562,194562],\"mapped\",[20033]],[[194563,194563],\"mapped\",[131362]],[[194564,194564],\"mapped\",[20320]],[[194565,194565],\"mapped\",[20398]],[[194566,194566],\"mapped\",[20411]],[[194567,194567],\"mapped\",[20482]],[[194568,194568],\"mapped\",[20602]],[[194569,194569],\"mapped\",[20633]],[[194570,194570],\"mapped\",[20711]],[[194571,194571],\"mapped\",[20687]],[[194572,194572],\"mapped\",[13470]],[[194573,194573],\"mapped\",[132666]],[[194574,194574],\"mapped\",[20813]],[[194575,194575],\"mapped\",[20820]],[[194576,194576],\"mapped\",[20836]],[[194577,194577],\"mapped\",[20855]],[[194578,194578],\"mapped\",[132380]],[[194579,194579],\"mapped\",[13497]],[[194580,194580],\"mapped\",[20839]],[[194581,194581],\"mapped\",[20877]],[[194582,194582],\"mapped\",[132427]],[[194583,194583],\"mapped\",[20887]],[[194584,194584],\"mapped\",[20900]],[[194585,194585],\"mapped\",[20172]],[[194586,194586],\"mapped\",[20908]],[[194587,194587],\"mapped\",[20917]],[[194588,194588],\"mapped\",[168415]],[[194589,194589],\"mapped\",[20981]],[[194590,194590],\"mapped\",[20995]],[[194591,194591],\"mapped\",[13535]],[[194592,194592],\"mapped\",[21051]],[[194593,194593],\"mapped\",[21062]],[[194594,194594],\"mapped\",[21106]],[[194595,194595],\"mapped\",[21111]],[[194596,194596],\"mapped\",[13589]],[[194597,194597],\"mapped\",[21191]],[[194598,194598],\"mapped\",[21193]],[[194599,194599],\"mapped\",[21220]],[[194600,194600],\"mapped\",[21242]],[[194601,194601],\"mapped\",[21253]],[[194602,194602],\"mapped\",[21254]],[[194603,194603],\"mapped\",[21271]],[[194604,194604],\"mapped\",[21321]],[[194605,194605],\"mapped\",[21329]],[[194606,194606],\"mapped\",[21338]],[[194607,194607],\"mapped\",[21363]],[[194608,194608],\"mapped\",[21373]],[[194609,194611],\"mapped\",[21375]],[[194612,194612],\"mapped\",[133676]],[[194613,194613],\"mapped\",[28784]],[[194614,194614],\"mapped\",[21450]],[[194615,194615],\"mapped\",[21471]],[[194616,194616],\"mapped\",[133987]],[[194617,194617],\"mapped\",[21483]],[[194618,194618],\"mapped\",[21489]],[[194619,194619],\"mapped\",[21510]],[[194620,194620],\"mapped\",[21662]],[[194621,194621],\"mapped\",[21560]],[[194622,194622],\"mapped\",[21576]],[[194623,194623],\"mapped\",[21608]],[[194624,194624],\"mapped\",[21666]],[[194625,194625],\"mapped\",[21750]],[[194626,194626],\"mapped\",[21776]],[[194627,194627],\"mapped\",[21843]],[[194628,194628],\"mapped\",[21859]],[[194629,194630],\"mapped\",[21892]],[[194631,194631],\"mapped\",[21913]],[[194632,194632],\"mapped\",[21931]],[[194633,194633],\"mapped\",[21939]],[[194634,194634],\"mapped\",[21954]],[[194635,194635],\"mapped\",[22294]],[[194636,194636],\"mapped\",[22022]],[[194637,194637],\"mapped\",[22295]],[[194638,194638],\"mapped\",[22097]],[[194639,194639],\"mapped\",[22132]],[[194640,194640],\"mapped\",[20999]],[[194641,194641],\"mapped\",[22766]],[[194642,194642],\"mapped\",[22478]],[[194643,194643],\"mapped\",[22516]],[[194644,194644],\"mapped\",[22541]],[[194645,194645],\"mapped\",[22411]],[[194646,194646],\"mapped\",[22578]],[[194647,194647],\"mapped\",[22577]],[[194648,194648],\"mapped\",[22700]],[[194649,194649],\"mapped\",[136420]],[[194650,194650],\"mapped\",[22770]],[[194651,194651],\"mapped\",[22775]],[[194652,194652],\"mapped\",[22790]],[[194653,194653],\"mapped\",[22810]],[[194654,194654],\"mapped\",[22818]],[[194655,194655],\"mapped\",[22882]],[[194656,194656],\"mapped\",[136872]],[[194657,194657],\"mapped\",[136938]],[[194658,194658],\"mapped\",[23020]],[[194659,194659],\"mapped\",[23067]],[[194660,194660],\"mapped\",[23079]],[[194661,194661],\"mapped\",[23000]],[[194662,194662],\"mapped\",[23142]],[[194663,194663],\"mapped\",[14062]],[[194664,194664],\"disallowed\"],[[194665,194665],\"mapped\",[23304]],[[194666,194667],\"mapped\",[23358]],[[194668,194668],\"mapped\",[137672]],[[194669,194669],\"mapped\",[23491]],[[194670,194670],\"mapped\",[23512]],[[194671,194671],\"mapped\",[23527]],[[194672,194672],\"mapped\",[23539]],[[194673,194673],\"mapped\",[138008]],[[194674,194674],\"mapped\",[23551]],[[194675,194675],\"mapped\",[23558]],[[194676,194676],\"disallowed\"],[[194677,194677],\"mapped\",[23586]],[[194678,194678],\"mapped\",[14209]],[[194679,194679],\"mapped\",[23648]],[[194680,194680],\"mapped\",[23662]],[[194681,194681],\"mapped\",[23744]],[[194682,194682],\"mapped\",[23693]],[[194683,194683],\"mapped\",[138724]],[[194684,194684],\"mapped\",[23875]],[[194685,194685],\"mapped\",[138726]],[[194686,194686],\"mapped\",[23918]],[[194687,194687],\"mapped\",[23915]],[[194688,194688],\"mapped\",[23932]],[[194689,194689],\"mapped\",[24033]],[[194690,194690],\"mapped\",[24034]],[[194691,194691],\"mapped\",[14383]],[[194692,194692],\"mapped\",[24061]],[[194693,194693],\"mapped\",[24104]],[[194694,194694],\"mapped\",[24125]],[[194695,194695],\"mapped\",[24169]],[[194696,194696],\"mapped\",[14434]],[[194697,194697],\"mapped\",[139651]],[[194698,194698],\"mapped\",[14460]],[[194699,194699],\"mapped\",[24240]],[[194700,194700],\"mapped\",[24243]],[[194701,194701],\"mapped\",[24246]],[[194702,194702],\"mapped\",[24266]],[[194703,194703],\"mapped\",[172946]],[[194704,194704],\"mapped\",[24318]],[[194705,194706],\"mapped\",[140081]],[[194707,194707],\"mapped\",[33281]],[[194708,194709],\"mapped\",[24354]],[[194710,194710],\"mapped\",[14535]],[[194711,194711],\"mapped\",[144056]],[[194712,194712],\"mapped\",[156122]],[[194713,194713],\"mapped\",[24418]],[[194714,194714],\"mapped\",[24427]],[[194715,194715],\"mapped\",[14563]],[[194716,194716],\"mapped\",[24474]],[[194717,194717],\"mapped\",[24525]],[[194718,194718],\"mapped\",[24535]],[[194719,194719],\"mapped\",[24569]],[[194720,194720],\"mapped\",[24705]],[[194721,194721],\"mapped\",[14650]],[[194722,194722],\"mapped\",[14620]],[[194723,194723],\"mapped\",[24724]],[[194724,194724],\"mapped\",[141012]],[[194725,194725],\"mapped\",[24775]],[[194726,194726],\"mapped\",[24904]],[[194727,194727],\"mapped\",[24908]],[[194728,194728],\"mapped\",[24910]],[[194729,194729],\"mapped\",[24908]],[[194730,194730],\"mapped\",[24954]],[[194731,194731],\"mapped\",[24974]],[[194732,194732],\"mapped\",[25010]],[[194733,194733],\"mapped\",[24996]],[[194734,194734],\"mapped\",[25007]],[[194735,194735],\"mapped\",[25054]],[[194736,194736],\"mapped\",[25074]],[[194737,194737],\"mapped\",[25078]],[[194738,194738],\"mapped\",[25104]],[[194739,194739],\"mapped\",[25115]],[[194740,194740],\"mapped\",[25181]],[[194741,194741],\"mapped\",[25265]],[[194742,194742],\"mapped\",[25300]],[[194743,194743],\"mapped\",[25424]],[[194744,194744],\"mapped\",[142092]],[[194745,194745],\"mapped\",[25405]],[[194746,194746],\"mapped\",[25340]],[[194747,194747],\"mapped\",[25448]],[[194748,194748],\"mapped\",[25475]],[[194749,194749],\"mapped\",[25572]],[[194750,194750],\"mapped\",[142321]],[[194751,194751],\"mapped\",[25634]],[[194752,194752],\"mapped\",[25541]],[[194753,194753],\"mapped\",[25513]],[[194754,194754],\"mapped\",[14894]],[[194755,194755],\"mapped\",[25705]],[[194756,194756],\"mapped\",[25726]],[[194757,194757],\"mapped\",[25757]],[[194758,194758],\"mapped\",[25719]],[[194759,194759],\"mapped\",[14956]],[[194760,194760],\"mapped\",[25935]],[[194761,194761],\"mapped\",[25964]],[[194762,194762],\"mapped\",[143370]],[[194763,194763],\"mapped\",[26083]],[[194764,194764],\"mapped\",[26360]],[[194765,194765],\"mapped\",[26185]],[[194766,194766],\"mapped\",[15129]],[[194767,194767],\"mapped\",[26257]],[[194768,194768],\"mapped\",[15112]],[[194769,194769],\"mapped\",[15076]],[[194770,194770],\"mapped\",[20882]],[[194771,194771],\"mapped\",[20885]],[[194772,194772],\"mapped\",[26368]],[[194773,194773],\"mapped\",[26268]],[[194774,194774],\"mapped\",[32941]],[[194775,194775],\"mapped\",[17369]],[[194776,194776],\"mapped\",[26391]],[[194777,194777],\"mapped\",[26395]],[[194778,194778],\"mapped\",[26401]],[[194779,194779],\"mapped\",[26462]],[[194780,194780],\"mapped\",[26451]],[[194781,194781],\"mapped\",[144323]],[[194782,194782],\"mapped\",[15177]],[[194783,194783],\"mapped\",[26618]],[[194784,194784],\"mapped\",[26501]],[[194785,194785],\"mapped\",[26706]],[[194786,194786],\"mapped\",[26757]],[[194787,194787],\"mapped\",[144493]],[[194788,194788],\"mapped\",[26766]],[[194789,194789],\"mapped\",[26655]],[[194790,194790],\"mapped\",[26900]],[[194791,194791],\"mapped\",[15261]],[[194792,194792],\"mapped\",[26946]],[[194793,194793],\"mapped\",[27043]],[[194794,194794],\"mapped\",[27114]],[[194795,194795],\"mapped\",[27304]],[[194796,194796],\"mapped\",[145059]],[[194797,194797],\"mapped\",[27355]],[[194798,194798],\"mapped\",[15384]],[[194799,194799],\"mapped\",[27425]],[[194800,194800],\"mapped\",[145575]],[[194801,194801],\"mapped\",[27476]],[[194802,194802],\"mapped\",[15438]],[[194803,194803],\"mapped\",[27506]],[[194804,194804],\"mapped\",[27551]],[[194805,194805],\"mapped\",[27578]],[[194806,194806],\"mapped\",[27579]],[[194807,194807],\"mapped\",[146061]],[[194808,194808],\"mapped\",[138507]],[[194809,194809],\"mapped\",[146170]],[[194810,194810],\"mapped\",[27726]],[[194811,194811],\"mapped\",[146620]],[[194812,194812],\"mapped\",[27839]],[[194813,194813],\"mapped\",[27853]],[[194814,194814],\"mapped\",[27751]],[[194815,194815],\"mapped\",[27926]],[[194816,194816],\"mapped\",[27966]],[[194817,194817],\"mapped\",[28023]],[[194818,194818],\"mapped\",[27969]],[[194819,194819],\"mapped\",[28009]],[[194820,194820],\"mapped\",[28024]],[[194821,194821],\"mapped\",[28037]],[[194822,194822],\"mapped\",[146718]],[[194823,194823],\"mapped\",[27956]],[[194824,194824],\"mapped\",[28207]],[[194825,194825],\"mapped\",[28270]],[[194826,194826],\"mapped\",[15667]],[[194827,194827],\"mapped\",[28363]],[[194828,194828],\"mapped\",[28359]],[[194829,194829],\"mapped\",[147153]],[[194830,194830],\"mapped\",[28153]],[[194831,194831],\"mapped\",[28526]],[[194832,194832],\"mapped\",[147294]],[[194833,194833],\"mapped\",[147342]],[[194834,194834],\"mapped\",[28614]],[[194835,194835],\"mapped\",[28729]],[[194836,194836],\"mapped\",[28702]],[[194837,194837],\"mapped\",[28699]],[[194838,194838],\"mapped\",[15766]],[[194839,194839],\"mapped\",[28746]],[[194840,194840],\"mapped\",[28797]],[[194841,194841],\"mapped\",[28791]],[[194842,194842],\"mapped\",[28845]],[[194843,194843],\"mapped\",[132389]],[[194844,194844],\"mapped\",[28997]],[[194845,194845],\"mapped\",[148067]],[[194846,194846],\"mapped\",[29084]],[[194847,194847],\"disallowed\"],[[194848,194848],\"mapped\",[29224]],[[194849,194849],\"mapped\",[29237]],[[194850,194850],\"mapped\",[29264]],[[194851,194851],\"mapped\",[149000]],[[194852,194852],\"mapped\",[29312]],[[194853,194853],\"mapped\",[29333]],[[194854,194854],\"mapped\",[149301]],[[194855,194855],\"mapped\",[149524]],[[194856,194856],\"mapped\",[29562]],[[194857,194857],\"mapped\",[29579]],[[194858,194858],\"mapped\",[16044]],[[194859,194859],\"mapped\",[29605]],[[194860,194861],\"mapped\",[16056]],[[194862,194862],\"mapped\",[29767]],[[194863,194863],\"mapped\",[29788]],[[194864,194864],\"mapped\",[29809]],[[194865,194865],\"mapped\",[29829]],[[194866,194866],\"mapped\",[29898]],[[194867,194867],\"mapped\",[16155]],[[194868,194868],\"mapped\",[29988]],[[194869,194869],\"mapped\",[150582]],[[194870,194870],\"mapped\",[30014]],[[194871,194871],\"mapped\",[150674]],[[194872,194872],\"mapped\",[30064]],[[194873,194873],\"mapped\",[139679]],[[194874,194874],\"mapped\",[30224]],[[194875,194875],\"mapped\",[151457]],[[194876,194876],\"mapped\",[151480]],[[194877,194877],\"mapped\",[151620]],[[194878,194878],\"mapped\",[16380]],[[194879,194879],\"mapped\",[16392]],[[194880,194880],\"mapped\",[30452]],[[194881,194881],\"mapped\",[151795]],[[194882,194882],\"mapped\",[151794]],[[194883,194883],\"mapped\",[151833]],[[194884,194884],\"mapped\",[151859]],[[194885,194885],\"mapped\",[30494]],[[194886,194887],\"mapped\",[30495]],[[194888,194888],\"mapped\",[30538]],[[194889,194889],\"mapped\",[16441]],[[194890,194890],\"mapped\",[30603]],[[194891,194891],\"mapped\",[16454]],[[194892,194892],\"mapped\",[16534]],[[194893,194893],\"mapped\",[152605]],[[194894,194894],\"mapped\",[30798]],[[194895,194895],\"mapped\",[30860]],[[194896,194896],\"mapped\",[30924]],[[194897,194897],\"mapped\",[16611]],[[194898,194898],\"mapped\",[153126]],[[194899,194899],\"mapped\",[31062]],[[194900,194900],\"mapped\",[153242]],[[194901,194901],\"mapped\",[153285]],[[194902,194902],\"mapped\",[31119]],[[194903,194903],\"mapped\",[31211]],[[194904,194904],\"mapped\",[16687]],[[194905,194905],\"mapped\",[31296]],[[194906,194906],\"mapped\",[31306]],[[194907,194907],\"mapped\",[31311]],[[194908,194908],\"mapped\",[153980]],[[194909,194910],\"mapped\",[154279]],[[194911,194911],\"disallowed\"],[[194912,194912],\"mapped\",[16898]],[[194913,194913],\"mapped\",[154539]],[[194914,194914],\"mapped\",[31686]],[[194915,194915],\"mapped\",[31689]],[[194916,194916],\"mapped\",[16935]],[[194917,194917],\"mapped\",[154752]],[[194918,194918],\"mapped\",[31954]],[[194919,194919],\"mapped\",[17056]],[[194920,194920],\"mapped\",[31976]],[[194921,194921],\"mapped\",[31971]],[[194922,194922],\"mapped\",[32000]],[[194923,194923],\"mapped\",[155526]],[[194924,194924],\"mapped\",[32099]],[[194925,194925],\"mapped\",[17153]],[[194926,194926],\"mapped\",[32199]],[[194927,194927],\"mapped\",[32258]],[[194928,194928],\"mapped\",[32325]],[[194929,194929],\"mapped\",[17204]],[[194930,194930],\"mapped\",[156200]],[[194931,194931],\"mapped\",[156231]],[[194932,194932],\"mapped\",[17241]],[[194933,194933],\"mapped\",[156377]],[[194934,194934],\"mapped\",[32634]],[[194935,194935],\"mapped\",[156478]],[[194936,194936],\"mapped\",[32661]],[[194937,194937],\"mapped\",[32762]],[[194938,194938],\"mapped\",[32773]],[[194939,194939],\"mapped\",[156890]],[[194940,194940],\"mapped\",[156963]],[[194941,194941],\"mapped\",[32864]],[[194942,194942],\"mapped\",[157096]],[[194943,194943],\"mapped\",[32880]],[[194944,194944],\"mapped\",[144223]],[[194945,194945],\"mapped\",[17365]],[[194946,194946],\"mapped\",[32946]],[[194947,194947],\"mapped\",[33027]],[[194948,194948],\"mapped\",[17419]],[[194949,194949],\"mapped\",[33086]],[[194950,194950],\"mapped\",[23221]],[[194951,194951],\"mapped\",[157607]],[[194952,194952],\"mapped\",[157621]],[[194953,194953],\"mapped\",[144275]],[[194954,194954],\"mapped\",[144284]],[[194955,194955],\"mapped\",[33281]],[[194956,194956],\"mapped\",[33284]],[[194957,194957],\"mapped\",[36766]],[[194958,194958],\"mapped\",[17515]],[[194959,194959],\"mapped\",[33425]],[[194960,194960],\"mapped\",[33419]],[[194961,194961],\"mapped\",[33437]],[[194962,194962],\"mapped\",[21171]],[[194963,194963],\"mapped\",[33457]],[[194964,194964],\"mapped\",[33459]],[[194965,194965],\"mapped\",[33469]],[[194966,194966],\"mapped\",[33510]],[[194967,194967],\"mapped\",[158524]],[[194968,194968],\"mapped\",[33509]],[[194969,194969],\"mapped\",[33565]],[[194970,194970],\"mapped\",[33635]],[[194971,194971],\"mapped\",[33709]],[[194972,194972],\"mapped\",[33571]],[[194973,194973],\"mapped\",[33725]],[[194974,194974],\"mapped\",[33767]],[[194975,194975],\"mapped\",[33879]],[[194976,194976],\"mapped\",[33619]],[[194977,194977],\"mapped\",[33738]],[[194978,194978],\"mapped\",[33740]],[[194979,194979],\"mapped\",[33756]],[[194980,194980],\"mapped\",[158774]],[[194981,194981],\"mapped\",[159083]],[[194982,194982],\"mapped\",[158933]],[[194983,194983],\"mapped\",[17707]],[[194984,194984],\"mapped\",[34033]],[[194985,194985],\"mapped\",[34035]],[[194986,194986],\"mapped\",[34070]],[[194987,194987],\"mapped\",[160714]],[[194988,194988],\"mapped\",[34148]],[[194989,194989],\"mapped\",[159532]],[[194990,194990],\"mapped\",[17757]],[[194991,194991],\"mapped\",[17761]],[[194992,194992],\"mapped\",[159665]],[[194993,194993],\"mapped\",[159954]],[[194994,194994],\"mapped\",[17771]],[[194995,194995],\"mapped\",[34384]],[[194996,194996],\"mapped\",[34396]],[[194997,194997],\"mapped\",[34407]],[[194998,194998],\"mapped\",[34409]],[[194999,194999],\"mapped\",[34473]],[[195000,195000],\"mapped\",[34440]],[[195001,195001],\"mapped\",[34574]],[[195002,195002],\"mapped\",[34530]],[[195003,195003],\"mapped\",[34681]],[[195004,195004],\"mapped\",[34600]],[[195005,195005],\"mapped\",[34667]],[[195006,195006],\"mapped\",[34694]],[[195007,195007],\"disallowed\"],[[195008,195008],\"mapped\",[34785]],[[195009,195009],\"mapped\",[34817]],[[195010,195010],\"mapped\",[17913]],[[195011,195011],\"mapped\",[34912]],[[195012,195012],\"mapped\",[34915]],[[195013,195013],\"mapped\",[161383]],[[195014,195014],\"mapped\",[35031]],[[195015,195015],\"mapped\",[35038]],[[195016,195016],\"mapped\",[17973]],[[195017,195017],\"mapped\",[35066]],[[195018,195018],\"mapped\",[13499]],[[195019,195019],\"mapped\",[161966]],[[195020,195020],\"mapped\",[162150]],[[195021,195021],\"mapped\",[18110]],[[195022,195022],\"mapped\",[18119]],[[195023,195023],\"mapped\",[35488]],[[195024,195024],\"mapped\",[35565]],[[195025,195025],\"mapped\",[35722]],[[195026,195026],\"mapped\",[35925]],[[195027,195027],\"mapped\",[162984]],[[195028,195028],\"mapped\",[36011]],[[195029,195029],\"mapped\",[36033]],[[195030,195030],\"mapped\",[36123]],[[195031,195031],\"mapped\",[36215]],[[195032,195032],\"mapped\",[163631]],[[195033,195033],\"mapped\",[133124]],[[195034,195034],\"mapped\",[36299]],[[195035,195035],\"mapped\",[36284]],[[195036,195036],\"mapped\",[36336]],[[195037,195037],\"mapped\",[133342]],[[195038,195038],\"mapped\",[36564]],[[195039,195039],\"mapped\",[36664]],[[195040,195040],\"mapped\",[165330]],[[195041,195041],\"mapped\",[165357]],[[195042,195042],\"mapped\",[37012]],[[195043,195043],\"mapped\",[37105]],[[195044,195044],\"mapped\",[37137]],[[195045,195045],\"mapped\",[165678]],[[195046,195046],\"mapped\",[37147]],[[195047,195047],\"mapped\",[37432]],[[195048,195048],\"mapped\",[37591]],[[195049,195049],\"mapped\",[37592]],[[195050,195050],\"mapped\",[37500]],[[195051,195051],\"mapped\",[37881]],[[195052,195052],\"mapped\",[37909]],[[195053,195053],\"mapped\",[166906]],[[195054,195054],\"mapped\",[38283]],[[195055,195055],\"mapped\",[18837]],[[195056,195056],\"mapped\",[38327]],[[195057,195057],\"mapped\",[167287]],[[195058,195058],\"mapped\",[18918]],[[195059,195059],\"mapped\",[38595]],[[195060,195060],\"mapped\",[23986]],[[195061,195061],\"mapped\",[38691]],[[195062,195062],\"mapped\",[168261]],[[195063,195063],\"mapped\",[168474]],[[195064,195064],\"mapped\",[19054]],[[195065,195065],\"mapped\",[19062]],[[195066,195066],\"mapped\",[38880]],[[195067,195067],\"mapped\",[168970]],[[195068,195068],\"mapped\",[19122]],[[195069,195069],\"mapped\",[169110]],[[195070,195071],\"mapped\",[38923]],[[195072,195072],\"mapped\",[38953]],[[195073,195073],\"mapped\",[169398]],[[195074,195074],\"mapped\",[39138]],[[195075,195075],\"mapped\",[19251]],[[195076,195076],\"mapped\",[39209]],[[195077,195077],\"mapped\",[39335]],[[195078,195078],\"mapped\",[39362]],[[195079,195079],\"mapped\",[39422]],[[195080,195080],\"mapped\",[19406]],[[195081,195081],\"mapped\",[170800]],[[195082,195082],\"mapped\",[39698]],[[195083,195083],\"mapped\",[40000]],[[195084,195084],\"mapped\",[40189]],[[195085,195085],\"mapped\",[19662]],[[195086,195086],\"mapped\",[19693]],[[195087,195087],\"mapped\",[40295]],[[195088,195088],\"mapped\",[172238]],[[195089,195089],\"mapped\",[19704]],[[195090,195090],\"mapped\",[172293]],[[195091,195091],\"mapped\",[172558]],[[195092,195092],\"mapped\",[172689]],[[195093,195093],\"mapped\",[40635]],[[195094,195094],\"mapped\",[19798]],[[195095,195095],\"mapped\",[40697]],[[195096,195096],\"mapped\",[40702]],[[195097,195097],\"mapped\",[40709]],[[195098,195098],\"mapped\",[40719]],[[195099,195099],\"mapped\",[40726]],[[195100,195100],\"mapped\",[40763]],[[195101,195101],\"mapped\",[173568]],[[195102,196605],\"disallowed\"],[[196606,196607],\"disallowed\"],[[196608,262141],\"disallowed\"],[[262142,262143],\"disallowed\"],[[262144,327677],\"disallowed\"],[[327678,327679],\"disallowed\"],[[327680,393213],\"disallowed\"],[[393214,393215],\"disallowed\"],[[393216,458749],\"disallowed\"],[[458750,458751],\"disallowed\"],[[458752,524285],\"disallowed\"],[[524286,524287],\"disallowed\"],[[524288,589821],\"disallowed\"],[[589822,589823],\"disallowed\"],[[589824,655357],\"disallowed\"],[[655358,655359],\"disallowed\"],[[655360,720893],\"disallowed\"],[[720894,720895],\"disallowed\"],[[720896,786429],\"disallowed\"],[[786430,786431],\"disallowed\"],[[786432,851965],\"disallowed\"],[[851966,851967],\"disallowed\"],[[851968,917501],\"disallowed\"],[[917502,917503],\"disallowed\"],[[917504,917504],\"disallowed\"],[[917505,917505],\"disallowed\"],[[917506,917535],\"disallowed\"],[[917536,917631],\"disallowed\"],[[917632,917759],\"disallowed\"],[[917760,917999],\"ignored\"],[[918000,983037],\"disallowed\"],[[983038,983039],\"disallowed\"],[[983040,1048573],\"disallowed\"],[[1048574,1048575],\"disallowed\"],[[1048576,1114109],\"disallowed\"],[[1114110,1114111],\"disallowed\"]]","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError, AbortError };\n","const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isObjectLike = isObjectLike;\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nfunction isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.invariant = invariant;\n\nfunction invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getLocation = getLocation;\n\nvar _invariant = require('../jsutils/invariant.js');\n\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || (0, _invariant.invariant)(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printLocation = printLocation;\nexports.printSourceLocation = printSourceLocation;\n\nvar _location = require('./location.js');\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nfunction printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    (0, _location.getLocation)(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nfunction printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLError = void 0;\nexports.formatError = formatError;\nexports.printError = printError;\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _location = require('../language/location.js');\n\nvar _printLocation = require('../language/printLocation.js');\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nclass GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => (0, _location.getLocation)(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) =>\n            (0, _location.getLocation)(loc.source, loc.start),\n          );\n    const originalExtensions = (0, _isObjectLike.isObjectLike)(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + (0, _printLocation.printLocation)(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output +=\n          '\\n\\n' +\n          (0, _printLocation.printSourceLocation)(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nexports.GraphQLError = GraphQLError;\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nfunction printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nfunction formatError(error) {\n  return error.toJSON();\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Token =\n  exports.QueryDocumentKeys =\n  exports.OperationTypeNode =\n  exports.Location =\n    void 0;\nexports.isNode = isNode;\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nclass Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexports.Location = Location;\n\nclass Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\nexports.Token = Token;\n\n/**\n * @internal\n */\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\nexports.OperationTypeNode = OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (exports.OperationTypeNode = OperationTypeNode = {}));\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.DirectiveLocation = void 0;\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\nexports.DirectiveLocation = DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (exports.DirectiveLocation = DirectiveLocation = {}));\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\nexports.Kind = Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (exports.Kind = Kind = {}));\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isDigit = isDigit;\nexports.isLetter = isLetter;\nexports.isNameContinue = isNameContinue;\nexports.isNameStart = isNameStart;\nexports.isWhiteSpace = isWhiteSpace;\n\n/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nfunction isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nfunction isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nfunction isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.dedentBlockStringLines = dedentBlockStringLines;\nexports.isPrintableAsBlockString = isPrintableAsBlockString;\nexports.printBlockString = printBlockString;\n\nvar _characterClasses = require('./characterClasses.js');\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (\n    i < str.length &&\n    (0, _characterClasses.isWhiteSpace)(str.charCodeAt(i))\n  ) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nfunction isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nfunction printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every(\n        (line) =>\n          line.length === 0 ||\n          (0, _characterClasses.isWhiteSpace)(line.charCodeAt(0)),\n      ); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine =\n    isSingleLine && (0, _characterClasses.isWhiteSpace)(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.TokenKind = void 0;\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\nexports.TokenKind = TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (exports.TokenKind = TokenKind = {}));\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Lexer = void 0;\nexports.isPunctuatorTokenKind = isPunctuatorTokenKind;\n\nvar _syntaxError = require('../error/syntaxError.js');\n\nvar _ast = require('./ast.js');\n\nvar _blockString = require('./blockString.js');\n\nvar _characterClasses = require('./characterClasses.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nclass Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new _ast.Token(\n      _tokenKind.TokenKind.SOF,\n      0,\n      0,\n      0,\n      0,\n    );\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== _tokenKind.TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === _tokenKind.TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexports.Lexer = Lexer;\n\nfunction isPunctuatorTokenKind(kind) {\n  return (\n    kind === _tokenKind.TokenKind.BANG ||\n    kind === _tokenKind.TokenKind.DOLLAR ||\n    kind === _tokenKind.TokenKind.AMP ||\n    kind === _tokenKind.TokenKind.PAREN_L ||\n    kind === _tokenKind.TokenKind.PAREN_R ||\n    kind === _tokenKind.TokenKind.SPREAD ||\n    kind === _tokenKind.TokenKind.COLON ||\n    kind === _tokenKind.TokenKind.EQUALS ||\n    kind === _tokenKind.TokenKind.AT ||\n    kind === _tokenKind.TokenKind.BRACKET_L ||\n    kind === _tokenKind.TokenKind.BRACKET_R ||\n    kind === _tokenKind.TokenKind.BRACE_L ||\n    kind === _tokenKind.TokenKind.PIPE ||\n    kind === _tokenKind.TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return _tokenKind.TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new _ast.Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BANG,\n          position,\n          position + 1,\n        );\n\n      case 0x0024:\n        // $\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.DOLLAR,\n          position,\n          position + 1,\n        );\n\n      case 0x0026:\n        // &\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.AMP,\n          position,\n          position + 1,\n        );\n\n      case 0x0028:\n        // (\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PAREN_L,\n          position,\n          position + 1,\n        );\n\n      case 0x0029:\n        // )\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PAREN_R,\n          position,\n          position + 1,\n        );\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(\n            lexer,\n            _tokenKind.TokenKind.SPREAD,\n            position,\n            position + 3,\n          );\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.COLON,\n          position,\n          position + 1,\n        );\n\n      case 0x003d:\n        // =\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.EQUALS,\n          position,\n          position + 1,\n        );\n\n      case 0x0040:\n        // @\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.AT,\n          position,\n          position + 1,\n        );\n\n      case 0x005b:\n        // [\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACKET_L,\n          position,\n          position + 1,\n        );\n\n      case 0x005d:\n        // ]\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACKET_R,\n          position,\n          position + 1,\n        );\n\n      case 0x007b:\n        // {\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACE_L,\n          position,\n          position + 1,\n        );\n\n      case 0x007c:\n        // |\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PIPE,\n          position,\n          position + 1,\n        );\n\n      case 0x007d:\n        // }\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACE_R,\n          position,\n          position + 1,\n        );\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if ((0, _characterClasses.isDigit)(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if ((0, _characterClasses.isNameStart)(code)) {\n      return readName(lexer, position);\n    }\n\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, _tokenKind.TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    _tokenKind.TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if ((0, _characterClasses.isDigit)(code)) {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || (0, _characterClasses.isNameStart)(code)) {\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? _tokenKind.TokenKind.FLOAT : _tokenKind.TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!(0, _characterClasses.isDigit)(firstCode)) {\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while ((0, _characterClasses.isDigit)(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(\n        lexer,\n        _tokenKind.TokenKind.STRING,\n        start,\n        position + 1,\n        value,\n      );\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    'Unterminated string.',\n  );\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        _tokenKind.TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        (0, _blockString.dedentBlockStringLines)(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    'Unterminated string.',\n  );\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if ((0, _characterClasses.isNameContinue)(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    _tokenKind.TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.devAssert = devAssert;\n\nfunction devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.inspect = inspect;\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.instanceOf = void 0;\n\nvar _inspect = require('./inspect.js');\n\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\nconst instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = (0, _inspect.inspect)(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\nexports.instanceOf = instanceOf;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Source = void 0;\nexports.isSource = isSource;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nclass Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Body must be a string. Received: ${(0, _inspect.inspect)(body)}.`,\n      );\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexports.Source = Source;\n\nfunction isSource(source) {\n  return (0, _instanceOf.instanceOf)(source, Source);\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Parser = void 0;\nexports.parse = parse;\nexports.parseConstValue = parseConstValue;\nexports.parseType = parseType;\nexports.parseValue = parseValue;\n\nvar _syntaxError = require('../error/syntaxError.js');\n\nvar _ast = require('./ast.js');\n\nvar _directiveLocation = require('./directiveLocation.js');\n\nvar _kinds = require('./kinds.js');\n\nvar _lexer = require('./lexer.js');\n\nvar _source = require('./source.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nfunction parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nfunction parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nfunction parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nclass Parser {\n  constructor(source, options = {}) {\n    const sourceObj = (0, _source.isSource)(source)\n      ? source\n      : new _source.Source(source);\n    this._lexer = new _lexer.Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(_tokenKind.TokenKind.NAME);\n    return this.node(token, {\n      kind: _kinds.Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: this.many(\n        _tokenKind.TokenKind.SOF,\n        this.parseDefinition,\n        _tokenKind.TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw (0, _syntaxError.syntaxError)(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: _kinds.Kind.OPERATION_DEFINITION,\n        operation: _ast.OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(_tokenKind.TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return _ast.OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return _ast.OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return _ast.OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type:\n        (this.expectToken(_tokenKind.TokenKind.COLON),\n        this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: _kinds.Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.SELECTION_SET,\n      selections: this.many(\n        _tokenKind.TokenKind.BRACE_L,\n        this.parseSelection,\n        _tokenKind.TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(_tokenKind.TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(_tokenKind.TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      item,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds.Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(_tokenKind.TokenKind.NAME)) {\n      return this.node(start, {\n        kind: _kinds.Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: _kinds.Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case _tokenKind.TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case _tokenKind.TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case _tokenKind.TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds.Kind.INT,\n          value: token.value,\n        });\n\n      case _tokenKind.TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds.Kind.FLOAT,\n          value: token.value,\n        });\n\n      case _tokenKind.TokenKind.STRING:\n      case _tokenKind.TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case _tokenKind.TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: _kinds.Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: _kinds.Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: _kinds.Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: _kinds.Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case _tokenKind.TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(_tokenKind.TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === _tokenKind.TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw (0, _syntaxError.syntaxError)(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: _kinds.Kind.STRING,\n      value: token.value,\n      block: token.kind === _tokenKind.TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.LIST,\n      values: this.any(\n        _tokenKind.TokenKind.BRACKET_L,\n        item,\n        _tokenKind.TokenKind.BRACKET_R,\n      ),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.OBJECT,\n      fields: this.any(\n        _tokenKind.TokenKind.BRACE_L,\n        item,\n        _tokenKind.TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(_tokenKind.TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.AT);\n    return this.node(start, {\n      kind: _kinds.Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(_tokenKind.TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: _kinds.Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BANG)) {\n      return this.node(start, {\n        kind: _kinds.Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return (\n      this.peek(_tokenKind.TokenKind.STRING) ||\n      this.peek(_tokenKind.TokenKind.BLOCK_STRING)\n    );\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: _kinds.Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(_tokenKind.TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: _kinds.Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)\n      ? this.delimitedMany(_tokenKind.TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw (0, _syntaxError.syntaxError)(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(_tokenKind.TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: _kinds.Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(\n      _tokenKind.TokenKind.PIPE,\n      this.parseDirectiveLocation,\n    );\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (\n      Object.prototype.hasOwnProperty.call(\n        _directiveLocation.DirectiveLocation,\n        name.value,\n      )\n    ) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new _ast.Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw (0, _syntaxError.syntaxError)(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return (0, _syntaxError.syntaxError)(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== _tokenKind.TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw (0, _syntaxError.syntaxError)(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nexports.Parser = Parser;\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return (0, _lexer.isPunctuatorTokenKind)(kind) ? `\"${kind}\"` : kind;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printString = printString;\n\n/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nfunction printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.BREAK = void 0;\nexports.getEnterLeaveForKind = getEnterLeaveForKind;\nexports.getVisitFn = getVisitFn;\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _ast = require('./ast.js');\n\nvar _kinds = require('./kinds.js');\n\nconst BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor, visitorKeys = _ast.QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      (0, _ast.isNode)(node) ||\n        (0, _devAssert.devAssert)(\n          false,\n          `Invalid AST Node: ${(0, _inspect.inspect)(node)}.`,\n        );\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if ((0, _ast.isNode)(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nfunction visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nfunction getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.print = print;\n\nvar _blockString = require('./blockString.js');\n\nvar _printString = require('./printString.js');\n\nvar _visitor = require('./visitor.js');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, printDocASTReducer);\n}\n\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString\n        ? (0, _blockString.printBlockString)(value)\n        : (0, _printString.printString)(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","'use strict';\n\nmodule.exports = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type;\n  this.uri = uri;\n  this.name = name;\n  this.type = type;\n};\n","'use strict';\n\nvar ReactNativeFile = require('./ReactNativeFile');\n\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n","'use strict';\n\nvar defaultIsExtractableFile = require('./isExtractableFile');\n\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile;\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);\n    else files.set(file, paths);\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function (file, i) {\n        addFile(['' + prefix + i], file);\n        return null;\n      });\n    else if (Array.isArray(value))\n      clone = value.map(function (child, i) {\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        return result.clone;\n      });\n    else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files,\n  };\n};\n","'use strict';\n\nexports.ReactNativeFile = require('./ReactNativeFile');\nexports.extractFiles = require('./extractFiles');\nexports.isExtractableFile = require('./isExtractableFile');\n","var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n","var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n","{\n  \"application/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/3gpdash-qoe-report+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/3gpp-ims+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/3gpphal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/3gpphalforms+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/a2l\": {\n    \"source\": \"iana\"\n  },\n  \"application/ace+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/activemessage\": {\n    \"source\": \"iana\"\n  },\n  \"application/activity+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-directory+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcost+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcostparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointprop+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointpropparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-error+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-updatestreamcontrol+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-updatestreamparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/aml\": {\n    \"source\": \"iana\"\n  },\n  \"application/andrew-inset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez\"]\n  },\n  \"application/applefile\": {\n    \"source\": \"iana\"\n  },\n  \"application/applixware\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aw\"]\n  },\n  \"application/at+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/atf\": {\n    \"source\": \"iana\"\n  },\n  \"application/atfx\": {\n    \"source\": \"iana\"\n  },\n  \"application/atom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atom\"]\n  },\n  \"application/atomcat+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomcat\"]\n  },\n  \"application/atomdeleted+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomdeleted\"]\n  },\n  \"application/atomicmail\": {\n    \"source\": \"iana\"\n  },\n  \"application/atomsvc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomsvc\"]\n  },\n  \"application/atsc-dwd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dwd\"]\n  },\n  \"application/atsc-dynamic-event-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/atsc-held+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"held\"]\n  },\n  \"application/atsc-rdt+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/atsc-rsat+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rsat\"]\n  },\n  \"application/atxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/auth-policy+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/bacnet-xdd+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/batch-smtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/beep+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/calendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/calendar+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xcs\"]\n  },\n  \"application/call-completion\": {\n    \"source\": \"iana\"\n  },\n  \"application/cals-1840\": {\n    \"source\": \"iana\"\n  },\n  \"application/captive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/cccex\": {\n    \"source\": \"iana\"\n  },\n  \"application/ccmp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ccxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ccxml\"]\n  },\n  \"application/cdfx+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cdfx\"]\n  },\n  \"application/cdmi-capability\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmia\"]\n  },\n  \"application/cdmi-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmic\"]\n  },\n  \"application/cdmi-domain\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmid\"]\n  },\n  \"application/cdmi-object\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmio\"]\n  },\n  \"application/cdmi-queue\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmiq\"]\n  },\n  \"application/cdni\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea-2018+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cellml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cfw\": {\n    \"source\": \"iana\"\n  },\n  \"application/city+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/clr\": {\n    \"source\": \"iana\"\n  },\n  \"application/clue+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/clue_info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cms\": {\n    \"source\": \"iana\"\n  },\n  \"application/cnrp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/coap-group+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/coap-payload\": {\n    \"source\": \"iana\"\n  },\n  \"application/commonground\": {\n    \"source\": \"iana\"\n  },\n  \"application/conference-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cose\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-key\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-key-set\": {\n    \"source\": \"iana\"\n  },\n  \"application/cpl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cpl\"]\n  },\n  \"application/csrattrs\": {\n    \"source\": \"iana\"\n  },\n  \"application/csta+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cstadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/csvm+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cu-seeme\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cu\"]\n  },\n  \"application/cwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/cybercash\": {\n    \"source\": \"iana\"\n  },\n  \"application/dart\": {\n    \"compressible\": true\n  },\n  \"application/dash+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpd\"]\n  },\n  \"application/dash-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpp\"]\n  },\n  \"application/dashdelta\": {\n    \"source\": \"iana\"\n  },\n  \"application/davmount+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"davmount\"]\n  },\n  \"application/dca-rft\": {\n    \"source\": \"iana\"\n  },\n  \"application/dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/dec-dx\": {\n    \"source\": \"iana\"\n  },\n  \"application/dialog-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dicom\": {\n    \"source\": \"iana\"\n  },\n  \"application/dicom+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dicom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dii\": {\n    \"source\": \"iana\"\n  },\n  \"application/dit\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dns-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/docbook+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"dbk\"]\n  },\n  \"application/dots+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/dskpp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dssc+der\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dssc\"]\n  },\n  \"application/dssc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdssc\"]\n  },\n  \"application/dvcs\": {\n    \"source\": \"iana\"\n  },\n  \"application/ecmascript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"es\",\"ecma\"]\n  },\n  \"application/edi-consent\": {\n    \"source\": \"iana\"\n  },\n  \"application/edi-x12\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/edifact\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/efi\": {\n    \"source\": \"iana\"\n  },\n  \"application/elm+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/elm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.cap+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.comment+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.deviceinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.ecall.msd\": {\n    \"source\": \"iana\"\n  },\n  \"application/emergencycalldata.providerinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.serviceinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.subscriberinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.veds+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emma+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"emma\"]\n  },\n  \"application/emotionml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"emotionml\"]\n  },\n  \"application/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/epp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/epub+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"epub\"]\n  },\n  \"application/eshop\": {\n    \"source\": \"iana\"\n  },\n  \"application/exi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exi\"]\n  },\n  \"application/expect-ct-report+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/express\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exp\"]\n  },\n  \"application/fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/fastsoap\": {\n    \"source\": \"iana\"\n  },\n  \"application/fdt+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"fdt\"]\n  },\n  \"application/fhir+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/fhir+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/fido.trusted-apps+json\": {\n    \"compressible\": true\n  },\n  \"application/fits\": {\n    \"source\": \"iana\"\n  },\n  \"application/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-tdpfr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pfr\"]\n  },\n  \"application/font-woff\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/framework-attributes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/geo+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"geojson\"]\n  },\n  \"application/geo+json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/geopackage+sqlite3\": {\n    \"source\": \"iana\"\n  },\n  \"application/geoxacml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/gltf-buffer\": {\n    \"source\": \"iana\"\n  },\n  \"application/gml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"gml\"]\n  },\n  \"application/gpx+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"gpx\"]\n  },\n  \"application/gxf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gxf\"]\n  },\n  \"application/gzip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gz\"]\n  },\n  \"application/h224\": {\n    \"source\": \"iana\"\n  },\n  \"application/held+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/hjson\": {\n    \"extensions\": [\"hjson\"]\n  },\n  \"application/http\": {\n    \"source\": \"iana\"\n  },\n  \"application/hyperstudio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stk\"]\n  },\n  \"application/ibe-key-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ibe-pkg-reply+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ibe-pp-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/iges\": {\n    \"source\": \"iana\"\n  },\n  \"application/im-iscomposing+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/index\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.cmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.obj\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.response\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.vnd\": {\n    \"source\": \"iana\"\n  },\n  \"application/inkml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ink\",\"inkml\"]\n  },\n  \"application/iotp\": {\n    \"source\": \"iana\"\n  },\n  \"application/ipfix\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipfix\"]\n  },\n  \"application/ipp\": {\n    \"source\": \"iana\"\n  },\n  \"application/isup\": {\n    \"source\": \"iana\"\n  },\n  \"application/its+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"its\"]\n  },\n  \"application/java-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jar\",\"war\",\"ear\"]\n  },\n  \"application/java-serialized-object\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"ser\"]\n  },\n  \"application/java-vm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"class\"]\n  },\n  \"application/javascript\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"js\",\"mjs\"]\n  },\n  \"application/jf2feed+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jose\": {\n    \"source\": \"iana\"\n  },\n  \"application/jose+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jrd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jscalendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"json\",\"map\"]\n  },\n  \"application/json-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/json5\": {\n    \"extensions\": [\"json5\"]\n  },\n  \"application/jsonml+json\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonml\"]\n  },\n  \"application/jwk+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwk-set+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/kpml-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/kpml-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ld+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonld\"]\n  },\n  \"application/lgr+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lgr\"]\n  },\n  \"application/link-format\": {\n    \"source\": \"iana\"\n  },\n  \"application/load-control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/lost+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lostxml\"]\n  },\n  \"application/lostsync+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/lpf+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/lxf\": {\n    \"source\": \"iana\"\n  },\n  \"application/mac-binhex40\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hqx\"]\n  },\n  \"application/mac-compactpro\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpt\"]\n  },\n  \"application/macwriteii\": {\n    \"source\": \"iana\"\n  },\n  \"application/mads+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mads\"]\n  },\n  \"application/manifest+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"webmanifest\"]\n  },\n  \"application/marc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mrc\"]\n  },\n  \"application/marcxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mrcx\"]\n  },\n  \"application/mathematica\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ma\",\"nb\",\"mb\"]\n  },\n  \"application/mathml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mathml\"]\n  },\n  \"application/mathml-content+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mathml-presentation+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-associated-procedure-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-deregister+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-envelope+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-msk+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-msk-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-protection-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-reception-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-register+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-register-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-schedule+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-user-service-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbox\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbox\"]\n  },\n  \"application/media-policy-dataset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpf\"]\n  },\n  \"application/media_control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mediaservercontrol+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mscml\"]\n  },\n  \"application/merge-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/metalink+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"metalink\"]\n  },\n  \"application/metalink4+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"meta4\"]\n  },\n  \"application/mets+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mets\"]\n  },\n  \"application/mf4\": {\n    \"source\": \"iana\"\n  },\n  \"application/mikey\": {\n    \"source\": \"iana\"\n  },\n  \"application/mipc\": {\n    \"source\": \"iana\"\n  },\n  \"application/missing-blocks+cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/mmt-aei+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"maei\"]\n  },\n  \"application/mmt-usd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"musd\"]\n  },\n  \"application/mods+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mods\"]\n  },\n  \"application/moss-keys\": {\n    \"source\": \"iana\"\n  },\n  \"application/moss-signature\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/mp21\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m21\",\"mp21\"]\n  },\n  \"application/mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mp4s\",\"m4p\"]\n  },\n  \"application/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod-xmt\": {\n    \"source\": \"iana\"\n  },\n  \"application/mrb-consumer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mrb-publish+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/msc-ivr+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/msc-mixer+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/msword\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"doc\",\"dot\"]\n  },\n  \"application/mud+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/multipart-core\": {\n    \"source\": \"iana\"\n  },\n  \"application/mxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxf\"]\n  },\n  \"application/n-quads\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nq\"]\n  },\n  \"application/n-triples\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nt\"]\n  },\n  \"application/nasdata\": {\n    \"source\": \"iana\"\n  },\n  \"application/news-checkgroups\": {\n    \"source\": \"iana\",\n    \"charset\": \"US-ASCII\"\n  },\n  \"application/news-groupinfo\": {\n    \"source\": \"iana\",\n    \"charset\": \"US-ASCII\"\n  },\n  \"application/news-transmission\": {\n    \"source\": \"iana\"\n  },\n  \"application/nlsml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/node\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cjs\"]\n  },\n  \"application/nss\": {\n    \"source\": \"iana\"\n  },\n  \"application/oauth-authz-req+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/oblivious-dns-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/octet-stream\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]\n  },\n  \"application/oda\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oda\"]\n  },\n  \"application/odm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/odx\": {\n    \"source\": \"iana\"\n  },\n  \"application/oebps-package+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"opf\"]\n  },\n  \"application/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogx\"]\n  },\n  \"application/omdoc+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"omdoc\"]\n  },\n  \"application/onenote\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]\n  },\n  \"application/opc-nodeset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/oscore\": {\n    \"source\": \"iana\"\n  },\n  \"application/oxps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oxps\"]\n  },\n  \"application/p21\": {\n    \"source\": \"iana\"\n  },\n  \"application/p21+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/p2p-overlay+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"relo\"]\n  },\n  \"application/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/passport\": {\n    \"source\": \"iana\"\n  },\n  \"application/patch-ops-error+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xer\"]\n  },\n  \"application/pdf\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pdf\"]\n  },\n  \"application/pdx\": {\n    \"source\": \"iana\"\n  },\n  \"application/pem-certificate-chain\": {\n    \"source\": \"iana\"\n  },\n  \"application/pgp-encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pgp\"]\n  },\n  \"application/pgp-keys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"asc\"]\n  },\n  \"application/pgp-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"asc\",\"sig\"]\n  },\n  \"application/pics-rules\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prf\"]\n  },\n  \"application/pidf+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/pidf-diff+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/pkcs10\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p10\"]\n  },\n  \"application/pkcs12\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkcs7-mime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7m\",\"p7c\"]\n  },\n  \"application/pkcs7-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7s\"]\n  },\n  \"application/pkcs8\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p8\"]\n  },\n  \"application/pkcs8-encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkix-attr-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ac\"]\n  },\n  \"application/pkix-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cer\"]\n  },\n  \"application/pkix-crl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"crl\"]\n  },\n  \"application/pkix-pkipath\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pkipath\"]\n  },\n  \"application/pkixcmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pki\"]\n  },\n  \"application/pls+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"pls\"]\n  },\n  \"application/poc-settings+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/postscript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ai\",\"eps\",\"ps\"]\n  },\n  \"application/ppsp-tracker+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/problem+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/problem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/provenance+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"provx\"]\n  },\n  \"application/prs.alvestrand.titrax-sheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.cww\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cww\"]\n  },\n  \"application/prs.cyn\": {\n    \"source\": \"iana\",\n    \"charset\": \"7-BIT\"\n  },\n  \"application/prs.hpub+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/prs.nprend\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.plucker\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.rdf-xml-crypt\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.xsf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/pskc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"pskcxml\"]\n  },\n  \"application/pvd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/qsig\": {\n    \"source\": \"iana\"\n  },\n  \"application/raml+yaml\": {\n    \"compressible\": true,\n    \"extensions\": [\"raml\"]\n  },\n  \"application/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/rdap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rdf\",\"owl\"]\n  },\n  \"application/reginfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rif\"]\n  },\n  \"application/relax-ng-compact-syntax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rnc\"]\n  },\n  \"application/remote-printing\": {\n    \"source\": \"iana\"\n  },\n  \"application/reputon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/resource-lists+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rl\"]\n  },\n  \"application/resource-lists-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rld\"]\n  },\n  \"application/rfc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/riscos\": {\n    \"source\": \"iana\"\n  },\n  \"application/rlmi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rls-services+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rs\"]\n  },\n  \"application/route-apd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rapd\"]\n  },\n  \"application/route-s-tsid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sls\"]\n  },\n  \"application/route-usd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rusd\"]\n  },\n  \"application/rpki-ghostbusters\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gbr\"]\n  },\n  \"application/rpki-manifest\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mft\"]\n  },\n  \"application/rpki-publication\": {\n    \"source\": \"iana\"\n  },\n  \"application/rpki-roa\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"roa\"]\n  },\n  \"application/rpki-updown\": {\n    \"source\": \"iana\"\n  },\n  \"application/rsd+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rsd\"]\n  },\n  \"application/rss+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rss\"]\n  },\n  \"application/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"application/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"application/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"application/samlassertion+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/samlmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sarif+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sarif-external-properties+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sbe\": {\n    \"source\": \"iana\"\n  },\n  \"application/sbml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sbml\"]\n  },\n  \"application/scaip+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scim+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scvp-cv-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scq\"]\n  },\n  \"application/scvp-cv-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scs\"]\n  },\n  \"application/scvp-vp-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spq\"]\n  },\n  \"application/scvp-vp-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spp\"]\n  },\n  \"application/sdp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sdp\"]\n  },\n  \"application/secevent+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/senml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"senmlx\"]\n  },\n  \"application/senml-etch+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml-etch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/senml-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/sensml+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/sensml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sensml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sensmlx\"]\n  },\n  \"application/sensml-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/sep+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sep-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/session-info\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setpay\"]\n  },\n  \"application/set-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-registration-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setreg\"]\n  },\n  \"application/sgml\": {\n    \"source\": \"iana\"\n  },\n  \"application/sgml-open-catalog\": {\n    \"source\": \"iana\"\n  },\n  \"application/shf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"shf\"]\n  },\n  \"application/sieve\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"siv\",\"sieve\"]\n  },\n  \"application/simple-filter+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/simple-message-summary\": {\n    \"source\": \"iana\"\n  },\n  \"application/simplesymbolcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/sipc\": {\n    \"source\": \"iana\"\n  },\n  \"application/slate\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"smi\",\"smil\"]\n  },\n  \"application/smpte336m\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sparql-query\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rq\"]\n  },\n  \"application/sparql-results+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"srx\"]\n  },\n  \"application/spdx+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/spirits-event+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sql\": {\n    \"source\": \"iana\"\n  },\n  \"application/srgs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gram\"]\n  },\n  \"application/srgs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"grxml\"]\n  },\n  \"application/sru+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sru\"]\n  },\n  \"application/ssdl+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ssdl\"]\n  },\n  \"application/ssml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ssml\"]\n  },\n  \"application/stix+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/swid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"swidtag\"]\n  },\n  \"application/tamp-apex-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-apex-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-error\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tar\": {\n    \"compressible\": true\n  },\n  \"application/taxii+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/td+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tei+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tei\",\"teicorpus\"]\n  },\n  \"application/tetra_isi\": {\n    \"source\": \"iana\"\n  },\n  \"application/thraud+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tfi\"]\n  },\n  \"application/timestamp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamp-reply\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamped-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tsd\"]\n  },\n  \"application/tlsrpt+gzip\": {\n    \"source\": \"iana\"\n  },\n  \"application/tlsrpt+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tnauthlist\": {\n    \"source\": \"iana\"\n  },\n  \"application/token-introspection+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/toml\": {\n    \"compressible\": true,\n    \"extensions\": [\"toml\"]\n  },\n  \"application/trickle-ice-sdpfrag\": {\n    \"source\": \"iana\"\n  },\n  \"application/trig\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"trig\"]\n  },\n  \"application/ttml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ttml\"]\n  },\n  \"application/tve-trigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/tzif\": {\n    \"source\": \"iana\"\n  },\n  \"application/tzif-leap\": {\n    \"source\": \"iana\"\n  },\n  \"application/ubjson\": {\n    \"compressible\": false,\n    \"extensions\": [\"ubj\"]\n  },\n  \"application/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/urc-grpsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/urc-ressheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rsheet\"]\n  },\n  \"application/urc-targetdesc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"td\"]\n  },\n  \"application/urc-uisocketdesc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vcard+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vcard+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vemmi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vividence.scriptfile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.1000minds.decision-model+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"1km\"]\n  },\n  \"application/vnd.3gpp-prose+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-prose-pc3ch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-v2x-local-service-information\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.5gnas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.access-transfer-events+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.bsf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.gmop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.gtpc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.interworking-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.lpp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mc-signalling-ear\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-payload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-signalling\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-floor-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-signed+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-ue-init-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-affiliation-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-transmission-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mid-call+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.ngap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pfcp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pic-bw-large\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-small\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"psb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-var\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pvb\"]\n  },\n  \"application/vnd.3gpp.s1ap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.sms+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.srvcc-ext+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.srvcc-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.state-and-event-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.ussd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp2.bcmcsinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp2.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp2.tcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tcap\"]\n  },\n  \"application/vnd.3lightssoftware.imagescal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3m.post-it-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pwn\"]\n  },\n  \"application/vnd.accpac.simply.aso\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aso\"]\n  },\n  \"application/vnd.accpac.simply.imp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"imp\"]\n  },\n  \"application/vnd.acucobol\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acu\"]\n  },\n  \"application/vnd.acucorp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atc\",\"acutc\"]\n  },\n  \"application/vnd.adobe.air-application-installer-package+zip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"air\"]\n  },\n  \"application/vnd.adobe.flash.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.formscentral.fcdt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcdt\"]\n  },\n  \"application/vnd.adobe.fxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fxp\",\"fxpl\"]\n  },\n  \"application/vnd.adobe.partial-upload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.xdp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdp\"]\n  },\n  \"application/vnd.adobe.xfdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdf\"]\n  },\n  \"application/vnd.aether.imp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.afplinedata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.afplinedata-pagedef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.cmoca-cmresource\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-charset\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-codedfont\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-codepage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-cmtable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-formdef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-mediummap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-objectcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-overlay\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-pagesegment\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.age\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"age\"]\n  },\n  \"application/vnd.ah-barcode\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ahead.space\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ahead\"]\n  },\n  \"application/vnd.airzip.filesecure.azf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azf\"]\n  },\n  \"application/vnd.airzip.filesecure.azs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azs\"]\n  },\n  \"application/vnd.amadeus+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.amazon.ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"azw\"]\n  },\n  \"application/vnd.amazon.mobi8-ebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.americandynamics.acc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acc\"]\n  },\n  \"application/vnd.amiga.ami\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ami\"]\n  },\n  \"application/vnd.amundsen.maze+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.android.ota\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.android.package-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"apk\"]\n  },\n  \"application/vnd.anki\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.anser-web-certificate-issue-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cii\"]\n  },\n  \"application/vnd.anser-web-funds-transfer-initiation\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fti\"]\n  },\n  \"application/vnd.antix.game-component\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atx\"]\n  },\n  \"application/vnd.apache.arrow.file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.arrow.stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.compact\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.json\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.api+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.aplextor.warrp+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apothekende.reservation+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apple.installer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpkg\"]\n  },\n  \"application/vnd.apple.keynote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"key\"]\n  },\n  \"application/vnd.apple.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m3u8\"]\n  },\n  \"application/vnd.apple.numbers\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"numbers\"]\n  },\n  \"application/vnd.apple.pages\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pages\"]\n  },\n  \"application/vnd.apple.pkpass\": {\n    \"compressible\": false,\n    \"extensions\": [\"pkpass\"]\n  },\n  \"application/vnd.arastra.swi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.aristanetworks.swi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"swi\"]\n  },\n  \"application/vnd.artisan+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.artsquare\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.astraea-software.iota\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iota\"]\n  },\n  \"application/vnd.audiograph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aep\"]\n  },\n  \"application/vnd.autopackage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.avalon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.avistar+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.balsamiq.bmml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bmml\"]\n  },\n  \"application/vnd.balsamiq.bmpr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.banana-accounting\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.error\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.msg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.msg+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.bekitzur-stech+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.bint.med-content\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.biopax.rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.blink-idb-value-wrapper\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.blueice.multipass\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpm\"]\n  },\n  \"application/vnd.bluetooth.ep.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bluetooth.le.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bmi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bmi\"]\n  },\n  \"application/vnd.bpf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bpf3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.businessobjects\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rep\"]\n  },\n  \"application/vnd.byu.uapi+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cab-jscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-cpdl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-lips\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.capasystems-pg+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cendio.thinlinc.clientconf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.century-systems.tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chemdraw+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cdxml\"]\n  },\n  \"application/vnd.chess-pgn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chipnuts.karaoke-mmd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmd\"]\n  },\n  \"application/vnd.ciedi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cinderella\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdy\"]\n  },\n  \"application/vnd.cirpack.isdn-ext\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.citationstyles.style+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csl\"]\n  },\n  \"application/vnd.claymore\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cla\"]\n  },\n  \"application/vnd.cloanto.rp9\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rp9\"]\n  },\n  \"application/vnd.clonk.c4group\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amc\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config-pkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amz\"]\n  },\n  \"application/vnd.coffeescript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.document-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.presentation\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.presentation-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.spreadsheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.spreadsheet-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collection+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.doc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.next+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.comicbook+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.comicbook-rar\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commerce-battelle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commonspace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"csp\"]\n  },\n  \"application/vnd.contact.cmsg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdbcmsg\"]\n  },\n  \"application/vnd.coreos.ignition+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cosmocaller\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmc\"]\n  },\n  \"application/vnd.crick.clicker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkx\"]\n  },\n  \"application/vnd.crick.clicker.keyboard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkk\"]\n  },\n  \"application/vnd.crick.clicker.palette\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkp\"]\n  },\n  \"application/vnd.crick.clicker.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkt\"]\n  },\n  \"application/vnd.crick.clicker.wordbank\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkw\"]\n  },\n  \"application/vnd.criticaltools.wbs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wbs\"]\n  },\n  \"application/vnd.cryptii.pipe+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.crypto-shade-file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cryptomator.encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cryptomator.vault\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ctc-posml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pml\"]\n  },\n  \"application/vnd.ctct.ws+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cups-pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-postscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-ppd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppd\"]\n  },\n  \"application/vnd.cups-raster\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-raw\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl.car\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"car\"]\n  },\n  \"application/vnd.curl.pcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcurl\"]\n  },\n  \"application/vnd.cyan.dean.root+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cybank\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cyclonedx+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cyclonedx+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.d2l.coursepackage1p0+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.d3m-dataset\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.d3m-problem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dart\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dart\"]\n  },\n  \"application/vnd.data-vision.rdz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rdz\"]\n  },\n  \"application/vnd.datapackage+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dataresource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dbf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dbf\"]\n  },\n  \"application/vnd.debian.binary-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dece.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]\n  },\n  \"application/vnd.dece.ttml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uvt\",\"uvvt\"]\n  },\n  \"application/vnd.dece.unspecified\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvx\",\"uvvx\"]\n  },\n  \"application/vnd.dece.zip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvz\",\"uvvz\"]\n  },\n  \"application/vnd.denovo.fcselayout-link\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fe_launch\"]\n  },\n  \"application/vnd.desmume.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dir-bi.plate-dl-nosuffix\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dm.delegation+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dna\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dna\"]\n  },\n  \"application/vnd.document+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dolby.mlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mlp\"]\n  },\n  \"application/vnd.dolby.mobile.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dolby.mobile.2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.doremir.scorecloud-binary-document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dpgraph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dpg\"]\n  },\n  \"application/vnd.dreamfactory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dfac\"]\n  },\n  \"application/vnd.drive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ds-keypoint\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"kpxx\"]\n  },\n  \"application/vnd.dtg.local\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.flash\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ait\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ait\"]\n  },\n  \"application/vnd.dvb.dvbisl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.dvbj\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.esgcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcdftnotifaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgpdd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcroaming\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-base\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-enhancement\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-aggregate-root+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-container+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-generic+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-msglist+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-registration-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-registration-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-init+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.pfr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.service\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svc\"]\n  },\n  \"application/vnd.dxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dynageo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"geo\"]\n  },\n  \"application/vnd.dzr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.easykaraoke.cdgdownload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecdis-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecip.rlp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eclipse.ditto+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ecowin.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mag\"]\n  },\n  \"application/vnd.ecowin.filerequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.fileupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.series\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesrequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.efi.img\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.efi.iso\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.emclient.accessrequest+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.enliven\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nml\"]\n  },\n  \"application/vnd.enphase.envoy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eprints.data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.epson.esf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esf\"]\n  },\n  \"application/vnd.epson.msf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msf\"]\n  },\n  \"application/vnd.epson.quickanime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qam\"]\n  },\n  \"application/vnd.epson.salt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"slt\"]\n  },\n  \"application/vnd.epson.ssf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ssf\"]\n  },\n  \"application/vnd.ericsson.quickcall\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.espass-espass+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.eszigno3+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"es3\",\"et3\"]\n  },\n  \"application/vnd.etsi.aoc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.asic-e+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.etsi.asic-s+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.etsi.cug+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvcommand+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvdiscovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-bc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-cod+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-npvr+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvservice+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsync+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvueprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.mcid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.mheg5\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.overload-control-policy-dataset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.pstn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.sci+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.simservs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.timestamp-token\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.tsl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.tsl.der\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eu.kasparian.car+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.eudora.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.profile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.settings\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.theme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.exstream-empower+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.exstream-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ezpix-album\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez2\"]\n  },\n  \"application/vnd.ezpix-package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez3\"]\n  },\n  \"application/vnd.f-secure.mobile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.familysearch.gedcom+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.fastcopy-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fdf\"]\n  },\n  \"application/vnd.fdsn.mseed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseed\"]\n  },\n  \"application/vnd.fdsn.seed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"seed\",\"dataless\"]\n  },\n  \"application/vnd.ffsns\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ficlab.flb+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.filmit.zfc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fints\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.firemonkeys.cloudcell\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.flographit\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gph\"]\n  },\n  \"application/vnd.fluxtime.clip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ftc\"]\n  },\n  \"application/vnd.font-fontforge-sfd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.framemaker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fm\",\"frame\",\"maker\",\"book\"]\n  },\n  \"application/vnd.frogans.fnc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fnc\"]\n  },\n  \"application/vnd.frogans.ltf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ltf\"]\n  },\n  \"application/vnd.fsc.weblaunch\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fsc\"]\n  },\n  \"application/vnd.fujifilm.fb.docuworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.docuworks.binder\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.jfi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.fujitsu.oasys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oas\"]\n  },\n  \"application/vnd.fujitsu.oasys2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa2\"]\n  },\n  \"application/vnd.fujitsu.oasys3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa3\"]\n  },\n  \"application/vnd.fujitsu.oasysgp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fg5\"]\n  },\n  \"application/vnd.fujitsu.oasysprs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bh2\"]\n  },\n  \"application/vnd.fujixerox.art-ex\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.art4\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.ddd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ddd\"]\n  },\n  \"application/vnd.fujixerox.docuworks\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdw\"]\n  },\n  \"application/vnd.fujixerox.docuworks.binder\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xbd\"]\n  },\n  \"application/vnd.fujixerox.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.hbpl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fut-misnet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.futoin+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.futoin+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.fuzzysheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fzs\"]\n  },\n  \"application/vnd.genomatix.tuxedo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txd\"]\n  },\n  \"application/vnd.gentics.grd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geo+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geocube+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geogebra.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggb\"]\n  },\n  \"application/vnd.geogebra.slides\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.geogebra.tool\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggt\"]\n  },\n  \"application/vnd.geometry-explorer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gex\",\"gre\"]\n  },\n  \"application/vnd.geonext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gxt\"]\n  },\n  \"application/vnd.geoplan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g2w\"]\n  },\n  \"application/vnd.geospace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3w\"]\n  },\n  \"application/vnd.gerber\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gmx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gmx\"]\n  },\n  \"application/vnd.google-apps.document\": {\n    \"compressible\": false,\n    \"extensions\": [\"gdoc\"]\n  },\n  \"application/vnd.google-apps.presentation\": {\n    \"compressible\": false,\n    \"extensions\": [\"gslides\"]\n  },\n  \"application/vnd.google-apps.spreadsheet\": {\n    \"compressible\": false,\n    \"extensions\": [\"gsheet\"]\n  },\n  \"application/vnd.google-earth.kml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"kml\"]\n  },\n  \"application/vnd.google-earth.kmz\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"kmz\"]\n  },\n  \"application/vnd.gov.sk.e-form+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.gov.sk.e-form+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.gov.sk.xmldatacontainer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.grafeq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gqf\",\"gqs\"]\n  },\n  \"application/vnd.gridmp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.groove-account\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gac\"]\n  },\n  \"application/vnd.groove-help\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ghf\"]\n  },\n  \"application/vnd.groove-identity-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gim\"]\n  },\n  \"application/vnd.groove-injector\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"grv\"]\n  },\n  \"application/vnd.groove-tool-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtm\"]\n  },\n  \"application/vnd.groove-tool-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpl\"]\n  },\n  \"application/vnd.groove-vcard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcg\"]\n  },\n  \"application/vnd.hal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hal+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"hal\"]\n  },\n  \"application/vnd.handheld-entertainment+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"zmm\"]\n  },\n  \"application/vnd.hbci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hbci\"]\n  },\n  \"application/vnd.hc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hcl-bireports\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hdt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.heroku+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hhe.lesson-player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"les\"]\n  },\n  \"application/vnd.hl7cda+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.hl7v2+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.hp-hpgl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpgl\"]\n  },\n  \"application/vnd.hp-hpid\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpid\"]\n  },\n  \"application/vnd.hp-hps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hps\"]\n  },\n  \"application/vnd.hp-jlyt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jlt\"]\n  },\n  \"application/vnd.hp-pcl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcl\"]\n  },\n  \"application/vnd.hp-pclxl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pclxl\"]\n  },\n  \"application/vnd.httphone\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hydrostatix.sof-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfd-hdstx\"]\n  },\n  \"application/vnd.hyper+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hyper-item+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hyperdrive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hzn-3d-crossword\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.afplinedata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.electronic-media\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.minipay\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpy\"]\n  },\n  \"application/vnd.ibm.modcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"afp\",\"listafp\",\"list3820\"]\n  },\n  \"application/vnd.ibm.rights-management\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"irm\"]\n  },\n  \"application/vnd.ibm.secure-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sc\"]\n  },\n  \"application/vnd.iccprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"icc\",\"icm\"]\n  },\n  \"application/vnd.ieee.1905\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.igloader\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igl\"]\n  },\n  \"application/vnd.imagemeter.folder+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.imagemeter.image+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.immervision-ivp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivp\"]\n  },\n  \"application/vnd.immervision-ivu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivu\"]\n  },\n  \"application/vnd.ims.imsccv1p1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.lis.v2.result+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolconsumerprofile+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy.id+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings.simple+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informedcontrol.rms+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informix-visionary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.innopath.wamp.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.insors.igm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igm\"]\n  },\n  \"application/vnd.intercon.formnet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpw\",\"xpx\"]\n  },\n  \"application/vnd.intergeo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"i2g\"]\n  },\n  \"application/vnd.intertrust.digibox\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intertrust.nncp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intu.qbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qbo\"]\n  },\n  \"application/vnd.intu.qfx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qfx\"]\n  },\n  \"application/vnd.iptc.g2.catalogitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.conceptitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.knowledgeitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.newsitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.newsmessage+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.packageitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.planningitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ipunplugged.rcprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rcprofile\"]\n  },\n  \"application/vnd.irepository.package+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"irp\"]\n  },\n  \"application/vnd.is-xpr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpr\"]\n  },\n  \"application/vnd.isac.fcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcs\"]\n  },\n  \"application/vnd.iso11783-10+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.jam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jam\"]\n  },\n  \"application/vnd.japannet-directory-service\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-jpnstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-payment-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-setstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.jcp.javame.midlet-rms\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rms\"]\n  },\n  \"application/vnd.jisp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jisp\"]\n  },\n  \"application/vnd.joost.joda-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"joda\"]\n  },\n  \"application/vnd.jsk.isdn-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.kahootz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktz\",\"ktr\"]\n  },\n  \"application/vnd.kde.karbon\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"karbon\"]\n  },\n  \"application/vnd.kde.kchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chrt\"]\n  },\n  \"application/vnd.kde.kformula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kfo\"]\n  },\n  \"application/vnd.kde.kivio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flw\"]\n  },\n  \"application/vnd.kde.kontour\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kon\"]\n  },\n  \"application/vnd.kde.kpresenter\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kpr\",\"kpt\"]\n  },\n  \"application/vnd.kde.kspread\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ksp\"]\n  },\n  \"application/vnd.kde.kword\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kwd\",\"kwt\"]\n  },\n  \"application/vnd.kenameaapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"htke\"]\n  },\n  \"application/vnd.kidspiration\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kia\"]\n  },\n  \"application/vnd.kinar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kne\",\"knp\"]\n  },\n  \"application/vnd.koan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"skp\",\"skd\",\"skt\",\"skm\"]\n  },\n  \"application/vnd.kodak-descriptor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sse\"]\n  },\n  \"application/vnd.las\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.las.las+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.las.las+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lasxml\"]\n  },\n  \"application/vnd.laszip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.leap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.liberty-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.llamagraphics.life-balance.desktop\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lbd\"]\n  },\n  \"application/vnd.llamagraphics.life-balance.exchange+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lbe\"]\n  },\n  \"application/vnd.logipipe.circuit+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.loom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.lotus-1-2-3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"123\"]\n  },\n  \"application/vnd.lotus-approach\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"apr\"]\n  },\n  \"application/vnd.lotus-freelance\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pre\"]\n  },\n  \"application/vnd.lotus-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nsf\"]\n  },\n  \"application/vnd.lotus-organizer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"org\"]\n  },\n  \"application/vnd.lotus-screencam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scm\"]\n  },\n  \"application/vnd.lotus-wordpro\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lwp\"]\n  },\n  \"application/vnd.macports.portpkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"portpkg\"]\n  },\n  \"application/vnd.mapbox-vector-tile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mvt\"]\n  },\n  \"application/vnd.marlin.drm.actiontoken+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.conftoken+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.license+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.mdcf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mason+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.maxar.archive.3tz+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.maxmind.maxmind-db\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mcd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mcd\"]\n  },\n  \"application/vnd.medcalcdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mc1\"]\n  },\n  \"application/vnd.mediastation.cdkey\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdkey\"]\n  },\n  \"application/vnd.meridian-slingshot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mfer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mwf\"]\n  },\n  \"application/vnd.mfmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mfm\"]\n  },\n  \"application/vnd.micro+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.micrografx.flo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flo\"]\n  },\n  \"application/vnd.micrografx.igx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igx\"]\n  },\n  \"application/vnd.microsoft.portable-executable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.microsoft.windows.thumbnail-cache\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.miele+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.mif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mif\"]\n  },\n  \"application/vnd.minisoft-hp3000-save\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mitsubishi.misty-guard.trustweb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mobius.daf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"daf\"]\n  },\n  \"application/vnd.mobius.dis\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dis\"]\n  },\n  \"application/vnd.mobius.mbk\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbk\"]\n  },\n  \"application/vnd.mobius.mqy\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mqy\"]\n  },\n  \"application/vnd.mobius.msl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msl\"]\n  },\n  \"application/vnd.mobius.plc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plc\"]\n  },\n  \"application/vnd.mobius.txf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txf\"]\n  },\n  \"application/vnd.mophun.application\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpn\"]\n  },\n  \"application/vnd.mophun.certificate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpc\"]\n  },\n  \"application/vnd.motorola.flexsuite\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.adsi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.fis\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.gotap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.kmr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.ttc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.wem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.iprm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mozilla.xul+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xul\"]\n  },\n  \"application/vnd.ms-3mfdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-artgalry\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cil\"]\n  },\n  \"application/vnd.ms-asf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-cab-compressed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cab\"]\n  },\n  \"application/vnd.ms-color.iccprofile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-excel\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]\n  },\n  \"application/vnd.ms-excel.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlam\"]\n  },\n  \"application/vnd.ms-excel.sheet.binary.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsb\"]\n  },\n  \"application/vnd.ms-excel.sheet.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsm\"]\n  },\n  \"application/vnd.ms-excel.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltm\"]\n  },\n  \"application/vnd.ms-fontobject\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eot\"]\n  },\n  \"application/vnd.ms-htmlhelp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chm\"]\n  },\n  \"application/vnd.ms-ims\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ims\"]\n  },\n  \"application/vnd.ms-lrm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lrm\"]\n  },\n  \"application/vnd.ms-office.activex+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-officetheme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"thmx\"]\n  },\n  \"application/vnd.ms-opentype\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-outlook\": {\n    \"compressible\": false,\n    \"extensions\": [\"msg\"]\n  },\n  \"application/vnd.ms-package.obfuscated-opentype\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-pki.seccat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cat\"]\n  },\n  \"application/vnd.ms-pki.stl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stl\"]\n  },\n  \"application/vnd.ms-playready.initiator+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-powerpoint\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ppt\",\"pps\",\"pot\"]\n  },\n  \"application/vnd.ms-powerpoint.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppam\"]\n  },\n  \"application/vnd.ms-powerpoint.presentation.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pptm\"]\n  },\n  \"application/vnd.ms-powerpoint.slide.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldm\"]\n  },\n  \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsm\"]\n  },\n  \"application/vnd.ms-powerpoint.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potm\"]\n  },\n  \"application/vnd.ms-printdevicecapabilities+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-printing.printticket+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-printschematicket+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-project\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpp\",\"mpt\"]\n  },\n  \"application/vnd.ms-tnef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.nwprinting.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.printerpairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.wsd.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-word.document.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"docm\"]\n  },\n  \"application/vnd.ms-word.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotm\"]\n  },\n  \"application/vnd.ms-works\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wps\",\"wks\",\"wcm\",\"wdb\"]\n  },\n  \"application/vnd.ms-wpl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpl\"]\n  },\n  \"application/vnd.ms-xpsdocument\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xps\"]\n  },\n  \"application/vnd.msa-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mseq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseq\"]\n  },\n  \"application/vnd.msign\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator.cif\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.music-niff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.musician\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mus\"]\n  },\n  \"application/vnd.muvee.style\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msty\"]\n  },\n  \"application/vnd.mynfc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"taglet\"]\n  },\n  \"application/vnd.nacamar.ybrid+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ncd.control\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ncd.reference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nearst.inv+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nebumind.line\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nervana\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.netfpx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.neurolanguage.nlu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nlu\"]\n  },\n  \"application/vnd.nimn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.nitro.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.snes.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nitf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ntf\",\"nitf\"]\n  },\n  \"application/vnd.noblenet-directory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnd\"]\n  },\n  \"application/vnd.noblenet-sealer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nns\"]\n  },\n  \"application/vnd.noblenet-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnw\"]\n  },\n  \"application/vnd.nokia.catalogs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.iptv.config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.isds-radio-presets\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.landmarkcollection+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.n-gage.ac+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ac\"]\n  },\n  \"application/vnd.nokia.n-gage.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ngdat\"]\n  },\n  \"application/vnd.nokia.n-gage.symbian.install\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"n-gage\"]\n  },\n  \"application/vnd.nokia.ncd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.radio-preset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpst\"]\n  },\n  \"application/vnd.nokia.radio-presets\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpss\"]\n  },\n  \"application/vnd.novadigm.edm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edm\"]\n  },\n  \"application/vnd.novadigm.edx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edx\"]\n  },\n  \"application/vnd.novadigm.ext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ext\"]\n  },\n  \"application/vnd.ntt-local.content-share\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.file-transfer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.ogw_remote-access\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_remote\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oasis.opendocument.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odc\"]\n  },\n  \"application/vnd.oasis.opendocument.chart-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otc\"]\n  },\n  \"application/vnd.oasis.opendocument.database\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odb\"]\n  },\n  \"application/vnd.oasis.opendocument.formula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odf\"]\n  },\n  \"application/vnd.oasis.opendocument.formula-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odft\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odg\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otg\"]\n  },\n  \"application/vnd.oasis.opendocument.image\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odi\"]\n  },\n  \"application/vnd.oasis.opendocument.image-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oti\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odp\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otp\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ods\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ots\"]\n  },\n  \"application/vnd.oasis.opendocument.text\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odt\"]\n  },\n  \"application/vnd.oasis.opendocument.text-master\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odm\"]\n  },\n  \"application/vnd.oasis.opendocument.text-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ott\"]\n  },\n  \"application/vnd.oasis.opendocument.text-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oth\"]\n  },\n  \"application/vnd.obn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ocf+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oci.image.manifest.v1+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oftn.l10n+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessdownload+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessstreaming+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.cspg-hexbinary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.dae.svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.dae.xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.mippvcontrolmessage+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.pae.gem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.spdiscovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.spdlist+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.ueprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.userprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.olpc-sugar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xo\"]\n  },\n  \"application/vnd.oma-scws-config\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.associated-procedure-parameter+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.drm-trigger+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.imd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.ltkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.notification+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.provisioningtrigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgboot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgdd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.sgdu\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.simple-symbol-container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.smartcard-trigger+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.sprov+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.stkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-address-book+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-feature-handler+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-pcc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-subs-invite+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-user-prefs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dcdc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dd2+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dd2\"]\n  },\n  \"application/vnd.oma.drm.risd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.group-usage-list+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.lwm2m+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.lwm2m+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.lwm2m+tlv\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.pal+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.detailed-progress-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.final-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.groups+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.invocation-descriptor+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.optimized-progress-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.push\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.scidm.messages+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.xcap-directory+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-email+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-file+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-folder+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omaloc-supl-init\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepager\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertamp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertamx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertat\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertatp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertatx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openblox.game+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"obgx\"]\n  },\n  \"application/vnd.openblox.game-binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openeye.oeb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openofficeorg.extension\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"oxt\"]\n  },\n  \"application/vnd.openstreetmap.data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"osm\"]\n  },\n  \"application/vnd.opentimestamps.ots\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawing+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pptx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xlsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.theme+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.themeoverride+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.vmldrawing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"docx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.core-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.relationships+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oracle.resource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.orange.indata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osa.netdeploy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgeo.mapguide.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgp\"]\n  },\n  \"application/vnd.osgi.bundle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgi.dp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dp\"]\n  },\n  \"application/vnd.osgi.subsystem\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esa\"]\n  },\n  \"application/vnd.otps.ct-kip+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oxli.countgraph\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pagerduty+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.palm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pdb\",\"pqa\",\"oprc\"]\n  },\n  \"application/vnd.panoply\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.paos.xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.patentdive\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.patientecommsdoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pawaafile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"paw\"]\n  },\n  \"application/vnd.pcos\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pg.format\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"str\"]\n  },\n  \"application/vnd.pg.osasli\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ei6\"]\n  },\n  \"application/vnd.piaccess.application-licence\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.picsel\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"efif\"]\n  },\n  \"application/vnd.pmi.widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wg\"]\n  },\n  \"application/vnd.poc.group-advertisement+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.pocketlearn\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plf\"]\n  },\n  \"application/vnd.powerbuilder6\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pbd\"]\n  },\n  \"application/vnd.powerbuilder6-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.preminet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.previewsystems.box\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"box\"]\n  },\n  \"application/vnd.proteus.magazine\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgz\"]\n  },\n  \"application/vnd.psfs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.publishare-delta-tree\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qps\"]\n  },\n  \"application/vnd.pvi.ptid1\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ptid\"]\n  },\n  \"application/vnd.pwg-multiplexed\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pwg-xhtml-print+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.qualcomm.brew-app-res\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quarantainenet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quark.quarkxpress\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]\n  },\n  \"application/vnd.quobject-quoxdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.moml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-conf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-conn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-dialog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-stream+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-conf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-base+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-fax-detect+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-group+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-speech+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-transform+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.rainstor.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rapid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rar\"]\n  },\n  \"application/vnd.realvnc.bed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bed\"]\n  },\n  \"application/vnd.recordare.musicxml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxl\"]\n  },\n  \"application/vnd.recordare.musicxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"musicxml\"]\n  },\n  \"application/vnd.renlearn.rlprint\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.resilient.logic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.restful+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.rig.cryptonote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cryptonote\"]\n  },\n  \"application/vnd.rim.cod\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cod\"]\n  },\n  \"application/vnd.rn-realmedia\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rm\"]\n  },\n  \"application/vnd.rn-realmedia-vbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmvb\"]\n  },\n  \"application/vnd.route66.link66+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"link66\"]\n  },\n  \"application/vnd.rs-274x\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ruckus.download\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.s3sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sailingtracker.track\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"st\"]\n  },\n  \"application/vnd.sar\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.cid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.mid2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.scribus\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.3df\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.csf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.doc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.eml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.mht\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.net\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.ppt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.tiff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.xls\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.seemail\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"see\"]\n  },\n  \"application/vnd.seis+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.sema\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sema\"]\n  },\n  \"application/vnd.semd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semd\"]\n  },\n  \"application/vnd.semf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semf\"]\n  },\n  \"application/vnd.shade-save-file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.shana.informed.formdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ifm\"]\n  },\n  \"application/vnd.shana.informed.formtemplate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"itp\"]\n  },\n  \"application/vnd.shana.informed.interchange\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iif\"]\n  },\n  \"application/vnd.shana.informed.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipk\"]\n  },\n  \"application/vnd.shootproof+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.shopkick+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.shp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.shx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sigrok.session\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.simtech-mindmapper\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"twd\",\"twds\"]\n  },\n  \"application/vnd.siren+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.smaf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmf\"]\n  },\n  \"application/vnd.smart.notebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.smart.teacher\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"teacher\"]\n  },\n  \"application/vnd.snesdev-page-table\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.software602.filler.form+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"fo\"]\n  },\n  \"application/vnd.software602.filler.form-xml-zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.solent.sdkm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sdkm\",\"sdkd\"]\n  },\n  \"application/vnd.spotfire.dxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxp\"]\n  },\n  \"application/vnd.spotfire.sfs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfs\"]\n  },\n  \"application/vnd.sqlite3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-cod\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-dtf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-ntf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.stardivision.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdc\"]\n  },\n  \"application/vnd.stardivision.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sda\"]\n  },\n  \"application/vnd.stardivision.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdd\"]\n  },\n  \"application/vnd.stardivision.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smf\"]\n  },\n  \"application/vnd.stardivision.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdw\",\"vor\"]\n  },\n  \"application/vnd.stardivision.writer-global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgl\"]\n  },\n  \"application/vnd.stepmania.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"smzip\"]\n  },\n  \"application/vnd.stepmania.stepchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sm\"]\n  },\n  \"application/vnd.street-stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sun.wadl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wadl\"]\n  },\n  \"application/vnd.sun.xml.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxc\"]\n  },\n  \"application/vnd.sun.xml.calc.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stc\"]\n  },\n  \"application/vnd.sun.xml.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxd\"]\n  },\n  \"application/vnd.sun.xml.draw.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"std\"]\n  },\n  \"application/vnd.sun.xml.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxi\"]\n  },\n  \"application/vnd.sun.xml.impress.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sti\"]\n  },\n  \"application/vnd.sun.xml.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxm\"]\n  },\n  \"application/vnd.sun.xml.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxw\"]\n  },\n  \"application/vnd.sun.xml.writer.global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxg\"]\n  },\n  \"application/vnd.sun.xml.writer.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stw\"]\n  },\n  \"application/vnd.sus-calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sus\",\"susp\"]\n  },\n  \"application/vnd.svd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svd\"]\n  },\n  \"application/vnd.swiftview-ics\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sycle+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.syft+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.symbian.install\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sis\",\"sisx\"]\n  },\n  \"application/vnd.syncml+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"xsm\"]\n  },\n  \"application/vnd.syncml.dm+wbxml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"bdm\"]\n  },\n  \"application/vnd.syncml.dm+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"xdm\"]\n  },\n  \"application/vnd.syncml.dm.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"ddf\"]\n  },\n  \"application/vnd.syncml.dmtnds+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmtnds+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.syncml.ds.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tableschema+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tao.intent-module-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tao\"]\n  },\n  \"application/vnd.tcpdump.pcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcap\",\"cap\",\"dmp\"]\n  },\n  \"application/vnd.think-cell.ppttc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tmd.mediaflex.api+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tmobile-livetv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tmo\"]\n  },\n  \"application/vnd.tri.onesource\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.trid.tpt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpt\"]\n  },\n  \"application/vnd.triscape.mxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxs\"]\n  },\n  \"application/vnd.trueapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tra\"]\n  },\n  \"application/vnd.truedoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ubisoft.webplayer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ufdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ufd\",\"ufdl\"]\n  },\n  \"application/vnd.uiq.theme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"utz\"]\n  },\n  \"application/vnd.umajin\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"umj\"]\n  },\n  \"application/vnd.unity\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"unityweb\"]\n  },\n  \"application/vnd.uoml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uoml\"]\n  },\n  \"application/vnd.uplanet.alert\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.alert-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.signal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uri-map\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.valve.source.material\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcx\"]\n  },\n  \"application/vnd.vd-study\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vectorworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vel+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.verimatrix.vcas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.veritone.aion+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.veryant.thin\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ves.encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vidsoft.vidconference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.visio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsd\",\"vst\",\"vss\",\"vsw\"]\n  },\n  \"application/vnd.visionary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vis\"]\n  },\n  \"application/vnd.vividence.scriptfile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vsf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsf\"]\n  },\n  \"application/vnd.wap.sic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.slc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.wbxml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"wbxml\"]\n  },\n  \"application/vnd.wap.wmlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlc\"]\n  },\n  \"application/vnd.wap.wmlscriptc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlsc\"]\n  },\n  \"application/vnd.webturbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wtb\"]\n  },\n  \"application/vnd.wfa.dpp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.p2p\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.wsc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmf.bootstrap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica.package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nbp\"]\n  },\n  \"application/vnd.wordperfect\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpd\"]\n  },\n  \"application/vnd.wqd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wqd\"]\n  },\n  \"application/vnd.wrq-hp3000-labelled\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wt.stf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stf\"]\n  },\n  \"application/vnd.wv.csp+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wv.csp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.wv.ssp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xacml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xara\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xar\"]\n  },\n  \"application/vnd.xfdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdl\"]\n  },\n  \"application/vnd.xfdl.webform\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xmpie.cpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.dpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.plan\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.ppkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.xlim\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.hv-dic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvd\"]\n  },\n  \"application/vnd.yamaha.hv-script\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvs\"]\n  },\n  \"application/vnd.yamaha.hv-voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvp\"]\n  },\n  \"application/vnd.yamaha.openscoreformat\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"osf\"]\n  },\n  \"application/vnd.yamaha.openscoreformat.osfpvg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"osfpvg\"]\n  },\n  \"application/vnd.yamaha.remote-setup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.smaf-audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"saf\"]\n  },\n  \"application/vnd.yamaha.smaf-phrase\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spf\"]\n  },\n  \"application/vnd.yamaha.through-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.tunnel-udpencap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yaoweme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yellowriver-custom-menu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmp\"]\n  },\n  \"application/vnd.youtube.yt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.zul\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"zir\",\"zirz\"]\n  },\n  \"application/vnd.zzazz.deck+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"zaz\"]\n  },\n  \"application/voicexml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vxml\"]\n  },\n  \"application/voucher-cms+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vq-rtcpxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/wasm\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wasm\"]\n  },\n  \"application/watcherinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wif\"]\n  },\n  \"application/webpush-options+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/whoispp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/whoispp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wgt\"]\n  },\n  \"application/winhlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hlp\"]\n  },\n  \"application/wita\": {\n    \"source\": \"iana\"\n  },\n  \"application/wordperfect5.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/wsdl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wsdl\"]\n  },\n  \"application/wspolicy+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wspolicy\"]\n  },\n  \"application/x-7z-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"7z\"]\n  },\n  \"application/x-abiword\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"abw\"]\n  },\n  \"application/x-ace-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ace\"]\n  },\n  \"application/x-amf\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-apple-diskimage\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dmg\"]\n  },\n  \"application/x-arj\": {\n    \"compressible\": false,\n    \"extensions\": [\"arj\"]\n  },\n  \"application/x-authorware-bin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aab\",\"x32\",\"u32\",\"vox\"]\n  },\n  \"application/x-authorware-map\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aam\"]\n  },\n  \"application/x-authorware-seg\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aas\"]\n  },\n  \"application/x-bcpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bcpio\"]\n  },\n  \"application/x-bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/x-bittorrent\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"torrent\"]\n  },\n  \"application/x-blorb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"blb\",\"blorb\"]\n  },\n  \"application/x-bzip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz\"]\n  },\n  \"application/x-bzip2\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz2\",\"boz\"]\n  },\n  \"application/x-cbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]\n  },\n  \"application/x-cdlink\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcd\"]\n  },\n  \"application/x-cfs-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cfs\"]\n  },\n  \"application/x-chat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"chat\"]\n  },\n  \"application/x-chess-pgn\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgn\"]\n  },\n  \"application/x-chrome-extension\": {\n    \"extensions\": [\"crx\"]\n  },\n  \"application/x-cocoa\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"cco\"]\n  },\n  \"application/x-compress\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-conference\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nsc\"]\n  },\n  \"application/x-cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpio\"]\n  },\n  \"application/x-csh\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csh\"]\n  },\n  \"application/x-deb\": {\n    \"compressible\": false\n  },\n  \"application/x-debian-package\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"deb\",\"udeb\"]\n  },\n  \"application/x-dgc-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dgc\"]\n  },\n  \"application/x-director\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]\n  },\n  \"application/x-doom\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wad\"]\n  },\n  \"application/x-dtbncx+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ncx\"]\n  },\n  \"application/x-dtbook+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"dtb\"]\n  },\n  \"application/x-dtbresource+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"res\"]\n  },\n  \"application/x-dvi\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"dvi\"]\n  },\n  \"application/x-envoy\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"evy\"]\n  },\n  \"application/x-eva\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"eva\"]\n  },\n  \"application/x-font-bdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bdf\"]\n  },\n  \"application/x-font-dos\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-framemaker\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-ghostscript\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gsf\"]\n  },\n  \"application/x-font-libgrx\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-linux-psf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"psf\"]\n  },\n  \"application/x-font-pcf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcf\"]\n  },\n  \"application/x-font-snf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"snf\"]\n  },\n  \"application/x-font-speedo\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-sunos-news\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-type1\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pfa\",\"pfb\",\"pfm\",\"afm\"]\n  },\n  \"application/x-font-vfont\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-freearc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"arc\"]\n  },\n  \"application/x-futuresplash\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"spl\"]\n  },\n  \"application/x-gca-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gca\"]\n  },\n  \"application/x-glulx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ulx\"]\n  },\n  \"application/x-gnumeric\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gnumeric\"]\n  },\n  \"application/x-gramps-xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gramps\"]\n  },\n  \"application/x-gtar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gtar\"]\n  },\n  \"application/x-gzip\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-hdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hdf\"]\n  },\n  \"application/x-httpd-php\": {\n    \"compressible\": true,\n    \"extensions\": [\"php\"]\n  },\n  \"application/x-install-instructions\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"install\"]\n  },\n  \"application/x-iso9660-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"iso\"]\n  },\n  \"application/x-iwork-keynote-sffkey\": {\n    \"extensions\": [\"key\"]\n  },\n  \"application/x-iwork-numbers-sffnumbers\": {\n    \"extensions\": [\"numbers\"]\n  },\n  \"application/x-iwork-pages-sffpages\": {\n    \"extensions\": [\"pages\"]\n  },\n  \"application/x-java-archive-diff\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jardiff\"]\n  },\n  \"application/x-java-jnlp-file\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jnlp\"]\n  },\n  \"application/x-javascript\": {\n    \"compressible\": true\n  },\n  \"application/x-keepass2\": {\n    \"extensions\": [\"kdbx\"]\n  },\n  \"application/x-latex\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"latex\"]\n  },\n  \"application/x-lua-bytecode\": {\n    \"extensions\": [\"luac\"]\n  },\n  \"application/x-lzh-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lzh\",\"lha\"]\n  },\n  \"application/x-makeself\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"run\"]\n  },\n  \"application/x-mie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mie\"]\n  },\n  \"application/x-mobipocket-ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prc\",\"mobi\"]\n  },\n  \"application/x-mpegurl\": {\n    \"compressible\": false\n  },\n  \"application/x-ms-application\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"application\"]\n  },\n  \"application/x-ms-shortcut\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lnk\"]\n  },\n  \"application/x-ms-wmd\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmd\"]\n  },\n  \"application/x-ms-wmz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmz\"]\n  },\n  \"application/x-ms-xbap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbap\"]\n  },\n  \"application/x-msaccess\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mdb\"]\n  },\n  \"application/x-msbinder\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obd\"]\n  },\n  \"application/x-mscardfile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"crd\"]\n  },\n  \"application/x-msclip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"clp\"]\n  },\n  \"application/x-msdos-program\": {\n    \"extensions\": [\"exe\"]\n  },\n  \"application/x-msdownload\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]\n  },\n  \"application/x-msmediaview\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mvb\",\"m13\",\"m14\"]\n  },\n  \"application/x-msmetafile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmf\",\"wmz\",\"emf\",\"emz\"]\n  },\n  \"application/x-msmoney\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mny\"]\n  },\n  \"application/x-mspublisher\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pub\"]\n  },\n  \"application/x-msschedule\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scd\"]\n  },\n  \"application/x-msterminal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"trm\"]\n  },\n  \"application/x-mswrite\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wri\"]\n  },\n  \"application/x-netcdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nc\",\"cdf\"]\n  },\n  \"application/x-ns-proxy-autoconfig\": {\n    \"compressible\": true,\n    \"extensions\": [\"pac\"]\n  },\n  \"application/x-nzb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nzb\"]\n  },\n  \"application/x-perl\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"pl\",\"pm\"]\n  },\n  \"application/x-pilot\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"prc\",\"pdb\"]\n  },\n  \"application/x-pkcs12\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"p12\",\"pfx\"]\n  },\n  \"application/x-pkcs7-certificates\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7b\",\"spc\"]\n  },\n  \"application/x-pkcs7-certreqresp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7r\"]\n  },\n  \"application/x-pki-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-rar-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"rar\"]\n  },\n  \"application/x-redhat-package-manager\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"rpm\"]\n  },\n  \"application/x-research-info-systems\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ris\"]\n  },\n  \"application/x-sea\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"sea\"]\n  },\n  \"application/x-sh\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"sh\"]\n  },\n  \"application/x-shar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"shar\"]\n  },\n  \"application/x-shockwave-flash\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"swf\"]\n  },\n  \"application/x-silverlight-app\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xap\"]\n  },\n  \"application/x-sql\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sql\"]\n  },\n  \"application/x-stuffit\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"sit\"]\n  },\n  \"application/x-stuffitx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sitx\"]\n  },\n  \"application/x-subrip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"srt\"]\n  },\n  \"application/x-sv4cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4cpio\"]\n  },\n  \"application/x-sv4crc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4crc\"]\n  },\n  \"application/x-t3vm-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"t3\"]\n  },\n  \"application/x-tads\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gam\"]\n  },\n  \"application/x-tar\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"tar\"]\n  },\n  \"application/x-tcl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tcl\",\"tk\"]\n  },\n  \"application/x-tex\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tex\"]\n  },\n  \"application/x-tex-tfm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tfm\"]\n  },\n  \"application/x-texinfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"texinfo\",\"texi\"]\n  },\n  \"application/x-tgif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obj\"]\n  },\n  \"application/x-ustar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ustar\"]\n  },\n  \"application/x-virtualbox-hdd\": {\n    \"compressible\": true,\n    \"extensions\": [\"hdd\"]\n  },\n  \"application/x-virtualbox-ova\": {\n    \"compressible\": true,\n    \"extensions\": [\"ova\"]\n  },\n  \"application/x-virtualbox-ovf\": {\n    \"compressible\": true,\n    \"extensions\": [\"ovf\"]\n  },\n  \"application/x-virtualbox-vbox\": {\n    \"compressible\": true,\n    \"extensions\": [\"vbox\"]\n  },\n  \"application/x-virtualbox-vbox-extpack\": {\n    \"compressible\": false,\n    \"extensions\": [\"vbox-extpack\"]\n  },\n  \"application/x-virtualbox-vdi\": {\n    \"compressible\": true,\n    \"extensions\": [\"vdi\"]\n  },\n  \"application/x-virtualbox-vhd\": {\n    \"compressible\": true,\n    \"extensions\": [\"vhd\"]\n  },\n  \"application/x-virtualbox-vmdk\": {\n    \"compressible\": true,\n    \"extensions\": [\"vmdk\"]\n  },\n  \"application/x-wais-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"src\"]\n  },\n  \"application/x-web-app-manifest+json\": {\n    \"compressible\": true,\n    \"extensions\": [\"webapp\"]\n  },\n  \"application/x-www-form-urlencoded\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/x-x509-ca-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"der\",\"crt\",\"pem\"]\n  },\n  \"application/x-x509-ca-ra-cert\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-x509-next-ca-cert\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-xfig\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fig\"]\n  },\n  \"application/x-xliff+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/x-xpinstall\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"xpi\"]\n  },\n  \"application/x-xz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xz\"]\n  },\n  \"application/x-zmachine\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]\n  },\n  \"application/x400-bp\": {\n    \"source\": \"iana\"\n  },\n  \"application/xacml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xaml+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xaml\"]\n  },\n  \"application/xcap-att+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xav\"]\n  },\n  \"application/xcap-caps+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xca\"]\n  },\n  \"application/xcap-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdf\"]\n  },\n  \"application/xcap-el+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xel\"]\n  },\n  \"application/xcap-error+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xcap-ns+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xns\"]\n  },\n  \"application/xcon-conference-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xcon-conference-info-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xenc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xenc\"]\n  },\n  \"application/xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xhtml\",\"xht\"]\n  },\n  \"application/xhtml-voice+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/xliff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\",\"xsl\",\"xsd\",\"rng\"]\n  },\n  \"application/xml-dtd\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dtd\"]\n  },\n  \"application/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"application/xml-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xmpp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xop\"]\n  },\n  \"application/xproc+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xpl\"]\n  },\n  \"application/xslt+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xsl\",\"xslt\"]\n  },\n  \"application/xspf+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xspf\"]\n  },\n  \"application/xv+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]\n  },\n  \"application/yang\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"yang\"]\n  },\n  \"application/yang-data+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yin+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"yin\"]\n  },\n  \"application/zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"zip\"]\n  },\n  \"application/zlib\": {\n    \"source\": \"iana\"\n  },\n  \"application/zstd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/3gpp\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"3gpp\"]\n  },\n  \"audio/3gpp2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aac\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/adpcm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"adp\"]\n  },\n  \"audio/amr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"amr\"]\n  },\n  \"audio/amr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/amr-wb+\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aptx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/asc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-advanced-lossless\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/basic\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"au\",\"snd\"]\n  },\n  \"audio/bv16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/bv32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/clearmode\": {\n    \"source\": \"iana\"\n  },\n  \"audio/cn\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dat12\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dls\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es201108\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202050\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202211\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202212\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dvi4\": {\n    \"source\": \"iana\"\n  },\n  \"audio/eac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evs\": {\n    \"source\": \"iana\"\n  },\n  \"audio/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g711-0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g719\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g722\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7221\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g723\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-24\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-40\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g728\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7291\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729d\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729e\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-efr\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-hr-08\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ilbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ip-mr_v2.5\": {\n    \"source\": \"iana\"\n  },\n  \"audio/isac\": {\n    \"source\": \"apache\"\n  },\n  \"audio/l16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l20\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l24\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/l8\": {\n    \"source\": \"iana\"\n  },\n  \"audio/lpc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp1200\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp2400\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp600\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mhas\": {\n    \"source\": \"iana\"\n  },\n  \"audio/midi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mid\",\"midi\",\"kar\",\"rmi\"]\n  },\n  \"audio/mobile-xmf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxmf\"]\n  },\n  \"audio/mp3\": {\n    \"compressible\": false,\n    \"extensions\": [\"mp3\"]\n  },\n  \"audio/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"m4a\",\"mp4a\"]\n  },\n  \"audio/mp4a-latm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa-robust\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]\n  },\n  \"audio/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"audio/musepack\": {\n    \"source\": \"apache\"\n  },\n  \"audio/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"oga\",\"ogg\",\"spx\",\"opus\"]\n  },\n  \"audio/opus\": {\n    \"source\": \"iana\"\n  },\n  \"audio/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/prs.sid\": {\n    \"source\": \"iana\"\n  },\n  \"audio/qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/red\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/s3m\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s3m\"]\n  },\n  \"audio/scip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/silk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sil\"]\n  },\n  \"audio/smv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sofa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/speex\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t140c\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t38\": {\n    \"source\": \"iana\"\n  },\n  \"audio/telephone-event\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tetra_acelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tetra_acelp_bb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tone\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tsvcis\": {\n    \"source\": \"iana\"\n  },\n  \"audio/uemclip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/usac\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vdvi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vmr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.3gpp.iufp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.4sb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.audiokoz\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.celp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cisco.nse\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cmles.radio-events\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.anp1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.inf1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dece.audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uva\",\"uvva\"]\n  },\n  \"audio/vnd.digital-winds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"eol\"]\n  },\n  \"audio/vnd.dlna.adts\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mlp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mps\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2z\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pulse.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dra\"]\n  },\n  \"audio/vnd.dts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dts\"]\n  },\n  \"audio/vnd.dts.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dtshd\"]\n  },\n  \"audio/vnd.dts.uhd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dvb.file\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.everad.plj\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.hns.audio\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.lucent.voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lvp\"]\n  },\n  \"audio/vnd.ms-playready.media.pya\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pya\"]\n  },\n  \"audio/vnd.nokia.mobile-xmf\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nortel.vbk\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nuera.ecelp4800\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp4800\"]\n  },\n  \"audio/vnd.nuera.ecelp7470\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp7470\"]\n  },\n  \"audio/vnd.nuera.ecelp9600\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp9600\"]\n  },\n  \"audio/vnd.octel.sbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.presonus.multitrack\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rhetorex.32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rip\"]\n  },\n  \"audio/vnd.rn-realaudio\": {\n    \"compressible\": false\n  },\n  \"audio/vnd.sealedmedia.softseal.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.vmx.cvsd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.wave\": {\n    \"compressible\": false\n  },\n  \"audio/vorbis\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/vorbis-config\": {\n    \"source\": \"iana\"\n  },\n  \"audio/wav\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/wave\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"weba\"]\n  },\n  \"audio/x-aac\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"aac\"]\n  },\n  \"audio/x-aiff\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aif\",\"aiff\",\"aifc\"]\n  },\n  \"audio/x-caf\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"caf\"]\n  },\n  \"audio/x-flac\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"flac\"]\n  },\n  \"audio/x-m4a\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"m4a\"]\n  },\n  \"audio/x-matroska\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mka\"]\n  },\n  \"audio/x-mpegurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m3u\"]\n  },\n  \"audio/x-ms-wax\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wax\"]\n  },\n  \"audio/x-ms-wma\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wma\"]\n  },\n  \"audio/x-pn-realaudio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ram\",\"ra\"]\n  },\n  \"audio/x-pn-realaudio-plugin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmp\"]\n  },\n  \"audio/x-realaudio\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"ra\"]\n  },\n  \"audio/x-tta\": {\n    \"source\": \"apache\"\n  },\n  \"audio/x-wav\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/xm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xm\"]\n  },\n  \"chemical/x-cdx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cdx\"]\n  },\n  \"chemical/x-cif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cif\"]\n  },\n  \"chemical/x-cmdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmdf\"]\n  },\n  \"chemical/x-cml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cml\"]\n  },\n  \"chemical/x-csml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csml\"]\n  },\n  \"chemical/x-pdb\": {\n    \"source\": \"apache\"\n  },\n  \"chemical/x-xyz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xyz\"]\n  },\n  \"font/collection\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ttc\"]\n  },\n  \"font/otf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"otf\"]\n  },\n  \"font/sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"font/ttf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ttf\"]\n  },\n  \"font/woff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"woff\"]\n  },\n  \"font/woff2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"woff2\"]\n  },\n  \"image/aces\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exr\"]\n  },\n  \"image/apng\": {\n    \"compressible\": false,\n    \"extensions\": [\"apng\"]\n  },\n  \"image/avci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"avci\"]\n  },\n  \"image/avcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"avcs\"]\n  },\n  \"image/avif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"avif\"]\n  },\n  \"image/bmp\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/cgm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cgm\"]\n  },\n  \"image/dicom-rle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"drle\"]\n  },\n  \"image/emf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"emf\"]\n  },\n  \"image/fits\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fits\"]\n  },\n  \"image/g3fax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3\"]\n  },\n  \"image/gif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gif\"]\n  },\n  \"image/heic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heic\"]\n  },\n  \"image/heic-sequence\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heics\"]\n  },\n  \"image/heif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heif\"]\n  },\n  \"image/heif-sequence\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heifs\"]\n  },\n  \"image/hej2k\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hej2\"]\n  },\n  \"image/hsj2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hsj2\"]\n  },\n  \"image/ief\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ief\"]\n  },\n  \"image/jls\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jls\"]\n  },\n  \"image/jp2\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jp2\",\"jpg2\"]\n  },\n  \"image/jpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpeg\",\"jpg\",\"jpe\"]\n  },\n  \"image/jph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jph\"]\n  },\n  \"image/jphc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jhc\"]\n  },\n  \"image/jpm\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpm\"]\n  },\n  \"image/jpx\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpx\",\"jpf\"]\n  },\n  \"image/jxr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxr\"]\n  },\n  \"image/jxra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxra\"]\n  },\n  \"image/jxrs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxrs\"]\n  },\n  \"image/jxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxs\"]\n  },\n  \"image/jxsc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxsc\"]\n  },\n  \"image/jxsi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxsi\"]\n  },\n  \"image/jxss\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxss\"]\n  },\n  \"image/ktx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx\"]\n  },\n  \"image/ktx2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx2\"]\n  },\n  \"image/naplps\": {\n    \"source\": \"iana\"\n  },\n  \"image/pjpeg\": {\n    \"compressible\": false\n  },\n  \"image/png\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"png\"]\n  },\n  \"image/prs.btif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"btif\"]\n  },\n  \"image/prs.pti\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pti\"]\n  },\n  \"image/pwg-raster\": {\n    \"source\": \"iana\"\n  },\n  \"image/sgi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgi\"]\n  },\n  \"image/svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"svg\",\"svgz\"]\n  },\n  \"image/t38\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t38\"]\n  },\n  \"image/tiff\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"tif\",\"tiff\"]\n  },\n  \"image/tiff-fx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tfx\"]\n  },\n  \"image/vnd.adobe.photoshop\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"psd\"]\n  },\n  \"image/vnd.airzip.accelerator.azv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azv\"]\n  },\n  \"image/vnd.cns.inf2\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.dece.graphic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]\n  },\n  \"image/vnd.djvu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"djvu\",\"djv\"]\n  },\n  \"image/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"image/vnd.dwg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwg\"]\n  },\n  \"image/vnd.dxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxf\"]\n  },\n  \"image/vnd.fastbidsheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fbs\"]\n  },\n  \"image/vnd.fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fpx\"]\n  },\n  \"image/vnd.fst\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fst\"]\n  },\n  \"image/vnd.fujixerox.edmics-mmr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmr\"]\n  },\n  \"image/vnd.fujixerox.edmics-rlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rlc\"]\n  },\n  \"image/vnd.globalgraphics.pgb\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.microsoft.icon\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/vnd.mix\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.mozilla.apng\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.ms-dds\": {\n    \"compressible\": true,\n    \"extensions\": [\"dds\"]\n  },\n  \"image/vnd.ms-modi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mdi\"]\n  },\n  \"image/vnd.ms-photo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wdp\"]\n  },\n  \"image/vnd.net-fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"npx\"]\n  },\n  \"image/vnd.pco.b16\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"b16\"]\n  },\n  \"image/vnd.radiance\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealed.png\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.gif\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.jpg\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.svf\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.tencent.tap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tap\"]\n  },\n  \"image/vnd.valve.source.texture\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtf\"]\n  },\n  \"image/vnd.wap.wbmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wbmp\"]\n  },\n  \"image/vnd.xiff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xif\"]\n  },\n  \"image/vnd.zbrush.pcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/webp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"webp\"]\n  },\n  \"image/wmf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmf\"]\n  },\n  \"image/x-3ds\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"3ds\"]\n  },\n  \"image/x-cmu-raster\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ras\"]\n  },\n  \"image/x-cmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmx\"]\n  },\n  \"image/x-freehand\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]\n  },\n  \"image/x-icon\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/x-jng\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jng\"]\n  },\n  \"image/x-mrsid-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sid\"]\n  },\n  \"image/x-ms-bmp\": {\n    \"source\": \"nginx\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/x-pcx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/x-pict\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pic\",\"pct\"]\n  },\n  \"image/x-portable-anymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pnm\"]\n  },\n  \"image/x-portable-bitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pbm\"]\n  },\n  \"image/x-portable-graymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgm\"]\n  },\n  \"image/x-portable-pixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ppm\"]\n  },\n  \"image/x-rgb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rgb\"]\n  },\n  \"image/x-tga\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tga\"]\n  },\n  \"image/x-xbitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbm\"]\n  },\n  \"image/x-xcf\": {\n    \"compressible\": false\n  },\n  \"image/x-xpixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xpm\"]\n  },\n  \"image/x-xwindowdump\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xwd\"]\n  },\n  \"message/cpim\": {\n    \"source\": \"iana\"\n  },\n  \"message/delivery-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/disposition-notification\": {\n    \"source\": \"iana\",\n    \"extensions\": [\n      \"disposition-notification\"\n    ]\n  },\n  \"message/external-body\": {\n    \"source\": \"iana\"\n  },\n  \"message/feedback-report\": {\n    \"source\": \"iana\"\n  },\n  \"message/global\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8msg\"]\n  },\n  \"message/global-delivery-status\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8dsn\"]\n  },\n  \"message/global-disposition-notification\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8mdn\"]\n  },\n  \"message/global-headers\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8hdr\"]\n  },\n  \"message/http\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/imdn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"message/news\": {\n    \"source\": \"iana\"\n  },\n  \"message/partial\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/rfc822\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eml\",\"mime\"]\n  },\n  \"message/s-http\": {\n    \"source\": \"iana\"\n  },\n  \"message/sip\": {\n    \"source\": \"iana\"\n  },\n  \"message/sipfrag\": {\n    \"source\": \"iana\"\n  },\n  \"message/tracking-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.si.simp\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.wfa.wsc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wsc\"]\n  },\n  \"model/3mf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3mf\"]\n  },\n  \"model/e57\": {\n    \"source\": \"iana\"\n  },\n  \"model/gltf+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"gltf\"]\n  },\n  \"model/gltf-binary\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"glb\"]\n  },\n  \"model/iges\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"igs\",\"iges\"]\n  },\n  \"model/mesh\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"msh\",\"mesh\",\"silo\"]\n  },\n  \"model/mtl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mtl\"]\n  },\n  \"model/obj\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"obj\"]\n  },\n  \"model/step\": {\n    \"source\": \"iana\"\n  },\n  \"model/step+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"stpx\"]\n  },\n  \"model/step+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"stpz\"]\n  },\n  \"model/step-xml+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"stpxz\"]\n  },\n  \"model/stl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stl\"]\n  },\n  \"model/vnd.collada+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dae\"]\n  },\n  \"model/vnd.dwf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwf\"]\n  },\n  \"model/vnd.flatland.3dml\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gdl\"]\n  },\n  \"model/vnd.gs-gdl\": {\n    \"source\": \"apache\"\n  },\n  \"model/vnd.gs.gdl\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gtw\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtw\"]\n  },\n  \"model/vnd.moml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"model/vnd.mts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mts\"]\n  },\n  \"model/vnd.opengex\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ogex\"]\n  },\n  \"model/vnd.parasolid.transmit.binary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x_b\"]\n  },\n  \"model/vnd.parasolid.transmit.text\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x_t\"]\n  },\n  \"model/vnd.pytha.pyox\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.rosette.annotated-data-model\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.sap.vds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vds\"]\n  },\n  \"model/vnd.usdz+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"usdz\"]\n  },\n  \"model/vnd.valve.source.compiled-map\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bsp\"]\n  },\n  \"model/vnd.vtu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtu\"]\n  },\n  \"model/vrml\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"wrl\",\"vrml\"]\n  },\n  \"model/x3d+binary\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3db\",\"x3dbz\"]\n  },\n  \"model/x3d+fastinfoset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x3db\"]\n  },\n  \"model/x3d+vrml\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3dv\",\"x3dvz\"]\n  },\n  \"model/x3d+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"x3d\",\"x3dz\"]\n  },\n  \"model/x3d-vrml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x3dv\"]\n  },\n  \"multipart/alternative\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/appledouble\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/byteranges\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/digest\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/form-data\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/header-set\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/mixed\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/multilingual\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/parallel\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/related\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/report\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/signed\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/vnd.bint.med-plus\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/voice-message\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/x-mixed-replace\": {\n    \"source\": \"iana\"\n  },\n  \"text/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/cache-manifest\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"appcache\",\"manifest\"]\n  },\n  \"text/calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ics\",\"ifb\"]\n  },\n  \"text/calender\": {\n    \"compressible\": true\n  },\n  \"text/cmd\": {\n    \"compressible\": true\n  },\n  \"text/coffeescript\": {\n    \"extensions\": [\"coffee\",\"litcoffee\"]\n  },\n  \"text/cql\": {\n    \"source\": \"iana\"\n  },\n  \"text/cql-expression\": {\n    \"source\": \"iana\"\n  },\n  \"text/cql-identifier\": {\n    \"source\": \"iana\"\n  },\n  \"text/css\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"css\"]\n  },\n  \"text/csv\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csv\"]\n  },\n  \"text/csv-schema\": {\n    \"source\": \"iana\"\n  },\n  \"text/directory\": {\n    \"source\": \"iana\"\n  },\n  \"text/dns\": {\n    \"source\": \"iana\"\n  },\n  \"text/ecmascript\": {\n    \"source\": \"iana\"\n  },\n  \"text/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"text/enriched\": {\n    \"source\": \"iana\"\n  },\n  \"text/fhirpath\": {\n    \"source\": \"iana\"\n  },\n  \"text/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"text/gff3\": {\n    \"source\": \"iana\"\n  },\n  \"text/grammar-ref-list\": {\n    \"source\": \"iana\"\n  },\n  \"text/html\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"html\",\"htm\",\"shtml\"]\n  },\n  \"text/jade\": {\n    \"extensions\": [\"jade\"]\n  },\n  \"text/javascript\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"text/jcr-cnd\": {\n    \"source\": \"iana\"\n  },\n  \"text/jsx\": {\n    \"compressible\": true,\n    \"extensions\": [\"jsx\"]\n  },\n  \"text/less\": {\n    \"compressible\": true,\n    \"extensions\": [\"less\"]\n  },\n  \"text/markdown\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"markdown\",\"md\"]\n  },\n  \"text/mathml\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"mml\"]\n  },\n  \"text/mdx\": {\n    \"compressible\": true,\n    \"extensions\": [\"mdx\"]\n  },\n  \"text/mizar\": {\n    \"source\": \"iana\"\n  },\n  \"text/n3\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"n3\"]\n  },\n  \"text/parameters\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/plain\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]\n  },\n  \"text/provenance-notation\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/prs.fallenstein.rst\": {\n    \"source\": \"iana\"\n  },\n  \"text/prs.lines.tag\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dsc\"]\n  },\n  \"text/prs.prop.logic\": {\n    \"source\": \"iana\"\n  },\n  \"text/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/red\": {\n    \"source\": \"iana\"\n  },\n  \"text/rfc822-headers\": {\n    \"source\": \"iana\"\n  },\n  \"text/richtext\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtx\"]\n  },\n  \"text/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"text/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"text/sgml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sgml\",\"sgm\"]\n  },\n  \"text/shaclc\": {\n    \"source\": \"iana\"\n  },\n  \"text/shex\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"shex\"]\n  },\n  \"text/slim\": {\n    \"extensions\": [\"slim\",\"slm\"]\n  },\n  \"text/spdx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spdx\"]\n  },\n  \"text/strings\": {\n    \"source\": \"iana\"\n  },\n  \"text/stylus\": {\n    \"extensions\": [\"stylus\",\"styl\"]\n  },\n  \"text/t140\": {\n    \"source\": \"iana\"\n  },\n  \"text/tab-separated-values\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tsv\"]\n  },\n  \"text/troff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]\n  },\n  \"text/turtle\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"ttl\"]\n  },\n  \"text/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/uri-list\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uri\",\"uris\",\"urls\"]\n  },\n  \"text/vcard\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vcard\"]\n  },\n  \"text/vnd.a\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.abc\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ascii-art\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.curl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"curl\"]\n  },\n  \"text/vnd.curl.dcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dcurl\"]\n  },\n  \"text/vnd.curl.mcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mcurl\"]\n  },\n  \"text/vnd.curl.scurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scurl\"]\n  },\n  \"text/vnd.debian.copyright\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.dmclientscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"text/vnd.esmertec.theme-descriptor\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.familysearch.gedcom\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ged\"]\n  },\n  \"text/vnd.ficlab.flt\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.fly\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fly\"]\n  },\n  \"text/vnd.fmi.flexstor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flx\"]\n  },\n  \"text/vnd.gml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.graphviz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gv\"]\n  },\n  \"text/vnd.hans\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.hgl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.in3d.3dml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3dml\"]\n  },\n  \"text/vnd.in3d.spot\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spot\"]\n  },\n  \"text/vnd.iptc.newsml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.iptc.nitf\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.latex-z\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.motorola.reflex\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ms-mediapackage\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.net2phone.commcenter.command\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.radisys.msml-basic-layout\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.senx.warpscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.si.uricatalogue\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.sosi\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.sun.j2me.app-descriptor\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"jad\"]\n  },\n  \"text/vnd.trolltech.linguist\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.wap.si\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.sl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.wml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wml\"]\n  },\n  \"text/vnd.wap.wmlscript\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmls\"]\n  },\n  \"text/vtt\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"vtt\"]\n  },\n  \"text/x-asm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s\",\"asm\"]\n  },\n  \"text/x-c\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]\n  },\n  \"text/x-component\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"htc\"]\n  },\n  \"text/x-fortran\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f\",\"for\",\"f77\",\"f90\"]\n  },\n  \"text/x-gwt-rpc\": {\n    \"compressible\": true\n  },\n  \"text/x-handlebars-template\": {\n    \"extensions\": [\"hbs\"]\n  },\n  \"text/x-java-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"java\"]\n  },\n  \"text/x-jquery-tmpl\": {\n    \"compressible\": true\n  },\n  \"text/x-lua\": {\n    \"extensions\": [\"lua\"]\n  },\n  \"text/x-markdown\": {\n    \"compressible\": true,\n    \"extensions\": [\"mkd\"]\n  },\n  \"text/x-nfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nfo\"]\n  },\n  \"text/x-opml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"opml\"]\n  },\n  \"text/x-org\": {\n    \"compressible\": true,\n    \"extensions\": [\"org\"]\n  },\n  \"text/x-pascal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p\",\"pas\"]\n  },\n  \"text/x-processing\": {\n    \"compressible\": true,\n    \"extensions\": [\"pde\"]\n  },\n  \"text/x-sass\": {\n    \"extensions\": [\"sass\"]\n  },\n  \"text/x-scss\": {\n    \"extensions\": [\"scss\"]\n  },\n  \"text/x-setext\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"etx\"]\n  },\n  \"text/x-sfv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sfv\"]\n  },\n  \"text/x-suse-ymp\": {\n    \"compressible\": true,\n    \"extensions\": [\"ymp\"]\n  },\n  \"text/x-uuencode\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uu\"]\n  },\n  \"text/x-vcalendar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcs\"]\n  },\n  \"text/x-vcard\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcf\"]\n  },\n  \"text/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\"]\n  },\n  \"text/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"text/yaml\": {\n    \"compressible\": true,\n    \"extensions\": [\"yaml\",\"yml\"]\n  },\n  \"video/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/3gpp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3gp\",\"3gpp\"]\n  },\n  \"video/3gpp-tt\": {\n    \"source\": \"iana\"\n  },\n  \"video/3gpp2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3g2\"]\n  },\n  \"video/av1\": {\n    \"source\": \"iana\"\n  },\n  \"video/bmpeg\": {\n    \"source\": \"iana\"\n  },\n  \"video/bt656\": {\n    \"source\": \"iana\"\n  },\n  \"video/celb\": {\n    \"source\": \"iana\"\n  },\n  \"video/dv\": {\n    \"source\": \"iana\"\n  },\n  \"video/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"video/ffv1\": {\n    \"source\": \"iana\"\n  },\n  \"video/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/h261\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h261\"]\n  },\n  \"video/h263\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h263\"]\n  },\n  \"video/h263-1998\": {\n    \"source\": \"iana\"\n  },\n  \"video/h263-2000\": {\n    \"source\": \"iana\"\n  },\n  \"video/h264\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h264\"]\n  },\n  \"video/h264-rcdo\": {\n    \"source\": \"iana\"\n  },\n  \"video/h264-svc\": {\n    \"source\": \"iana\"\n  },\n  \"video/h265\": {\n    \"source\": \"iana\"\n  },\n  \"video/iso.segment\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m4s\"]\n  },\n  \"video/jpeg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jpgv\"]\n  },\n  \"video/jpeg2000\": {\n    \"source\": \"iana\"\n  },\n  \"video/jpm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"jpm\",\"jpgm\"]\n  },\n  \"video/jxsv\": {\n    \"source\": \"iana\"\n  },\n  \"video/mj2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mj2\",\"mjp2\"]\n  },\n  \"video/mp1s\": {\n    \"source\": \"iana\"\n  },\n  \"video/mp2p\": {\n    \"source\": \"iana\"\n  },\n  \"video/mp2t\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ts\"]\n  },\n  \"video/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mp4\",\"mp4v\",\"mpg4\"]\n  },\n  \"video/mp4v-es\": {\n    \"source\": \"iana\"\n  },\n  \"video/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]\n  },\n  \"video/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"video/mpv\": {\n    \"source\": \"iana\"\n  },\n  \"video/nv\": {\n    \"source\": \"iana\"\n  },\n  \"video/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogv\"]\n  },\n  \"video/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/pointer\": {\n    \"source\": \"iana\"\n  },\n  \"video/quicktime\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"qt\",\"mov\"]\n  },\n  \"video/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/raw\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"video/scip\": {\n    \"source\": \"iana\"\n  },\n  \"video/smpte291\": {\n    \"source\": \"iana\"\n  },\n  \"video/smpte292m\": {\n    \"source\": \"iana\"\n  },\n  \"video/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/vc1\": {\n    \"source\": \"iana\"\n  },\n  \"video/vc2\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.cctv\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dece.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvh\",\"uvvh\"]\n  },\n  \"video/vnd.dece.mobile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvm\",\"uvvm\"]\n  },\n  \"video/vnd.dece.mp4\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dece.pd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvp\",\"uvvp\"]\n  },\n  \"video/vnd.dece.sd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvs\",\"uvvs\"]\n  },\n  \"video/vnd.dece.video\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvv\",\"uvvv\"]\n  },\n  \"video/vnd.directv.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.directv.mpeg-tts\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dlna.mpeg-tts\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dvb.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dvb\"]\n  },\n  \"video/vnd.fvt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fvt\"]\n  },\n  \"video/vnd.hns.video\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-1010\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-2005\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-1010\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-2005\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.ttsavc\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.ttsmpeg2\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.motorola.video\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.motorola.videop\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxu\",\"m4u\"]\n  },\n  \"video/vnd.ms-playready.media.pyv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pyv\"]\n  },\n  \"video/vnd.nokia.interleaved-multimedia\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.nokia.mp4vr\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.nokia.videovoip\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.objectvideo\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.radgamettools.bink\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.radgamettools.smacker\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.mpeg1\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.mpeg4\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.swf\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealedmedia.softseal.mov\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.uvvu.mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvu\",\"uvvu\"]\n  },\n  \"video/vnd.vivo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"viv\"]\n  },\n  \"video/vnd.youtube.yt\": {\n    \"source\": \"iana\"\n  },\n  \"video/vp8\": {\n    \"source\": \"iana\"\n  },\n  \"video/vp9\": {\n    \"source\": \"iana\"\n  },\n  \"video/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"webm\"]\n  },\n  \"video/x-f4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f4v\"]\n  },\n  \"video/x-fli\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fli\"]\n  },\n  \"video/x-flv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"flv\"]\n  },\n  \"video/x-m4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m4v\"]\n  },\n  \"video/x-matroska\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"mkv\",\"mk3d\",\"mks\"]\n  },\n  \"video/x-mng\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mng\"]\n  },\n  \"video/x-ms-asf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"asf\",\"asx\"]\n  },\n  \"video/x-ms-vob\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vob\"]\n  },\n  \"video/x-ms-wm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wm\"]\n  },\n  \"video/x-ms-wmv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"wmv\"]\n  },\n  \"video/x-ms-wmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmx\"]\n  },\n  \"video/x-ms-wvx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wvx\"]\n  },\n  \"video/x-msvideo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"avi\"]\n  },\n  \"video/x-sgi-movie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"movie\"]\n  },\n  \"video/x-smv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smv\"]\n  },\n  \"x-conference/x-cooltalk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ice\"]\n  },\n  \"x-shader/x-fragment\": {\n    \"compressible\": true\n  },\n  \"x-shader/x-vertex\": {\n    \"compressible\": true\n  }\n}\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n","var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n","// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n","var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n","// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n","var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n","var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n","module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n","// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n","var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err) {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    request.setHeader('Content-Length', length);\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n","import { JsonSerializer } from './types.dom'\n\nexport const defaultJsonSerializer: JsonSerializer = {\n  parse: JSON.parse,\n  stringify: JSON.stringify,\n}\n","import { isExtractableFile, extractFiles, ExtractableFile } from 'extract-files'\nimport FormDataNode from 'form-data'\nimport { defaultJsonSerializer } from './defaultJsonSerializer'\n\nimport { Variables } from './types'\n\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\nconst isExtractableFileEnhanced = (value: any): value is ExtractableFile | { pipe: Function } =>\n  isExtractableFile(value) ||\n  (value !== null && typeof value === 'object' && typeof value.pipe === 'function')\n\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\nexport default function createRequestBody(\n  query: string | string[],\n  variables?: Variables | Variables[],\n  operationName?: string,\n  jsonSerializer = defaultJsonSerializer\n): string | FormData {\n  const { clone, files } = extractFiles({ query, variables, operationName }, '', isExtractableFileEnhanced)\n\n  if (files.size === 0) {\n    if (!Array.isArray(query)) {\n      return jsonSerializer.stringify(clone)\n    }\n\n    if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n      throw new Error('Cannot create request body with given variable type, array expected')\n    }\n\n    // Batch support\n    const payload = query.reduce<{ query: string; variables: Variables | undefined }[]>(\n      (accu, currentQuery, index) => {\n        accu.push({ query: currentQuery, variables: variables ? variables[index] : undefined })\n        return accu\n      },\n      []\n    )\n\n    return jsonSerializer.stringify(payload)\n  }\n\n  const Form = typeof FormData === 'undefined' ? FormDataNode : FormData\n\n  const form = new Form()\n\n  form.append('operations', jsonSerializer.stringify(clone))\n\n  const map: { [key: number]: string[] } = {}\n  let i = 0\n  files.forEach((paths) => {\n    map[++i] = paths\n  })\n  form.append('map', jsonSerializer.stringify(map))\n\n  i = 0\n  files.forEach((paths, file) => {\n    form.append(`${++i}`, file as any)\n  })\n\n  return form as FormData\n}\n","import {\n  BatchRequestDocument,\n  BatchRequestsOptions,\n  RawRequestOptions,\n  RequestDocument,\n  RequestOptions,\n  BatchRequestsExtendedOptions,\n  RawRequestExtendedOptions,\n  RequestExtendedOptions,\n  Variables,\n} from './types'\nimport * as Dom from './types.dom'\n\nexport function parseRequestArgs<V = Variables>(\n  documentOrOptions: RequestDocument | RequestOptions<V>,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RequestOptions<V> {\n  return (documentOrOptions as RequestOptions<V>).document\n    ? (documentOrOptions as RequestOptions<V>)\n    : ({\n        document: documentOrOptions as RequestDocument,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RequestOptions<V>)\n}\n\nexport function parseRawRequestArgs<V = Variables>(\n  queryOrOptions: string | RawRequestOptions<V>,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RawRequestOptions<V> {\n  return (queryOrOptions as RawRequestOptions<V>).query\n    ? (queryOrOptions as RawRequestOptions<V>)\n    : {\n        query: queryOrOptions as string,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseBatchRequestArgs<V = Variables>(\n  documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>,\n  requestHeaders?: Dom.RequestInit['headers']\n): BatchRequestsOptions<V> {\n  return (documentsOrOptions as BatchRequestsOptions<V>).documents\n    ? (documentsOrOptions as BatchRequestsOptions<V>)\n    : {\n        documents: documentsOrOptions as BatchRequestDocument<V>[],\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseRequestExtendedArgs<V = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V>,\n  document?: RequestDocument,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RequestExtendedOptions<V> {\n  return (urlOrOptions as RequestExtendedOptions<V>).document\n    ? (urlOrOptions as RequestExtendedOptions<V>)\n    : ({\n        url: urlOrOptions as string,\n        document: document as RequestDocument,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      } as unknown as RequestExtendedOptions<V>)\n}\n\nexport function parseRawRequestExtendedArgs<V = Variables>(\n  urlOrOptions: string | RawRequestExtendedOptions<V>,\n  query?: string,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): RawRequestExtendedOptions<V> {\n  return (urlOrOptions as RawRequestExtendedOptions<V>).query\n    ? (urlOrOptions as RawRequestExtendedOptions<V>)\n    : {\n        url: urlOrOptions as string,\n        query: query as string,\n        variables: variables,\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n\nexport function parseBatchRequestsExtendedArgs<V = Variables>(\n  urlOrOptions: string | BatchRequestsExtendedOptions<V>,\n  documents?: BatchRequestDocument<V>[],\n  requestHeaders?: Dom.RequestInit['headers']\n): BatchRequestsExtendedOptions<V> {\n  return (urlOrOptions as BatchRequestsExtendedOptions<V>).documents\n    ? (urlOrOptions as BatchRequestsExtendedOptions<V>)\n    : {\n        url: urlOrOptions as string,\n        documents: documents as BatchRequestDocument<V>[],\n        requestHeaders: requestHeaders,\n        signal: undefined,\n      }\n}\n","import { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport { DocumentNode } from 'graphql/language/ast'\nimport type { GraphQLError } from 'graphql/error/GraphQLError'\nimport * as Dom from './types.dom'\n\nexport type { GraphQLError }\n\nexport type Variables = { [key: string]: any }\n\nexport type RemoveIndex<T> = {\n  [K in keyof T as string extends K ? never : number extends K ? never : K]: T[K]\n}\n\nexport interface GraphQLResponse<T = any> {\n  data?: T\n  errors?: GraphQLError[]\n  extensions?: any\n  status: number\n  [key: string]: any\n}\n\nexport interface GraphQLRequestContext<V = Variables> {\n  query: string | string[]\n  variables?: V\n}\n\nexport class ClientError extends Error {\n  response: GraphQLResponse\n  request: GraphQLRequestContext\n\n  constructor(response: GraphQLResponse, request: GraphQLRequestContext) {\n    const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n      response,\n      request,\n    })}`\n\n    super(message)\n\n    Object.setPrototypeOf(this, ClientError.prototype)\n\n    this.response = response\n    this.request = request\n\n    // this is needed as Safari doesn't support .captureStackTrace\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, ClientError)\n    }\n  }\n\n  private static extractMessage(response: GraphQLResponse): string {\n    try {\n      return response.errors![0].message\n    } catch (e) {\n      return `GraphQL Error (Code: ${response.status})`\n    }\n  }\n}\n\nexport type MaybeFunction<T> = T | (() => T)\n\nexport type RequestDocument = string | DocumentNode\n\nexport interface Response<T> {\n  data: T\n  extensions?: any\n  headers: Dom.Headers\n  errors?: GraphQLError[]\n  status: number\n}\n\nexport type PatchedRequestInit = Omit<Dom.RequestInit, 'headers'> & {\n  headers?: MaybeFunction<Dom.RequestInit['headers']>\n  requestMiddleware?: (request: Dom.RequestInit) => Dom.RequestInit | Promise<Dom.RequestInit>\n  responseMiddleware?: (response: Response<unknown> | Error) => void\n}\n\nexport type BatchRequestDocument<V = Variables> = {\n  document: RequestDocument\n  variables?: V\n}\n\nexport type RawRequestOptions<V = Variables> = {\n  query: string\n  variables?: V\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n}\n\nexport type RequestOptions<V = Variables, T = any> = {\n  document: RequestDocument | TypedDocumentNode<T, V>\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n} & (V extends Record<any, never>\n  ? { variables?: V }\n  : keyof RemoveIndex<V> extends never\n  ? { variables?: V }\n  : { variables: V })\n\nexport type BatchRequestsOptions<V = Variables> = {\n  documents: BatchRequestDocument<V>[]\n  requestHeaders?: Dom.RequestInit['headers']\n  signal?: Dom.RequestInit['signal']\n}\n\nexport type RequestExtendedOptions<V = Variables, T = any> = { url: string } & RequestOptions<V, T>\n\nexport type RawRequestExtendedOptions<V = Variables> = { url: string } & RawRequestOptions<V>\n\nexport type BatchRequestsExtendedOptions<V = Variables> = { url: string } & BatchRequestsOptions<V>\n","import { ClientError, RequestDocument, Variables } from './types'\nimport * as Dom from './types.dom'\nimport { resolveRequestDocument } from '.'\n\nconst CONNECTION_INIT = 'connection_init'\nconst CONNECTION_ACK = 'connection_ack'\nconst PING = 'ping'\nconst PONG = 'pong'\nconst SUBSCRIBE = 'subscribe'\nconst NEXT = 'next'\nconst ERROR = 'error'\nconst COMPLETE = 'complete'\n\ntype MessagePayload = { [key: string]: any }\n\ntype SubscribePayload<V = Variables, E = any> = {\n  operationName?: string | null\n  query: string\n  variables?: V\n  extensions?: E\n}\n\nclass GraphQLWebSocketMessage<A = MessagePayload> {\n  private _type: string\n  private _id?: string\n  private _payload?: A\n\n  public get type(): string {\n    return this._type\n  }\n  public get id(): string | undefined {\n    return this._id\n  }\n  public get payload(): A | undefined {\n    return this._payload\n  }\n\n  constructor(type: string, payload?: A, id?: string) {\n    this._type = type\n    this._payload = payload\n    this._id = id\n  }\n\n  public get text(): string {\n    const result: any = { type: this.type }\n    if (this.id != null && this.id != undefined) result.id = this.id\n    if (this.payload != null && this.payload != undefined) result.payload = this.payload\n    return JSON.stringify(result)\n  }\n\n  static parse<A>(data: string, f: (payload: any) => A): GraphQLWebSocketMessage<A> {\n    const { type, payload, id }: { type: string; payload: any; id: string } = JSON.parse(data)\n    return new GraphQLWebSocketMessage(type, f(payload), id)\n  }\n}\n\nexport type SocketHandler = {\n  onInit?: <T>() => Promise<T>\n  onAcknowledged?: <A>(payload?: A) => Promise<void>\n  onPing?: <In, Out>(payload: In) => Promise<Out>\n  onPong?: <T>(payload: T) => any\n  onClose?: () => any\n}\n\nexport type UnsubscribeCallback = () => void\n\nexport interface GraphQLSubscriber<T, E = unknown> {\n  next?(data: T, extensions?: E): void\n  error?(errorValue: ClientError): void\n  complete?(): void\n}\n\ntype SubscriptionRecord = {\n  subscriber: GraphQLSubscriber<unknown, unknown>\n  query: string\n  variables: Variables\n}\n\ntype SocketState = {\n  acknowledged: boolean\n  lastRequestId: number\n  subscriptions: { [key: string]: SubscriptionRecord }\n}\n\nexport class GraphQLWebSocketClient {\n  static PROTOCOL: string = 'graphql-transport-ws'\n\n  private socket: WebSocket\n  private socketState: SocketState = { acknowledged: false, lastRequestId: 0, subscriptions: {} }\n\n  constructor(socket: WebSocket, { onInit, onAcknowledged, onPing, onPong }: SocketHandler) {\n    this.socket = socket\n\n    socket.onopen = async (e) => {\n      this.socketState.acknowledged = false\n      this.socketState.subscriptions = {}\n      socket.send(ConnectionInit(onInit ? await onInit() : null).text)\n    }\n\n    socket.onclose = (e) => {\n      this.socketState.acknowledged = false\n      this.socketState.subscriptions = {}\n    }\n\n    socket.onerror = (e) => {\n      console.error(e)\n    }\n\n    socket.onmessage = (e) => {\n      try {\n        const message = parseMessage(e.data)\n        switch (message.type) {\n          case CONNECTION_ACK: {\n            if (this.socketState.acknowledged) {\n              console.warn('Duplicate CONNECTION_ACK message ignored')\n            } else {\n              this.socketState.acknowledged = true\n              if (onAcknowledged) onAcknowledged(message.payload)\n            }\n            return\n          }\n          case PING: {\n            if (onPing) onPing(message.payload).then((r) => socket.send(Pong(r).text))\n            else socket.send(Pong(null).text)\n            return\n          }\n          case PONG: {\n            if (onPong) onPong(message.payload)\n            return\n          }\n        }\n\n        if (!this.socketState.acknowledged) {\n          // Web-socket connection not acknowledged\n          return\n        }\n\n        if (message.id === undefined || message.id === null || !this.socketState.subscriptions[message.id]) {\n          // No subscription identifer or subscription indentifier is not found\n          return\n        }\n        const { query, variables, subscriber } = this.socketState.subscriptions[message.id]\n\n        switch (message.type) {\n          case NEXT: {\n            if (!message.payload.errors && message.payload.data) {\n              subscriber.next && subscriber.next(message.payload.data)\n            }\n            if (message.payload.errors) {\n              subscriber.error &&\n                subscriber.error(new ClientError({ ...message.payload, status: 200 }, { query, variables }))\n            } else {\n            }\n            return\n          }\n\n          case ERROR: {\n            subscriber.error &&\n              subscriber.error(\n                new ClientError({ errors: message.payload, status: 200 }, { query, variables })\n              )\n            return\n          }\n\n          case COMPLETE: {\n            subscriber.complete && subscriber.complete()\n            delete this.socketState.subscriptions[message.id]\n            return\n          }\n        }\n      } catch (e) {\n        // Unexpected errors while handling graphql-ws message\n        console.error(e)\n        socket.close(1006)\n      }\n      socket.close(4400, 'Unknown graphql-ws message.')\n    }\n  }\n\n  private makeSubscribe<T, V, E>(\n    query: string,\n    operationName: string | undefined,\n    variables: V,\n    subscriber: GraphQLSubscriber<T, E>\n  ): UnsubscribeCallback {\n    const subscriptionId = (this.socketState.lastRequestId++).toString()\n    this.socketState.subscriptions[subscriptionId] = { query, variables, subscriber }\n    this.socket.send(Subscribe(subscriptionId, { query, operationName, variables }).text)\n    return () => {\n      this.socket.send(Complete(subscriptionId).text)\n      delete this.socketState.subscriptions[subscriptionId]\n    }\n  }\n\n  rawRequest<T = any, V = Variables, E = any>(\n    query: string,\n    variables?: V\n  ): Promise<{ data: T; extensions?: E }> {\n    return new Promise<{ data: T; extensions?: E; headers?: Dom.Headers; status?: number }>(\n      (resolve, reject) => {\n        let result: { data: T; extensions?: E }\n        this.rawSubscribe(\n          query,\n          {\n            next: (data: T, extensions: E) => (result = { data, extensions }),\n            error: reject,\n            complete: () => resolve(result),\n          },\n          variables\n        )\n      }\n    )\n  }\n\n  request<T = any, V = Variables>(document: RequestDocument, variables?: V): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      let result: T\n      this.subscribe(\n        document,\n        {\n          next: (data: T) => (result = data),\n          error: reject,\n          complete: () => resolve(result),\n        },\n        variables\n      )\n    })\n  }\n\n  subscribe<T = any, V = Variables, E = any>(\n    document: RequestDocument,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    const { query, operationName } = resolveRequestDocument(document)\n    return this.makeSubscribe(query, operationName, variables, subscriber)\n  }\n\n  rawSubscribe<T = any, V = Variables, E = any>(\n    query: string,\n    subscriber: GraphQLSubscriber<T, E>,\n    variables?: V\n  ): UnsubscribeCallback {\n    return this.makeSubscribe(query, undefined, variables, subscriber)\n  }\n\n  ping(payload: Variables) {\n    this.socket.send(Ping(payload).text)\n  }\n\n  close() {\n    this.socket.close(1000)\n  }\n}\n\n// Helper functions\n\nfunction parseMessage<A = any>(data: string, f: (payload: any) => A = (a) => a): GraphQLWebSocketMessage<A> {\n  const m = GraphQLWebSocketMessage.parse<A>(data, f)\n  return m\n}\n\nfunction ConnectionInit<A>(payload?: A) {\n  return new GraphQLWebSocketMessage(CONNECTION_INIT, payload)\n}\n\nfunction Ping(payload: any) {\n  return new GraphQLWebSocketMessage(PING, payload, undefined)\n}\nfunction Pong(payload: any) {\n  return new GraphQLWebSocketMessage(PONG, payload, undefined)\n}\n\nfunction Subscribe(id: string, payload: SubscribePayload) {\n  return new GraphQLWebSocketMessage(SUBSCRIBE, payload, id)\n}\n\nfunction Complete(id: string) {\n  return new GraphQLWebSocketMessage(COMPLETE, undefined, id)\n}\n","import crossFetch, * as CrossFetch from 'cross-fetch'\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport { OperationDefinitionNode, DocumentNode } from 'graphql/language/ast'\n\nimport { parse } from 'graphql/language/parser'\nimport { print } from 'graphql/language/printer'\nimport createRequestBody from './createRequestBody'\nimport { defaultJsonSerializer } from './defaultJsonSerializer'\nimport {\n  parseBatchRequestArgs,\n  parseRawRequestArgs,\n  parseRequestArgs,\n  parseBatchRequestsExtendedArgs,\n  parseRawRequestExtendedArgs,\n  parseRequestExtendedArgs,\n} from './parseArgs'\nimport {\n  BatchRequestDocument,\n  BatchRequestsOptions,\n  ClientError,\n  RawRequestOptions,\n  RequestDocument,\n  RequestOptions,\n  BatchRequestsExtendedOptions,\n  RawRequestExtendedOptions,\n  RequestExtendedOptions,\n  Variables,\n  PatchedRequestInit,\n  MaybeFunction,\n  Response,\n  RemoveIndex,\n} from './types'\nimport * as Dom from './types.dom'\n\nexport {\n  BatchRequestDocument,\n  BatchRequestsOptions,\n  BatchRequestsExtendedOptions,\n  ClientError,\n  RawRequestOptions,\n  RawRequestExtendedOptions,\n  RequestDocument,\n  RequestOptions,\n  RequestExtendedOptions,\n  Variables,\n}\n\n/**\n * Convert the given headers configuration into a plain object.\n */\nconst resolveHeaders = (headers: Dom.RequestInit['headers']): Record<string, string> => {\n  let oHeaders: Record<string, string> = {}\n  if (headers) {\n    if (\n      (typeof Headers !== 'undefined' && headers instanceof Headers) ||\n      (CrossFetch && CrossFetch.Headers && headers instanceof CrossFetch.Headers)\n    ) {\n      oHeaders = HeadersInstanceToPlainObject(headers)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(([name, value]) => {\n        oHeaders[name] = value\n      })\n    } else {\n      oHeaders = headers as Record<string, string>\n    }\n  }\n\n  return oHeaders\n}\n\n/**\n * Clean a GraphQL document to send it via a GET query\n *\n * @param {string} str GraphQL query\n * @returns {string} Cleaned query\n */\nconst queryCleanner = (str: string): string => str.replace(/([\\s,]|#[^\\n\\r]+)+/g, ' ').trim()\n\ntype TBuildGetQueryParams<V> =\n  | {\n      query: string\n      variables: V | undefined\n      operationName: string | undefined\n      jsonSerializer: Dom.JsonSerializer\n    }\n  | {\n      query: string[]\n      variables: V[] | undefined\n      operationName: undefined\n      jsonSerializer: Dom.JsonSerializer\n    }\n\n/**\n * Create query string for GraphQL request\n *\n * @param {object} param0 -\n *\n * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request\n * @param {string|undefined} param0.operationName the GraphQL operation name\n * @param {any|any[]} param0.variables the GraphQL variables to use\n */\nconst buildGetQueryParams = <V>({\n  query,\n  variables,\n  operationName,\n  jsonSerializer,\n}: TBuildGetQueryParams<V>): string => {\n  if (!Array.isArray(query)) {\n    const search: string[] = [`query=${encodeURIComponent(queryCleanner(query))}`]\n\n    if (variables) {\n      search.push(`variables=${encodeURIComponent(jsonSerializer.stringify(variables))}`)\n    }\n\n    if (operationName) {\n      search.push(`operationName=${encodeURIComponent(operationName)}`)\n    }\n\n    return search.join('&')\n  }\n\n  if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n    throw new Error('Cannot create query with given variable type, array expected')\n  }\n\n  // Batch support\n  const payload = query.reduce<{ query: string; variables: string | undefined }[]>(\n    (accu, currentQuery, index) => {\n      accu.push({\n        query: queryCleanner(currentQuery),\n        variables: variables ? jsonSerializer.stringify(variables[index]) : undefined,\n      })\n      return accu\n    },\n    []\n  )\n\n  return `query=${encodeURIComponent(jsonSerializer.stringify(payload))}`\n}\n\n/**\n * Fetch data using POST method\n */\nconst post = async <V = Variables>({\n  url,\n  query,\n  variables,\n  operationName,\n  headers,\n  fetch,\n  fetchOptions,\n  middleware,\n}: {\n  url: string\n  query: string | string[]\n  fetch: any\n  fetchOptions: Dom.RequestInit\n  variables?: V\n  headers?: Dom.RequestInit['headers']\n  operationName?: string\n  middleware?: (request: Dom.RequestInit) => Dom.RequestInit | Promise<Dom.RequestInit>\n}) => {\n  const body = createRequestBody(query, variables, operationName, fetchOptions.jsonSerializer)\n\n  let options: Dom.RequestInit = {\n    method: 'POST',\n    headers: {\n      ...(typeof body === 'string' ? { 'Content-Type': 'application/json' } : {}),\n      ...headers,\n    },\n    body,\n    ...fetchOptions,\n  }\n  if (middleware) {\n    options = await Promise.resolve(middleware(options))\n  }\n  return await fetch(url, options)\n}\n\n/**\n * Fetch data using GET method\n */\nconst get = async <V = Variables>({\n  url,\n  query,\n  variables,\n  operationName,\n  headers,\n  fetch,\n  fetchOptions,\n  middleware,\n}: {\n  url: string\n  query: string | string[]\n  fetch: any\n  fetchOptions: Dom.RequestInit\n  variables?: V\n  headers?: HeadersInit\n  operationName?: string\n  middleware?: (request: Dom.RequestInit) => Dom.RequestInit | Promise<Dom.RequestInit>\n}) => {\n  const queryParams = buildGetQueryParams<V>({\n    query,\n    variables,\n    operationName,\n    jsonSerializer: fetchOptions.jsonSerializer,\n  } as TBuildGetQueryParams<V>)\n\n  let options: Dom.RequestInit = {\n    method: 'GET',\n    headers,\n    ...fetchOptions,\n  }\n  if (middleware) {\n    options = await Promise.resolve(middleware(options))\n  }\n  return await fetch(`${url}?${queryParams}`, options)\n}\n\n/**\n * GraphQL Client.\n */\nexport class GraphQLClient {\n  constructor(private url: string, private readonly options: PatchedRequestInit = {}) {}\n\n  /**\n   * Send a GraphQL query to the server.\n   */\n  async rawRequest<T = any, V = Variables>(\n    query: string,\n    variables?: V,\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<Response<T>>\n  async rawRequest<T = any, V = Variables>(options: RawRequestOptions<V>): Promise<Response<T>>\n  async rawRequest<T = any, V = Variables>(\n    queryOrOptions: string | RawRequestOptions<V>,\n    variables?: V,\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<Response<T>> {\n    const rawRequestOptions = parseRawRequestArgs<V>(queryOrOptions, variables, requestHeaders)\n\n    let {\n      headers,\n      fetch = crossFetch,\n      method = 'POST',\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.options\n    let { url } = this\n    if (rawRequestOptions.signal !== undefined) {\n      fetchOptions.signal = rawRequestOptions.signal\n    }\n\n    const { operationName } = resolveRequestDocument(rawRequestOptions.query)\n\n    return makeRequest<T, V>({\n      url,\n      query: rawRequestOptions.query,\n      variables: rawRequestOptions.variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(rawRequestOptions.requestHeaders),\n      },\n      operationName,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  /**\n   * Send a GraphQL document to the server.\n   */\n  request<T = any, V = Variables>(\n    document: RequestDocument | TypedDocumentNode<T, V>,\n    ..._variablesAndRequestHeaders: V extends Record<any, never> // do we have explicitly no variables allowed?\n      ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n      : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n      ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n      : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n  ): Promise<T>\n  request<T = any, V = Variables>(options: RequestOptions<V>): Promise<T>\n  request<T = any, V = Variables>(\n    documentOrOptions: RequestDocument | TypedDocumentNode<T, V> | RequestOptions<V>,\n    ...variablesAndRequestHeaders: V extends Record<any, never> // do we have explicitly no variables allowed?\n      ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n      : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n      ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n      : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n  ): Promise<T> {\n    const [variables, requestHeaders] = variablesAndRequestHeaders\n    const requestOptions = parseRequestArgs<V>(documentOrOptions, variables, requestHeaders)\n\n    let {\n      headers,\n      fetch = crossFetch,\n      method = 'POST',\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.options\n    let { url } = this\n    if (requestOptions.signal !== undefined) {\n      fetchOptions.signal = requestOptions.signal\n    }\n\n    const { query, operationName } = resolveRequestDocument(requestOptions.document)\n\n    return makeRequest<T, V>({\n      url,\n      query,\n      variables: requestOptions.variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(requestOptions.requestHeaders),\n      },\n      operationName,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response.data\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  /**\n   * Send GraphQL documents in batch to the server.\n   */\n  batchRequests<T extends any = any, V = Variables>(\n    documents: BatchRequestDocument<V>[],\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<T>\n  batchRequests<T = any, V = Variables>(options: BatchRequestsOptions<V>): Promise<T>\n  batchRequests<T = any, V = Variables>(\n    documentsOrOptions: BatchRequestDocument<V>[] | BatchRequestsOptions<V>,\n    requestHeaders?: Dom.RequestInit['headers']\n  ): Promise<T> {\n    const batchRequestOptions = parseBatchRequestArgs<V>(documentsOrOptions, requestHeaders)\n\n    let {\n      headers,\n      fetch = crossFetch,\n      method = 'POST',\n      requestMiddleware,\n      responseMiddleware,\n      ...fetchOptions\n    } = this.options\n    let { url } = this\n    if (batchRequestOptions.signal !== undefined) {\n      fetchOptions.signal = batchRequestOptions.signal\n    }\n\n    const queries = batchRequestOptions.documents.map(\n      ({ document }) => resolveRequestDocument(document).query\n    )\n    const variables = batchRequestOptions.documents.map(({ variables }) => variables)\n\n    return makeRequest<T, (V | undefined)[]>({\n      url,\n      query: queries,\n      variables,\n      headers: {\n        ...resolveHeaders(callOrIdentity(headers)),\n        ...resolveHeaders(batchRequestOptions.requestHeaders),\n      },\n      operationName: undefined,\n      fetch,\n      method,\n      fetchOptions,\n      middleware: requestMiddleware,\n    })\n      .then((response) => {\n        if (responseMiddleware) {\n          responseMiddleware(response)\n        }\n        return response.data\n      })\n      .catch((error) => {\n        if (responseMiddleware) {\n          responseMiddleware(error)\n        }\n        throw error\n      })\n  }\n\n  setHeaders(headers: Dom.RequestInit['headers']): GraphQLClient {\n    this.options.headers = headers\n    return this\n  }\n\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n  setHeader(key: string, value: string): GraphQLClient {\n    const { headers } = this.options\n\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-ignore\n      headers[key] = value\n    } else {\n      this.options.headers = { [key]: value }\n    }\n\n    return this\n  }\n\n  /**\n   * Change the client endpoint. All subsequent requests will send to this endpoint.\n   */\n  setEndpoint(value: string): GraphQLClient {\n    this.url = value\n    return this\n  }\n}\n\nasync function makeRequest<T = any, V = Variables>({\n  url,\n  query,\n  variables,\n  headers,\n  operationName,\n  fetch,\n  method = 'POST',\n  fetchOptions,\n  middleware,\n}: {\n  url: string\n  query: string | string[]\n  variables?: V\n  headers?: Dom.RequestInit['headers']\n  operationName?: string\n  fetch: any\n  method: string\n  fetchOptions: Dom.RequestInit\n  middleware?: (request: Dom.RequestInit) => Dom.RequestInit | Promise<Dom.RequestInit>\n}): Promise<Response<T>> {\n  const fetcher = method.toUpperCase() === 'POST' ? post : get\n  const isBathchingQuery = Array.isArray(query)\n\n  const response = await fetcher({\n    url,\n    query,\n    variables,\n    operationName,\n    headers,\n    fetch,\n    fetchOptions,\n    middleware,\n  })\n  const result = await getResult(response, fetchOptions.jsonSerializer)\n\n  const successfullyReceivedData =\n    isBathchingQuery && Array.isArray(result) ? !result.some(({ data }) => !data) : !!result.data\n\n  const successfullyPassedErrorPolicy =\n    !result.errors || fetchOptions.errorPolicy === 'all' || fetchOptions.errorPolicy === 'ignore'\n\n  if (response.ok && successfullyPassedErrorPolicy && successfullyReceivedData) {\n    const { headers, status } = response\n\n    const { errors, ...rest } = result\n    const data = fetchOptions.errorPolicy === 'ignore' ? rest : result\n\n    return {\n      ...(isBathchingQuery ? { data } : data),\n      headers,\n      status,\n    }\n  } else {\n    const errorResult = typeof result === 'string' ? { error: result } : result\n    throw new ClientError(\n      { ...errorResult, status: response.status, headers: response.headers },\n      { query, variables }\n    )\n  }\n}\n\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nexport async function rawRequest<T = any, V = Variables>(\n  url: string,\n  query: string,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): Promise<Response<T>>\nexport async function rawRequest<T = any, V = Variables>(\n  options: RawRequestExtendedOptions<V>\n): Promise<Response<T>>\nexport async function rawRequest<T = any, V = Variables>(\n  urlOrOptions: string | RawRequestExtendedOptions<V>,\n  query?: string,\n  variables?: V,\n  requestHeaders?: Dom.RequestInit['headers']\n): Promise<Response<T>> {\n  const requestOptions = parseRawRequestExtendedArgs<V>(urlOrOptions, query, variables, requestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.rawRequest<T, V>({\n    ...requestOptions,\n  })\n}\n\n/**\n * Send a GraphQL Document to the GraphQL server for execution.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nexport async function request<T = any, V = Variables>(\n  url: string,\n  document: RequestDocument | TypedDocumentNode<T, V>,\n  ..._variablesAndRequestHeaders: V extends Record<any, never> // do we have explicitly no variables allowed?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n): Promise<T>\nexport async function request<T = any, V = Variables>(options: RequestExtendedOptions<V, T>): Promise<T>\nexport async function request<T = any, V = Variables>(\n  urlOrOptions: string | RequestExtendedOptions<V, T>,\n  document?: RequestDocument | TypedDocumentNode<T, V>,\n  ...variablesAndRequestHeaders: V extends Record<any, never> // do we have explicitly no variables allowed?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : keyof RemoveIndex<V> extends never // do we get an empty variables object?\n    ? [variables?: V, requestHeaders?: Dom.RequestInit['headers']]\n    : [variables: V, requestHeaders?: Dom.RequestInit['headers']]\n): Promise<T> {\n  const [variables, requestHeaders] = variablesAndRequestHeaders\n  const requestOptions = parseRequestExtendedArgs<V>(urlOrOptions, document, variables, requestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.request<T, V>({\n    ...requestOptions,\n  })\n}\n\n/**\n * Send a batch of GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await batchRequests('https://foo.bar/graphql', [\n * {\n *  query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * },\n * {\n *   query: `\n *   {\n *     query {\n *       users\n *     }\n *   }`\n * }])\n *\n * // You can also pass a GraphQL DocumentNode as query. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])\n * ```\n */\nexport async function batchRequests<T = any, V = Variables>(\n  url: string,\n  documents: BatchRequestDocument<V>[],\n  requestHeaders?: Dom.RequestInit['headers']\n): Promise<T>\nexport async function batchRequests<T = any, V = Variables>(\n  options: BatchRequestsExtendedOptions<V>\n): Promise<T>\nexport async function batchRequests<T = any, V = Variables>(\n  urlOrOptions: string | BatchRequestsExtendedOptions<V>,\n  documents?: BatchRequestDocument<V>[],\n  requestHeaders?: Dom.RequestInit['headers']\n): Promise<T> {\n  const requestOptions = parseBatchRequestsExtendedArgs<V>(urlOrOptions, documents, requestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.batchRequests<T, V>({ ...requestOptions })\n}\n\nexport default request\n\n/**\n * todo\n */\nasync function getResult(response: Dom.Response, jsonSerializer = defaultJsonSerializer): Promise<any> {\n  let contentType: string | undefined\n\n  response.headers.forEach((value, key) => {\n    if (key.toLowerCase() === 'content-type') {\n      contentType = value\n    }\n  })\n\n  if (contentType && contentType.toLowerCase().startsWith('application/json')) {\n    return jsonSerializer.parse(await response.text())\n  } else {\n    return response.text()\n  }\n}\n/**\n * helpers\n */\n\nfunction extractOperationName(document: DocumentNode): string | undefined {\n  let operationName = undefined\n\n  const operationDefinitions = document.definitions.filter(\n    (definition) => definition.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode[]\n\n  if (operationDefinitions.length === 1) {\n    operationName = operationDefinitions[0].name?.value\n  }\n\n  return operationName\n}\n\nexport function resolveRequestDocument(document: RequestDocument): { query: string; operationName?: string } {\n  if (typeof document === 'string') {\n    let operationName = undefined\n\n    try {\n      const parsedDocument = parse(document)\n      operationName = extractOperationName(parsedDocument)\n    } catch (err) {\n      // Failed parsing the document, the operationName will be undefined\n    }\n\n    return { query: document, operationName }\n  }\n\n  const operationName = extractOperationName(document)\n\n  return { query: print(document), operationName }\n}\n\nfunction callOrIdentity<T>(value: MaybeFunction<T>) {\n  return typeof value === 'function' ? (value as () => T)() : value\n}\n\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nexport function gql(chunks: TemplateStringsArray, ...variables: any[]): string {\n  return chunks.reduce(\n    (accumulator, chunk, index) => `${accumulator}${chunk}${index in variables ? variables[index] : ''}`,\n    ''\n  )\n}\n\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers: Dom.Response['headers']): Record<string, string> {\n  const o: any = {}\n  headers.forEach((v, k) => {\n    o[k] = v\n  })\n  return o\n}\n\nexport { GraphQLWebSocketClient } from './graphql-ws'\n","'use strict';\n\nlet wasm$1;\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); }\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm$1.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n*Adds two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction add(dst, lhs, rhs) {\n    const ret = wasm$1.add(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise ANDs two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction and(dst, lhs, rhs) {\n    const ret = wasm$1.and(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Divides two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction div(dst, lhs, rhs) {\n    const ret = wasm$1.div(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compares two registers for equality.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction eq(dst, lhs, rhs) {\n    const ret = wasm$1.eq(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Raises one register to the power of another.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction exp(dst, lhs, rhs) {\n    const ret = wasm$1.exp(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compares two registers for greater-than.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction gt(dst, lhs, rhs) {\n    const ret = wasm$1.gt(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compares two registers for less-than.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction lt(dst, lhs, rhs) {\n    const ret = wasm$1.lt(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The integer logarithm of a register.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction mlog(dst, lhs, rhs) {\n    const ret = wasm$1.mlog(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The integer root of a register.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction mroo(dst, lhs, rhs) {\n    const ret = wasm$1.mroo(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Modulo remainder of two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction mod_(dst, lhs, rhs) {\n    const ret = wasm$1.mod_(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy from one register to another.\n* @param {number} dst\n* @param {number} src\n* @returns {Instruction}\n*/\nfunction move_(dst, src) {\n    const ret = wasm$1.move_(dst, src);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Multiplies two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction mul(dst, lhs, rhs) {\n    const ret = wasm$1.mul(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise NOT a register.\n* @param {number} dst\n* @param {number} arg\n* @returns {Instruction}\n*/\nfunction not(dst, arg) {\n    const ret = wasm$1.not(dst, arg);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise ORs two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction or(dst, lhs, rhs) {\n    const ret = wasm$1.or(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Left shifts a register by a register.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction sll(dst, lhs, rhs) {\n    const ret = wasm$1.sll(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Right shifts a register by a register.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction srl(dst, lhs, rhs) {\n    const ret = wasm$1.srl(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Subtracts two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction sub(dst, lhs, rhs) {\n    const ret = wasm$1.sub(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise XORs two registers.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction xor(dst, lhs, rhs) {\n    const ret = wasm$1.xor(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Fused multiply-divide with arbitrary precision intermediate step.\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} divisor\n* @returns {Instruction}\n*/\nfunction mldv(dst, mul_lhs, mul_rhs, divisor) {\n    const ret = wasm$1.mldv(dst, mul_lhs, mul_rhs, divisor);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Return from context.\n* @param {number} value\n* @returns {Instruction}\n*/\nfunction ret(value) {\n    const ret = wasm$1.ret(value);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Return from context with data.\n* @param {number} addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction retd(addr, len) {\n    const ret = wasm$1.retd(addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Allocate a number of bytes from the heap.\n* @param {number} bytes\n* @returns {Instruction}\n*/\nfunction aloc(bytes) {\n    const ret = wasm$1.aloc(bytes);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Clear a variable number of bytes in memory.\n* @param {number} dst_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction mcl(dst_addr, len) {\n    const ret = wasm$1.mcl(dst_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy a variable number of bytes in memory.\n* @param {number} dst_addr\n* @param {number} src_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction mcp(dst_addr, src_addr, len) {\n    const ret = wasm$1.mcp(dst_addr, src_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compare bytes in memory.\n* @param {number} result\n* @param {number} lhs_addr\n* @param {number} rhs_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction meq(result, lhs_addr, rhs_addr, len) {\n    const ret = wasm$1.meq(result, lhs_addr, rhs_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get block header hash for height.\n* @param {number} dst\n* @param {number} heigth\n* @returns {Instruction}\n*/\nfunction bhsh(dst, heigth) {\n    const ret = wasm$1.bhsh(dst, heigth);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get current block height.\n* @param {number} dst\n* @returns {Instruction}\n*/\nfunction bhei(dst) {\n    const ret = wasm$1.bhei(dst);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Burns `amount` coins of the asset ID created from `sub_id` for the current contract.\n* @param {number} amount\n* @param {number} sub_id_addr\n* @returns {Instruction}\n*/\nfunction burn(amount, sub_id_addr) {\n    const ret = wasm$1.burn(amount, sub_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Call a contract.\n* @param {number} target_struct\n* @param {number} fwd_coins\n* @param {number} asset_id_addr\n* @param {number} fwd_gas\n* @returns {Instruction}\n*/\nfunction call(target_struct, fwd_coins, asset_id_addr, fwd_gas) {\n    const ret = wasm$1.call(target_struct, fwd_coins, asset_id_addr, fwd_gas);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy contract code for a contract.\n* @param {number} dst_addr\n* @param {number} contract_id_addr\n* @param {number} offset\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction ccp(dst_addr, contract_id_addr, offset, len) {\n    const ret = wasm$1.ccp(dst_addr, contract_id_addr, offset, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get code root of a contract.\n* @param {number} dst_addr\n* @param {number} contract_id_addr\n* @returns {Instruction}\n*/\nfunction croo(dst_addr, contract_id_addr) {\n    const ret = wasm$1.croo(dst_addr, contract_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get code size of a contract.\n* @param {number} dst\n* @param {number} contract_id_addr\n* @returns {Instruction}\n*/\nfunction csiz(dst, contract_id_addr) {\n    const ret = wasm$1.csiz(dst, contract_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get current block proposer's address.\n* @param {number} dst\n* @returns {Instruction}\n*/\nfunction cb(dst) {\n    const ret = wasm$1.cb(dst);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Load a contract's code as executable.\n* @param {number} contract_id_addr\n* @param {number} offset\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction ldc(contract_id_addr, offset, len) {\n    const ret = wasm$1.ldc(contract_id_addr, offset, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Log an event.\n* @param {number} a\n* @param {number} b\n* @param {number} c\n* @param {number} d\n* @returns {Instruction}\n*/\nfunction log(a, b, c, d) {\n    const ret = wasm$1.log(a, b, c, d);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Log data.\n* @param {number} a\n* @param {number} b\n* @param {number} addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction logd(a, b, addr, len) {\n    const ret = wasm$1.logd(a, b, addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Mints `amount` coins of the asset ID created from `sub_id` for the current contract.\n* @param {number} amount\n* @param {number} sub_id_addr\n* @returns {Instruction}\n*/\nfunction mint(amount, sub_id_addr) {\n    const ret = wasm$1.mint(amount, sub_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Halt execution, reverting state changes and returning a value.\n* @param {number} value\n* @returns {Instruction}\n*/\nfunction rvrt(value) {\n    const ret = wasm$1.rvrt(value);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Clear a series of slots from contract storage.\n* @param {number} key_addr\n* @param {number} status\n* @param {number} lenq\n* @returns {Instruction}\n*/\nfunction scwq(key_addr, status, lenq) {\n    const ret = wasm$1.scwq(key_addr, status, lenq);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Load a word from contract storage.\n* @param {number} dst\n* @param {number} status\n* @param {number} key_addr\n* @returns {Instruction}\n*/\nfunction srw(dst, status, key_addr) {\n    const ret = wasm$1.srw(dst, status, key_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Load a series of 32 byte slots from contract storage.\n* @param {number} dst_addr\n* @param {number} status\n* @param {number} key_addr\n* @param {number} lenq\n* @returns {Instruction}\n*/\nfunction srwq(dst_addr, status, key_addr, lenq) {\n    const ret = wasm$1.srwq(dst_addr, status, key_addr, lenq);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Store a word in contract storage.\n* @param {number} key_addr\n* @param {number} status\n* @param {number} value\n* @returns {Instruction}\n*/\nfunction sww(key_addr, status, value) {\n    const ret = wasm$1.sww(key_addr, status, value);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Store a series of 32 byte slots in contract storage.\n* @param {number} key_addr\n* @param {number} status\n* @param {number} src_addr\n* @param {number} lenq\n* @returns {Instruction}\n*/\nfunction swwq(key_addr, status, src_addr, lenq) {\n    const ret = wasm$1.swwq(key_addr, status, src_addr, lenq);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Transfer coins to a contract unconditionally.\n* @param {number} contract_id_addr\n* @param {number} amount\n* @param {number} asset_id_addr\n* @returns {Instruction}\n*/\nfunction tr(contract_id_addr, amount, asset_id_addr) {\n    const ret = wasm$1.tr(contract_id_addr, amount, asset_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Transfer coins to a variable output.\n* @param {number} contract_id_addr\n* @param {number} output_index\n* @param {number} amount\n* @param {number} asset_id_addr\n* @returns {Instruction}\n*/\nfunction tro(contract_id_addr, output_index, amount, asset_id_addr) {\n    const ret = wasm$1.tro(contract_id_addr, output_index, amount, asset_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The 64-byte public key (x, y) recovered from 64-byte signature on 32-byte message.\n* @param {number} dst_addr\n* @param {number} sig_addr\n* @param {number} msg_hash_addr\n* @returns {Instruction}\n*/\nfunction eck1(dst_addr, sig_addr, msg_hash_addr) {\n    const ret = wasm$1.eck1(dst_addr, sig_addr, msg_hash_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The 64-byte Secp256r1 public key (x, y) recovered from 64-byte signature on 32-byte message.\n* @param {number} dst_addr\n* @param {number} sig_addr\n* @param {number} msg_hash_addr\n* @returns {Instruction}\n*/\nfunction ecr1(dst_addr, sig_addr, msg_hash_addr) {\n    const ret = wasm$1.ecr1(dst_addr, sig_addr, msg_hash_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Verify ED25519 public key and signature match a 32-byte message.\n* @param {number} pub_key_addr\n* @param {number} sig_addr\n* @param {number} msg_hash_addr\n* @returns {Instruction}\n*/\nfunction ed19(pub_key_addr, sig_addr, msg_hash_addr) {\n    const ret = wasm$1.ed19(pub_key_addr, sig_addr, msg_hash_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The keccak-256 hash of a slice.\n* @param {number} dst_addr\n* @param {number} src_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction k256(dst_addr, src_addr, len) {\n    const ret = wasm$1.k256(dst_addr, src_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*The SHA-2-256 hash of a slice.\n* @param {number} dst_addr\n* @param {number} src_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction s256(dst_addr, src_addr, len) {\n    const ret = wasm$1.s256(dst_addr, src_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get timestamp of block at given height.\n* @param {number} dst\n* @param {number} heigth\n* @returns {Instruction}\n*/\nfunction time(dst, heigth) {\n    const ret = wasm$1.time(dst, heigth);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Performs no operation.\n* @returns {Instruction}\n*/\nfunction noop() {\n    const ret = wasm$1.noop();\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Set flag register to a register.\n* @param {number} value\n* @returns {Instruction}\n*/\nfunction flag(value) {\n    const ret = wasm$1.flag(value);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get the balance of contract of an asset ID.\n* @param {number} dst\n* @param {number} asset_id_addr\n* @param {number} contract_id_addr\n* @returns {Instruction}\n*/\nfunction bal(dst, asset_id_addr, contract_id_addr) {\n    const ret = wasm$1.bal(dst, asset_id_addr, contract_id_addr);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic jump.\n* @param {number} abs_target\n* @returns {Instruction}\n*/\nfunction jmp(abs_target) {\n    const ret = wasm$1.jmp(abs_target);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Conditional dynamic jump.\n* @param {number} abs_target\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction jne(abs_target, lhs, rhs) {\n    const ret = wasm$1.jne(abs_target, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Send a message to recipient address with call abi, coins, and output.\n* @param {number} recipient_addr\n* @param {number} data_addr\n* @param {number} data_len\n* @param {number} coins\n* @returns {Instruction}\n*/\nfunction smo(recipient_addr, data_addr, data_len, coins) {\n    const ret = wasm$1.smo(recipient_addr, data_addr, data_len, coins);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Adds a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction addi(dst, lhs, rhs) {\n    const ret = wasm$1.addi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise ANDs a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction andi(dst, lhs, rhs) {\n    const ret = wasm$1.andi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Divides a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction divi(dst, lhs, rhs) {\n    const ret = wasm$1.divi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Raises one register to the power of an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction expi(dst, lhs, rhs) {\n    const ret = wasm$1.expi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Modulo remainder of a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction modi(dst, lhs, rhs) {\n    const ret = wasm$1.modi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Multiplies a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction muli(dst, lhs, rhs) {\n    const ret = wasm$1.muli(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise ORs a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction ori(dst, lhs, rhs) {\n    const ret = wasm$1.ori(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Left shifts a register by an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction slli(dst, lhs, rhs) {\n    const ret = wasm$1.slli(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Right shifts a register by an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction srli(dst, lhs, rhs) {\n    const ret = wasm$1.srli(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Subtracts a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction subi(dst, lhs, rhs) {\n    const ret = wasm$1.subi(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Bitwise XORs a register and an immediate value.\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @returns {Instruction}\n*/\nfunction xori(dst, lhs, rhs) {\n    const ret = wasm$1.xori(dst, lhs, rhs);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Conditional jump.\n* @param {number} cond_lhs\n* @param {number} cond_rhs\n* @param {number} abs_target\n* @returns {Instruction}\n*/\nfunction jnei(cond_lhs, cond_rhs, abs_target) {\n    const ret = wasm$1.jnei(cond_lhs, cond_rhs, abs_target);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*A byte is loaded from the specified address offset by an immediate value.\n* @param {number} dst\n* @param {number} addr\n* @param {number} offset\n* @returns {Instruction}\n*/\nfunction lb(dst, addr, offset) {\n    const ret = wasm$1.lb(dst, addr, offset);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*A word is loaded from the specified address offset by an immediate value.\n* @param {number} dst\n* @param {number} addr\n* @param {number} offset\n* @returns {Instruction}\n*/\nfunction lw(dst, addr, offset) {\n    const ret = wasm$1.lw(dst, addr, offset);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Write the least significant byte of a register to memory.\n* @param {number} addr\n* @param {number} value\n* @param {number} offset\n* @returns {Instruction}\n*/\nfunction sb(addr, value, offset) {\n    const ret = wasm$1.sb(addr, value, offset);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Write a register to memory.\n* @param {number} addr\n* @param {number} value\n* @param {number} offset\n* @returns {Instruction}\n*/\nfunction sw(addr, value, offset) {\n    const ret = wasm$1.sw(addr, value, offset);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy an immediate number of bytes in memory.\n* @param {number} dst_addr\n* @param {number} src_addr\n* @param {number} len\n* @returns {Instruction}\n*/\nfunction mcpi(dst_addr, src_addr, len) {\n    const ret = wasm$1.mcpi(dst_addr, src_addr, len);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get transaction fields.\n* @param {number} dst\n* @param {number} arg\n* @param {number} selector\n* @returns {Instruction}\n*/\nfunction gtf(dst, arg, selector) {\n    const ret = wasm$1.gtf(dst, arg, selector);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Clear an immediate number of bytes in memory.\n* @param {number} addr\n* @param {number} count\n* @returns {Instruction}\n*/\nfunction mcli(addr, count) {\n    const ret = wasm$1.mcli(addr, count);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Get metadata from memory.\n* @param {number} dst\n* @param {number} selector\n* @returns {Instruction}\n*/\nfunction gm(dst, selector) {\n    const ret = wasm$1.gm(dst, selector);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Copy immediate value into a register\n* @param {number} dst\n* @param {number} val\n* @returns {Instruction}\n*/\nfunction movi(dst, val) {\n    const ret = wasm$1.movi(dst, val);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Conditional jump against zero.\n* @param {number} cond_nz\n* @param {number} abs_target\n* @returns {Instruction}\n*/\nfunction jnzi(cond_nz, abs_target) {\n    const ret = wasm$1.jnzi(cond_nz, abs_target);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Unconditional dynamic relative jump forwards, with a constant offset.\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jmpf(dynamic, fixed) {\n    const ret = wasm$1.jmpf(dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Unconditional dynamic relative jump backwards, with a constant offset.\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jmpb(dynamic, fixed) {\n    const ret = wasm$1.jmpb(dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic relative jump forwards, conditional against zero, with a constant offset.\n* @param {number} cond_nz\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jnzf(cond_nz, dynamic, fixed) {\n    const ret = wasm$1.jnzf(cond_nz, dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic relative jump backwards, conditional against zero, with a constant offset.\n* @param {number} cond_nz\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jnzb(cond_nz, dynamic, fixed) {\n    const ret = wasm$1.jnzb(cond_nz, dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic relative jump forwards, conditional on comparsion, with a constant offset.\n* @param {number} cond_lhs\n* @param {number} cond_rhs\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jnef(cond_lhs, cond_rhs, dynamic, fixed) {\n    const ret = wasm$1.jnef(cond_lhs, cond_rhs, dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Dynamic relative jump backwards, conditional on comparsion, with a constant offset.\n* @param {number} cond_lhs\n* @param {number} cond_rhs\n* @param {number} dynamic\n* @param {number} fixed\n* @returns {Instruction}\n*/\nfunction jneb(cond_lhs, cond_rhs, dynamic, fixed) {\n    const ret = wasm$1.jneb(cond_lhs, cond_rhs, dynamic, fixed);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Jump.\n* @param {number} abs_target\n* @returns {Instruction}\n*/\nfunction ji(abs_target) {\n    const ret = wasm$1.ji(abs_target);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Extend the current call frame's stack by an immediate value.\n* @param {number} amount\n* @returns {Instruction}\n*/\nfunction cfei(amount) {\n    const ret = wasm$1.cfei(amount);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Shrink the current call frame's stack by an immediate value.\n* @param {number} amount\n* @returns {Instruction}\n*/\nfunction cfsi(amount) {\n    const ret = wasm$1.cfsi(amount);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Extend the current call frame's stack\n* @param {number} amount\n* @returns {Instruction}\n*/\nfunction cfe(amount) {\n    const ret = wasm$1.cfe(amount);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Shrink the current call frame's stack\n* @param {number} amount\n* @returns {Instruction}\n*/\nfunction cfs(amount) {\n    const ret = wasm$1.cfs(amount);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Push a bitmask-selected set of registers in range 16..40 to the stack.\n* @param {number} bitmask\n* @returns {Instruction}\n*/\nfunction pshl(bitmask) {\n    const ret = wasm$1.pshl(bitmask);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Push a bitmask-selected set of registers in range 40..64 to the stack.\n* @param {number} bitmask\n* @returns {Instruction}\n*/\nfunction pshh(bitmask) {\n    const ret = wasm$1.pshh(bitmask);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Pop a bitmask-selected set of registers in range 16..40 to the stack.\n* @param {number} bitmask\n* @returns {Instruction}\n*/\nfunction popl(bitmask) {\n    const ret = wasm$1.popl(bitmask);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Pop a bitmask-selected set of registers in range 40..64 to the stack.\n* @param {number} bitmask\n* @returns {Instruction}\n*/\nfunction poph(bitmask) {\n    const ret = wasm$1.poph(bitmask);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compare 128bit integers\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wdcm(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wdcm(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Compare 256bit integers\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wqcm(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wqcm(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Simple 128bit operations\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wdop(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wdop(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Simple 256bit operations\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wqop(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wqop(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Multiply 128bit\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wdml(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wdml(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Multiply 256bit\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wqml(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wqml(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Divide 128bit\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wddv(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wddv(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Divide 256bit\n* @param {number} dst\n* @param {number} lhs\n* @param {number} rhs\n* @param {number} flags\n* @returns {Instruction}\n*/\nfunction wqdv(dst, lhs, rhs, flags) {\n    const ret = wasm$1.wqdv(dst, lhs, rhs, flags);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Fused multiply-divide 128bit\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} divisor\n* @returns {Instruction}\n*/\nfunction wdmd(dst, mul_lhs, mul_rhs, divisor) {\n    const ret = wasm$1.wdmd(dst, mul_lhs, mul_rhs, divisor);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Fused multiply-divide 256bit\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} divisor\n* @returns {Instruction}\n*/\nfunction wqmd(dst, mul_lhs, mul_rhs, divisor) {\n    const ret = wasm$1.wqmd(dst, mul_lhs, mul_rhs, divisor);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*AddMod 128bit\n* @param {number} dst\n* @param {number} add_lhs\n* @param {number} add_rhs\n* @param {number} modulo\n* @returns {Instruction}\n*/\nfunction wdam(dst, add_lhs, add_rhs, modulo) {\n    const ret = wasm$1.wdam(dst, add_lhs, add_rhs, modulo);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*AddMod 256bit\n* @param {number} dst\n* @param {number} add_lhs\n* @param {number} add_rhs\n* @param {number} modulo\n* @returns {Instruction}\n*/\nfunction wqam(dst, add_lhs, add_rhs, modulo) {\n    const ret = wasm$1.wqam(dst, add_lhs, add_rhs, modulo);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*MulMod 128bit\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} modulo\n* @returns {Instruction}\n*/\nfunction wdmm(dst, mul_lhs, mul_rhs, modulo) {\n    const ret = wasm$1.wdmm(dst, mul_lhs, mul_rhs, modulo);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*MulMod 256bit\n* @param {number} dst\n* @param {number} mul_lhs\n* @param {number} mul_rhs\n* @param {number} modulo\n* @returns {Instruction}\n*/\nfunction wqmm(dst, mul_lhs, mul_rhs, modulo) {\n    const ret = wasm$1.wqmm(dst, mul_lhs, mul_rhs, modulo);\n    return Instruction.__wrap(ret);\n}\n\n/**\n*Call external function\n* @param {number} a\n* @param {number} b\n* @param {number} c\n* @param {number} d\n* @returns {Instruction}\n*/\nfunction ecal(a, b, c, d) {\n    const ret = wasm$1.ecal(a, b, c, d);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `GM` instruction from its arguments.\n* @param {number} ra\n* @param {GMArgs} args\n* @returns {Instruction}\n*/\nfunction gm_args(ra, args) {\n    const ret = wasm$1.gm_args(ra, args);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `GM` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {GTFArgs} args\n* @returns {Instruction}\n*/\nfunction gtf_args(ra, rb, args) {\n    const ret = wasm$1.gtf_args(ra, rb, args);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WDCM` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {CompareArgs} args\n* @returns {Instruction}\n*/\nfunction wdcm_args(ra, rb, rc, args) {\n    _assertClass(args, CompareArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wdcm_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WQCM` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {CompareArgs} args\n* @returns {Instruction}\n*/\nfunction wqcm_args(ra, rb, rc, args) {\n    _assertClass(args, CompareArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wqcm_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WDOP` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {MathArgs} args\n* @returns {Instruction}\n*/\nfunction wdop_args(ra, rb, rc, args) {\n    _assertClass(args, MathArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wdop_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WQOP` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {MathArgs} args\n* @returns {Instruction}\n*/\nfunction wqop_args(ra, rb, rc, args) {\n    _assertClass(args, MathArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wqop_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WDML` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {MulArgs} args\n* @returns {Instruction}\n*/\nfunction wdml_args(ra, rb, rc, args) {\n    _assertClass(args, MulArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wdml_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WQML` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {MulArgs} args\n* @returns {Instruction}\n*/\nfunction wqml_args(ra, rb, rc, args) {\n    _assertClass(args, MulArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wqml_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WDDV` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {DivArgs} args\n* @returns {Instruction}\n*/\nfunction wddv_args(ra, rb, rc, args) {\n    _assertClass(args, DivArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wddv_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\n/**\n* Construct a `WQDV` instruction from its arguments.\n* @param {number} ra\n* @param {number} rb\n* @param {number} rc\n* @param {DivArgs} args\n* @returns {Instruction}\n*/\nfunction wqdv_args(ra, rb, rc, args) {\n    _assertClass(args, DivArgs);\n    var ptr0 = args.__destroy_into_raw();\n    const ret = wasm$1.wqdv_args(ra, rb, rc, ptr0);\n    return Instruction.__wrap(ret);\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm$1.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*r\" Argument list for GM (get metadata) instruction\n*r\" The VM is the only who should match this struct, and it *MUST* always perform\n*r\" exhaustive match so all offered variants are covered.\n*/\nconst GMArgs = Object.freeze({\n/**\n*r\" Get if caller is external.\n*/\nIsCallerExternal:1,\"1\":\"IsCallerExternal\",\n/**\n*r\" Get caller's contract ID.\n*/\nGetCaller:2,\"2\":\"GetCaller\",\n/**\n*r\" Get index of current predicate.\n*/\nGetVerifyingPredicate:3,\"3\":\"GetVerifyingPredicate\",\n/**\n*r\" Get the Chain ID this VM is operating within\n*/\nGetChainId:4,\"4\":\"GetChainId\", });\n/**\n*r\" Argument list for GTF (get tx fields) instruction\n*r\" The VM is the only who should match this struct, and it *MUST* always perform\n*r\" exhaustive match so all offered variants are covered.\n*/\nconst GTFArgs = Object.freeze({\n/**\n*r\" Set `$rA` to `tx.type`\n*/\nType:1,\"1\":\"Type\",\n/**\n*r\" Set `$rA` to `tx.scriptGasLimit`\n*/\nScriptGasLimit:2,\"2\":\"ScriptGasLimit\",\n/**\n*r\" Set `$rA` to `tx.scriptLength`\n*/\nScriptLength:3,\"3\":\"ScriptLength\",\n/**\n*r\" Set `$rA` to `tx.scriptDataLength`\n*/\nScriptDataLength:4,\"4\":\"ScriptDataLength\",\n/**\n*r\" Set `$rA` to `tx.inputsCount`\n*/\nScriptInputsCount:5,\"5\":\"ScriptInputsCount\",\n/**\n*r\" Set `$rA` to `tx.outputsCount`\n*/\nScriptOutputsCount:6,\"6\":\"ScriptOutputsCount\",\n/**\n*r\" Set `$rA` to `tx.witnessesCount`\n*/\nScriptWitnessesCount:7,\"7\":\"ScriptWitnessesCount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.receiptsRoot`\n*/\nScriptReceiptsRoot:8,\"8\":\"ScriptReceiptsRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.script`\n*/\nScript:9,\"9\":\"Script\",\n/**\n*r\" Set `$rA` to `Memory address of tx.scriptData`\n*/\nScriptData:10,\"10\":\"ScriptData\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB]`\n*/\nScriptInputAtIndex:11,\"11\":\"ScriptInputAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of t.outputs[$rB]`\n*/\nScriptOutputAtIndex:12,\"12\":\"ScriptOutputAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.witnesses[$rB]`\n*/\nScriptWitnessAtIndex:13,\"13\":\"ScriptWitnessAtIndex\",\n/**\n*r\" Set `$rA` to `tx.bytecodeLength`\n*/\nCreateBytecodeLength:256,\"256\":\"CreateBytecodeLength\",\n/**\n*r\" Set `$rA` to `tx.bytecodeWitnessIndex`\n*/\nCreateBytecodeWitnessIndex:257,\"257\":\"CreateBytecodeWitnessIndex\",\n/**\n*r\" Set `$rA` to `tx.storageSlotsCount`\n*/\nCreateStorageSlotsCount:258,\"258\":\"CreateStorageSlotsCount\",\n/**\n*r\" Set `$rA` to `tx.inputsCount`\n*/\nCreateInputsCount:259,\"259\":\"CreateInputsCount\",\n/**\n*r\" Set `$rA` to `tx.outputsCount`\n*/\nCreateOutputsCount:260,\"260\":\"CreateOutputsCount\",\n/**\n*r\" Set `$rA` to `tx.witnessesCount`\n*/\nCreateWitnessesCount:261,\"261\":\"CreateWitnessesCount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.salt`\n*/\nCreateSalt:262,\"262\":\"CreateSalt\",\n/**\n*r\" Set `$rA` to `Memory address of tx.storageSlots[$rB]`\n*/\nCreateStorageSlotAtIndex:263,\"263\":\"CreateStorageSlotAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB]`\n*/\nCreateInputAtIndex:264,\"264\":\"CreateInputAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of t.outputs[$rB]`\n*/\nCreateOutputAtIndex:265,\"265\":\"CreateOutputAtIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.witnesses[$rB]`\n*/\nCreateWitnessAtIndex:266,\"266\":\"CreateWitnessAtIndex\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].type`\n*/\nInputType:512,\"512\":\"InputType\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].txID`\n*/\nInputCoinTxId:513,\"513\":\"InputCoinTxId\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].outputIndex`\n*/\nInputCoinOutputIndex:514,\"514\":\"InputCoinOutputIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].owner`\n*/\nInputCoinOwner:515,\"515\":\"InputCoinOwner\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].amount`\n*/\nInputCoinAmount:516,\"516\":\"InputCoinAmount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].asset_id`\n*/\nInputCoinAssetId:517,\"517\":\"InputCoinAssetId\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].txPointer`\n*/\nInputCoinTxPointer:518,\"518\":\"InputCoinTxPointer\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].witnessIndex`\n*/\nInputCoinWitnessIndex:519,\"519\":\"InputCoinWitnessIndex\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].maturity`\n*/\nInputCoinMaturity:520,\"520\":\"InputCoinMaturity\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].predicateLength`\n*/\nInputCoinPredicateLength:521,\"521\":\"InputCoinPredicateLength\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].predicateDataLength`\n*/\nInputCoinPredicateDataLength:522,\"522\":\"InputCoinPredicateDataLength\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicate`\n*/\nInputCoinPredicate:523,\"523\":\"InputCoinPredicate\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicateData`\n*/\nInputCoinPredicateData:524,\"524\":\"InputCoinPredicateData\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicateGasUsed`\n*/\nInputCoinPredicateGasUsed:525,\"525\":\"InputCoinPredicateGasUsed\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].txID`\n*/\nInputContractTxId:544,\"544\":\"InputContractTxId\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].outputIndex`\n*/\nInputContractOutputIndex:545,\"545\":\"InputContractOutputIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].balanceRoot`\n*/\nInputContractBalanceRoot:546,\"546\":\"InputContractBalanceRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].stateRoot`\n*/\nInputContractStateRoot:547,\"547\":\"InputContractStateRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].txPointer`\n*/\nInputContractTxPointer:548,\"548\":\"InputContractTxPointer\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].contractID`\n*/\nInputContractId:549,\"549\":\"InputContractId\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].sender`\n*/\nInputMessageSender:576,\"576\":\"InputMessageSender\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].recipient`\n*/\nInputMessageRecipient:577,\"577\":\"InputMessageRecipient\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].amount`\n*/\nInputMessageAmount:578,\"578\":\"InputMessageAmount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].nonce`\n*/\nInputMessageNonce:579,\"579\":\"InputMessageNonce\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].witnessIndex`\n*/\nInputMessageWitnessIndex:580,\"580\":\"InputMessageWitnessIndex\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].dataLength`\n*/\nInputMessageDataLength:581,\"581\":\"InputMessageDataLength\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].predicateLength`\n*/\nInputMessagePredicateLength:582,\"582\":\"InputMessagePredicateLength\",\n/**\n*r\" Set `$rA` to `tx.inputs[$rB].predicateDataLength`\n*/\nInputMessagePredicateDataLength:583,\"583\":\"InputMessagePredicateDataLength\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].data`\n*/\nInputMessageData:584,\"584\":\"InputMessageData\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicate`\n*/\nInputMessagePredicate:585,\"585\":\"InputMessagePredicate\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicateData`\n*/\nInputMessagePredicateData:586,\"586\":\"InputMessagePredicateData\",\n/**\n*r\" Set `$rA` to `Memory address of tx.inputs[$rB].predicateGasUsed`\n*/\nInputMessagePredicateGasUsed:587,\"587\":\"InputMessagePredicateGasUsed\",\n/**\n*r\" Set `$rA` to `tx.outputs[$rB].type`\n*/\nOutputType:768,\"768\":\"OutputType\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].to`\n*/\nOutputCoinTo:769,\"769\":\"OutputCoinTo\",\n/**\n*r\" Set `$rA` to `tx.outputs[$rB].amount`\n*/\nOutputCoinAmount:770,\"770\":\"OutputCoinAmount\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].asset_id`\n*/\nOutputCoinAssetId:771,\"771\":\"OutputCoinAssetId\",\n/**\n*r\" Set `$rA` to `tx.outputs[$rB].inputIndex`\n*/\nOutputContractInputIndex:772,\"772\":\"OutputContractInputIndex\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].balanceRoot`\n*/\nOutputContractBalanceRoot:773,\"773\":\"OutputContractBalanceRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].stateRoot`\n*/\nOutputContractStateRoot:774,\"774\":\"OutputContractStateRoot\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].contractID`\n*/\nOutputContractCreatedContractId:775,\"775\":\"OutputContractCreatedContractId\",\n/**\n*r\" Set `$rA` to `Memory address of tx.outputs[$rB].stateRoot`\n*/\nOutputContractCreatedStateRoot:776,\"776\":\"OutputContractCreatedStateRoot\",\n/**\n*r\" Set `$rA` to `tx.witnesses[$rB].dataLength`\n*/\nWitnessDataLength:1024,\"1024\":\"WitnessDataLength\",\n/**\n*r\" Set `$rA` to `Memory address of tx.witnesses[$rB].data`\n*/\nWitnessData:1025,\"1025\":\"WitnessData\",\n/**\n*r\" Set `$rA` to `tx.policyTypes`\n*/\nPolicyTypes:1280,\"1280\":\"PolicyTypes\",\n/**\n*r\" Set `$rA` to `tx.policies[0x00].gasPrice`\n*/\nPolicyGasPrice:1281,\"1281\":\"PolicyGasPrice\",\n/**\n*r\" Set `$rA` to `tx.policies[count_ones(0b11 & tx.policyTypes) - 1].witnessLimit`\n*/\nPolicyWitnessLimit:1282,\"1282\":\"PolicyWitnessLimit\",\n/**\n*r\" Set `$rA` to `tx.policies[count_ones(0b111 & tx.policyTypes) - 1].maturity`\n*/\nPolicyMaturity:1283,\"1283\":\"PolicyMaturity\",\n/**\n*r\" Set `$rA` to `tx.policies[count_ones(0b1111 & tx.policyTypes) - 1].maxFee`\n*/\nPolicyMaxFee:1284,\"1284\":\"PolicyMaxFee\", });\n/**\n* Comparison mode used by WDCM and WQCM instructions.\n*/\nconst CompareMode = Object.freeze({\n/**\n* Equality (`==`)\n*/\nEQ:0,\"0\":\"EQ\",\n/**\n* Inequality (`!=`)\n*/\nNE:1,\"1\":\"NE\",\n/**\n* Less than (`<`)\n*/\nLT:2,\"2\":\"LT\",\n/**\n* Greater than (`>`)\n*/\nGT:3,\"3\":\"GT\",\n/**\n* Less than or equals (`>=`)\n*/\nLTE:4,\"4\":\"LTE\",\n/**\n* Greater than or equals (`>=`)\n*/\nGTE:5,\"5\":\"GTE\",\n/**\n* Number of leading zeroes in lhs (`lzcnt`) (discards rhs)\n*/\nLZC:6,\"6\":\"LZC\", });\n/**\n*r\" Panic reason representation for the interpreter.\n*/\nconst PanicReason = Object.freeze({\n/**\n*r\" The byte can't be mapped to any known `PanicReason`.\n*/\nUnknownPanicReason:0,\"0\":\"UnknownPanicReason\",\n/**\n*r\" Found `RVRT` instruction.\n*/\nRevert:1,\"1\":\"Revert\",\n/**\n*r\" Execution ran out of gas.\n*/\nOutOfGas:2,\"2\":\"OutOfGas\",\n/**\n*r\" The transaction validity is violated.\n*/\nTransactionValidity:3,\"3\":\"TransactionValidity\",\n/**\n*r\" Attempt to write outside interpreter memory boundaries.\n*/\nMemoryOverflow:4,\"4\":\"MemoryOverflow\",\n/**\n*r\" Overflow while executing arithmetic operation.\n*r\" These errors are ignored using the WRAPPING flag.\n*/\nArithmeticOverflow:5,\"5\":\"ArithmeticOverflow\",\n/**\n*r\" Designed contract was not found in the storage.\n*/\nContractNotFound:6,\"6\":\"ContractNotFound\",\n/**\n*r\" Memory ownership rules are violated.\n*/\nMemoryOwnership:7,\"7\":\"MemoryOwnership\",\n/**\n*r\" The asset ID balance isn't enough for the instruction.\n*/\nNotEnoughBalance:8,\"8\":\"NotEnoughBalance\",\n/**\n*r\" The interpreter is expected to be in internal context.\n*/\nExpectedInternalContext:9,\"9\":\"ExpectedInternalContext\",\n/**\n*r\" The queried asset ID was not found in the state.\n*/\nAssetIdNotFound:10,\"10\":\"AssetIdNotFound\",\n/**\n*r\" The provided input is not found in the transaction.\n*/\nInputNotFound:11,\"11\":\"InputNotFound\",\n/**\n*r\" The provided output is not found in the transaction.\n*/\nOutputNotFound:12,\"12\":\"OutputNotFound\",\n/**\n*r\" The provided witness is not found in the transaction.\n*/\nWitnessNotFound:13,\"13\":\"WitnessNotFound\",\n/**\n*r\" The transaction maturity is not valid for this request.\n*/\nTransactionMaturity:14,\"14\":\"TransactionMaturity\",\n/**\n*r\" The metadata identifier is invalid.\n*/\nInvalidMetadataIdentifier:15,\"15\":\"InvalidMetadataIdentifier\",\n/**\n*r\" The call structure is not valid.\n*/\nMalformedCallStructure:16,\"16\":\"MalformedCallStructure\",\n/**\n*r\" The provided register does not allow write operations.\n*/\nReservedRegisterNotWritable:17,\"17\":\"ReservedRegisterNotWritable\",\n/**\n*r\" The execution resulted in an erroneous state of the interpreter.\n*/\nInvalidFlags:18,\"18\":\"InvalidFlags\",\n/**\n*r\" The provided immediate value is not valid for this instruction.\n*/\nInvalidImmediateValue:19,\"19\":\"InvalidImmediateValue\",\n/**\n*r\" The provided transaction input is not of type `Coin`.\n*/\nExpectedCoinInput:20,\"20\":\"ExpectedCoinInput\",\n/**\n*r\" `ECAL` instruction failed.\n*/\nEcalError:21,\"21\":\"EcalError\",\n/**\n*r\" Two segments of the interpreter memory should not intersect for write operations.\n*/\nMemoryWriteOverlap:22,\"22\":\"MemoryWriteOverlap\",\n/**\n*r\" The requested contract is not listed in the transaction inputs.\n*/\nContractNotInInputs:23,\"23\":\"ContractNotInInputs\",\n/**\n*r\" The internal asset ID balance overflowed with the provided instruction.\n*/\nInternalBalanceOverflow:24,\"24\":\"InternalBalanceOverflow\",\n/**\n*r\" The maximum allowed contract size is violated.\n*/\nContractMaxSize:25,\"25\":\"ContractMaxSize\",\n/**\n*r\" This instruction expects the stack area to be unallocated for this call.\n*/\nExpectedUnallocatedStack:26,\"26\":\"ExpectedUnallocatedStack\",\n/**\n*r\" The maximum allowed number of static contracts was reached for this transaction.\n*/\nMaxStaticContractsReached:27,\"27\":\"MaxStaticContractsReached\",\n/**\n*r\" The requested transfer amount cannot be zero.\n*/\nTransferAmountCannotBeZero:28,\"28\":\"TransferAmountCannotBeZero\",\n/**\n*r\" The provided transaction output should be of type `Variable`.\n*/\nExpectedOutputVariable:29,\"29\":\"ExpectedOutputVariable\",\n/**\n*r\" The expected context of the stack parent is internal.\n*/\nExpectedParentInternalContext:30,\"30\":\"ExpectedParentInternalContext\",\n/**\n*r\" The predicate returned non `1`. The `1` means successful verification\n*r\" of the predicate, all other values means unsuccessful.\n*/\nPredicateReturnedNonOne:31,\"31\":\"PredicateReturnedNonOne\",\n/**\n*r\" The contract ID is already deployed and can't be overwritten.\n*/\nContractIdAlreadyDeployed:32,\"32\":\"ContractIdAlreadyDeployed\",\n/**\n*r\" The loaded contract mismatch expectations.\n*/\nContractMismatch:33,\"33\":\"ContractMismatch\",\n/**\n*r\" Attempting to send message data longer than `MAX_MESSAGE_DATA_LENGTH`\n*/\nMessageDataTooLong:34,\"34\":\"MessageDataTooLong\",\n/**\n*r\" Mathematically invalid arguments where given to an arithmetic instruction.\n*r\" For instance, division by zero produces this.\n*r\" These errors are ignored using the UNSAFEMATH flag.\n*/\nArithmeticError:35,\"35\":\"ArithmeticError\",\n/**\n*r\" The contract instruction is not allowed in predicates.\n*/\nContractInstructionNotAllowed:36,\"36\":\"ContractInstructionNotAllowed\",\n/**\n*r\" Transfer of zero coins is not allowed.\n*/\nTransferZeroCoins:37,\"37\":\"TransferZeroCoins\",\n/**\n*r\" Attempted to execute an invalid instruction\n*/\nInvalidInstruction:38,\"38\":\"InvalidInstruction\",\n/**\n*r\" Memory outside $is..$ssp range is not executable\n*/\nMemoryNotExecutable:39,\"39\":\"MemoryNotExecutable\",\n/**\n*r\" The policy is not set.\n*/\nPolicyIsNotSet:40,\"40\":\"PolicyIsNotSet\",\n/**\n*r\" The policy is not found across policies.\n*/\nPolicyNotFound:41,\"41\":\"PolicyNotFound\",\n/**\n*r\" Receipt context is full\n*/\nTooManyReceipts:42,\"42\":\"TooManyReceipts\",\n/**\n*r\" Balance of a contract overflowed\n*/\nBalanceOverflow:43,\"43\":\"BalanceOverflow\",\n/**\n*r\" Block height value is invalid, typically because it is too large\n*/\nInvalidBlockHeight:44,\"44\":\"InvalidBlockHeight\",\n/**\n*r\" Attempt to use sequential memory instructions with too large slot count,\n*r\" typically because it cannot fit into usize\n*/\nTooManySlots:45,\"45\":\"TooManySlots\", });\n/**\n* The operation performed by WDOP and WQOP instructions, determined as\n*/\nconst MathOp = Object.freeze({\n/**\n* Add\n*/\nADD:0,\"0\":\"ADD\",\n/**\n* Subtract\n*/\nSUB:1,\"1\":\"SUB\",\n/**\n* Invert bits (discards rhs)\n*/\nNOT:2,\"2\":\"NOT\",\n/**\n* Bitwise or\n*/\nOR:3,\"3\":\"OR\",\n/**\n* Bitwise exclusive or\n*/\nXOR:4,\"4\":\"XOR\",\n/**\n* Bitwise and\n*/\nAND:5,\"5\":\"AND\",\n/**\n* Shift left\n*/\nSHL:6,\"6\":\"SHL\",\n/**\n* Shift right\n*/\nSHR:7,\"7\":\"SHR\", });\n/**\n*Adds two registers.\n*/\nclass ADD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_add_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Adds a register and an immediate value.\n*/\nclass ADDI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_addi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Allocate a number of bytes from the heap.\n*/\nclass ALOC {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_aloc_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} bytes\n    */\n    constructor(bytes) {\n        _assertClass(bytes, RegId);\n        var ptr0 = bytes.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise ANDs two registers.\n*/\nclass AND {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_and_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise ANDs a register and an immediate value.\n*/\nclass ANDI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_andi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Get the balance of contract of an asset ID.\n*/\nclass BAL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_bal_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} asset_id_addr\n    * @param {RegId} contract_id_addr\n    */\n    constructor(dst, asset_id_addr, contract_id_addr) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(asset_id_addr, RegId);\n        var ptr1 = asset_id_addr.__destroy_into_raw();\n        _assertClass(contract_id_addr, RegId);\n        var ptr2 = contract_id_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get current block height.\n*/\nclass BHEI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_bhei_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    */\n    constructor(dst) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get block header hash for height.\n*/\nclass BHSH {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_bhsh_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} heigth\n    */\n    constructor(dst, heigth) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(heigth, RegId);\n        var ptr1 = heigth.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Burns `amount` coins of the asset ID created from `sub_id` for the current contract.\n*/\nclass BURN {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_burn_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} amount\n    * @param {RegId} sub_id_addr\n    */\n    constructor(amount, sub_id_addr) {\n        _assertClass(amount, RegId);\n        var ptr0 = amount.__destroy_into_raw();\n        _assertClass(sub_id_addr, RegId);\n        var ptr1 = sub_id_addr.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Call a contract.\n*/\nclass CALL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_call_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} target_struct\n    * @param {RegId} fwd_coins\n    * @param {RegId} asset_id_addr\n    * @param {RegId} fwd_gas\n    */\n    constructor(target_struct, fwd_coins, asset_id_addr, fwd_gas) {\n        _assertClass(target_struct, RegId);\n        var ptr0 = target_struct.__destroy_into_raw();\n        _assertClass(fwd_coins, RegId);\n        var ptr1 = fwd_coins.__destroy_into_raw();\n        _assertClass(asset_id_addr, RegId);\n        var ptr2 = asset_id_addr.__destroy_into_raw();\n        _assertClass(fwd_gas, RegId);\n        var ptr3 = fwd_gas.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get current block proposer's address.\n*/\nclass CB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    */\n    constructor(dst) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Copy contract code for a contract.\n*/\nclass CCP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ccp_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} contract_id_addr\n    * @param {RegId} offset\n    * @param {RegId} len\n    */\n    constructor(dst_addr, contract_id_addr, offset, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(contract_id_addr, RegId);\n        var ptr1 = contract_id_addr.__destroy_into_raw();\n        _assertClass(offset, RegId);\n        var ptr2 = offset.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr3 = len.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Extend the current call frame's stack\n*/\nclass CFE {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cfe_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} amount\n    */\n    constructor(amount) {\n        _assertClass(amount, RegId);\n        var ptr0 = amount.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Extend the current call frame's stack by an immediate value.\n*/\nclass CFEI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cfei_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} amount\n    */\n    constructor(amount) {\n        _assertClass(amount, Imm24);\n        var ptr0 = amount.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Shrink the current call frame's stack\n*/\nclass CFS {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cfs_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} amount\n    */\n    constructor(amount) {\n        _assertClass(amount, RegId);\n        var ptr0 = amount.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Shrink the current call frame's stack by an immediate value.\n*/\nclass CFSI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_cfsi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} amount\n    */\n    constructor(amount) {\n        _assertClass(amount, Imm24);\n        var ptr0 = amount.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Get code root of a contract.\n*/\nclass CROO {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_croo_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} contract_id_addr\n    */\n    constructor(dst_addr, contract_id_addr) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(contract_id_addr, RegId);\n        var ptr1 = contract_id_addr.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get code size of a contract.\n*/\nclass CSIZ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_csiz_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} contract_id_addr\n    */\n    constructor(dst, contract_id_addr) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(contract_id_addr, RegId);\n        var ptr1 = contract_id_addr.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n* Arguments for WDCM and WQCM instructions.\n*/\nclass CompareArgs {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(CompareArgs.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_compareargs_free(ptr);\n    }\n    /**\n    * Comparison mode\n    * @returns {CompareMode}\n    */\n    get mode() {\n        const ret = wasm$1.__wbg_get_compareargs_mode(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * Comparison mode\n    * @param {CompareMode} arg0\n    */\n    set mode(arg0) {\n        wasm$1.__wbg_set_compareargs_mode(this.__wbg_ptr, arg0);\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_rhs() {\n        const ret = wasm$1.__wbg_get_compareargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_rhs(arg0) {\n        wasm$1.__wbg_set_compareargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n    /**\n    * Convert to immediate value.\n    * @returns {Imm06}\n    */\n    to_imm() {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm$1.compareargs_to_imm(ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct from `Imm06`. Returns `None` if the value has reserved flags set.\n    * @param {Imm06} bits\n    * @returns {CompareArgs | undefined}\n    */\n    static from_imm(bits) {\n        _assertClass(bits, Imm06);\n        var ptr0 = bits.__destroy_into_raw();\n        const ret = wasm$1.compareargs_from_imm(ptr0);\n        return ret === 0 ? undefined : CompareArgs.__wrap(ret);\n    }\n}\n/**\n*Divides two registers.\n*/\nclass DIV {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_div_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Divides a register and an immediate value.\n*/\nclass DIVI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_divi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n* Additional arguments for WMDV and WDDV instructions.\n*/\nclass DivArgs {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_divargs_free(ptr);\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_rhs() {\n        const ret = wasm$1.__wbg_get_compareargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_rhs(arg0) {\n        wasm$1.__wbg_set_compareargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n}\n/**\n*Call external function\n*/\nclass ECAL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ecal_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} a\n    * @param {RegId} b\n    * @param {RegId} c\n    * @param {RegId} d\n    */\n    constructor(a, b, c, d) {\n        _assertClass(a, RegId);\n        var ptr0 = a.__destroy_into_raw();\n        _assertClass(b, RegId);\n        var ptr1 = b.__destroy_into_raw();\n        _assertClass(c, RegId);\n        var ptr2 = c.__destroy_into_raw();\n        _assertClass(d, RegId);\n        var ptr3 = d.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*The 64-byte public key (x, y) recovered from 64-byte signature on 32-byte message.\n*/\nclass ECK1 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_eck1_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} sig_addr\n    * @param {RegId} msg_hash_addr\n    */\n    constructor(dst_addr, sig_addr, msg_hash_addr) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(sig_addr, RegId);\n        var ptr1 = sig_addr.__destroy_into_raw();\n        _assertClass(msg_hash_addr, RegId);\n        var ptr2 = msg_hash_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*The 64-byte Secp256r1 public key (x, y) recovered from 64-byte signature on 32-byte message.\n*/\nclass ECR1 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ecr1_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} sig_addr\n    * @param {RegId} msg_hash_addr\n    */\n    constructor(dst_addr, sig_addr, msg_hash_addr) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(sig_addr, RegId);\n        var ptr1 = sig_addr.__destroy_into_raw();\n        _assertClass(msg_hash_addr, RegId);\n        var ptr2 = msg_hash_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Verify ED25519 public key and signature match a 32-byte message.\n*/\nclass ED19 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ed19_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} pub_key_addr\n    * @param {RegId} sig_addr\n    * @param {RegId} msg_hash_addr\n    */\n    constructor(pub_key_addr, sig_addr, msg_hash_addr) {\n        _assertClass(pub_key_addr, RegId);\n        var ptr0 = pub_key_addr.__destroy_into_raw();\n        _assertClass(sig_addr, RegId);\n        var ptr1 = sig_addr.__destroy_into_raw();\n        _assertClass(msg_hash_addr, RegId);\n        var ptr2 = msg_hash_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Compares two registers for equality.\n*/\nclass EQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_eq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Raises one register to the power of another.\n*/\nclass EXP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_exp_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Raises one register to the power of an immediate value.\n*/\nclass EXPI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_expi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Set flag register to a register.\n*/\nclass FLAG {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_flag_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} value\n    */\n    constructor(value) {\n        _assertClass(value, RegId);\n        var ptr0 = value.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get metadata from memory.\n*/\nclass GM {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GM.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_gm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {Imm18} selector\n    */\n    constructor(dst, selector) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(selector, Imm18);\n        var ptr1 = selector.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n    /**\n    * Construct a `GM` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {GMArgs} args\n    * @returns {GM}\n    */\n    static from_args(ra, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        const ret = wasm$1.gm_from_args(ptr0, args);\n        return GM.__wrap(ret);\n    }\n}\n/**\n*Compares two registers for greater-than.\n*/\nclass GT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_gt_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get transaction fields.\n*/\nclass GTF {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GTF.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_gtf_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} arg\n    * @param {Imm12} selector\n    */\n    constructor(dst, arg, selector) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(arg, RegId);\n        var ptr1 = arg.__destroy_into_raw();\n        _assertClass(selector, Imm12);\n        var ptr2 = selector.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n    /**\n    * Construct a `GTF` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {GTFArgs} args\n    * @returns {GTF}\n    */\n    static from_args(ra, rb, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        const ret = wasm$1.gtf_from_args(ptr0, ptr1, args);\n        return GTF.__wrap(ret);\n    }\n}\n/**\n* Represents a 6-bit immediate value, guaranteed to be masked by construction.\n*/\nclass Imm06 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Imm06.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_imm06_free(ptr);\n    }\n}\n/**\n* Represents a 12-bit immediate value, guaranteed to be masked by construction.\n*/\nclass Imm12 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Imm12.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_imm12_free(ptr);\n    }\n}\n/**\n* Represents a 18-bit immediate value, guaranteed to be masked by construction.\n*/\nclass Imm18 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Imm18.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_imm18_free(ptr);\n    }\n}\n/**\n* Represents a 24-bit immediate value, guaranteed to be masked by construction.\n*/\nclass Imm24 {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Imm24.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_imm24_free(ptr);\n    }\n}\n/**\n* Representation of a single instruction for the interpreter.\n*\n* The opcode is represented in the tag (variant), or may be retrieved in the\n* form of an `Opcode` byte using the `opcode` method.\n*\n* The register and immediate data associated with the instruction is represented\n* within an inner unit type wrapper around the 3 remaining bytes.\n*/\nclass Instruction {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Instruction.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_instruction_free(ptr);\n    }\n    /**\n    * Convenience method for converting to bytes\n    * @returns {Uint8Array}\n    */\n    to_bytes() {\n        try {\n            const retptr = wasm$1.__wbindgen_add_to_stack_pointer(-16);\n            wasm$1.instruction_to_bytes(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v1 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm$1.__wbindgen_free(r0, r1 * 1, 1);\n            return v1;\n        } finally {\n            wasm$1.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Size of an instruction in bytes\n    * @returns {number}\n    */\n    static size() {\n        const ret = wasm$1.instruction_size();\n        return ret >>> 0;\n    }\n}\n/**\n*Jump.\n*/\nclass JI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ji_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} abs_target\n    */\n    constructor(abs_target) {\n        _assertClass(abs_target, Imm24);\n        var ptr0 = abs_target.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Dynamic jump.\n*/\nclass JMP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jmp_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} abs_target\n    */\n    constructor(abs_target) {\n        _assertClass(abs_target, RegId);\n        var ptr0 = abs_target.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Unconditional dynamic relative jump backwards, with a constant offset.\n*/\nclass JMPB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jmpb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dynamic\n    * @param {Imm18} fixed\n    */\n    constructor(dynamic, fixed) {\n        _assertClass(dynamic, RegId);\n        var ptr0 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm18);\n        var ptr1 = fixed.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*Unconditional dynamic relative jump forwards, with a constant offset.\n*/\nclass JMPF {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jmpf_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dynamic\n    * @param {Imm18} fixed\n    */\n    constructor(dynamic, fixed) {\n        _assertClass(dynamic, RegId);\n        var ptr0 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm18);\n        var ptr1 = fixed.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*Conditional dynamic jump.\n*/\nclass JNE {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jne_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} abs_target\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(abs_target, lhs, rhs) {\n        _assertClass(abs_target, RegId);\n        var ptr0 = abs_target.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Dynamic relative jump backwards, conditional on comparsion, with a constant offset.\n*/\nclass JNEB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jneb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_lhs\n    * @param {RegId} cond_rhs\n    * @param {RegId} dynamic\n    * @param {Imm06} fixed\n    */\n    constructor(cond_lhs, cond_rhs, dynamic, fixed) {\n        _assertClass(cond_lhs, RegId);\n        var ptr0 = cond_lhs.__destroy_into_raw();\n        _assertClass(cond_rhs, RegId);\n        var ptr1 = cond_rhs.__destroy_into_raw();\n        _assertClass(dynamic, RegId);\n        var ptr2 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm06);\n        var ptr3 = fixed.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n}\n/**\n*Dynamic relative jump forwards, conditional on comparsion, with a constant offset.\n*/\nclass JNEF {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnef_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_lhs\n    * @param {RegId} cond_rhs\n    * @param {RegId} dynamic\n    * @param {Imm06} fixed\n    */\n    constructor(cond_lhs, cond_rhs, dynamic, fixed) {\n        _assertClass(cond_lhs, RegId);\n        var ptr0 = cond_lhs.__destroy_into_raw();\n        _assertClass(cond_rhs, RegId);\n        var ptr1 = cond_rhs.__destroy_into_raw();\n        _assertClass(dynamic, RegId);\n        var ptr2 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm06);\n        var ptr3 = fixed.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n}\n/**\n*Conditional jump.\n*/\nclass JNEI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnei_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_lhs\n    * @param {RegId} cond_rhs\n    * @param {Imm12} abs_target\n    */\n    constructor(cond_lhs, cond_rhs, abs_target) {\n        _assertClass(cond_lhs, RegId);\n        var ptr0 = cond_lhs.__destroy_into_raw();\n        _assertClass(cond_rhs, RegId);\n        var ptr1 = cond_rhs.__destroy_into_raw();\n        _assertClass(abs_target, Imm12);\n        var ptr2 = abs_target.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Dynamic relative jump backwards, conditional against zero, with a constant offset.\n*/\nclass JNZB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnzb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_nz\n    * @param {RegId} dynamic\n    * @param {Imm12} fixed\n    */\n    constructor(cond_nz, dynamic, fixed) {\n        _assertClass(cond_nz, RegId);\n        var ptr0 = cond_nz.__destroy_into_raw();\n        _assertClass(dynamic, RegId);\n        var ptr1 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm12);\n        var ptr2 = fixed.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Dynamic relative jump forwards, conditional against zero, with a constant offset.\n*/\nclass JNZF {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnzf_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_nz\n    * @param {RegId} dynamic\n    * @param {Imm12} fixed\n    */\n    constructor(cond_nz, dynamic, fixed) {\n        _assertClass(cond_nz, RegId);\n        var ptr0 = cond_nz.__destroy_into_raw();\n        _assertClass(dynamic, RegId);\n        var ptr1 = dynamic.__destroy_into_raw();\n        _assertClass(fixed, Imm12);\n        var ptr2 = fixed.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Conditional jump against zero.\n*/\nclass JNZI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_jnzi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} cond_nz\n    * @param {Imm18} abs_target\n    */\n    constructor(cond_nz, abs_target) {\n        _assertClass(cond_nz, RegId);\n        var ptr0 = cond_nz.__destroy_into_raw();\n        _assertClass(abs_target, Imm18);\n        var ptr1 = abs_target.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*The keccak-256 hash of a slice.\n*/\nclass K256 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_k256_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} src_addr\n    * @param {RegId} len\n    */\n    constructor(dst_addr, src_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr1 = src_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*A byte is loaded from the specified address offset by an immediate value.\n*/\nclass LB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_lb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} addr\n    * @param {Imm12} offset\n    */\n    constructor(dst, addr, offset) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(addr, RegId);\n        var ptr1 = addr.__destroy_into_raw();\n        _assertClass(offset, Imm12);\n        var ptr2 = offset.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Load a contract's code as executable.\n*/\nclass LDC {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ldc_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} contract_id_addr\n    * @param {RegId} offset\n    * @param {RegId} len\n    */\n    constructor(contract_id_addr, offset, len) {\n        _assertClass(contract_id_addr, RegId);\n        var ptr0 = contract_id_addr.__destroy_into_raw();\n        _assertClass(offset, RegId);\n        var ptr1 = offset.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Log an event.\n*/\nclass LOG {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_log_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} a\n    * @param {RegId} b\n    * @param {RegId} c\n    * @param {RegId} d\n    */\n    constructor(a, b, c, d) {\n        _assertClass(a, RegId);\n        var ptr0 = a.__destroy_into_raw();\n        _assertClass(b, RegId);\n        var ptr1 = b.__destroy_into_raw();\n        _assertClass(c, RegId);\n        var ptr2 = c.__destroy_into_raw();\n        _assertClass(d, RegId);\n        var ptr3 = d.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Log data.\n*/\nclass LOGD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_logd_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} a\n    * @param {RegId} b\n    * @param {RegId} addr\n    * @param {RegId} len\n    */\n    constructor(a, b, addr, len) {\n        _assertClass(a, RegId);\n        var ptr0 = a.__destroy_into_raw();\n        _assertClass(b, RegId);\n        var ptr1 = b.__destroy_into_raw();\n        _assertClass(addr, RegId);\n        var ptr2 = addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr3 = len.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Compares two registers for less-than.\n*/\nclass LT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_lt_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*A word is loaded from the specified address offset by an immediate value.\n*/\nclass LW {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_lw_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} addr\n    * @param {Imm12} offset\n    */\n    constructor(dst, addr, offset) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(addr, RegId);\n        var ptr1 = addr.__destroy_into_raw();\n        _assertClass(offset, Imm12);\n        var ptr2 = offset.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Clear a variable number of bytes in memory.\n*/\nclass MCL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mcl_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} len\n    */\n    constructor(dst_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr1 = len.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Clear an immediate number of bytes in memory.\n*/\nclass MCLI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mcli_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} addr\n    * @param {Imm18} count\n    */\n    constructor(addr, count) {\n        _assertClass(addr, RegId);\n        var ptr0 = addr.__destroy_into_raw();\n        _assertClass(count, Imm18);\n        var ptr1 = count.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*Copy a variable number of bytes in memory.\n*/\nclass MCP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mcp_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} src_addr\n    * @param {RegId} len\n    */\n    constructor(dst_addr, src_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr1 = src_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Copy an immediate number of bytes in memory.\n*/\nclass MCPI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mcpi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} src_addr\n    * @param {Imm12} len\n    */\n    constructor(dst_addr, src_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr1 = src_addr.__destroy_into_raw();\n        _assertClass(len, Imm12);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Compare bytes in memory.\n*/\nclass MEQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_meq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} result\n    * @param {RegId} lhs_addr\n    * @param {RegId} rhs_addr\n    * @param {RegId} len\n    */\n    constructor(result, lhs_addr, rhs_addr, len) {\n        _assertClass(result, RegId);\n        var ptr0 = result.__destroy_into_raw();\n        _assertClass(lhs_addr, RegId);\n        var ptr1 = lhs_addr.__destroy_into_raw();\n        _assertClass(rhs_addr, RegId);\n        var ptr2 = rhs_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr3 = len.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Mints `amount` coins of the asset ID created from `sub_id` for the current contract.\n*/\nclass MINT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mint_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} amount\n    * @param {RegId} sub_id_addr\n    */\n    constructor(amount, sub_id_addr) {\n        _assertClass(amount, RegId);\n        var ptr0 = amount.__destroy_into_raw();\n        _assertClass(sub_id_addr, RegId);\n        var ptr1 = sub_id_addr.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Fused multiply-divide with arbitrary precision intermediate step.\n*/\nclass MLDV {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mldv_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} divisor\n    */\n    constructor(dst, mul_lhs, mul_rhs, divisor) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(divisor, RegId);\n        var ptr3 = divisor.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*The integer logarithm of a register.\n*/\nclass MLOG {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mlog_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Modulo remainder of two registers.\n*/\nclass MOD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mod_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Modulo remainder of a register and an immediate value.\n*/\nclass MODI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_modi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Copy from one register to another.\n*/\nclass MOVE {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_move_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} src\n    */\n    constructor(dst, src) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(src, RegId);\n        var ptr1 = src.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Copy immediate value into a register\n*/\nclass MOVI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_movi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {Imm18} val\n    */\n    constructor(dst, val) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(val, Imm18);\n        var ptr1 = val.__destroy_into_raw();\n        const ret = wasm$1.gm_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 18-bit immediate value.\n    * @returns {Imm18}\n    */\n    imm18() {\n        const ret = wasm$1.gm_imm18(this.__wbg_ptr);\n        return Imm18.__wrap(ret);\n    }\n}\n/**\n*The integer root of a register.\n*/\nclass MROO {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mroo_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Multiplies two registers.\n*/\nclass MUL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mul_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Multiplies a register and an immediate value.\n*/\nclass MULI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_muli_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n* Additional arguments for WDOP and WQOP instructions.\n*/\nclass MathArgs {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mathargs_free(ptr);\n    }\n    /**\n    * The operation to perform\n    * @returns {MathOp}\n    */\n    get op() {\n        const ret = wasm$1.__wbg_get_mathargs_op(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * The operation to perform\n    * @param {MathOp} arg0\n    */\n    set op(arg0) {\n        wasm$1.__wbg_set_mathargs_op(this.__wbg_ptr, arg0);\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_rhs() {\n        const ret = wasm$1.__wbg_get_compareargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_rhs(arg0) {\n        wasm$1.__wbg_set_compareargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n}\n/**\n* Additional arguments for WDML and WQML instructions.\n*/\nclass MulArgs {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_mulargs_free(ptr);\n    }\n    /**\n    * Load LHSS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_lhs() {\n        const ret = wasm$1.__wbg_get_compareargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load LHSS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_lhs(arg0) {\n        wasm$1.__wbg_set_compareargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @returns {boolean}\n    */\n    get indirect_rhs() {\n        const ret = wasm$1.__wbg_get_mulargs_indirect_rhs(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    * Load RHS from register if true, otherwise zero-extend register value\n    * @param {boolean} arg0\n    */\n    set indirect_rhs(arg0) {\n        wasm$1.__wbg_set_mulargs_indirect_rhs(this.__wbg_ptr, arg0);\n    }\n}\n/**\n*Performs no operation.\n*/\nclass NOOP {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_noop_free(ptr);\n    }\n    /**\n    * Construct the instruction.\n    */\n    constructor() {\n        const ret = wasm$1.noop_new_typescript();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n}\n/**\n*Bitwise NOT a register.\n*/\nclass NOT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_not_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} arg\n    */\n    constructor(dst, arg) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(arg, RegId);\n        var ptr1 = arg.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise ORs two registers.\n*/\nclass OR {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_or_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise ORs a register and an immediate value.\n*/\nclass ORI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ori_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Pop a bitmask-selected set of registers in range 40..64 to the stack.\n*/\nclass POPH {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_poph_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} bitmask\n    */\n    constructor(bitmask) {\n        _assertClass(bitmask, Imm24);\n        var ptr0 = bitmask.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Pop a bitmask-selected set of registers in range 16..40 to the stack.\n*/\nclass POPL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_popl_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} bitmask\n    */\n    constructor(bitmask) {\n        _assertClass(bitmask, Imm24);\n        var ptr0 = bitmask.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Push a bitmask-selected set of registers in range 40..64 to the stack.\n*/\nclass PSHH {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_pshh_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} bitmask\n    */\n    constructor(bitmask) {\n        _assertClass(bitmask, Imm24);\n        var ptr0 = bitmask.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n*Push a bitmask-selected set of registers in range 16..40 to the stack.\n*/\nclass PSHL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_pshl_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {Imm24} bitmask\n    */\n    constructor(bitmask) {\n        _assertClass(bitmask, Imm24);\n        var ptr0 = bitmask.__destroy_into_raw();\n        const ret = wasm$1.cfei_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the 24-bit immediate value.\n    * @returns {Imm24}\n    */\n    imm24() {\n        const ret = wasm$1.cfei_imm24(this.__wbg_ptr);\n        return Imm24.__wrap(ret);\n    }\n}\n/**\n* Describe a panic reason with the instruction that generated it\n*/\nclass PanicInstruction {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_panicinstruction_free(ptr);\n    }\n    /**\n    * Represents an error described by a reason and an instruction.\n    * @param {PanicReason} reason\n    * @param {number} instruction\n    */\n    constructor(reason, instruction) {\n        const ret = wasm$1.panicinstruction_error_typescript(reason, instruction);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Underlying panic reason\n    * @returns {PanicReason}\n    */\n    reason() {\n        const ret = wasm$1.panicinstruction_reason(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * Underlying instruction\n    * @returns {number}\n    */\n    instruction() {\n        const ret = wasm$1.panicinstruction_instruction(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n/**\n*Return from context.\n*/\nclass RET {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_ret_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} value\n    */\n    constructor(value) {\n        _assertClass(value, RegId);\n        var ptr0 = value.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Return from context with data.\n*/\nclass RETD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_retd_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} addr\n    * @param {RegId} len\n    */\n    constructor(addr, len) {\n        _assertClass(addr, RegId);\n        var ptr0 = addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr1 = len.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Halt execution, reverting state changes and returning a value.\n*/\nclass RVRT {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_rvrt_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} value\n    */\n    constructor(value) {\n        _assertClass(value, RegId);\n        var ptr0 = value.__destroy_into_raw();\n        const ret = wasm$1.aloc_new_typescript(ptr0);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n* Represents a 6-bit register ID, guaranteed to be masked by construction.\n*/\nclass RegId {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(RegId.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_regid_free(ptr);\n    }\n    /**\n    * Construct a register ID from the given value.\n    *\n    * Returns `None` if the value is outside the 6-bit value range.\n    * @param {number} u\n    * @returns {RegId | undefined}\n    */\n    static new_checked(u) {\n        const ret = wasm$1.regid_new_checked(u);\n        return ret === 0 ? undefined : RegId.__wrap(ret);\n    }\n    /**\n    * Received balance for this context.\n    * @returns {RegId}\n    */\n    static bal() {\n        const ret = wasm$1.regid_bal();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Remaining gas in the context.\n    * @returns {RegId}\n    */\n    static cgas() {\n        const ret = wasm$1.regid_cgas();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Error codes for particular operations.\n    * @returns {RegId}\n    */\n    static err() {\n        const ret = wasm$1.regid_err();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Flags register.\n    * @returns {RegId}\n    */\n    static flag() {\n        const ret = wasm$1.regid_flag();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Frame pointer. Memory address of beginning of current call frame.\n    * @returns {RegId}\n    */\n    static fp() {\n        const ret = wasm$1.regid_fp();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Remaining gas globally.\n    * @returns {RegId}\n    */\n    static ggas() {\n        const ret = wasm$1.regid_ggas();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Heap pointer. Memory address below the current bottom of the heap (points to free\n    * memory).\n    * @returns {RegId}\n    */\n    static hp() {\n        const ret = wasm$1.regid_hp();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Instructions start. Pointer to the start of the currently-executing code.\n    * @returns {RegId}\n    */\n    static is() {\n        const ret = wasm$1.regid_is();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Contains overflow/underflow of addition, subtraction, and multiplication.\n    * @returns {RegId}\n    */\n    static of() {\n        const ret = wasm$1.regid_of();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Contains one (1), for convenience.\n    * @returns {RegId}\n    */\n    static one() {\n        const ret = wasm$1.regid_one();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * The program counter. Memory address of the current instruction.\n    * @returns {RegId}\n    */\n    static pc() {\n        const ret = wasm$1.regid_pc();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Return value or pointer.\n    * @returns {RegId}\n    */\n    static ret() {\n        const ret = wasm$1.regid_ret();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Return value length in bytes.\n    * @returns {RegId}\n    */\n    static retl() {\n        const ret = wasm$1.regid_retl();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Stack pointer. Memory address on top of current writable stack area (points to\n    * free memory).\n    * @returns {RegId}\n    */\n    static sp() {\n        const ret = wasm$1.regid_sp();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Stack start pointer. Memory address of bottom of current writable stack area.\n    * @returns {RegId}\n    */\n    static spp() {\n        const ret = wasm$1.regid_spp();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Smallest writable register.\n    * @returns {RegId}\n    */\n    static writable() {\n        const ret = wasm$1.regid_writable();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Contains zero (0), for convenience.\n    * @returns {RegId}\n    */\n    static zero() {\n        const ret = wasm$1.regid_zero();\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Construct a register ID from the given value.\n    *\n    * The given value will be masked to 6 bits.\n    * @param {number} u\n    */\n    constructor(u) {\n        const ret = wasm$1.regid_new_typescript(u);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * A const alternative to the `Into<u8>` implementation.\n    * @returns {number}\n    */\n    to_u8() {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm$1.regid_to_u8(ptr);\n        return ret;\n    }\n}\n/**\n*The SHA-2-256 hash of a slice.\n*/\nclass S256 {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_s256_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} src_addr\n    * @param {RegId} len\n    */\n    constructor(dst_addr, src_addr, len) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr1 = src_addr.__destroy_into_raw();\n        _assertClass(len, RegId);\n        var ptr2 = len.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Write the least significant byte of a register to memory.\n*/\nclass SB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sb_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} addr\n    * @param {RegId} value\n    * @param {Imm12} offset\n    */\n    constructor(addr, value, offset) {\n        _assertClass(addr, RegId);\n        var ptr0 = addr.__destroy_into_raw();\n        _assertClass(value, RegId);\n        var ptr1 = value.__destroy_into_raw();\n        _assertClass(offset, Imm12);\n        var ptr2 = offset.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Clear a series of slots from contract storage.\n*/\nclass SCWQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_scwq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} key_addr\n    * @param {RegId} status\n    * @param {RegId} lenq\n    */\n    constructor(key_addr, status, lenq) {\n        _assertClass(key_addr, RegId);\n        var ptr0 = key_addr.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(lenq, RegId);\n        var ptr2 = lenq.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Left shifts a register by a register.\n*/\nclass SLL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sll_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Left shifts a register by an immediate value.\n*/\nclass SLLI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_slli_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Send a message to recipient address with call abi, coins, and output.\n*/\nclass SMO {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_smo_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} recipient_addr\n    * @param {RegId} data_addr\n    * @param {RegId} data_len\n    * @param {RegId} coins\n    */\n    constructor(recipient_addr, data_addr, data_len, coins) {\n        _assertClass(recipient_addr, RegId);\n        var ptr0 = recipient_addr.__destroy_into_raw();\n        _assertClass(data_addr, RegId);\n        var ptr1 = data_addr.__destroy_into_raw();\n        _assertClass(data_len, RegId);\n        var ptr2 = data_len.__destroy_into_raw();\n        _assertClass(coins, RegId);\n        var ptr3 = coins.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Right shifts a register by a register.\n*/\nclass SRL {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_srl_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Right shifts a register by an immediate value.\n*/\nclass SRLI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_srli_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Load a word from contract storage.\n*/\nclass SRW {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_srw_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} status\n    * @param {RegId} key_addr\n    */\n    constructor(dst, status, key_addr) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(key_addr, RegId);\n        var ptr2 = key_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Load a series of 32 byte slots from contract storage.\n*/\nclass SRWQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_srwq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst_addr\n    * @param {RegId} status\n    * @param {RegId} key_addr\n    * @param {RegId} lenq\n    */\n    constructor(dst_addr, status, key_addr, lenq) {\n        _assertClass(dst_addr, RegId);\n        var ptr0 = dst_addr.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(key_addr, RegId);\n        var ptr2 = key_addr.__destroy_into_raw();\n        _assertClass(lenq, RegId);\n        var ptr3 = lenq.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Subtracts two registers.\n*/\nclass SUB {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sub_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Subtracts a register and an immediate value.\n*/\nclass SUBI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_subi_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Write a register to memory.\n*/\nclass SW {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sw_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} addr\n    * @param {RegId} value\n    * @param {Imm12} offset\n    */\n    constructor(addr, value, offset) {\n        _assertClass(addr, RegId);\n        var ptr0 = addr.__destroy_into_raw();\n        _assertClass(value, RegId);\n        var ptr1 = value.__destroy_into_raw();\n        _assertClass(offset, Imm12);\n        var ptr2 = offset.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n/**\n*Store a word in contract storage.\n*/\nclass SWW {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_sww_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} key_addr\n    * @param {RegId} status\n    * @param {RegId} value\n    */\n    constructor(key_addr, status, value) {\n        _assertClass(key_addr, RegId);\n        var ptr0 = key_addr.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(value, RegId);\n        var ptr2 = value.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Store a series of 32 byte slots in contract storage.\n*/\nclass SWWQ {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_swwq_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} key_addr\n    * @param {RegId} status\n    * @param {RegId} src_addr\n    * @param {RegId} lenq\n    */\n    constructor(key_addr, status, src_addr, lenq) {\n        _assertClass(key_addr, RegId);\n        var ptr0 = key_addr.__destroy_into_raw();\n        _assertClass(status, RegId);\n        var ptr1 = status.__destroy_into_raw();\n        _assertClass(src_addr, RegId);\n        var ptr2 = src_addr.__destroy_into_raw();\n        _assertClass(lenq, RegId);\n        var ptr3 = lenq.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Get timestamp of block at given height.\n*/\nclass TIME {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_time_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} heigth\n    */\n    constructor(dst, heigth) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(heigth, RegId);\n        var ptr1 = heigth.__destroy_into_raw();\n        const ret = wasm$1.bhsh_new_typescript(ptr0, ptr1);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Transfer coins to a contract unconditionally.\n*/\nclass TR {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_tr_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} contract_id_addr\n    * @param {RegId} amount\n    * @param {RegId} asset_id_addr\n    */\n    constructor(contract_id_addr, amount, asset_id_addr) {\n        _assertClass(contract_id_addr, RegId);\n        var ptr0 = contract_id_addr.__destroy_into_raw();\n        _assertClass(amount, RegId);\n        var ptr1 = amount.__destroy_into_raw();\n        _assertClass(asset_id_addr, RegId);\n        var ptr2 = asset_id_addr.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Transfer coins to a variable output.\n*/\nclass TRO {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_tro_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} contract_id_addr\n    * @param {RegId} output_index\n    * @param {RegId} amount\n    * @param {RegId} asset_id_addr\n    */\n    constructor(contract_id_addr, output_index, amount, asset_id_addr) {\n        _assertClass(contract_id_addr, RegId);\n        var ptr0 = contract_id_addr.__destroy_into_raw();\n        _assertClass(output_index, RegId);\n        var ptr1 = output_index.__destroy_into_raw();\n        _assertClass(amount, RegId);\n        var ptr2 = amount.__destroy_into_raw();\n        _assertClass(asset_id_addr, RegId);\n        var ptr3 = asset_id_addr.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*AddMod 128bit\n*/\nclass WDAM {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdam_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} add_lhs\n    * @param {RegId} add_rhs\n    * @param {RegId} modulo\n    */\n    constructor(dst, add_lhs, add_rhs, modulo) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(add_lhs, RegId);\n        var ptr1 = add_lhs.__destroy_into_raw();\n        _assertClass(add_rhs, RegId);\n        var ptr2 = add_rhs.__destroy_into_raw();\n        _assertClass(modulo, RegId);\n        var ptr3 = modulo.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Compare 128bit integers\n*/\nclass WDCM {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WDCM.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdcm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WDCM` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {CompareArgs} args\n    * @returns {WDCM}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, CompareArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdcm_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WDCM.__wrap(ret);\n    }\n}\n/**\n*Divide 128bit\n*/\nclass WDDV {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WDDV.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wddv_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WDDV` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {DivArgs} args\n    * @returns {WDDV}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, DivArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wddv_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WDDV.__wrap(ret);\n    }\n}\n/**\n*Fused multiply-divide 128bit\n*/\nclass WDMD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdmd_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} divisor\n    */\n    constructor(dst, mul_lhs, mul_rhs, divisor) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(divisor, RegId);\n        var ptr3 = divisor.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Multiply 128bit\n*/\nclass WDML {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WDML.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdml_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WDML` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {MulArgs} args\n    * @returns {WDML}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, MulArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdml_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WDML.__wrap(ret);\n    }\n}\n/**\n*MulMod 128bit\n*/\nclass WDMM {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdmm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} modulo\n    */\n    constructor(dst, mul_lhs, mul_rhs, modulo) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(modulo, RegId);\n        var ptr3 = modulo.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Simple 128bit operations\n*/\nclass WDOP {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WDOP.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wdop_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WDOP` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {MathArgs} args\n    * @returns {WDOP}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, MathArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdop_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WDOP.__wrap(ret);\n    }\n}\n/**\n*AddMod 256bit\n*/\nclass WQAM {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqam_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} add_lhs\n    * @param {RegId} add_rhs\n    * @param {RegId} modulo\n    */\n    constructor(dst, add_lhs, add_rhs, modulo) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(add_lhs, RegId);\n        var ptr1 = add_lhs.__destroy_into_raw();\n        _assertClass(add_rhs, RegId);\n        var ptr2 = add_rhs.__destroy_into_raw();\n        _assertClass(modulo, RegId);\n        var ptr3 = modulo.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Compare 256bit integers\n*/\nclass WQCM {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WQCM.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqcm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WQCM` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {CompareArgs} args\n    * @returns {WQCM}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, CompareArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdcm_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WQCM.__wrap(ret);\n    }\n}\n/**\n*Divide 256bit\n*/\nclass WQDV {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WQDV.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqdv_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WQDV` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {DivArgs} args\n    * @returns {WQDV}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, DivArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wddv_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WQDV.__wrap(ret);\n    }\n}\n/**\n*Fused multiply-divide 256bit\n*/\nclass WQMD {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqmd_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} divisor\n    */\n    constructor(dst, mul_lhs, mul_rhs, divisor) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(divisor, RegId);\n        var ptr3 = divisor.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Multiply 256bit\n*/\nclass WQML {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WQML.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqml_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WQML` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {MulArgs} args\n    * @returns {WQML}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, MulArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdml_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WQML.__wrap(ret);\n    }\n}\n/**\n*MulMod 256bit\n*/\nclass WQMM {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqmm_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} mul_lhs\n    * @param {RegId} mul_rhs\n    * @param {RegId} modulo\n    */\n    constructor(dst, mul_lhs, mul_rhs, modulo) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(mul_lhs, RegId);\n        var ptr1 = mul_lhs.__destroy_into_raw();\n        _assertClass(mul_rhs, RegId);\n        var ptr2 = mul_rhs.__destroy_into_raw();\n        _assertClass(modulo, RegId);\n        var ptr3 = modulo.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register D.\n    * @returns {RegId}\n    */\n    rd() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Simple 256bit operations\n*/\nclass WQOP {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WQOP.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_wqop_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    * @param {Imm06} flags\n    */\n    constructor(dst, lhs, rhs, flags) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        _assertClass(flags, Imm06);\n        var ptr3 = flags.__destroy_into_raw();\n        const ret = wasm$1.call_new_typescript(ptr0, ptr1, ptr2, ptr3);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 6-bit immediate value.\n    * @returns {Imm06}\n    */\n    imm06() {\n        const ret = wasm$1.call_rd(this.__wbg_ptr);\n        return Imm06.__wrap(ret);\n    }\n    /**\n    * Construct a `WQOP` instruction from its arguments.\n    * @param {RegId} ra\n    * @param {RegId} rb\n    * @param {RegId} rc\n    * @param {MathArgs} args\n    * @returns {WQOP}\n    */\n    static from_args(ra, rb, rc, args) {\n        _assertClass(ra, RegId);\n        var ptr0 = ra.__destroy_into_raw();\n        _assertClass(rb, RegId);\n        var ptr1 = rb.__destroy_into_raw();\n        _assertClass(rc, RegId);\n        var ptr2 = rc.__destroy_into_raw();\n        _assertClass(args, MathArgs);\n        var ptr3 = args.__destroy_into_raw();\n        const ret = wasm$1.wdop_from_args(ptr0, ptr1, ptr2, ptr3);\n        return WQOP.__wrap(ret);\n    }\n}\n/**\n*Bitwise XORs two registers.\n*/\nclass XOR {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_xor_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {RegId} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, RegId);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.add_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register C.\n    * @returns {RegId}\n    */\n    rc() {\n        const ret = wasm$1.add_rc(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n}\n/**\n*Bitwise XORs a register and an immediate value.\n*/\nclass XORI {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm$1.__wbg_xori_free(ptr);\n    }\n    /**\n    * Construct the instruction from its parts.\n    * @param {RegId} dst\n    * @param {RegId} lhs\n    * @param {Imm12} rhs\n    */\n    constructor(dst, lhs, rhs) {\n        _assertClass(dst, RegId);\n        var ptr0 = dst.__destroy_into_raw();\n        _assertClass(lhs, RegId);\n        var ptr1 = lhs.__destroy_into_raw();\n        _assertClass(rhs, Imm12);\n        var ptr2 = rhs.__destroy_into_raw();\n        const ret = wasm$1.addi_new_typescript(ptr0, ptr1, ptr2);\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Access the ID for register A.\n    * @returns {RegId}\n    */\n    ra() {\n        const ret = wasm$1.add_ra(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the ID for register B.\n    * @returns {RegId}\n    */\n    rb() {\n        const ret = wasm$1.add_rb(this.__wbg_ptr);\n        return RegId.__wrap(ret);\n    }\n    /**\n    * Access the 12-bit immediate value.\n    * @returns {Imm12}\n    */\n    imm12() {\n        const ret = wasm$1.addi_imm12(this.__wbg_ptr);\n        return Imm12.__wrap(ret);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm$1 = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm$1;\n}\n\nfunction initSync(module) {\n    if (wasm$1 !== undefined) return wasm$1;\n\n    const imports = __wbg_get_imports();\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm$1 !== undefined) return wasm$1;\n    const imports = __wbg_get_imports();\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nfunction _loadWasmModule (sync, filepath, src, imports) {\n  function _instantiateOrCompile(source, imports, stream) {\n    var instantiateFunc = stream ? WebAssembly.instantiateStreaming : WebAssembly.instantiate;\n    var compileFunc = stream ? WebAssembly.compileStreaming : WebAssembly.compile;\n\n    if (imports) {\n      return instantiateFunc(source, imports)\n    } else {\n      return compileFunc(source)\n    }\n  }\n\n  \nvar buf = null;\nvar isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\nif (isNode) {\n  \nbuf = Buffer.from(src, 'base64');\n\n} else {\n  \nvar raw = globalThis.atob(src);\nvar rawLength = raw.length;\nbuf = new Uint8Array(new ArrayBuffer(rawLength));\nfor(var i = 0; i < rawLength; i++) {\n   buf[i] = raw.charCodeAt(i);\n}\n\n}\n\n\n  if(sync) {\n    var mod = new WebAssembly.Module(buf);\n    return imports ? new WebAssembly.Instance(mod, imports) : mod\n  } else {\n    return _instantiateOrCompile(buf, imports, false)\n  }\n}\n\nfunction wasm(imports){return _loadWasmModule(1, null, '', imports)}\n\nasync function initWasm () {\n  return await __wbg_init(wasm());\n}\n\n/**\n * calling it right away for pre-caching\n * the wasm async initialization at startup\n */\ninitWasm();\n\nexports.ADD = ADD;\nexports.ADDI = ADDI;\nexports.ALOC = ALOC;\nexports.AND = AND;\nexports.ANDI = ANDI;\nexports.BAL = BAL;\nexports.BHEI = BHEI;\nexports.BHSH = BHSH;\nexports.BURN = BURN;\nexports.CALL = CALL;\nexports.CB = CB;\nexports.CCP = CCP;\nexports.CFE = CFE;\nexports.CFEI = CFEI;\nexports.CFS = CFS;\nexports.CFSI = CFSI;\nexports.CROO = CROO;\nexports.CSIZ = CSIZ;\nexports.CompareArgs = CompareArgs;\nexports.CompareMode = CompareMode;\nexports.DIV = DIV;\nexports.DIVI = DIVI;\nexports.DivArgs = DivArgs;\nexports.ECAL = ECAL;\nexports.ECK1 = ECK1;\nexports.ECR1 = ECR1;\nexports.ED19 = ED19;\nexports.EQ = EQ;\nexports.EXP = EXP;\nexports.EXPI = EXPI;\nexports.FLAG = FLAG;\nexports.GM = GM;\nexports.GMArgs = GMArgs;\nexports.GT = GT;\nexports.GTF = GTF;\nexports.GTFArgs = GTFArgs;\nexports.Imm06 = Imm06;\nexports.Imm12 = Imm12;\nexports.Imm18 = Imm18;\nexports.Imm24 = Imm24;\nexports.Instruction = Instruction;\nexports.JI = JI;\nexports.JMP = JMP;\nexports.JMPB = JMPB;\nexports.JMPF = JMPF;\nexports.JNE = JNE;\nexports.JNEB = JNEB;\nexports.JNEF = JNEF;\nexports.JNEI = JNEI;\nexports.JNZB = JNZB;\nexports.JNZF = JNZF;\nexports.JNZI = JNZI;\nexports.K256 = K256;\nexports.LB = LB;\nexports.LDC = LDC;\nexports.LOG = LOG;\nexports.LOGD = LOGD;\nexports.LT = LT;\nexports.LW = LW;\nexports.MCL = MCL;\nexports.MCLI = MCLI;\nexports.MCP = MCP;\nexports.MCPI = MCPI;\nexports.MEQ = MEQ;\nexports.MINT = MINT;\nexports.MLDV = MLDV;\nexports.MLOG = MLOG;\nexports.MOD = MOD;\nexports.MODI = MODI;\nexports.MOVE = MOVE;\nexports.MOVI = MOVI;\nexports.MROO = MROO;\nexports.MUL = MUL;\nexports.MULI = MULI;\nexports.MathArgs = MathArgs;\nexports.MathOp = MathOp;\nexports.MulArgs = MulArgs;\nexports.NOOP = NOOP;\nexports.NOT = NOT;\nexports.OR = OR;\nexports.ORI = ORI;\nexports.POPH = POPH;\nexports.POPL = POPL;\nexports.PSHH = PSHH;\nexports.PSHL = PSHL;\nexports.PanicInstruction = PanicInstruction;\nexports.PanicReason = PanicReason;\nexports.RET = RET;\nexports.RETD = RETD;\nexports.RVRT = RVRT;\nexports.RegId = RegId;\nexports.S256 = S256;\nexports.SB = SB;\nexports.SCWQ = SCWQ;\nexports.SLL = SLL;\nexports.SLLI = SLLI;\nexports.SMO = SMO;\nexports.SRL = SRL;\nexports.SRLI = SRLI;\nexports.SRW = SRW;\nexports.SRWQ = SRWQ;\nexports.SUB = SUB;\nexports.SUBI = SUBI;\nexports.SW = SW;\nexports.SWW = SWW;\nexports.SWWQ = SWWQ;\nexports.TIME = TIME;\nexports.TR = TR;\nexports.TRO = TRO;\nexports.WDAM = WDAM;\nexports.WDCM = WDCM;\nexports.WDDV = WDDV;\nexports.WDMD = WDMD;\nexports.WDML = WDML;\nexports.WDMM = WDMM;\nexports.WDOP = WDOP;\nexports.WQAM = WQAM;\nexports.WQCM = WQCM;\nexports.WQDV = WQDV;\nexports.WQMD = WQMD;\nexports.WQML = WQML;\nexports.WQMM = WQMM;\nexports.WQOP = WQOP;\nexports.XOR = XOR;\nexports.XORI = XORI;\nexports.add = add;\nexports.addi = addi;\nexports.aloc = aloc;\nexports.and = and;\nexports.andi = andi;\nexports.bal = bal;\nexports.bhei = bhei;\nexports.bhsh = bhsh;\nexports.burn = burn;\nexports.call = call;\nexports.cb = cb;\nexports.ccp = ccp;\nexports.cfe = cfe;\nexports.cfei = cfei;\nexports.cfs = cfs;\nexports.cfsi = cfsi;\nexports.croo = croo;\nexports.csiz = csiz;\nexports.div = div;\nexports.divi = divi;\nexports.ecal = ecal;\nexports.eck1 = eck1;\nexports.ecr1 = ecr1;\nexports.ed19 = ed19;\nexports.eq = eq;\nexports.exp = exp;\nexports.expi = expi;\nexports.flag = flag;\nexports.gm = gm;\nexports.gm_args = gm_args;\nexports.gt = gt;\nexports.gtf = gtf;\nexports.gtf_args = gtf_args;\nexports.initSync = initSync;\nexports.initWasm = initWasm;\nexports.ji = ji;\nexports.jmp = jmp;\nexports.jmpb = jmpb;\nexports.jmpf = jmpf;\nexports.jne = jne;\nexports.jneb = jneb;\nexports.jnef = jnef;\nexports.jnei = jnei;\nexports.jnzb = jnzb;\nexports.jnzf = jnzf;\nexports.jnzi = jnzi;\nexports.k256 = k256;\nexports.lb = lb;\nexports.ldc = ldc;\nexports.log = log;\nexports.logd = logd;\nexports.lt = lt;\nexports.lw = lw;\nexports.mcl = mcl;\nexports.mcli = mcli;\nexports.mcp = mcp;\nexports.mcpi = mcpi;\nexports.meq = meq;\nexports.mint = mint;\nexports.mldv = mldv;\nexports.mlog = mlog;\nexports.mod_ = mod_;\nexports.modi = modi;\nexports.move_ = move_;\nexports.movi = movi;\nexports.mroo = mroo;\nexports.mul = mul;\nexports.muli = muli;\nexports.noop = noop;\nexports.not = not;\nexports.or = or;\nexports.ori = ori;\nexports.poph = poph;\nexports.popl = popl;\nexports.pshh = pshh;\nexports.pshl = pshl;\nexports.ret = ret;\nexports.retd = retd;\nexports.rvrt = rvrt;\nexports.s256 = s256;\nexports.sb = sb;\nexports.scwq = scwq;\nexports.sll = sll;\nexports.slli = slli;\nexports.smo = smo;\nexports.srl = srl;\nexports.srli = srli;\nexports.srw = srw;\nexports.srwq = srwq;\nexports.sub = sub;\nexports.subi = subi;\nexports.sw = sw;\nexports.sww = sww;\nexports.swwq = swwq;\nexports.time = time;\nexports.tr = tr;\nexports.tro = tro;\nexports.wdam = wdam;\nexports.wdcm = wdcm;\nexports.wdcm_args = wdcm_args;\nexports.wddv = wddv;\nexports.wddv_args = wddv_args;\nexports.wdmd = wdmd;\nexports.wdml = wdml;\nexports.wdml_args = wdml_args;\nexports.wdmm = wdmm;\nexports.wdop = wdop;\nexports.wdop_args = wdop_args;\nexports.wqam = wqam;\nexports.wqcm = wqcm;\nexports.wqcm_args = wqcm_args;\nexports.wqdv = wqdv;\nexports.wqdv_args = wqdv_args;\nexports.wqmd = wqmd;\nexports.wqml = wqml;\nexports.wqml_args = wqml_args;\nexports.wqmm = wqmm;\nexports.wqop = wqop;\nexports.wqop_args = wqop_args;\nexports.xor = xor;\nexports.xori = xori;\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\n// The file will throw on node.js 14 and earlier.\n// @ts-ignore\nimport * as nc from 'node:crypto';\nexport const crypto =\n  nc && typeof nc === 'object' && 'webcrypto' in nc ? (nc.webcrypto as any) : undefined;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, Input, u32 } from './utils.js';\n\n// RFC 7914 Scrypt KDF\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: Input, salt: Input, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  assertNumber(N);\n  assertNumber(r);\n  assertNumber(p);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  assertNumber(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n  if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n    throw new Error(\n      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'\n    );\n  }\n  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`\n    );\n  }\n  // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: Input,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  B.fill(0);\n  V.fill(0);\n  tmp.fill(0);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, () => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, () => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","export function getBuiltinVersions() {\n  return {\n    FORC: '0.49.3',\n    FUEL_CORE: '0.22.1',\n    FUELS: '0.79.0',\n  };\n}\n","function parseVersion(version: string): { major: number; minor: number; patch: number } {\n  const [major, minor, patch] = version.split('.').map((v) => parseInt(v, 10));\n  return { major, minor, patch };\n}\n\nfunction versionDiffs(\n  version1: string,\n  version2: string\n): { major: number; minor: number; patch: number; fullVersionDiff: number } {\n  const semver1 = parseVersion(version1);\n  const semver2 = parseVersion(version2);\n  const major = semver1.major - semver2.major;\n  const minor = semver1.minor - semver2.minor;\n  const patch = semver1.patch - semver2.patch;\n  return {\n    major,\n    minor,\n    patch,\n    fullVersionDiff: major || minor || patch,\n  };\n}\n\nexport function gt(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff > 0;\n}\n\nexport function eq(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff === 0;\n}\n\nexport function majorEq(version1: string, version2: string): boolean {\n  const { major } = versionDiffs(version1, version2);\n  return major === 0;\n}\n\nexport function minorEq(version1: string, version2: string): boolean {\n  const { minor } = versionDiffs(version1, version2);\n  return minor === 0;\n}\n\nexport function patchEq(version1: string, version2: string): boolean {\n  const { patch } = versionDiffs(version1, version2);\n  return patch === 0;\n}\n","import { getBuiltinVersions } from './getBuiltinVersions';\nimport { majorEq, minorEq, patchEq } from './semver';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  if (/^\\d+\\.\\d+\\.\\d+\\D+/m.test(networkVersion)) {\n    // eslint-disable-next-line no-console\n    console.warn(`You're running against an unreleased fuel-core version: ${networkVersion}. Things may work as expected, but it's not guaranteed. Please use a released version.      \nThis unreleased fuel-core build may include features and updates not yet supported by this version of the TS-SDK.`);\n  }\n\n  return {\n    supportedVersion,\n    isMajorSupported: majorEq(networkVersion, supportedVersion),\n    isMinorSupported: minorEq(networkVersion, supportedVersion),\n    isPatchSupported: patchEq(networkVersion, supportedVersion),\n  };\n}\n","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/packages/fuel-core/VERSION`\n    `FORC` — comes from `/packages/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/checkFuelCoreVersionCompatibility';\n","/**\n * Represents the different error codes thrown by the SDK\n */\nexport enum ErrorCode {\n  // abi\n  NO_ABIS_FOUND = 'no-abis-found',\n  ABI_TYPES_AND_VALUES_MISMATCH = 'abi-types-and-values-mismatch',\n  ABI_MAIN_METHOD_MISSING = 'abi-main-method-missing',\n  INVALID_COMPONENT = 'invalid-component',\n  FRAGMENT_NOT_FOUND = 'fragment-not-found',\n  CONFIGURABLE_NOT_FOUND = 'configurable-not-found',\n  TYPE_NOT_FOUND = 'type-not-found',\n  TYPE_NOT_SUPPORTED = 'type-not-supported',\n  INVALID_DECODE_VALUE = 'invalid-decode-value',\n  JSON_ABI_ERROR = 'json-abi-error',\n  TYPE_ID_NOT_FOUND = 'type-id-not-found',\n  BIN_FILE_NOT_FOUND = 'bin-file-not-found',\n  CODER_NOT_FOUND = 'coder-not-found',\n  INVALID_DATA = 'invalid-data',\n  FUNCTION_NOT_FOUND = 'function-not-found',\n  UNSUPPORTED_ENCODING_VERSION = 'unsupported-encoding-version',\n\n  // address\n  INVALID_BECH32_ADDRESS = 'invalid-bech32-address',\n  INVALID_EVM_ADDRESS = 'invalid-evm-address',\n  INVALID_B256_ADDRESS = 'invalid-b256-address',\n\n  // provider\n  INVALID_URL = 'invalid-url',\n  CHAIN_INFO_CACHE_EMPTY = 'chain-info-cache-empty',\n  NODE_INFO_CACHE_EMPTY = 'node-info-cache-empty',\n  MISSING_PROVIDER = 'missing-provider',\n  INVALID_PROVIDER = 'invalid-provider',\n  CONNECTION_REFUSED = 'connection-refused',\n\n  // wallet\n  INVALID_PUBLIC_KEY = 'invalid-public-key',\n  INSUFFICIENT_BALANCE = 'insufficient-balance',\n  WALLET_MANAGER_ERROR = 'wallet-manager-error',\n  HD_WALLET_ERROR = 'hd-wallet-error',\n  MISSING_CONNECTOR = 'missing-connector',\n\n  // errors\n  PARSE_FAILED = 'parse-failed',\n  ENCODE_ERROR = 'encode-error',\n  DECODE_ERROR = 'decode-error',\n  INVALID_CREDENTIALS = 'invalid-credentials',\n  ENV_DEPENDENCY_MISSING = 'env-dependency-missing',\n  INVALID_TTL = 'invalid-ttl',\n  INVALID_INPUT_PARAMETERS = 'invalid-input-parameters',\n  NOT_IMPLEMENTED = 'not-implemented',\n  NOT_SUPPORTED = 'not-supported',\n  CONVERTING_FAILED = 'converting-error',\n  ELEMENT_NOT_FOUND = 'element-not-found',\n  MISSING_REQUIRED_PARAMETER = 'missing-required-parameter',\n  INVALID_REQUEST = 'invalid-request',\n  UNEXPECTED_HEX_VALUE = 'unexpected-hex-value',\n  INVALID_TRANSFER_AMOUNT = 'invalid-transfer-amount',\n\n  // transaction\n  GAS_PRICE_TOO_LOW = 'gas-price-too-low',\n  GAS_LIMIT_TOO_LOW = 'gas-limit-too-low',\n  TRANSACTION_NOT_FOUND = 'transaction-not-found',\n  TRANSACTION_FAILED = 'transaction-failed',\n  INVALID_CONFIGURABLE_CONSTANTS = 'invalid-configurable-constants',\n  INVALID_TRANSACTION_INPUT = 'invalid-transaction-input',\n  INVALID_TRANSACTION_OUTPUT = 'invalid-transaction-output',\n  INVALID_TRANSACTION_STATUS = 'invalid-transaction-status',\n  INVALID_TRANSACTION_TYPE = 'invalid-transaction-type',\n  TRANSACTION_ERROR = 'transaction-error',\n  INVALID_POLICY_TYPE = 'invalid-policy-type',\n  DUPLICATED_POLICY = 'duplicated-policy',\n  TRANSACTION_SQUEEZED_OUT = 'transaction-squeezed-out',\n\n  // receipt\n  INVALID_RECEIPT_TYPE = 'invalid-receipt-type',\n\n  // mnemonic\n  INVALID_WORD_LIST = 'invalid-word-list',\n  INVALID_MNEMONIC = 'invalid-mnemonic',\n  INVALID_ENTROPY = 'invalid-entropy',\n  INVALID_SEED = 'invalid-seed',\n  INVALID_CHECKSUM = 'invalid-checksum',\n\n  // wallet / account\n  INVALID_PASSWORD = 'invalid-password',\n  ACCOUNT_REQUIRED = 'account-required',\n  UNLOCKED_WALLET_REQUIRED = 'unlocked-wallet-required',\n\n  // chain\n  LATEST_BLOCK_UNAVAILABLE = 'latest-block-unavailable',\n  ERROR_BUILDING_BLOCK_EXPLORER_URL = 'error-building-block-explorer-url',\n  UNSUPPORTED_FUEL_CLIENT_VERSION = 'unsupported-fuel-client-version',\n\n  // docs\n  VITEPRESS_PLUGIN_ERROR = 'vitepress-plugin-error',\n\n  // contract\n  INVALID_MULTICALL = 'invalid-multicall',\n\n  // script\n  SCRIPT_REVERTED = 'script-reverted',\n  SCRIPT_RETURN_INVALID_TYPE = 'script-return-invalid-type',\n\n  // graphql\n  STREAM_PARSING_ERROR = 'stream-parsing-error',\n\n  // coder\n  // ...\n}\n","import { versions } from '@fuel-ts/versions';\n\nimport { ErrorCode } from './error-codes';\n\nexport class FuelError extends Error {\n  static readonly CODES = ErrorCode;\n  readonly VERSIONS = versions;\n\n  static parse(e: unknown) {\n    const error = e as FuelError;\n\n    if (error.code === undefined) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        \"Failed to parse the error object. The required 'code' property is missing.\"\n      );\n    }\n\n    const enumValues = Object.values(ErrorCode);\n    const codeIsKnown = enumValues.includes(error.code);\n\n    if (!codeIsKnown) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Unknown error code: ${error.code}. Accepted codes: ${enumValues.join(', ')}.`\n      );\n    }\n\n    return new FuelError(error.code, error.message);\n  }\n\n  code: ErrorCode;\n\n  constructor(code: ErrorCode, message: string) {\n    super(message);\n    this.code = code;\n    this.name = 'FuelError';\n  }\n\n  toObject() {\n    const { code, name, message, VERSIONS } = this;\n    return { code, name, message, VERSIONS };\n  }\n}\n","export const capitalizeString = (str: string) => {\n  if (!str.length) {\n    return str;\n  }\n  return str[0].toUpperCase() + str.slice(1);\n};\n","/**\n * Function to take a byte array and split into chunks of a given size\n *\n * @param bytes - The byte array to chunk\n * @param chunkSize - The size of each chunk\n * @returns An array of byte arrays of a specified size\n */\nexport const chunkAndPadBytes = (bytes: Uint8Array, chunkSize: number): Uint8Array[] => {\n  const chunks: Uint8Array[] = [];\n\n  for (let offset = 0; offset < bytes.length; offset += chunkSize) {\n    const chunk = new Uint8Array(chunkSize);\n    chunk.set(bytes.slice(offset, offset + chunkSize));\n    chunks.push(chunk);\n  }\n\n  const lastChunk = chunks[chunks.length - 1];\n  const remainingBytes = bytes.length % chunkSize;\n  const paddedChunkLength = remainingBytes + ((8 - (remainingBytes % 8)) % 8);\n  const newChunk = lastChunk.slice(0, paddedChunkLength);\n  chunks[chunks.length - 1] = newChunk;\n\n  return chunks;\n};\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\n\n/**\n * Converts a bytes-like value to a `Uint8Array`.\n *\n * @param value - the value to convert to a Uint8Array\n * @returns the Uint8Array\n */\nexport const arrayify = (value: BytesLike): Uint8Array => {\n  // Return buffers as a new byte array\n  if (value instanceof Uint8Array) {\n    return new Uint8Array(value);\n  }\n\n  if (typeof value === 'string' && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n    const result = new Uint8Array((value.length - 2) / 2);\n    let offset = 2;\n    for (let i = 0; i < result.length; i++) {\n      result[i] = parseInt(value.substring(offset, offset + 2), 16);\n      offset += 2;\n    }\n    return result;\n  }\n\n  throw new FuelError(ErrorCode.PARSE_FAILED, 'invalid BytesLike value');\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { arrayify } from './arrayify';\n\n/**\n * Concatenates multiple Uint8Arrays into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concatBytes = (\n  arrays: ReadonlyArray<Uint8Array> | ReadonlyArray<number[]>\n): Uint8Array => {\n  const byteArrays = arrays.map((array) => {\n    if (array instanceof Uint8Array) {\n      return array;\n    }\n    return Uint8Array.from(array);\n  });\n\n  const totalSize = byteArrays.reduce((accum, item) => accum + item.length, 0);\n  const concatenated = new Uint8Array(totalSize);\n\n  byteArrays.reduce((offset, object) => {\n    concatenated.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  return concatenated;\n};\n\n/**\n * Concatenates multiple BytesLike into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concat = (arrays: ReadonlyArray<BytesLike>): Uint8Array => {\n  const bytes = arrays.map((v) => arrayify(v));\n\n  return concatBytes(bytes);\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { arrayify } from './arrayify';\n\nconst HexCharacters: string = '0123456789abcdef';\n\n/**\n *  Returns a hex representation of the inputted bytes.\n */\nexport function hexlify(data: BytesLike): string {\n  const bytes = arrayify(data);\n\n  let result = '0x';\n  for (let i = 0; i < bytes.length; i++) {\n    const v = bytes[i];\n    result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n  }\n  return result;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\n/**\n * Converts `some.string-value` into `SomeStringValue`.\n *\n * Examples:\n *  my-simple.test —— MySimpleTest\n *  myFile.ts —— MyFileTs\n *  my-abi.json —— MyAbiJson\n */\nexport const normalizeString = (str: string): string => {\n  const transformations: ((s: string) => string)[] = [\n    (s) => s.replace(/\\s+/g, '-'), // spaces to -\n    (s) => s.replace(/\\./g, '-'), // dots to -\n    (s) => s.replace(/_/g, '-'), // underscore to -\n    (s) => s.replace(/-[a-z]/g, (match) => match.slice(-1).toUpperCase()), // delete '-' and capitalize the letter after them\n    (s) => s.replace(/-/g, ''), // delete any '-' left\n    (s) => s.replace(/^\\d+/, ''), // removes leading digits\n    (s) => s[0].toUpperCase() + s.slice(1), // capitalize first letter\n  ];\n\n  const output = transformations.reduce((s, t) => t(s), str);\n\n  if (output === '') {\n    const errMsg = `The provided string '${str}' results in an empty output after`.concat(\n      ` normalization, therefore, it can't normalize string.`\n    );\n    throw new FuelError(ErrorCode.PARSE_FAILED, errMsg);\n  }\n\n  return output;\n};\n","/**\n * Tai64 timestamp.\n */\ntype Tai64Timestamp = string;\n\n/**\n * This constant is used to calculate the offset between the Unix epoch and the TAI64 epoch.\n * It allows for a **rough** conversion between the two time formats.\n *\n * // Value expires on:  28 June 2024\n * {@link https://data.iana.org/time-zones/data/leap-seconds.list}\n * {@link https://github.com/hl2/tai64/blob/master/src/leapSeconds.ts}\n */\nconst TAI64_LEAP_SECONDS: number = 37;\n\n/**\n * Tai64 (Temps Atomique International) is a time format\n *\n * The offset between the Unix epoch and the TAI64 epoch.\n * The TAI64 epoch is 2^62 nanoseconds after the Unix epoch (+ the offset of \"leap seconds\" relevant to the date).\n *\n * {@link https://cr.yp.to/libtai/tai64.html}\n * {@link https://cr.yp.to/proto/tai64.txt}\n */\nconst TAI64_UNIX_OFFSET: bigint = BigInt(2 ** 62) + BigInt(TAI64_LEAP_SECONDS);\n\n/**\n * Converts milliseconds to seconds and vice versa.\n *\n * @param ms - milliseconds to convert\n * @returns seconds\n */\nconst msToSeconds = (ms: number): number => Math.floor(ms / 1000);\n\n/**\n * Converts seconds to milliseconds and vice versa.\n *\n * @param seconds - seconds to convert\n * @returns milliseconds\n */\nconst secondsToMs = (seconds: number): number => seconds * 1000;\n\n/**\n * Converts Tai64 (seconds) time units to UNIX (seconds) time units.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix seconds timestamp\n */\nconst tai64ToUnixSeconds = (tai64: Tai64Timestamp): number =>\n  Number(BigInt(tai64) - TAI64_UNIX_OFFSET);\n\n/**\n * Converts Unix (seconds) to Tai64 (seconds).\n *\n * @param unixSeconds - unix seconds timestamp\n * @returns Tai64 timestamp\n */\nconst unixSecondsToTai64 = (unixSeconds: number): string =>\n  String(BigInt(unixSeconds) + TAI64_UNIX_OFFSET);\n\n/**\n * Helper to convert Tai64 (seconds) time units to UNIX (milliseconds) time units and vice.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix milliseconds timestamp\n */\nconst tai64ToUnixMilliseconds = (tai64: Tai64Timestamp): number =>\n  secondsToMs(tai64ToUnixSeconds(tai64));\n\n/**\n * This class is used to represent a date and time in the Tai64 format.\n *\n * ```typescript\n * import { DateTime } from 'fuels';\n *\n * // Constants\n * const tai64 = '4611686020108779340';\n * const unixMilliseconds = 1681391398000;\n * const seconds = 1681391398;\n *\n * // Instantiation\n * let date: DateTime = DateTime.now();\n * date = DateTime.fromTai64(tai64);\n * date = DateTime.fromUnixMilliseconds(unixMilliseconds);\n * date = DateTime.fromUnixSeconds(seconds);\n *\n * // Utility functions\n * tai64.toTai64() // '4611686020108779340'\n * milliseconds.toUnixMilliseconds() // 1681391398000\n * seconds.toUnixSeconds() // 1681391398\n *\n * // All date methods are available\n * const now: Date = DateTime.now();\n * now.toISOString(); // '2023-04-13T13:09:58.000Z'\n * now.getTime(); // 1681391398000\n * ```\n */\nexport class DateTime extends Date implements Date {\n  static TAI64_NULL: Tai64Timestamp = '';\n\n  /**\n   * Generates a new DateTime instance from a Tai64 timestamp.\n   *\n   * @param tai64 - Tai64 timestamp\n   * @returns a new DateTime instance\n   */\n  static fromTai64(tai64: Tai64Timestamp): DateTime {\n    return new DateTime(tai64ToUnixMilliseconds(tai64));\n  }\n\n  /**\n   * @param unixMilliseconds - unix milliseconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixMilliseconds(unixMilliseconds: number): DateTime {\n    return new DateTime(unixMilliseconds);\n  }\n\n  /**\n   * @param unixSeconds - unix seconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixSeconds(unixSeconds: number): DateTime {\n    return new DateTime(secondsToMs(unixSeconds));\n  }\n\n  /**\n   * Hide the constructor to prevent direct instantiation.\n   */\n  private constructor(date: Date | number | string) {\n    super(date);\n  }\n\n  /**\n   * Returns the Tai64 timestamp.\n   *\n   * @returns the Tai64 timestamp\n   */\n  toTai64(): Tai64Timestamp {\n    return unixSecondsToTai64(this.toUnixSeconds());\n  }\n\n  /**\n   * @returns the unix milliseconds timestamp\n   */\n  toUnixMilliseconds(): number {\n    return this.getTime();\n  }\n\n  /**\n   * @returns the unix seconds timestamp\n   */\n  toUnixSeconds(): number {\n    return msToSeconds(this.getTime());\n  }\n}\n","{\n  \"chain_name\": \"local_testnet\",\n  \"block_gas_limit\": 5000000000,\n  \"initial_state\": {\n    \"coins\": [\n      {\n        \"owner\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      }\n    ],\n    \"messages\": [\n      {\n        \"sender\": \"0xc43454aa38dd91f88109a4b7aef5efb96ce34e3f24992fe0f81d233ca686f80f\",\n        \"recipient\": \"0x69a2b736b60159b43bb8a4f98c0589f6da5fa3a3d101e8e269c499eb942753ba\",\n        \"nonce\": \"0101010101010101010101010101010101010101010101010101010101010101\",\n        \"amount\": \"0x000000000000FFFF\",\n        \"data\": \"\",\n        \"da_height\": \"0x00\"\n      },\n      {\n        \"sender\": \"0x69a2b736b60159b43bb8a4f98c0589f6da5fa3a3d101e8e269c499eb942753ba\",\n        \"recipient\": \"0xc43454aa38dd91f88109a4b7aef5efb96ce34e3f24992fe0f81d233ca686f80f\",\n        \"nonce\": \"0e1ef2963832068b0e1ef2963832068b0e1ef2963832068b0e1ef2963832068b\",\n        \"amount\": \"0xb04f3c08f59b309e\",\n        \"data\": \"\",\n        \"da_height\": \"0x00\"\n      }\n    ]\n  },\n  \"consensus_parameters\": {\n    \"tx_params\": {\n      \"max_inputs\": 255,\n      \"max_outputs\": 255,\n      \"max_witnesses\": 255,\n      \"max_gas_per_tx\": 10000000,\n      \"max_size\": 17825792\n    },\n    \"predicate_params\": {\n      \"max_predicate_length\": 1048576,\n      \"max_predicate_data_length\": 1048576,\n      \"max_gas_per_predicate\": 10000000,\n      \"max_message_data_length\": 1048576\n    },\n    \"script_params\": {\n      \"max_script_length\": 1048576,\n      \"max_script_data_length\": 1048576\n    },\n    \"contract_params\": {\n      \"contract_max_size\": 16777216,\n      \"max_storage_slots\": 255\n    },\n    \"fee_params\": {\n      \"gas_price_factor\": 92,\n      \"gas_per_byte\": 4\n    }\n  },\n  \"gas_costs\": {\n    \"add\": 1,\n    \"addi\": 1,\n    \"aloc\": 1,\n    \"and\": 1,\n    \"andi\": 1,\n    \"bal\": 13,\n    \"bhei\": 1,\n    \"bhsh\": 1,\n    \"burn\": 132,\n    \"cb\": 1,\n    \"cfei\": 1,\n    \"cfsi\": 1,\n    \"croo\": 16,\n    \"div\": 1,\n    \"divi\": 1,\n    \"ecr1\": 3000,\n    \"eck1\": 951,\n    \"ed19\": 3000,\n    \"eq\": 1,\n    \"exp\": 1,\n    \"expi\": 1,\n    \"flag\": 1,\n    \"gm\": 1,\n    \"gt\": 1,\n    \"gtf\": 1,\n    \"ji\": 1,\n    \"jmp\": 1,\n    \"jne\": 1,\n    \"jnei\": 1,\n    \"jnzi\": 1,\n    \"jmpf\": 1,\n    \"jmpb\": 1,\n    \"jnzf\": 1,\n    \"jnzb\": 1,\n    \"jnef\": 1,\n    \"jneb\": 1,\n    \"lb\": 1,\n    \"log\": 9,\n    \"lt\": 1,\n    \"lw\": 1,\n    \"mint\": 135,\n    \"mlog\": 1,\n    \"modOp\": 1,\n    \"modi\": 1,\n    \"moveOp\": 1,\n    \"movi\": 1,\n    \"mroo\": 2,\n    \"mul\": 1,\n    \"muli\": 1,\n    \"mldv\": 1,\n    \"noop\": 1,\n    \"not\": 1,\n    \"or\": 1,\n    \"ori\": 1,\n    \"poph\": 2,\n    \"popl\": 2,\n    \"pshh\": 2,\n    \"pshl\": 2,\n    \"ret\": 13,\n    \"rvrt\": 13,\n    \"sb\": 1,\n    \"sll\": 1,\n    \"slli\": 1,\n    \"srl\": 1,\n    \"srli\": 1,\n    \"srw\": 12,\n    \"sub\": 1,\n    \"subi\": 1,\n    \"sw\": 1,\n    \"sww\": 67,\n    \"time\": 1,\n    \"tr\": 105,\n    \"tro\": 60,\n    \"wdcm\": 1,\n    \"wqcm\": 1,\n    \"wdop\": 1,\n    \"wqop\": 1,\n    \"wdml\": 1,\n    \"wqml\": 1,\n    \"wddv\": 1,\n    \"wqdv\": 2,\n    \"wdmd\": 3,\n    \"wqmd\": 4,\n    \"wdam\": 2,\n    \"wqam\": 3,\n    \"wdmm\": 3,\n    \"wqmm\": 3,\n    \"xor\": 1,\n    \"xori\": 1,\n    \"call\": {\n      \"LightOperation\": {\n        \"base\": 144,\n        \"units_per_gas\": 214\n      }\n    },\n    \"ccp\": {\n      \"LightOperation\": {\n        \"base\": 15,\n        \"units_per_gas\": 103\n      }\n    },\n    \"csiz\": {\n      \"LightOperation\": {\n        \"base\": 17,\n        \"units_per_gas\": 790\n      }\n    },\n    \"k256\": {\n      \"LightOperation\": {\n        \"base\": 11,\n        \"units_per_gas\": 214\n      }\n    },\n    \"ldc\": {\n      \"LightOperation\": {\n        \"base\": 15,\n        \"units_per_gas\": 272\n      }\n    },\n    \"logd\": {\n      \"LightOperation\": {\n        \"base\": 26,\n        \"units_per_gas\": 64\n      }\n    },\n    \"mcl\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 3333\n      }\n    },\n    \"mcli\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 3333\n      }\n    },\n    \"mcp\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 2000\n      }\n    },\n    \"mcpi\": {\n      \"LightOperation\": {\n        \"base\": 3,\n        \"units_per_gas\": 2000\n      }\n    },\n    \"meq\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 2500\n      }\n    },\n    \"retd\": {\n      \"LightOperation\": {\n        \"base\": 29,\n        \"units_per_gas\": 62\n      }\n    },\n    \"s256\": {\n      \"LightOperation\": {\n        \"base\": 2,\n        \"units_per_gas\": 214\n      }\n    },\n    \"scwq\": {\n      \"LightOperation\": {\n        \"base\": 13,\n        \"units_per_gas\": 5\n      }\n    },\n    \"smo\": {\n      \"LightOperation\": {\n        \"base\": 209,\n        \"units_per_gas\": 55\n      }\n    },\n    \"srwq\": {\n      \"LightOperation\": {\n        \"base\": 47,\n        \"units_per_gas\": 5\n      }\n    },\n    \"swwq\": {\n      \"LightOperation\": {\n        \"base\": 44,\n        \"units_per_gas\": 5\n      }\n    },\n    \"contract_root\": {\n      \"LightOperation\": {\n        \"base\": 75,\n        \"units_per_gas\": 1\n      }\n    },\n    \"state_root\": {\n      \"LightOperation\": {\n        \"base\": 412,\n        \"units_per_gas\": 1\n      }\n    },\n    \"vm_initialization\": {\n      \"HeavyOperation\": {\n        \"base\": 2000,\n        \"gas_per_unit\": 0\n      }\n    },\n    \"new_storage_per_byte\": 1\n  },\n  \"consensus\": {\n    \"PoA\": {\n      \"signing_key\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\"\n    }\n  }\n}\n","import chainConfigJson from './chainConfig.json';\n\nexport const defaultChainConfig = chainConfigJson;\n\nexport const defaultConsensusKey =\n  '0xa449b1ffee0e2205fa924c6740cc48b3b473aa28587df6dab12abc245d1f5298';\n","import { scrypt as scryptNoble } from '@noble/hashes/scrypt';\n\nimport type { IScryptParams } from '../types';\n\nexport const scrypt = (params: IScryptParams): Uint8Array => {\n  const { password, salt, n, p, r, dklen } = params;\n  const derivedKey = scryptNoble(password, salt, { N: n, r, p, dkLen: dklen });\n\n  return derivedKey;\n};\n","import { keccak_256 } from '@noble/hashes/sha3';\n\nexport const keccak256 = (data: Uint8Array): Uint8Array => keccak_256(data);\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\nimport { arrayify } from '@fuel-ts/utils';\nimport crypto from 'crypto';\nimport { pbkdf2 } from 'ethers';\n\nimport type { CryptoApi, Keystore } from '../types';\n\nimport { bufferFromString } from './bufferFromString';\nimport { randomBytes } from './randomBytes';\nimport { stringFromBuffer } from './stringFromBuffer';\n\nconst ALGORITHM = 'aes-256-ctr';\n\n/**\n * Generate a pbkdf2 key from a password and random salt\n */\nexport const keyFromPassword: CryptoApi['keyFromPassword'] = (\n  password: string,\n  saltBuffer: Uint8Array\n): Uint8Array => {\n  const passBuffer = bufferFromString(String(password).normalize('NFKC'), 'utf-8');\n  const key = pbkdf2(passBuffer, saltBuffer, 100000, 32, 'sha256');\n\n  return arrayify(key);\n};\n\n/**\n * Encrypts a data object that can be any serializable value using\n * a provided password.\n *\n * @returns Promise<Keystore> object\n */\nexport const encrypt: CryptoApi['encrypt'] = async <T>(\n  password: string,\n  data: T\n): Promise<Keystore> => {\n  const iv = randomBytes(16);\n  const salt = randomBytes(32);\n  const secret = keyFromPassword(password, salt);\n  const dataBuffer = Uint8Array.from(Buffer.from(JSON.stringify(data), 'utf-8'));\n\n  const cipher = await crypto.createCipheriv(ALGORITHM, secret, iv);\n  let cipherData = cipher.update(dataBuffer);\n  cipherData = Buffer.concat([cipherData, cipher.final()]);\n\n  return {\n    data: stringFromBuffer(cipherData),\n    iv: stringFromBuffer(iv),\n    salt: stringFromBuffer(salt),\n  };\n};\n\n/**\n * Given a password and a keystore object, decrypts the text and returns\n * the resulting value\n */\nexport const decrypt: CryptoApi['decrypt'] = async <T>(\n  password: string,\n  keystore: Keystore\n): Promise<T> => {\n  const iv = bufferFromString(keystore.iv);\n  const salt = bufferFromString(keystore.salt);\n  const secret = keyFromPassword(password, salt);\n  const encryptedText = bufferFromString(keystore.data);\n\n  const decipher = await crypto.createDecipheriv(ALGORITHM, secret, iv);\n  const decrypted = decipher.update(encryptedText);\n  const deBuff = Buffer.concat([decrypted, decipher.final()]);\n  const decryptedData = Buffer.from(deBuff).toString('utf-8');\n\n  try {\n    return JSON.parse(decryptedData);\n  } catch {\n    throw new FuelError(ErrorCode.INVALID_CREDENTIALS, 'Invalid credentials.');\n  }\n};\n","import type { CryptoApi, Encoding } from '../types';\n\nexport const bufferFromString: CryptoApi['bufferFromString'] = (\n  string: string,\n  encoding: Encoding = 'base64'\n): Uint8Array => Uint8Array.from(Buffer.from(string, encoding));\n","import crypto from 'crypto';\n\nimport type { CryptoApi } from '../types';\n\nexport const randomBytes: CryptoApi['randomBytes'] = (length: number): Uint8Array => {\n  const randomValues = Uint8Array.from(crypto.randomBytes(length));\n  return randomValues;\n};\n","import type { CryptoApi, Encoding } from '../types';\n\nexport const stringFromBuffer: CryptoApi['stringFromBuffer'] = (\n  buffer: Uint8Array,\n  encoding: Encoding = 'base64'\n): string => Buffer.from(buffer).toString(encoding);\n","import crypto from 'crypto';\n\nexport async function encryptJsonWalletData(data: Uint8Array, key: Uint8Array, iv: Uint8Array) {\n  const cipher = await crypto.createCipheriv('aes-128-ctr', key.subarray(0, 16), iv);\n\n  const encrypted = Buffer.concat([cipher.update(data), cipher.final()]);\n\n  return new Uint8Array(encrypted);\n}\n\nexport async function decryptJsonWalletData(data: Uint8Array, key: Uint8Array, iv: Uint8Array) {\n  const decipher = crypto.createDecipheriv('aes-128-ctr', key.subarray(0, 16), iv);\n\n  const decrypted = await Buffer.concat([decipher.update(data), decipher.final()]);\n\n  return new Uint8Array(decrypted);\n}\n","import { scrypt, keccak256 } from '../shared';\nimport type { CryptoApi } from '../types';\n\nimport { decrypt, encrypt, keyFromPassword } from './aes-ctr';\nimport { bufferFromString } from './bufferFromString';\nimport { decryptJsonWalletData, encryptJsonWalletData } from './encryptJsonWalletData';\nimport { randomBytes } from './randomBytes';\nimport { stringFromBuffer } from './stringFromBuffer';\n\nconst api: CryptoApi = {\n  bufferFromString,\n  stringFromBuffer,\n  decrypt,\n  encrypt,\n  keyFromPassword,\n  randomBytes,\n  scrypt,\n  keccak256,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n};\n\nexport default api;\n","import cryptoApi from './node';\n\nexport * from './types';\n\nexport const {\n  bufferFromString,\n  decrypt,\n  encrypt,\n  keyFromPassword,\n  randomBytes,\n  stringFromBuffer,\n  scrypt,\n  keccak256,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n} = cryptoApi;\n","/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n\n/**\n *  The current version of Ethers.\n */\nexport const version: string = \"6.7.1\";\n","/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n","/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\n\nimport { version } from \"../_version.js\";\n\nimport { defineProperties } from \"./properties.js\";\n\nimport type {\n    TransactionRequest, TransactionReceipt, TransactionResponse\n} from \"../providers/index.js\";\n\nimport type { FetchRequest, FetchResponse } from \"./fetch.js\";\n\n/**\n *  An error may contain additional properties, but those must not\n *  conflict with any impliciat properties.\n */\nexport type ErrorInfo<T> = Omit<T, \"code\" | \"name\" | \"message\">;\n\n\nfunction stringify(value: any): any {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${ stringify(k) }: ${ stringify(value[k]) }`).join(\", \") + \" }\";\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n *  All errors emitted by ethers have an **ErrorCode** to help\n *  identify and coalesce errors to simplfy programatic analysis.\n *\n *  Each **ErrorCode** is the %%code%% proerty of a coresponding\n *  [[EthersError]].\n *\n *  **Generic Errors**\n *\n *  **``\"UNKNOWN_ERROR\"``** - see [[UnknownError]]\n *\n *  **``\"NOT_IMPLEMENTED\"``** - see [[NotImplementedError]]\n *\n *  **``\"UNSUPPORTED_OPERATION\"``** - see [[UnsupportedOperationError]]\n *\n *  **``\"NETWORK_ERROR\"``** - see [[NetworkError]]\n *\n *  **``\"SERVER_ERROR\"``** - see [[ServerError]]\n *\n *  **``\"TIMEOUT\"``** - see [[TimeoutError]]\n *\n *  **``\"BAD_DATA\"``** - see [[BadDataError]]\n *\n *  **``\"CANCELLED\"``** - see [[CancelledError]]\n *\n *  **Operational Errors**\n *\n *  **``\"BUFFER_OVERRUN\"``** - see [[BufferOverrunError]]\n *\n *  **``\"NUMERIC_FAULT\"``** - see [[NumericFaultError]]\n *\n *  **Argument Errors**\n *\n *  **``\"INVALID_ARGUMENT\"``** - see [[InvalidArgumentError]]\n *\n *  **``\"MISSING_ARGUMENT\"``** - see [[MissingArgumentError]]\n *\n *  **``\"UNEXPECTED_ARGUMENT\"``** - see [[UnexpectedArgumentError]]\n *\n *  **``\"VALUE_MISMATCH\"``** - //unused//\n *\n *  **Blockchain Errors**\n *\n *  **``\"CALL_EXCEPTION\"``** - see [[CallExceptionError]]\n *\n *  **``\"INSUFFICIENT_FUNDS\"``** - see [[InsufficientFundsError]]\n *\n *  **``\"NONCE_EXPIRED\"``** - see [[NonceExpiredError]]\n *\n *  **``\"REPLACEMENT_UNDERPRICED\"``** - see [[ReplacementUnderpricedError]]\n *\n *  **``\"TRANSACTION_REPLACED\"``** - see [[TransactionReplacedError]]\n *\n *  **``\"UNCONFIGURED_NAME\"``** - see [[UnconfiguredNameError]]\n *\n *  **``\"OFFCHAIN_FAULT\"``** - see [[OffchainFaultError]]\n *\n *  **User Interaction Errors**\n *\n *  **``\"ACTION_REJECTED\"``** - see [[ActionRejectedError]]\n */\nexport type ErrorCode =\n\n    // Generic Errors\n    \"UNKNOWN_ERROR\" | \"NOT_IMPLEMENTED\" | \"UNSUPPORTED_OPERATION\" |\n    \"NETWORK_ERROR\" | \"SERVER_ERROR\" | \"TIMEOUT\" | \"BAD_DATA\" |\n    \"CANCELLED\" |\n\n    // Operational Errors\n    \"BUFFER_OVERRUN\" |  \"NUMERIC_FAULT\" |\n\n    // Argument Errors\n    \"INVALID_ARGUMENT\" | \"MISSING_ARGUMENT\" | \"UNEXPECTED_ARGUMENT\" |\n    \"VALUE_MISMATCH\" |\n\n    // Blockchain Errors\n    \"CALL_EXCEPTION\" | \"INSUFFICIENT_FUNDS\" | \"NONCE_EXPIRED\" |\n    \"REPLACEMENT_UNDERPRICED\" | \"TRANSACTION_REPLACED\" |\n    \"UNCONFIGURED_NAME\" | \"OFFCHAIN_FAULT\" |\n\n    // User Interaction\n    \"ACTION_REJECTED\"\n;\n\n/**\n *  All errors in Ethers include properties to assist in\n *  machine-readable errors.\n */\nexport interface EthersError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     *  The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     *  Additional info regarding the error that may be useful.\n     *\n     *  This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     *  Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n *  This Error is a catch-all for when there is no way for Ethers to\n *  know what the underlying problem is.\n */\nexport interface UnknownError extends EthersError<\"UNKNOWN_ERROR\"> {\n    [ key: string ]: any;\n}\n\n/**\n *  This Error is mostly used as a stub for functionality that is\n *  intended for the future, but is currently not implemented.\n */\nexport interface NotImplementedError extends EthersError<\"NOT_IMPLEMENTED\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates that the attempted operation is not supported.\n *\n *  This could range from a specifc JSON-RPC end-point not supporting\n *  a feature to a specific configuration of an object prohibiting the\n *  operation.\n *\n *  For example, a [[Wallet]] with no connected [[Provider]] is unable\n *  to send a transaction.\n */\nexport interface UnsupportedOperationError extends EthersError<\"UNSUPPORTED_OPERATION\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates a proplem connecting to a network.\n */\nexport interface NetworkError extends EthersError<\"NETWORK_ERROR\"> {\n    /**\n     *  The network event.\n     */\n    event: string;\n}\n\n/**\n *  This Error indicates there was a problem fetching a resource from\n *  a server.\n */\nexport interface ServerError extends EthersError<\"SERVER_ERROR\"> {\n    /**\n     *  The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     *  The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n *  This Error indicates that the timeout duration has expired and\n *  that the operation has been implicitly cancelled.\n *\n *  The side-effect of the operation may still occur, as this\n *  generally means a request has been sent and there has simply\n *  been no response to indicate whether it was processed or not.\n */\nexport interface TimeoutError extends EthersError<\"TIMEOUT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The reason.\n     */\n    reason: string;\n\n    /**\n     *  The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n *  This Error indicates that a provided set of data cannot\n *  be correctly interpretted.\n */\nexport interface BadDataError extends EthersError<\"BAD_DATA\"> {\n    /**\n     *  The data.\n     */\n    value: any;\n}\n\n/**\n *  This Error indicates that the operation was cancelled by a\n *  programmatic call, for example to ``cancel()``.\n */\nexport interface CancelledError extends EthersError<\"CANCELLED\"> {\n}\n\n\n// Operational Errors\n\n/**\n *  This Error indicates an attempt was made to read outside the bounds\n *  of protected data.\n *\n *  Most operations in Ethers are protected by bounds checks, to mitigate\n *  exploits when parsing data.\n */\nexport interface BufferOverrunError extends EthersError<\"BUFFER_OVERRUN\"> {\n    /**\n     *  The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     *  The length of the buffer.\n     */\n    length: number;\n\n    /**\n     *  The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n *  This Error indicates an operation which would result in incorrect\n *  arithmetic output has occurred.\n *\n *  For example, trying to divide by zero or using a ``uint8`` to store\n *  a negative value.\n */\nexport interface NumericFaultError extends EthersError<\"NUMERIC_FAULT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The fault reported.\n     */\n    fault: string;\n\n    /**\n     *  The value the operation was attempted against.\n     */\n    value: any;\n}\n\n\n// Argument Errors\n\n/**\n *  This Error indicates an incorrect type or value was passed to\n *  a function or method.\n */\nexport interface InvalidArgumentError extends EthersError<\"INVALID_ARGUMENT\"> {\n    /**\n     *  The name of the argument.\n     */\n    argument: string;\n\n    /**\n     *  The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>\n}\n\n/**\n *  This Error indicates there were too few arguments were provided.\n */\nexport interface MissingArgumentError extends EthersError<\"MISSING_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n *  This Error indicates too many arguments were provided.\n */\nexport interface UnexpectedArgumentError extends EthersError<\"UNEXPECTED_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n\n// Blockchain Errors\n\n/**\n *  The action that resulted in the call exception.\n */\nexport type CallExceptionAction = \"call\" | \"estimateGas\" | \"getTransactionResult\" | \"sendTransaction\" | \"unknown\";\n\n/**\n *  The related transaction that caused the error.\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n *  This **Error** indicates a transaction reverted.\n */\nexport interface CallExceptionError extends EthersError<\"CALL_EXCEPTION\"> {\n\n    /**\n     *  The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     *  The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     *  A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     *  The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction,\n\n    /**\n     *  The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  If the error occurred in a transaction that was mined\n     *  (with a status of ``0``), this is the receipt.\n     */\n    receipt?: TransactionReceipt;   // @TODO: in v7, make this `null | TransactionReceipt`\n}\n\n\n/**\n *  The sending account has insufficient funds to cover the\n *  entire transaction cost.\n */\nexport interface InsufficientFundsError extends EthersError<\"INSUFFICIENT_FUNDS\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  The sending account has already used this nonce in a\n *  transaction that has been included.\n */\nexport interface NonceExpiredError extends EthersError<\"NONCE_EXPIRED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A CCIP-read exception, which cannot be recovered from or\n *  be further processed.\n */\nexport interface OffchainFaultError extends EthersError<\"OFFCHAIN_FAULT\"> {\n    /**\n     *  The transaction.\n     */\n    transaction?: TransactionRequest;\n\n    /**\n     *  The reason the CCIP-read failed.\n     */\n    reason: string;\n}\n\n/**\n *  An attempt was made to replace a transaction, but with an\n *  insufficient additional fee to afford evicting the old\n *  transaction from the memory pool.\n */\nexport interface ReplacementUnderpricedError extends EthersError<\"REPLACEMENT_UNDERPRICED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A pending transaction was replaced by another.\n */\nexport interface TransactionReplacedError extends EthersError<\"TRANSACTION_REPLACED\"> {\n    /**\n     *  If the transaction was cancelled, such that the original\n     *  effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     *  The reason the transaction was replaced.\n     */\n    reason: \"repriced\" | \"cancelled\" | \"replaced\";\n\n    /**\n     *  The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     *  The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse;\n\n    /**\n     *  The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n *  This Error indicates an ENS name was used, but the name has not\n *  been configured.\n *\n *  This could indicate an ENS name is unowned or that the current\n *  address being pointed to is the [[ZeroAddress]].\n */\nexport interface UnconfiguredNameError extends EthersError<\"UNCONFIGURED_NAME\"> {\n    /**\n     *  The ENS name that was requested\n     */\n    value: string;\n}\n\n/**\n *  This Error indicates a request was rejected by the user.\n *\n *  In most clients (such as MetaMask), when an operation requires user\n *  authorization (such as ``signer.sendTransaction``), the client\n *  presents a dialog box to the user. If the user denies the request\n *  this error is thrown.\n */\nexport interface ActionRejectedError extends EthersError<\"ACTION_REJECTED\"> {\n    /**\n     *  The requested action.\n     */\n    action: \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\" | \"unknown\",\n\n    /**\n     *  The reason the action was rejected.\n     *\n     *  If there is already a pending request, some clients may indicate\n     *  there is already a ``\"pending\"`` action. This prevents an app\n     *  from spamming the user.\n     */\n    reason: \"expired\" | \"rejected\" | \"pending\"\n}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n *  A conditional type that transforms the [[ErrorCode]] T into\n *  its EthersError type.\n *\n *  @flatworm-skip-docs\n */\nexport type CodedEthersError<T> =\n    T extends \"UNKNOWN_ERROR\" ? UnknownError:\n    T extends \"NOT_IMPLEMENTED\" ? NotImplementedError:\n    T extends \"UNSUPPORTED_OPERATION\" ? UnsupportedOperationError:\n    T extends \"NETWORK_ERROR\" ? NetworkError:\n    T extends \"SERVER_ERROR\" ? ServerError:\n    T extends \"TIMEOUT\" ? TimeoutError:\n    T extends \"BAD_DATA\" ? BadDataError:\n    T extends \"CANCELLED\" ? CancelledError:\n\n    T extends \"BUFFER_OVERRUN\" ? BufferOverrunError:\n    T extends \"NUMERIC_FAULT\" ? NumericFaultError:\n\n    T extends \"INVALID_ARGUMENT\" ? InvalidArgumentError:\n    T extends \"MISSING_ARGUMENT\" ? MissingArgumentError:\n    T extends \"UNEXPECTED_ARGUMENT\" ? UnexpectedArgumentError:\n\n    T extends \"CALL_EXCEPTION\" ? CallExceptionError:\n    T extends \"INSUFFICIENT_FUNDS\" ? InsufficientFundsError:\n    T extends \"NONCE_EXPIRED\" ? NonceExpiredError:\n    T extends \"OFFCHAIN_FAULT\" ? OffchainFaultError:\n    T extends \"REPLACEMENT_UNDERPRICED\" ? ReplacementUnderpricedError:\n    T extends \"TRANSACTION_REPLACED\" ? TransactionReplacedError:\n    T extends \"UNCONFIGURED_NAME\" ? UnconfiguredNameError:\n\n    T extends \"ACTION_REJECTED\" ? ActionRejectedError:\n\n    never;\n\n\n\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript envornoments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError<K extends ErrorCode, T extends CodedEthersError<K>>(error: any, code: K): error is T {\n    return (error && (<EthersError>error).code === code);\n}\n\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additioanl properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depneding on %%code%%, additional\n *  required properties. The error message will also include the %%meeage%%,\n *  ethers version, %%code%% and all aditional properties, serialized.\n */\nexport function makeError<K extends ErrorCode, T extends CodedEthersError<K>>(message: string, code: K, info?: ErrorInfo<T>): T {\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${ stringify(info) }`);\n            }\n            for (const key in info) {\n                const value = <any>(info[<keyof ErrorInfo<T>>key]);\n//                try {\n                    details.push(key + \"=\" + stringify(value));\n//                } catch (error: any) {\n//                console.log(\"MMM\", error.message);\n//                    details.push(key + \"=[could not serialize object]\");\n//                }\n            }\n        }\n        details.push(`code=${ code }`);\n        details.push(`version=${ version }`);\n\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<EthersError>(<EthersError>error, { code });\n\n    if (info) { Object.assign(error, info); }\n\n    return <T>error;\n}\n\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert<K extends ErrorCode, T extends CodedEthersError<K>>(check: unknown, message: string, code: K, info?: ErrorInfo<T>): asserts check {\n    if (!check) { throw makeError(message, code, info); }\n}\n\n\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) { message = \"\"; }\n    if (message) { message = \": \" + message; }\n\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n\n    assert(count <= expectedCount, \"too many arguemnts\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\n\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") { throw new Error(\"bad\"); };\n        /* c8 ignore stop */\n\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301)\n            /* c8 ignore start */\n            if (check !== expected) { throw new Error(\"broken\") }\n            /* c8 ignore stop */\n        }\n\n        accum.push(form);\n    } catch(error) { }\n\n    return accum;\n}, <Array<string>>[]);\n\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) { className = \"\"; }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${ method }from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n","/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\n\n/**\n *  A [[HexString]] whose length is even, which ensures it is a valid\n *  representation of binary data.\n */\nexport type DataHexString = string;\n\n/**\n *  A string which is prefixed with ``0x`` and followed by any number\n *  of case-agnostic hexadecimal characters.\n *\n *  It must match the regular expression ``/0x[0-9A-Fa-f]*\\/``.\n */\nexport type HexString = string;\n\n/**\n *  An object that can be used to represent binary data.\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) { return new Uint8Array(value); }\n        return value;\n    }\n\n    if (typeof(value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${ string }` {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    if (typeof(length) === \"number\" && value.length !== 2 + 2 * length) { return false; }\n    if (length === true && (value.length % 2) !== 0) { return false; }\n\n    return true;\n}\n\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) { return (data.length - 2) / 2; }\n    return getBytes(data).length;\n}\n\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0: start, (end == null) ? bytes.length: end));\n}\n\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) { bytes = bytes.substring(2); }\n    return \"0x\" + bytes;\n}\n\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n","/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n/**\n *  Any type that can be used where a numeric value is needed.\n */\nexport type Numeric = number | bigint;\n\n/**\n *  Any type that can be used where a big number is needed.\n */\nexport type BigNumberish = string | Numeric;\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n\n\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value: BigNumberish, _width: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n\n    return value;\n}\n\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value: BigNumberish, _width: Numeric): bigint {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    const limit = (BN_1 << (width - BN_1));\n\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    } else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n\n    return value;\n}\n\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value: BigNumberish, _bits: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value: BigNumberish, name?: string): bigint {\n    switch (typeof(value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            } catch(e: any) {\n                assertArgument(false, `invalid BigNumberish string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nexport function getUint(value: BigNumberish, name?: string): bigint {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\n\nconst Nibbles = \"0123456789abcdef\";\n\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value: BigNumberish | Uint8Array): bigint {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n\n    return getBigInt(value);\n}\n\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value: BigNumberish, name?: string): number {\n    switch (typeof(value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                return getNumber(BigInt(value), name);\n            } catch(e: any) {\n                assertArgument(false, `invalid numeric string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n\n\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value: BigNumberish | Uint8Array): number {\n    return getNumber(toBigInt(value));\n}\n\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value: BigNumberish, _width?: Numeric): string {\n    const value = getUint(_value, \"value\");\n\n    let result = value.toString(16);\n\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) { result = \"0\" + result; }\n    } else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${ width } bits)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n\n        // Pad the value to the required width\n        while (result.length < (width * 2)) { result = \"0\" + result; }\n\n    }\n\n    return \"0x\" + result;\n}\n\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value: BigNumberish): Uint8Array {\n    const value = getUint(_value, \"value\");\n\n    if (value === BN_0) { return new Uint8Array([ ]); }\n\n    let hex = value.toString(16);\n    if (hex.length % 2) { hex = \"0\" + hex; }\n\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n\n    return result;\n}\n\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value: BytesLike | BigNumberish): string {\n    let result = hexlify(isBytesLike(value) ? value: toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) { result = result.substring(1); }\n    if (result === \"\") { result = \"0\"; }\n    return \"0x\" + result;\n}\n","/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\n\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup: null | Record<string, bigint> = null;\n\nfunction getAlpha(letter: string): bigint {\n    if (Lookup == null) {\n        Lookup = { };\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\n\n\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value: BytesLike): string {\n    let value = toBigInt(getBytes(_value));\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n    return result;\n}\n\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value: string): bigint {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n","/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\n///////////////////////////////\n\n/**\n *  The stanard normalization forms.\n */\nexport type UnicodeNormalizationForm = \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\";\n\n/**\n *  When using the UTF-8 error API the following errors can be intercepted\n *  and processed as the %%reason%% passed to the [[Utf8ErrorFunc]].\n *\n *  **``\"UNEXPECTED_CONTINUE\"``** - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  **``\"BAD_PREFIX\"``** - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  **``\"OVERRUN\"``** - the string is too short to process the expected\n *  codepoint length.\n *\n *  **``\"MISSING_CONTINUE\"``** - a missing continuation byte was expected but\n *  not found. The %%offset%% indicates the index the continuation byte\n *  was expected at.\n *\n *  **``\"OUT_OF_RANGE\"``** - the computed code point is outside the range\n *  for UTF-8. The %%badCodepoint%% indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  **``\"UTF16_SURROGATE\"``** - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The %%badCodepoint%% is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  **``\"OVERLONG\"``** - the string is an overlong representation. The\n *  %%badCodepoint%% indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\nexport type Utf8ErrorReason = \"UNEXPECTED_CONTINUE\" | \"BAD_PREFIX\" | \"OVERRUN\" |\n    \"MISSING_CONTINUE\" | \"OUT_OF_RANGE\" | \"UTF16_SURROGATE\" | \"OVERLONG\";\n\n\n/**\n *  A callback that can be used with [[toUtf8String]] to analysis or\n *  recovery from invalid UTF-8 data.\n *\n *  Parsing UTF-8 data is done through a simple Finite-State Machine (FSM)\n *  which calls the ``Utf8ErrorFunc`` if a fault is detected.\n *\n *  The %%reason%% indicates where in the FSM execution the fault\n *  occurred and the %%offset%% indicates where the input failed.\n *\n *  The %%bytes%% represents the raw UTF-8 data that was provided and\n *  %%output%% is the current array of UTF-8 code-points, which may\n *  be updated by the ``Utf8ErrorFunc``.\n *\n *  The value of the %%badCodepoint%% depends on the %%reason%%. See\n *  [[Utf8ErrorReason]] for details.\n *\n *  The function should return the number of bytes that should be skipped\n *  when control resumes to the FSM.\n */\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number) => number;\n\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n    assertArgument(false, `invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof(badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    const bytes = getBytes(_bytes, \"bytes\");\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength: null | number = null;\n        let overlongMask: null | number = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            } else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    let result: Array<number> = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00),\n                \"invalid surrogate pair\", \"str\", str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n};\n\n//export \nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n","\nexport {\n    createHash, createHmac, pbkdf2Sync, randomBytes\n} from \"crypto\";\n","/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _computeHmac = function(algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array): BytesLike {\n    return createHmac(algorithm, key).update(data).digest();\n}\n\nlet __computeHmac = _computeHmac;\n\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm: \"sha256\" | \"sha512\", _key: BytesLike, _data: BytesLike): string {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock =  function() { locked = true; }\ncomputeHmac.register = function(func: (algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array) => BytesLike) {\n    if (locked) { throw new Error(\"computeHmac is locked\"); }\n    __computeHmac = func;\n}\nObject.freeze(computeHmac);\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\n\nimport { keccak_256 } from \"@noble/hashes/sha3\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _keccak256 = function(data: Uint8Array): Uint8Array {\n    return keccak_256(data);\n}\n\nlet __keccak256: (data: Uint8Array) => BytesLike = _keccak256;\n\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function(): void { locked = true; }\nkeccak256.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"keccak256 is locked\"); }\n    __keccak256 = func;\n}\nObject.freeze(keccak256);\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n","import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\n\nimport { getBytes,  hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _ripemd160 = function(data: Uint8Array): Uint8Array {\n    return noble_ripemd160(data);\n}\n\nlet __ripemd160: (data: Uint8Array) => BytesLike = _ripemd160;\n\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function ripemd160(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function(): void { locked = true; }\nripemd160.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"ripemd160 is locked\"); }\n    __ripemd160 = func;\n}\nObject.freeze(ripemd160);\n","/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\n\nimport { pbkdf2Sync } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _pbkdf2 = function(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): BytesLike {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n}\n\nlet __pbkdf2 = _pbkdf2;\n\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password: BytesLike, _salt: BytesLike, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): string {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function(): void { locked = true; }\npbkdf2.register = function(func: (password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\") => BytesLike) {\n    if (locked) { throw new Error(\"pbkdf2 is locked\"); }\n    __pbkdf2 = func;\n}\nObject.freeze(pbkdf2);\n","import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\n\nfunction getChecksumAddress(address: string): string {\n//    if (!isHexString(address, 20)) {\n//        logger.throwArgumentError(\"invalid address\", \"address\", address);\n//    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = getBytes(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nconst Base36 = (function() {;\n    const result: Record<string, bigint> = { };\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\n\nfunction fromBase36(value: string): bigint {\n    value = value.toLowerCase();\n\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address: string): string {\n\n    assertArgument(typeof(address) === \"string\", \"invalid address\", \"address\", address);\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) { address = \"0x\" + address; }\n\n        const result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address,\n            \"bad address checksum\", \"address\", address);\n\n        return result;\n    }\n\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) { result = \"0\" + result; }\n        return  getChecksumAddress(\"0x\" + result);\n    }\n\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address: string): string {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n","import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${ index }]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${ index }]`, set);\n                return accessSetify(set[0], set[1])\n            }\n            assertArgument(set != null && typeof(set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    assertArgument(value != null && typeof(value) === \"object\", \"invalid access list\", \"value\", value);\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n","import { defineProperties } from \"../utils/properties.js\";\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport type { FeeData, Provider } from \"./provider.js\";\nimport type { FetchRequest } from \"../utils/fetch.js\";\n\n\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n\n/**\n *  A **NetworkPlugin** provides additional functionality on a [[Network]].\n */\nexport class NetworkPlugin {\n    /**\n     *  The name of the plugin.\n     *\n     *  It is recommended to use reverse-domain-notation, which permits\n     *  unique names with a known authority as well as hierarchal entries.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **NetworkPlugin**.\n     */\n    constructor(name: string) {\n        defineProperties<NetworkPlugin>(this, { name });\n    }\n\n    /**\n     *  Creates a copy of this plugin.\n     */\n    clone(): NetworkPlugin {\n        return new NetworkPlugin(this.name);\n    }\n\n//    validate(network: Network): NetworkPlugin {\n//        return this;\n//    }\n}\n\n\n/**\n *  The gas cost parameters for a [[GasCostPlugin]].\n */\nexport type GasCostParameters = {\n    /**\n     *  The transactions base fee.\n     */\n    txBase?: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    txCreate?: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    txDataZero?: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    txDataNonzero?: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    txAccessListStorageKey?: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    txAccessListAddress?: number;\n};\n\n/**\n *  A **GasCostPlugin** allows a network to provide alternative values when\n *  computing the intrinsic gas required for a transaction.\n */\nexport class GasCostPlugin extends NetworkPlugin implements GasCostParameters {\n    /**\n     *  The block number to treat these values as valid from.\n     *\n     *  This allows a hardfork to have updated values included as well as\n     *  mulutiple hardforks to be supported.\n     */\n    readonly effectiveBlock!: number;\n\n    /**\n     *  The transactions base fee.\n     */\n    readonly txBase!: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    readonly txCreate!: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    readonly txDataZero!: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    readonly txDataNonzero!: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListStorageKey!: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListAddress!: number;\n\n\n    /**\n     *  Creates a new GasCostPlugin from %%effectiveBlock%% until the\n     *  latest block or another GasCostPlugin supercedes that block number,\n     *  with the associated %%costs%%.\n     */\n    constructor(effectiveBlock?: number, costs?: GasCostParameters) {\n        if (effectiveBlock == null) { effectiveBlock = 0; }\n        super(`org.ethers.network.plugins.GasCost#${ (effectiveBlock || 0) }`);\n\n        const props: Record<string, number> = { effectiveBlock };\n        function set(name: keyof GasCostParameters, nullish: number): void {\n            let value = (costs || { })[name];\n            if (value == null) { value = nullish; }\n            assertArgument(typeof(value) === \"number\", `invalud value for ${ name }`, \"costs\", costs);\n            props[name] = value;\n        }\n\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n\n        defineProperties<GasCostPlugin>(this, props);\n    }\n\n    clone(): GasCostPlugin {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n\n/**\n *  An **EnsPlugin** allows a [[Network]] to specify the ENS Registry\n *  Contract address and the target network to use when using that\n *  contract.\n *\n *  Various testnets have their own instance of the contract to use, but\n *  in general, the mainnet instance supports multi-chain addresses and\n *  should be used.\n */\nexport class EnsPlugin extends NetworkPlugin {\n\n    /**\n     *  The ENS Registrty Contract address.\n     */\n    readonly address!: string;\n\n    /**\n     *  The chain ID that the ENS contract lives on.\n     */\n    readonly targetNetwork!: number;\n\n    /**\n     *  Creates a new **EnsPlugin** connected to %%address%% on the\n     *  %%targetNetwork%%. The default ENS address and mainnet is used\n     *  if unspecified.\n     */\n    constructor(address?: null | string, targetNetwork?: null | number) {\n        super(\"org.ethers.plugins.network.Ens\");\n        defineProperties<EnsPlugin>(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1: targetNetwork)\n        });\n    }\n\n    clone(): EnsPlugin {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n}\n\n/**\n *  A **FeeDataNetworkPlugin** allows a network to provide and alternate\n *  means to specify its fee data.\n *\n *  For example, a network which does not support [[link-eip-1559]] may\n *  choose to use a Gas Station site to approximate the gas price.\n */\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #feeDataFunc: (provider: Provider) => Promise<FeeData>;\n\n    /**\n     *  The fee data function provided to the constructor.\n     */\n    get feeDataFunc(): (provider: Provider) => Promise<FeeData> {\n        return this.#feeDataFunc;\n    }\n\n    /**\n     *  Creates a new **FeeDataNetworkPlugin**.\n     */\n    constructor(feeDataFunc: (provider: Provider) => Promise<FeeData>) {\n        super(\"org.ethers.plugins.network.FeeData\");\n        this.#feeDataFunc = feeDataFunc;\n    }\n\n    /**\n     *  Resolves to the fee data.\n     */\n    async getFeeData(provider: Provider): Promise<FeeData> {\n        return await this.#feeDataFunc(provider);\n    }\n\n    clone(): FeeDataNetworkPlugin {\n        return new FeeDataNetworkPlugin(this.#feeDataFunc);\n    }\n}\n\nexport class FetchUrlFeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #url: string;\n    readonly #processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>;\n\n    /**\n     *  The URL to initialize the FetchRequest with in %%processFunc%%.\n     */\n    get url(): string { return this.#url; }\n\n    /**\n     *  The callback to use when computing the FeeData.\n     */\n    get processFunc(): (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }> { return this.#processFunc; }\n\n    /**\n     *  Creates a new **FetchUrlFeeDataNetworkPlugin** which will\n     *  be used when computing the fee data for the network.\n     */\n    constructor(url: string, processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>) {\n        super(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        this.#url = url;\n        this.#processFunc = processFunc;\n    }\n\n    // We are immutable, so we can serve as our own clone\n    clone(): FetchUrlFeeDataNetworkPlugin { return this; }\n}\n\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/\n","/**\n *  A **Network** encapsulates the various properties required to\n *  interact with a specific chain.\n *\n *  @_subsection: api/providers:Networks  [networks]\n */\n\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, assert, assertArgument } from \"../utils/index.js\";\n\nimport {\n    EnsPlugin, FetchUrlFeeDataNetworkPlugin, GasCostPlugin\n} from \"./plugins-network.js\";\n\nimport type { BigNumberish } from \"../utils/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { NetworkPlugin } from \"./plugins-network.js\";\n\n\n/**\n *  A Networkish can be used to allude to a Network, by specifing:\n *  - a [[Network]] object\n *  - a well-known (or registered) network name\n *  - a well-known (or registered) chain ID\n *  - an object with sufficient details to describe a network\n */\nexport type Networkish = Network | number | bigint | string | {\n    name?: string,\n    chainId?: number,\n    //layerOneConnection?: Provider,\n    ensAddress?: string,\n    ensNetwork?: number\n};\n\n\n\n\n/* * * *\n// Networks which operation against an L2 can use this plugin to\n// specify how to access L1, for the purpose of resolving ENS,\n// for example.\nexport class LayerOneConnectionPlugin extends NetworkPlugin {\n    readonly provider!: Provider;\n// @TODO: Rename to ChainAccess and allow for connecting to any chain\n    constructor(provider: Provider) {\n        super(\"org.ethers.plugins.layer-one-connection\");\n        defineProperties<LayerOneConnectionPlugin>(this, { provider });\n    }\n\n    clone(): LayerOneConnectionPlugin {\n        return new LayerOneConnectionPlugin(this.provider);\n    }\n}\n*/\n\n\nconst Networks: Map<string | bigint, () => Network> = new Map();\n\n\n/**\n *  A **Network** provides access to a chain's properties and allows\n *  for plug-ins to extend functionality.\n */\nexport class Network {\n    #name: string;\n    #chainId: bigint;\n\n    #plugins: Map<string, NetworkPlugin>;\n\n    /**\n     *  Creates a new **Network** for %%name%% and %%chainId%%.\n     */\n    constructor(name: string, chainId: BigNumberish) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n        this.#plugins = new Map();\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of a Network.\n     */\n    toJSON(): any {\n        return { name: this.name, chainId: String(this.chainId) };\n    }\n\n    /**\n     *  The network common name.\n     *\n     *  This is the canonical name, as networks migh have multiple\n     *  names.\n     */\n    get name(): string { return this.#name; }\n    set name(value: string) { this.#name =  value; }\n\n    /**\n     *  The network chain ID.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value, \"chainId\"); }\n\n    /**\n     *  Returns true if %%other%% matches this network. Any chain ID\n     *  must match, and if no chain ID is present, the name must match.\n     *\n     *  This method does not currently check for additional properties,\n     *  such as ENS address or plug-in compatibility.\n     */\n    matches(other: Networkish): boolean {\n        if (other == null) { return false; }\n\n        if (typeof(other) === \"string\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return (this.name === other);\n        }\n\n        if (typeof(other) === \"number\" || typeof(other) === \"bigint\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return false;\n        }\n\n        if (typeof(other) === \"object\") {\n            if (other.chainId != null) {\n                try {\n                    return (this.chainId === getBigInt(other.chainId));\n                } catch (error) { }\n                return false;\n            }\n            if (other.name != null) {\n                return (this.name === other.name);\n            }\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     *  Returns the list of plugins currently attached to this Network.\n     */\n    get plugins(): Array<NetworkPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new %%plugin%% to this Network. The network name\n     *  must be unique, excluding any fragment.\n     */\n    attachPlugin(plugin: NetworkPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name, plugin.clone());\n        return this;\n    }\n\n    /**\n     *  Return the plugin, if any, matching %%name%% exactly. Plugins\n     *  with fragments will not be returned unless %%name%% includes\n     *  a fragment.\n     */\n    getPlugin<T extends NetworkPlugin = NetworkPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Gets a list of all plugins that match %%name%%, with otr without\n     *  a fragment.\n     */\n    getPlugins<T extends NetworkPlugin = NetworkPlugin>(basename: string): Array<T> {\n        return <Array<T>>(this.plugins.filter((p) => (p.name.split(\"#\")[0] === basename)));\n    }\n\n    /**\n     *  Create a copy of this Network.\n     */\n    clone(): Network {\n        const clone = new Network(this.name, this.chainId);\n        this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n        });\n        return clone;\n    }\n\n    /**\n     *  Compute the intrinsic gas required for a transaction.\n     *\n     *  A GasCostPlugin can be attached to override the default\n     *  values.\n     */\n    computeIntrinsicGas(tx: TransactionLike): number {\n        const costs = this.getPlugin<GasCostPlugin>(\"org.ethers.plugins.network.GasCost\") || (new GasCostPlugin());\n\n        let gas = costs.txBase;\n        if (tx.to == null) { gas += costs.txCreate; }\n        if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n                if (tx.data.substring(i, i + 2) === \"00\") {\n                    gas += costs.txDataZero;\n                } else {\n                    gas += costs.txDataNonzero;\n                }\n            }\n        }\n\n        if (tx.accessList) {\n            const accessList = accessListify(tx.accessList);\n            for (const addr in accessList) {\n                gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n        }\n\n        return gas;\n    }\n\n    /**\n     *  Returns a new Network for the %%network%% name or chainId.\n     */\n    static from(network?: Networkish): Network {\n        injectCommonNetworks();\n\n        // Default network\n        if (network == null) { return Network.from(\"mainnet\"); }\n\n        // Canonical name or chain ID\n        if (typeof(network) === \"number\") { network = BigInt(network); }\n        if (typeof(network) === \"string\" || typeof(network) === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) { return networkFunc(); }\n            if (typeof(network) === \"bigint\") {\n                return new Network(\"unknown\", network);\n            }\n\n            assertArgument(false, \"unknown network\", \"network\", network);\n        }\n\n        // Clonable with network-like abilities\n        if (typeof((<Network>network).clone) === \"function\") {\n            const clone = (<Network>network).clone();\n            //if (typeof(network.name) !== \"string\" || typeof(network.chainId) !== \"number\") {\n            //}\n            return clone;\n        }\n\n        // Networkish\n        if (typeof(network) === \"object\") {\n            assertArgument(typeof(network.name) === \"string\" && typeof(network.chainId) === \"number\",\n                \"invalid network object name or chainId\", \"network\", network);\n\n            const custom = new Network(<string>(network.name), <number>(network.chainId));\n\n            if ((<any>network).ensAddress || (<any>network).ensNetwork != null) {\n                custom.attachPlugin(new EnsPlugin((<any>network).ensAddress, (<any>network).ensNetwork));\n            }\n\n            //if ((<any>network).layerOneConnection) {\n            //    custom.attachPlugin(new LayerOneConnectionPlugin((<any>network).layerOneConnection));\n            //}\n\n            return custom;\n        }\n\n        assertArgument(false, \"invalid network\", \"network\", network);\n    }\n\n    /**\n     *  Register %%nameOrChainId%% with a function which returns\n     *  an instance of a Network representing that chain.\n     */\n    static register(nameOrChainId: string | number | bigint, networkFunc: () => Network): void {\n        if (typeof(nameOrChainId) === \"number\") { nameOrChainId = BigInt(nameOrChainId); }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(false, `conflicting network for ${ JSON.stringify(existing.name) }`, \"nameOrChainId\", nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n\n\ntype Options = {\n    ensNetwork?: number;\n    altNames?: Array<string>;\n    plugins?: Array<NetworkPlugin>;\n};\n\n// We don't want to bring in formatUnits because it is backed by\n// FixedNumber and we want to keep Networks tiny. The values\n// included by the Gas Stations are also IEEE 754 with lots of\n// rounding issues and exceed the strict checks formatUnits has.\nfunction parseUnits(_value: number | string, decimals: number): bigint {\n    const value = String(_value);\n    if (!value.match(/^[0-9.]+$/)) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Break into [ whole, fraction ]\n    const comps = value.split(\".\");\n    if (comps.length === 1) { comps.push(\"\"); }\n\n    // More than 1 decimal point or too many fractional positions\n    if (comps.length !== 2) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Pad the fraction to 9 decimalplaces\n    while (comps[1].length < decimals) { comps[1] += \"0\"; }\n\n    // Too many decimals and some non-zero ending, take the ceiling\n    if (comps[1].length > 9) {\n        let frac = BigInt(comps[1].substring(0, 9));\n        if (!comps[1].substring(9).match(/^0+$/)) { frac++; }\n        comps[1] = frac.toString();\n    }\n\n    return BigInt(comps[0] + comps[1]);\n}\n\n// Used by Polygon to use a gas station for fee data\nfunction getGasStationPlugin(url: string) {\n    return new FetchUrlFeeDataNetworkPlugin(url, async (fetchFeeData, provider, request) => {\n\n        // Prevent Cloudflare from blocking our request in node.js\n        request.setHeader(\"User-Agent\", \"ethers\");\n\n        let response;\n        try {\n            const [ _response, _feeData ] = await Promise.all([\n                request.send(), fetchFeeData()\n            ]);\n            response = _response;\n            const payload = response.bodyJson.standard;\n            const feeData = {\n                gasPrice: _feeData.gasPrice,\n                maxFeePerGas: parseUnits(payload.maxFee, 9),\n                maxPriorityFeePerGas: parseUnits(payload.maxPriorityFee, 9),\n            };\n            return feeData;\n        } catch (error: any) {\n            assert(false, `error encountered with polygon gas station (${ JSON.stringify(request.url) })`, \"SERVER_ERROR\", { request, response, error });\n        }\n    });\n}\n\n// Used by Optimism for a custom priority fee\nfunction getPriorityFeePlugin(maxPriorityFeePerGas: bigint) {\n    return new FetchUrlFeeDataNetworkPlugin(\"data:\", async (fetchFeeData, provider, request) => {\n        const feeData = await fetchFeeData();\n\n        // This should always fail\n        if (feeData.maxFeePerGas == null || feeData.maxPriorityFeePerGas == null) {\n            return feeData;\n        }\n\n        // Compute the corrected baseFee to recompute the updated values\n        const baseFee = feeData.maxFeePerGas - feeData.maxPriorityFeePerGas;\n        return {\n            gasPrice: feeData.gasPrice,\n            maxFeePerGas: (baseFee + maxPriorityFeePerGas),\n            maxPriorityFeePerGas\n        };\n    });\n}\n\n// See: https://chainlist.org\nlet injected = false;\nfunction injectCommonNetworks(): void {\n    if (injected) { return; }\n    injected = true;\n\n    /// Register popular Ethereum networks\n    function registerEth(name: string, chainId: number, options: Options): void {\n        const func = function() {\n            const network = new Network(name, chainId);\n\n            // We use 0 to disable ENS\n            if (options.ensNetwork != null) {\n                network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n            }\n\n            network.attachPlugin(new GasCostPlugin());\n\n            (options.plugins || []).forEach((plugin) => {\n                network.attachPlugin(plugin);\n            });\n\n            return network;\n        };\n\n        // Register the network by name and chain ID\n        Network.register(name, func);\n        Network.register(chainId, func);\n\n        if (options.altNames) {\n            options.altNames.forEach((name) => {\n                Network.register(name, func);\n            });\n        }\n    }\n\n    registerEth(\"mainnet\", 1, { ensNetwork: 1, altNames: [ \"homestead\" ] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"sepolia\", 11155111, { });\n\n    registerEth(\"classic\", 61, { });\n    registerEth(\"classicKotti\", 6, { });\n\n\n\n    registerEth(\"arbitrum\", 42161, {\n        ensNetwork: 1,\n    });\n    registerEth(\"arbitrum-goerli\", 421613, { });\n\n    registerEth(\"bnb\", 56, { ensNetwork: 1 });\n    registerEth(\"bnbt\", 97, { });\n\n    registerEth(\"linea\", 59144, { ensNetwork: 1 });\n    registerEth(\"linea-goerli\", 59140, { });\n\n    registerEth(\"matic\", 137, {\n        ensNetwork: 1,\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation.polygon.technology/v2\")\n        ]\n    });\n    registerEth(\"matic-mumbai\", 80001, {\n        altNames: [ \"maticMumbai\", \"maticmum\" ],  // @TODO: Future remove these alts\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation-testnet.polygon.technology/v2\")\n        ]\n    });\n\n    registerEth(\"optimism\", 10, {\n        ensNetwork: 1,\n        plugins: [\n            getPriorityFeePlugin(BigInt(\"1000000\"))\n        ]\n    });\n    registerEth(\"optimism-goerli\", 420, { });\n\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-classes-per-file */\n\n/**\n * @privateRemarks\n *\n * TODO: Consider re-distritubing interfaces near their original packages\n */\n\n// #region bech32-1\nexport type Bech32Address = `fuel${string}`;\n// #endregion bech32-1\nexport type B256Address = string;\n\nexport type B256AddressEvm = `0x000000000000000000000000${string}`;\n\nexport type Bytes = Uint8Array | number[];\n\nexport type RawSlice = Uint8Array | number[];\n\nexport type BytesLike = Uint8Array | string;\n\n/**\n * @prop value - A 256 bit hash string with the first 12 bytes cleared\n */\nexport type EvmAddress = {\n  value: B256AddressEvm;\n};\n\n/**\n * @prop value - A wrapped 256 bit hash string\n */\nexport type AssetId = {\n  value: B256Address;\n};\n\nexport type StdString = string;\n\n/**\n * @hidden\n */\nexport abstract class AbstractScriptRequest<T> {\n  abstract bytes: Uint8Array;\n  abstract encodeScriptData: (data: T) => Uint8Array;\n}\n\n// #region address-1\nexport abstract class AbstractAddress {\n  abstract toJSON(): string;\n  abstract toString(): string;\n  abstract toAddress(): Bech32Address;\n  abstract toB256(): B256Address;\n  abstract toHexString(): string;\n  abstract toBytes(): Uint8Array;\n  abstract equals(other: AbstractAddress): boolean;\n}\n// #endregion address-1\n\nexport abstract class AbstractAccount {\n  abstract address: AbstractAddress;\n  abstract provider: unknown;\n  abstract getResourcesToSpend(quantities: any[], options?: any): any;\n  abstract sendTransaction(transactionRequest: any, options?: any): any;\n  abstract simulateTransaction(transactionRequest: any, options?: any): any;\n  abstract fund(transactionRequest: any, quantities: any, fee: any): Promise<void>;\n}\n/**\n * @hidden\n */\nexport abstract class AbstractProgram {\n  abstract account: AbstractAccount | null;\n  abstract interface: {\n    readonly jsonAbi: any;\n  };\n\n  abstract provider: {\n    sendTransaction(transactionRequest: any, options?: any): any;\n  } | null;\n}\n\nexport abstract class AbstractContract extends AbstractProgram {\n  abstract id: AbstractAddress;\n}\n\n/**\n * @hidden\n */\nexport abstract class AbstractScript extends AbstractProgram {\n  abstract bytes: Uint8Array;\n}\n\n/** A simple type alias defined using the `type` keyword. */\nexport type AddressLike = AbstractAddress | AbstractAccount;\n\nexport type ContractIdLike = AbstractAddress | AbstractContract;\n","import { randomBytes } from '@fuel-ts/crypto';\nimport { FuelError } from '@fuel-ts/errors';\nimport { AbstractContract, AbstractAccount } from '@fuel-ts/interfaces';\nimport type {\n  Bech32Address,\n  B256Address,\n  AddressLike,\n  ContractIdLike,\n  AbstractAddress,\n  B256AddressEvm,\n  BytesLike,\n} from '@fuel-ts/interfaces';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\nimport type { Decoded } from 'bech32';\nimport { bech32m } from 'bech32';\n\n/**\n * Fuel Network HRP (human-readable part) for bech32 encoding\n *\n * @hidden\n */\nexport const FUEL_BECH32_HRP_PREFIX = 'fuel';\n\n/**\n * Decodes a Bech32 address string into Decoded\n *\n * @hidden\n */\nexport function fromBech32(address: Bech32Address): Decoded {\n  return bech32m.decode(address);\n}\n\n/**\n * Converts a B256 address string into Bech32\n *\n * @hidden\n */\nexport function toBech32(address: B256Address): Bech32Address {\n  return bech32m.encode(\n    FUEL_BECH32_HRP_PREFIX,\n    bech32m.toWords(arrayify(hexlify(address)))\n  ) as Bech32Address;\n}\n\n/**\n * Determines if a given string is Bech32 format\n *\n * @hidden\n */\nexport function isBech32(address: BytesLike): boolean {\n  return (\n    typeof address === 'string' &&\n    address.indexOf(FUEL_BECH32_HRP_PREFIX + 1) === 0 &&\n    fromBech32(address as Bech32Address).prefix === FUEL_BECH32_HRP_PREFIX\n  );\n}\n\n/**\n * Determines if a given string is B256 format\n *\n * @hidden\n */\nexport function isB256(address: string): boolean {\n  return address.length === 66 && /(0x)[0-9a-f]{64}$/i.test(address);\n}\n\n/**\n * Determines if a given string is in Public Key format (512 bits)\n *\n * @hidden\n */\nexport function isPublicKey(address: string): boolean {\n  return address.length === 130 && /(0x)[0-9a-f]{128}$/i.test(address);\n}\n\n/**\n * Determines if a given string is in EVM Address format\n *\n * @hidden\n */\nexport function isEvmAddress(address: string): boolean {\n  return address.length === 42 && /(0x)[0-9a-f]{40}$/i.test(address);\n}\n\n/**\n * Takes a Bech32 address and returns the byte data\n *\n * @hidden\n */\nexport function getBytesFromBech32(address: Bech32Address): Uint8Array {\n  return new Uint8Array(bech32m.fromWords(fromBech32(address).words));\n}\n\n/**\n * Converts a Bech32 address string into B256\n *\n * @hidden\n */\nexport function toB256(address: Bech32Address): B256Address {\n  if (!isBech32(address)) {\n    throw new FuelError(\n      FuelError.CODES.INVALID_BECH32_ADDRESS,\n      `Invalid Bech32 Address: ${address}.`\n    );\n  }\n\n  return hexlify(getBytesFromBech32(address));\n}\n\n/**\n * Takes a Bech32 address and returns a normalized (i.e. lower case) representation of it.\n *\n * The input is validated along the way, which makes this significantly safer than\n * using `address.toLowerCase()`.\n *\n * @hidden\n */\nexport function normalizeBech32(address: Bech32Address): Bech32Address {\n  const { words } = fromBech32(address);\n  return bech32m.encode(FUEL_BECH32_HRP_PREFIX, words) as Bech32Address;\n}\n\n/**\n * Takes an indeterminate address type and returns an address\n *\n * @hidden\n */\nexport const addressify = (addressLike: AddressLike | ContractIdLike): AbstractAddress => {\n  if (addressLike instanceof AbstractAccount) {\n    return addressLike.address;\n  }\n\n  if (addressLike instanceof AbstractContract) {\n    return addressLike.id;\n  }\n\n  return addressLike;\n};\n\n/**\n * @hidden\n */\nexport const getRandomB256 = () => hexlify(randomBytes(32));\n\n/**\n * Takes a B256 address and clears the first 12 bytes, this is required for an EVM Address\n *\n * @param b256 - the address to clear\n * @returns b256 with first 12 bytes cleared\n *\n * @hidden\n */\nexport const clearFirst12BytesFromB256 = (b256: B256Address): B256AddressEvm => {\n  let bytes;\n\n  try {\n    if (!isB256(b256)) {\n      throw new FuelError(\n        FuelError.CODES.INVALID_BECH32_ADDRESS,\n        `Invalid Bech32 Address: ${b256}.`\n      );\n    }\n\n    bytes = getBytesFromBech32(toBech32(b256));\n    bytes = hexlify(bytes.fill(0, 0, 12)) as B256AddressEvm;\n  } catch (error) {\n    throw new FuelError(\n      FuelError.CODES.PARSE_FAILED,\n      `Cannot generate EVM Address B256 from: ${b256}.`\n    );\n  }\n\n  return bytes;\n};\n\n/**\n * Pads the first 12 bytes of an Evm address. This is useful for padding addresses returned from\n * the EVM to interact with the Sway EVM Address Type.\n *\n * @param address - Evm address to be padded\n * @returns Evm address padded to a b256 address\n *\n * @hidden\n */\nexport const padFirst12BytesOfEvmAddress = (address: string): B256AddressEvm => {\n  if (!isEvmAddress(address)) {\n    throw new FuelError(FuelError.CODES.INVALID_EVM_ADDRESS, 'Invalid EVM address format.');\n  }\n\n  return address.replace('0x', '0x000000000000000000000000') as B256AddressEvm;\n};\n","import { FuelError } from '@fuel-ts/errors';\nimport { AbstractAddress } from '@fuel-ts/interfaces';\nimport type { Bech32Address, B256Address, EvmAddress, AssetId } from '@fuel-ts/interfaces';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\nimport { sha256 } from '@noble/hashes/sha256';\n\nimport {\n  normalizeBech32,\n  isBech32,\n  toB256,\n  getBytesFromBech32,\n  toBech32,\n  getRandomB256,\n  isPublicKey,\n  isB256,\n  clearFirst12BytesFromB256,\n  isEvmAddress,\n  padFirst12BytesOfEvmAddress,\n} from './utils';\n\n/**\n * `Address` provides a type safe wrapper for converting between different address formats\n * ands comparing them for equality.\n */\nexport default class Address extends AbstractAddress {\n  // #region address-2\n  readonly bech32Address: Bech32Address;\n  // #endregion address-2\n\n  /**\n   * @param address - A Bech32 address\n   */\n  constructor(address: Bech32Address) {\n    super();\n    this.bech32Address = normalizeBech32(address);\n\n    if (!isBech32(this.bech32Address)) {\n      throw new FuelError(\n        FuelError.CODES.INVALID_BECH32_ADDRESS,\n        `Invalid Bech32 Address: ${address}.`\n      );\n    }\n  }\n\n  /**\n   * Returns the `bech32Address` property\n   *\n   * @returns The `bech32Address` property\n   */\n  toAddress(): Bech32Address {\n    return this.bech32Address;\n  }\n\n  /**\n   * Converts and returns the `bech32Address` property to a 256 bit hash string\n   *\n   * @returns The `bech32Address` property as a 256 bit hash string\n   */\n  toB256(): B256Address {\n    return toB256(this.bech32Address);\n  }\n\n  /**\n   * Converts and returns the `bech32Address` property to a byte array\n   *\n   * @returns The `bech32Address` property as a byte array\n   */\n  toBytes(): Uint8Array {\n    return getBytesFromBech32(this.bech32Address);\n  }\n\n  /**\n   * Converts\n   *\n   * @returns The `bech32Address` property as a 256 bit hash string\n   */\n  toHexString(): B256Address {\n    return this.toB256();\n  }\n\n  /**\n   * Converts and returns the `bech32Address` property as a string\n   *\n   * @returns The `bech32Address` property as a string\n   */\n  toString(): string {\n    return this.bech32Address;\n  }\n\n  /**\n   * Converts and returns the `bech32Address` property as a string\n   *\n   * @returns The `bech32Address` property as a string\n   */\n  toJSON(): string {\n    return this.bech32Address;\n  }\n\n  /**\n   * Clears the first 12 bytes of the `bech32Address` property and returns it as a `EvmAddress`\n   *\n   * @returns The `bech32Address` property as an {@link EvmAddress | `EvmAddress`}\n   */\n  toEvmAddress(): EvmAddress {\n    const b256Address = toB256(this.bech32Address);\n\n    return {\n      value: clearFirst12BytesFromB256(b256Address),\n    } as EvmAddress;\n  }\n\n  /**\n   * Wraps the `bech32Address` property and returns as an `AssetId`.\n   *\n   * @returns The `bech32Address` property as an {@link AssetId | `AssetId`}\n   */\n  toAssetId(): AssetId {\n    return {\n      value: this.toB256(),\n    } as AssetId;\n  }\n\n  /**\n   * Returns the value of the `bech32Address` property\n   *\n   * @returns The value of `bech32Address` property\n   */\n  valueOf(): string {\n    return this.bech32Address;\n  }\n\n  /**\n   * Compares this the `bech32Address` property to another for direct equality\n   *\n   * @param other - Another address to compare against\n   * @returns The equality of the comparison\n   */\n  equals(other: Address): boolean {\n    return this.bech32Address === other.bech32Address;\n  }\n\n  /**\n   * Takes a Public Key, hashes it, and creates an `Address`\n   *\n   * @param publicKey - A wallets public key\n   * @returns A new `Address` instance\n   */\n  static fromPublicKey(publicKey: string): Address {\n    if (!isPublicKey(publicKey)) {\n      throw new FuelError(FuelError.CODES.INVALID_PUBLIC_KEY, `Invalid Public Key: ${publicKey}.`);\n    }\n\n    const b256Address = hexlify(sha256(arrayify(publicKey)));\n    return new Address(toBech32(b256Address));\n  }\n\n  /**\n   * Takes a B256 Address and creates an `Address`\n   *\n   * @param b256Address - A b256 hash\n   * @returns A new `Address` instance\n   */\n  static fromB256(b256Address: string): Address {\n    if (!isB256(b256Address)) {\n      throw new FuelError(\n        FuelError.CODES.INVALID_B256_ADDRESS,\n        `Invalid B256 Address: ${b256Address}.`\n      );\n    }\n\n    return new Address(toBech32(b256Address));\n  }\n\n  /**\n   * Creates an `Address` with a randomized `bech32Address` property\n   *\n   * @returns A new `Address` instance\n   */\n  static fromRandom(): Address {\n    return this.fromB256(getRandomB256());\n  }\n\n  /**\n   * Takes an ambiguous string and attempts to create an `Address`\n   *\n   * @param address - An ambiguous string\n   * @returns A new `Address` instance\n   */\n  static fromString(address: string): Address {\n    return isBech32(address) ? new Address(address as Bech32Address) : this.fromB256(address);\n  }\n\n  /**\n   * Takes an ambiguous string or address and creates an `Address`\n   *\n   * @returns a new `Address` instance\n   */\n  static fromAddressOrString(address: string | AbstractAddress): AbstractAddress {\n    return typeof address === 'string' ? this.fromString(address) : address;\n  }\n\n  /**\n   * Takes a dynamic string or `AbstractAddress` and creates an `Address`\n   *\n   * @param addressId - A string containing Bech32, B256, or Public Key\n   * @throws Error - Unknown address if the format is not recognised\n   * @returns A new `Address` instance\n   */\n  static fromDynamicInput(address: string | AbstractAddress): Address {\n    // If address is a object than we assume it's a AbstractAddress\n    // we don't check by instanceof because it's possible to\n    // the host app to have a different reference to this same class type\n    if (typeof address !== 'string' && 'toB256' in address) {\n      return Address.fromB256(address.toB256());\n    }\n    if (isPublicKey(address)) {\n      return Address.fromPublicKey(address);\n    }\n\n    if (isBech32(address)) {\n      return new Address(address as Bech32Address);\n    }\n\n    if (isB256(address)) {\n      return Address.fromB256(address);\n    }\n\n    if (isEvmAddress(address)) {\n      return Address.fromEvmAddress(address);\n    }\n\n    throw new FuelError(\n      FuelError.CODES.PARSE_FAILED,\n      `Unknown address format: only 'Bech32', 'B256', or 'Public Key (512)' are supported.`\n    );\n  }\n\n  /**\n   * Takes an Evm Address and returns back an `Address`\n   *\n   * @returns A new `Address` instance\n   */\n  static fromEvmAddress(evmAddress: string): Address {\n    if (!isEvmAddress(evmAddress)) {\n      throw new FuelError(\n        FuelError.CODES.INVALID_EVM_ADDRESS,\n        `Invalid Evm Address: ${evmAddress}.`\n      );\n    }\n\n    const paddedAddress = padFirst12BytesOfEvmAddress(evmAddress);\n\n    return new Address(toBech32(paddedAddress));\n  }\n}\n","export const ZeroBytes32 = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexport const BaseAssetId = ZeroBytes32;\nexport const EmptyRoot = '0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport BnJs from 'bn.js';\n\nimport { DECIMAL_UNITS, DEFAULT_MIN_PRECISION, DEFAULT_PRECISION } from './configs';\nimport { toFixed } from './decimal';\nimport type { FormatConfig } from './types';\n\ntype CompareResult = -1 | 0 | 1;\nexport type BNInput = number | string | number[] | Uint8Array | Buffer | BnJs;\n\ninterface BNHelper {\n  caller(v: BNInput, methodName: string): BN | boolean | CompareResult;\n  toHex: (bytesPadding?: number) => string;\n  toBytes: (bytesPadding?: number) => Uint8Array;\n  toJSON: () => string;\n}\ninterface BNInputOverrides {\n  add: (v: BNInput) => BN;\n  pow: (v: BNInput) => BN;\n  sub: (v: BNInput) => BN;\n  div: (v: BNInput) => BN;\n  mul: (v: BNInput) => BN;\n  mod: (v: BNInput) => BN;\n  divRound: (v: BNInput) => BN;\n  lt: (v: BNInput) => boolean;\n  lte: (v: BNInput) => boolean;\n  gt: (v: BNInput) => boolean;\n  gte: (v: BNInput) => boolean;\n  eq: (v: BNInput) => boolean;\n  cmp: (v: BNInput) => CompareResult;\n}\ninterface BNOverrides {\n  sqr: () => BN;\n  neg: () => BN;\n  abs: () => BN;\n  toTwos: (width: number) => BN;\n  fromTwos: (width: number) => BN;\n}\ninterface BNHiddenTypes {\n  mulTo: (num: BN, out: BN) => BN;\n  divmod: (num: BNInput, mode?: string, positive?: boolean) => { mod: BN; div: BN };\n}\ntype BNInputOverridesKeys = keyof BNInputOverrides;\n\nexport class BN extends BnJs implements BNInputOverrides, BNHiddenTypes, BNHelper, BNOverrides {\n  MAX_U64 = '0xFFFFFFFFFFFFFFFF';\n\n  constructor(value?: BNInput | null, base?: number | 'hex', endian?: BnJs.Endianness) {\n    let bnValue = value;\n    let bnBase = base;\n\n    if (BN.isBN(value)) {\n      bnValue = value.toArray();\n    }\n    // trim '0x' from hex strings as BN doesn't support it - https://github.com/ChainSafe/web3.js/issues/3847\n    else if (typeof value === 'string' && value.slice(0, 2) === '0x') {\n      bnValue = value.substring(2);\n      bnBase = base || 'hex';\n    }\n\n    super(bnValue == null ? 0 : bnValue, bnBase, endian);\n  }\n\n  // ANCHOR: HELPERS\n  // make sure we always include `0x` in hex strings\n  toString(base?: number | 'hex', length?: number) {\n    const output = super.toString(base, length);\n\n    if (base === 16 || base === 'hex') {\n      return `0x${output}`;\n    }\n\n    return output;\n  }\n\n  toHex(bytesPadding?: number): string {\n    const bytes = bytesPadding || 0;\n    const bytesLength = bytes * 2;\n\n    if (this.isNeg()) {\n      throw new FuelError(ErrorCode.CONVERTING_FAILED, 'Cannot convert negative value to hex.');\n    }\n    if (bytesPadding && this.byteLength() > bytesPadding) {\n      throw new FuelError(\n        ErrorCode.CONVERTING_FAILED,\n        `Provided value ${this} is too large. It should fit within ${bytesPadding} bytes.`\n      );\n    }\n\n    return this.toString(16, bytesLength);\n  }\n\n  toBytes(bytesPadding?: number): Uint8Array {\n    if (this.isNeg()) {\n      throw new FuelError(ErrorCode.CONVERTING_FAILED, 'Cannot convert negative value to bytes.');\n    }\n\n    return Uint8Array.from(this.toArray(undefined, bytesPadding));\n  }\n\n  toJSON(): string {\n    return this.toString(16);\n  }\n\n  valueOf(): string {\n    return this.toString();\n  }\n\n  format(options?: FormatConfig): string {\n    const {\n      units = DECIMAL_UNITS,\n      precision = DEFAULT_PRECISION,\n      minPrecision = DEFAULT_MIN_PRECISION,\n    } = options || {};\n\n    const formattedUnits = this.formatUnits(units);\n    const formattedFixed = toFixed(formattedUnits, { precision, minPrecision });\n\n    // increase precision if formatted is zero, but has more numbers out of precision\n    if (!parseFloat(formattedFixed)) {\n      const [, originalDecimals = '0'] = formattedUnits.split('.');\n      const firstNonZero = originalDecimals.match(/[1-9]/);\n\n      if (firstNonZero && firstNonZero.index && firstNonZero.index + 1 > precision) {\n        const [valueUnits = '0'] = formattedFixed.split('.');\n        return `${valueUnits}.${originalDecimals.slice(0, firstNonZero.index + 1)}`;\n      }\n    }\n\n    return formattedFixed;\n  }\n\n  formatUnits(units: number = DECIMAL_UNITS): string {\n    const valueUnits = this.toString().slice(0, units * -1);\n    const valueDecimals = this.toString().slice(units * -1);\n    const length = valueDecimals.length;\n    const defaultDecimals = Array.from({ length: units - length })\n      .fill('0')\n      .join('');\n    const integerPortion = valueUnits ? `${valueUnits}.` : '0.';\n\n    return `${integerPortion}${defaultDecimals}${valueDecimals}`;\n  }\n  // END ANCHOR: HELPERS\n\n  // ANCHOR: OVERRIDES to accept better inputs\n  add(v: BNInput): BN {\n    return this.caller(v, 'add') as BN;\n  }\n\n  pow(v: BNInput): BN {\n    return this.caller(v, 'pow') as BN;\n  }\n\n  sub(v: BNInput): BN {\n    return this.caller(v, 'sub') as BN;\n  }\n\n  div(v: BNInput): BN {\n    return this.caller(v, 'div') as BN;\n  }\n\n  mul(v: BNInput): BN {\n    return this.caller(v, 'mul') as BN;\n  }\n\n  mod(v: BNInput): BN {\n    return this.caller(v, 'mod') as BN;\n  }\n\n  divRound(v: BNInput): BN {\n    return this.caller(v, 'divRound') as BN;\n  }\n\n  lt(v: BNInput): boolean {\n    return this.caller(v, 'lt') as boolean;\n  }\n\n  lte(v: BNInput): boolean {\n    return this.caller(v, 'lte') as boolean;\n  }\n\n  gt(v: BNInput): boolean {\n    return this.caller(v, 'gt') as boolean;\n  }\n\n  gte(v: BNInput): boolean {\n    return this.caller(v, 'gte') as boolean;\n  }\n\n  eq(v: BNInput): boolean {\n    return this.caller(v, 'eq') as boolean;\n  }\n\n  cmp(v: BNInput): CompareResult {\n    return this.caller(v, 'cmp') as CompareResult;\n  }\n  // END ANCHOR: OVERRIDES to accept better inputs\n\n  // ANCHOR: OVERRIDES to output our BN type\n  sqr(): BN {\n    return new BN(super.sqr().toArray());\n  }\n\n  neg(): BN {\n    return new BN(super.neg().toArray());\n  }\n\n  abs(): BN {\n    return new BN(super.abs().toArray());\n  }\n\n  toTwos(width: number): BN {\n    return new BN(super.toTwos(width).toArray());\n  }\n\n  fromTwos(width: number): BN {\n    return new BN(super.fromTwos(width).toArray());\n  }\n  // END ANCHOR: OVERRIDES to output our BN type\n\n  // ANCHOR: OVERRIDES to avoid losing references\n  caller(v: BNInput, methodName: BNInputOverridesKeys): BN | boolean | CompareResult {\n    const output = super[methodName](new BN(v));\n\n    if (BN.isBN(output)) {\n      return new BN(output.toArray());\n    }\n\n    if (typeof output === 'boolean') {\n      return output as boolean;\n    }\n\n    return output as CompareResult;\n  }\n\n  clone() {\n    return new BN(this.toArray());\n  }\n\n  mulTo(num: BN, out: BN) {\n    const output: BnJs = (new BnJs(this.toArray()) as BN).mulTo(num, out);\n\n    return new BN(output.toArray());\n  }\n\n  egcd(p: BnJs) {\n    const { a, b, gcd } = new BnJs(this.toArray()).egcd(p);\n\n    return {\n      a: new BN(a.toArray()),\n      b: new BN(b.toArray()),\n      gcd: new BN(gcd.toArray()),\n    };\n  }\n\n  divmod(num: BNInput, mode?: string, positive?: boolean): { mod: BN; div: BN } {\n    const { div, mod } = (new BnJs(this.toArray()) as BN).divmod(new BN(num), mode, positive);\n\n    return {\n      div: new BN(div?.toArray()),\n      mod: new BN(mod?.toArray()),\n    };\n  }\n\n  maxU64(): BN {\n    return this.gte(this.MAX_U64) ? new BN(this.MAX_U64) : this;\n  }\n\n  normalizeZeroToOne(): BN {\n    return this.isZero() ? new BN(1) : this;\n  }\n  // END ANCHOR: OVERRIDES to avoid losing references\n}\n\n// functional shortcut to create BN\nexport const bn = (value?: BNInput | null, base?: number | 'hex', endian?: BnJs.Endianness) =>\n  new BN(value, base, endian);\n\nbn.parseUnits = (value: string, units: number = DECIMAL_UNITS): BN => {\n  const valueToParse = value === '.' ? '0.' : value;\n  const [valueUnits = '0', valueDecimals = '0'] = valueToParse.split('.');\n  const length = valueDecimals.length;\n\n  if (length > units) {\n    throw new FuelError(\n      ErrorCode.CONVERTING_FAILED,\n      `Decimal can't have more than ${units} digits.`\n    );\n  }\n\n  const decimals = Array.from({ length: units }).fill('0');\n  decimals.splice(0, length, valueDecimals);\n  const amount = `${valueUnits.replaceAll(',', '')}${decimals.join('')}`;\n  return bn(amount);\n};\n","export const DEFAULT_PRECISION = 9;\nexport const DEFAULT_MIN_PRECISION = 3;\nexport const DECIMAL_UNITS = 9;\n","import { DEFAULT_PRECISION, DEFAULT_MIN_PRECISION } from './configs';\nimport type { ToFixedConfig } from './types';\n\nexport function toFixed(value?: string | number, options?: ToFixedConfig) {\n  const { precision = DEFAULT_PRECISION, minPrecision = DEFAULT_MIN_PRECISION } = options || {};\n\n  const [valueUnits = '0', valueDecimals = '0'] = String(value || '0.0').split('.');\n  const groupRegex = /(\\d)(?=(\\d{3})+\\b)/g;\n  const units = valueUnits.replace(groupRegex, '$1,');\n  let decimals = valueDecimals.slice(0, precision);\n\n  // strip traling zeros limited by minPrecision\n  if (minPrecision < precision) {\n    const trimmedDecimal = decimals.match(/.*[1-9]{1}/);\n    const lastNonZeroIndex = trimmedDecimal?.[0].length || 0;\n    const keepChars = Math.max(minPrecision, lastNonZeroIndex);\n    decimals = decimals.slice(0, keepChars);\n  }\n\n  const decimalPortion = decimals ? `.${decimals}` : '';\n  return `${units}${decimalPortion}`;\n}\n","import type { BNInput } from './bn';\nimport { bn } from './bn';\nimport type { FormatConfig } from './types';\n\n/**\n * Functional shortcuts\n */\n\n// Shortcut to bn(value).toNumber\nexport function toNumber(value: BNInput): number {\n  return bn(value).toNumber();\n}\n\n// Shortcut to bn(value).toHex\nexport function toHex(value: BNInput, bytesPadding?: number): string {\n  return bn(value).toHex(bytesPadding);\n}\n\n// Shortcut to bn(value).toBytes\nexport function toBytes(value: BNInput, bytesPadding?: number): Uint8Array {\n  return bn(value).toBytes(bytesPadding);\n}\n\n// Shortcut to bn.(value).formatUnits\nexport function formatUnits(value: BNInput, units?: number): string {\n  return bn(value).formatUnits(units);\n}\n\n// Shortcut to bn.(value).format\nexport function format(value: BNInput, options?: FormatConfig): string {\n  return bn(value).format(options);\n}\n","import type { BN } from './bn';\nimport { bn } from './bn';\nimport type { BigNumberish } from './types';\n\nexport function max(...numbers: Array<BigNumberish>): BN {\n  return numbers.reduce<BN>((prev, cur) => (bn(cur).gt(prev) ? bn(cur) : prev), bn(0));\n}\n\nexport function multiply(...numbers: Array<BigNumberish>): BN {\n  return bn(Math.ceil(numbers.reduce<BN>((a, b) => bn(a).mul(b), bn(1)).toNumber()));\n}\n","import { BaseAssetId } from '@fuel-ts/address/configs';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport type { BigNumberish, BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport { hexlify } from '@fuel-ts/utils';\n\nexport type CoinQuantityLike =\n  | [amount: BigNumberish, assetId?: BytesLike, max?: BigNumberish]\n  | { amount: BigNumberish; assetId?: BytesLike; max?: BigNumberish };\nexport type CoinQuantity = { amount: BN; assetId: string; max?: BN };\n\n/** @hidden */\nexport const coinQuantityfy = (coinQuantityLike: CoinQuantityLike): CoinQuantity => {\n  let assetId;\n  let amount;\n  let max;\n  if (Array.isArray(coinQuantityLike)) {\n    amount = coinQuantityLike[0];\n    assetId = coinQuantityLike[1] ?? BaseAssetId;\n    max = coinQuantityLike[2] ?? undefined;\n  } else {\n    amount = coinQuantityLike.amount;\n    assetId = coinQuantityLike.assetId ?? BaseAssetId;\n    max = coinQuantityLike.max ?? undefined;\n  }\n\n  const bnAmount = bn(amount);\n  return {\n    assetId: hexlify(assetId),\n    amount: bnAmount.lt(1) ? bn(1) : bnAmount,\n    max: max ? bn(max) : undefined,\n  };\n};\n\nexport interface IAddAmountToAssetParams {\n  assetId: string;\n  amount: BN;\n  coinQuantities: CoinQuantity[];\n}\n\nexport const addAmountToAsset = (params: IAddAmountToAssetParams): CoinQuantity[] => {\n  const { amount, assetId } = params;\n\n  const coinQuantities = [...params.coinQuantities];\n\n  const assetIdx = coinQuantities.findIndex((coinQuantity) => coinQuantity.assetId === assetId);\n\n  if (assetIdx !== -1) {\n    coinQuantities[assetIdx].amount = coinQuantities[assetIdx].amount.add(amount);\n  } else {\n    coinQuantities.push({ assetId, amount });\n  }\n\n  return coinQuantities;\n};\n","import { bufferFromString } from '@fuel-ts/crypto';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\nimport { sha256 as sha256AsBytes } from '@noble/hashes/sha256';\n\n/**\n * @param data - The data to be hashed\n * @returns A sha256 hash of the data in hex format\n */\nexport function sha256(data: BytesLike): string {\n  return hexlify(sha256AsBytes(arrayify(data)));\n}\n\n/**\n * wrap sha256\n *\n * @param data - The data to be hash\n * @returns A sha256 hash of the data\n */\nexport function hash(data: BytesLike): string {\n  return sha256(data);\n}\n\n/**\n * Convert a uint64 number to a big-endian byte array\n */\nexport function uint64ToBytesBE(value: number): Uint8Array {\n  const bigIntValue = BigInt(value);\n  const buffer = new ArrayBuffer(8);\n  const dataView = new DataView(buffer);\n  dataView.setBigUint64(0, bigIntValue, false); // write the uint64 value in big-endian order\n  return new Uint8Array(dataView.buffer);\n}\n\n/**\n * hash string messages with sha256\n *\n * @param msg - The string message to be hashed\n * @returns A sha256 hash of the message\n */\nexport function hashMessage(msg: string) {\n  return hash(bufferFromString(msg, 'utf-8'));\n}\n","import type { BytesLike } from '@fuel-ts/interfaces';\nimport type { BN } from '@fuel-ts/math';\n\nimport type { Option } from './v0/OptionCoder';\n\ntype Primitive = string | number | boolean;\n\n/**\n * The type of value you can provide to `Coder.encode`\n */\nexport type InputValue<T = void> =\n  | Primitive\n  | BN\n  | Option<T>\n  | BytesLike\n  | InputValue[]\n  | { [key: string]: InputValue }\n  | Record<string, Primitive | BytesLike>;\n\n/**\n * The type of value you can get from `Coder.decode`\n */\nexport type DecodedValue =\n  | Primitive\n  | DecodedValue[]\n  | { [key: string]: DecodedValue }\n  | Record<string, Primitive>;\n\nexport type TypesOfCoder<TCoder> = TCoder extends Coder<infer TInput, infer TDecoded>\n  ? { Input: TInput; Decoded: TDecoded }\n  : never;\n\nexport abstract class Coder<TInput = unknown, TDecoded = unknown> {\n  readonly name: string;\n  readonly type: string;\n  readonly encodedLength: number;\n\n  constructor(name: string, type: string, encodedLength: number) {\n    this.name = name;\n    this.type = type;\n    this.encodedLength = encodedLength;\n  }\n\n  abstract encode(value: TInput, length?: number): Uint8Array;\n\n  abstract decode(data: Uint8Array, offset: number, length?: number): [TDecoded, number];\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { MAX_BYTES } from '../../../utils/constants';\nimport { concatWithDynamicData } from '../../../utils/utilities';\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\n\ntype InputValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Input']>;\ntype DecodedValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Decoded']>;\n\nexport class ArrayCoder<TCoder extends Coder> extends Coder<\n  InputValueOf<TCoder>,\n  DecodedValueOf<TCoder>\n> {\n  coder: TCoder;\n  length: number;\n\n  constructor(coder: TCoder, length: number) {\n    super('array', `[${coder.type}; ${length}]`, length * coder.encodedLength);\n    this.coder = coder;\n    this.length = length;\n  }\n\n  encode(value: InputValueOf<TCoder>): Uint8Array {\n    if (!Array.isArray(value)) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    if (this.length !== value.length) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Types/values length mismatch.`);\n    }\n\n    return concatWithDynamicData(Array.from(value).map((v) => this.coder.encode(v)));\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoder>, number] {\n    if (data.length < this.encodedLength || data.length > MAX_BYTES) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid array data size.`);\n    }\n\n    let newOffset = offset;\n    const decodedValue = Array(this.length)\n      .fill(0)\n      .map(() => {\n        let decoded;\n        [decoded, newOffset] = this.coder.decode(data, newOffset);\n        return decoded;\n      });\n\n    return [decodedValue as DecodedValueOf<TCoder>, newOffset];\n  }\n}\n","/**\n * Types and Type Regex\n */\nexport const U8_CODER_TYPE = 'u8';\nexport const U16_CODER_TYPE = 'u16';\nexport const U32_CODER_TYPE = 'u32';\nexport const U64_CODER_TYPE = 'u64';\nexport const U256_CODER_TYPE = 'u256';\nexport const RAW_PTR_CODER_TYPE = 'raw untyped ptr';\nexport const RAW_SLICE_CODER_TYPE = 'raw untyped slice';\nexport const BOOL_CODER_TYPE = 'bool';\nexport const B256_CODER_TYPE = 'b256';\nexport const B512_CODER_TYPE = 'struct B512';\nexport const OPTION_CODER_TYPE = 'enum Option';\nexport const VEC_CODER_TYPE = 'struct Vec';\nexport const BYTES_CODER_TYPE = 'struct Bytes';\nexport const STD_STRING_CODER_TYPE = 'struct String';\nexport const STR_SLICE_CODER_TYPE = 'str';\nexport const stringRegEx = /str\\[(?<length>[0-9]+)\\]/;\nexport const arrayRegEx = /\\[(?<item>[\\w\\s\\\\[\\]]+);\\s*(?<length>[0-9]+)\\]/;\nexport const structRegEx = /^struct (?<name>\\w+)$/;\nexport const enumRegEx = /^enum (?<name>\\w+)$/;\nexport const tupleRegEx = /^\\((?<items>.*)\\)$/;\nexport const genericRegEx = /^generic (?<name>\\w+)$/;\n/**\n * Encoding versions\n */\nexport const ENCODING_V0 = '0';\nexport const ENCODING_V1 = '1';\n/**\n * Property space and config constants\n */\nexport const WORD_SIZE = 8;\nexport const BYTES_32 = 32;\nexport const MAX_INPUTS = 255;\nexport const ASSET_ID_LEN = BYTES_32;\nexport const CONTRACT_ID_LEN = BYTES_32;\nexport const ADDRESS_LEN = BYTES_32;\nexport const NONCE_LEN = BYTES_32;\nexport const TX_LEN = WORD_SIZE * 4;\nexport const TX_POINTER_LEN = WORD_SIZE * 2;\nexport const MAX_BYTES = 2 ** 32 - 1; // Max u32\n\nexport const calculateVmTxMemory = ({ maxInputs }: { maxInputs: number }) =>\n  BYTES_32 + // Tx ID\n  WORD_SIZE + // Tx size\n  // Asset ID/Balance coin input pairs\n  maxInputs * (ASSET_ID_LEN + WORD_SIZE);\n\n// SCRIPT_FIXED_SIZE = 104\nexport const SCRIPT_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  WORD_SIZE + // Gas limit\n  WORD_SIZE + // Script size\n  WORD_SIZE + // Script data size\n  WORD_SIZE + // Policies\n  WORD_SIZE + // Inputs size\n  WORD_SIZE + // Outputs size\n  WORD_SIZE + // Witnesses size\n  BYTES_32; // Receipts root\n\n// INPUT_COIN_FIXED_SIZE = 176\nexport const INPUT_COIN_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  TX_LEN + // Utxo Length\n  WORD_SIZE + // Output Index\n  ADDRESS_LEN + // Owner\n  WORD_SIZE + // Amount\n  ASSET_ID_LEN + // Asset id\n  TX_POINTER_LEN + // TxPointer\n  WORD_SIZE + // Witnesses index\n  WORD_SIZE + // Maturity\n  WORD_SIZE + // Predicate size\n  WORD_SIZE + // Predicate data size\n  WORD_SIZE; // Predicate gas used\n\n// INPUT_MESSAGE_FIXED_SIZE = 168\nexport const INPUT_MESSAGE_FIXED_SIZE =\n  WORD_SIZE + // Identifier\n  ADDRESS_LEN + // Sender\n  ADDRESS_LEN + // Recipient\n  WORD_SIZE + // Amount\n  NONCE_LEN + // Nonce\n  WORD_SIZE + // witness_index\n  WORD_SIZE + // Data size\n  WORD_SIZE + // Predicate size\n  WORD_SIZE + // Predicate data size\n  WORD_SIZE; // Predicate gas used\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { concat, concatBytes, arrayify } from '@fuel-ts/utils';\n\nimport { BigNumberCoder } from '../encoding/coders/v0/BigNumberCoder';\n\nimport { BYTES_CODER_TYPE, VEC_CODER_TYPE, STD_STRING_CODER_TYPE, WORD_SIZE } from './constants';\n\nexport type DynamicData = {\n  [pointerIndex: number]: Uint8ArrayWithDynamicData;\n};\n\nexport type Uint8ArrayWithDynamicData = Uint8Array & {\n  dynamicData?: DynamicData;\n};\n\nconst VEC_PROPERTY_SPACE = 3; // ptr + cap + length\nexport const BASE_VECTOR_OFFSET = VEC_PROPERTY_SPACE * WORD_SIZE;\n\nconst RAW_SLICE_PROPERTY_SPACE = 2; // ptr + length\nexport const BASE_RAW_SLICE_OFFSET = RAW_SLICE_PROPERTY_SPACE * WORD_SIZE;\n\n// this is a fork of @ethersproject/bytes:concat\n// this collects individual dynamicData data and relocates it to top level\nexport function concatWithDynamicData(items: ReadonlyArray<BytesLike>): Uint8ArrayWithDynamicData {\n  const topLevelData: DynamicData = {};\n\n  let totalIndex = 0;\n  const objects = items.map((item) => {\n    const dynamicData = (item as Uint8ArrayWithDynamicData).dynamicData;\n    if (dynamicData) {\n      Object.entries(dynamicData).forEach(([pointerIndex, vData]) => {\n        topLevelData[parseInt(pointerIndex, 10) + totalIndex] = vData;\n      });\n    }\n\n    const byteArray = arrayify(item);\n    totalIndex += byteArray.byteLength / WORD_SIZE;\n\n    return byteArray;\n  });\n\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result: Uint8ArrayWithDynamicData = new Uint8Array(length);\n\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  // store vector data and pointer indices, but only if data exist\n  if (Object.keys(topLevelData).length) {\n    result.dynamicData = topLevelData;\n  }\n\n  return result;\n}\n\nexport function unpackDynamicData(\n  results: Uint8ArrayWithDynamicData,\n  baseOffset: number,\n  dataOffset: number\n): Uint8Array {\n  if (!results.dynamicData) {\n    return concat([results]);\n  }\n\n  let cumulativeDynamicByteLength = 0;\n  let updatedResults = results;\n  Object.entries(results.dynamicData).forEach(([pointerIndex, vData]) => {\n    // update value of pointer\n    const pointerOffset = parseInt(pointerIndex, 10) * WORD_SIZE;\n    const adjustedValue = new BigNumberCoder('u64').encode(\n      dataOffset + baseOffset + cumulativeDynamicByteLength\n    );\n    updatedResults.set(adjustedValue, pointerOffset);\n\n    // append dynamic data at the end\n    const dataToAppend = vData.dynamicData\n      ? // unpack child dynamic data\n        unpackDynamicData(\n          vData,\n          baseOffset,\n          dataOffset + vData.byteLength + cumulativeDynamicByteLength\n        )\n      : vData;\n    updatedResults = concat([updatedResults, dataToAppend]);\n\n    cumulativeDynamicByteLength += dataToAppend.byteLength;\n  });\n\n  return updatedResults;\n}\n\n/**\n * Turns:\n  Uint8Array(24) [\n    0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 24\n  ]\n\n  Into:\n  Array [\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 1\n    ],\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 2\n    ],\n    Uint8Array(8) [\n      0, 0, 0, 0, 0, 0, 0, 24\n    ]\n  ]\n *\n */\nexport const chunkByLength = (data: Uint8Array, length = WORD_SIZE): Uint8Array[] => {\n  const chunks = [];\n  let offset = 0;\n  let chunk = data.slice(offset, offset + length);\n  while (chunk.length) {\n    chunks.push(chunk);\n    offset += length;\n    chunk = data.slice(offset, offset + length);\n  }\n\n  return chunks;\n};\n\n/**\n * Checks if a given type is a pointer type\n * See: https://github.com/FuelLabs/sway/issues/1368\n */\nexport const isPointerType = (type: string) => {\n  switch (type) {\n    case 'u8':\n    case 'u16':\n    case 'u32':\n    case 'u64':\n    case 'bool': {\n      return false;\n    }\n    default: {\n      return true;\n    }\n  }\n};\n\nexport const isHeapType = (type: string) =>\n  type === VEC_CODER_TYPE || type === BYTES_CODER_TYPE || type === STD_STRING_CODER_TYPE;\n\nexport function findOrThrow<T>(\n  arr: readonly T[],\n  predicate: (val: T) => boolean,\n  throwFn: () => never = () => {\n    throw new FuelError(ErrorCode.ELEMENT_NOT_FOUND, 'Element not found in the array.');\n  }\n): T {\n  const found = arr.find(predicate);\n  if (found === undefined) {\n    throwFn();\n  }\n\n  return found;\n}\n\n/**\n * Because some properties can be single-bytes, we need to pad them\n * with zeros until they are aligned to a word-sized increment.\n * This is the case for `tuple` and `struct` properties.\n * Please refer to packages/abi-coder/src/coders/abstract-coder.ts for more details\n */\nexport const isMultipleOfWordSize = (length: number) => length % WORD_SIZE === 0;\n\nexport const getWordSizePadding = (length: number) => WORD_SIZE - (length % WORD_SIZE);\n\nexport const rightPadToWordSize = (encoded: Uint8Array) => {\n  if (isMultipleOfWordSize(encoded.length)) {\n    return encoded;\n  }\n  const padding = new Uint8Array(WORD_SIZE - (encoded.length % WORD_SIZE));\n  return concatBytes([encoded, padding]);\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { type BNInput, type BN, toBytes, bn } from '@fuel-ts/math';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport { Coder } from '../AbstractCoder';\n\ntype BigNumberCoderType = 'u64' | 'u256';\n\nconst encodedLengths: { [key in BigNumberCoderType]: number } = {\n  u64: WORD_SIZE,\n  u256: WORD_SIZE * 4,\n};\n\nexport class BigNumberCoder extends Coder<BNInput, BN> {\n  constructor(baseType: BigNumberCoderType) {\n    super('bigNumber', baseType, encodedLengths[baseType]);\n  }\n\n  encode(value: BNInput): Uint8Array {\n    let bytes;\n\n    try {\n      bytes = toBytes(value, this.encodedLength);\n    } catch (error) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n\n    return bytes;\n  }\n\n  decode(data: Uint8Array, offset: number): [BN, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid ${this.type} data size.`);\n    }\n\n    let bytes = data.slice(offset, offset + this.encodedLength);\n    bytes = bytes.slice(0, this.encodedLength);\n\n    if (bytes.length !== this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid ${this.type} byte data size.`);\n    }\n\n    return [bn(bytes), offset + this.encodedLength];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn, toHex } from '@fuel-ts/math';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport { Coder } from '../AbstractCoder';\n\nexport class B256Coder extends Coder<string, string> {\n  constructor() {\n    super('b256', 'b256', WORD_SIZE * 4);\n  }\n\n  encode(value: string): Uint8Array {\n    let encodedValue;\n    try {\n      encodedValue = arrayify(value);\n    } catch (error) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    if (encodedValue.length !== this.encodedLength) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    return encodedValue;\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid b256 data size.`);\n    }\n\n    let bytes = data.slice(offset, offset + this.encodedLength);\n\n    const decoded = bn(bytes);\n    if (decoded.isZero()) {\n      bytes = new Uint8Array(32);\n    }\n\n    if (bytes.length !== this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid b256 byte data size.`);\n    }\n\n    return [toHex(bytes, 32), offset + 32];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn, toHex } from '@fuel-ts/math';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport { Coder } from '../AbstractCoder';\n\nexport class B512Coder extends Coder<string, string> {\n  constructor() {\n    super('b512', 'struct B512', WORD_SIZE * 8);\n  }\n\n  encode(value: string): Uint8Array {\n    let encodedValue;\n    try {\n      encodedValue = arrayify(value);\n    } catch (error) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    if (encodedValue.length !== this.encodedLength) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.type}.`);\n    }\n    return encodedValue;\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid b512 data size.`);\n    }\n\n    let bytes = data.slice(offset, offset + this.encodedLength);\n\n    const decoded = bn(bytes);\n    if (decoded.isZero()) {\n      bytes = new Uint8Array(64);\n    }\n\n    if (bytes.length !== this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid b512 byte data size.`);\n    }\n\n    return [toHex(bytes, this.encodedLength), offset + this.encodedLength];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn, toBytes } from '@fuel-ts/math';\n\nimport type { EncodingOptions } from '../../../types/EncodingOptions';\nimport { Coder } from '../AbstractCoder';\n\nexport class BooleanCoder extends Coder<boolean, boolean> {\n  paddingLength: number;\n  options: EncodingOptions;\n\n  constructor(\n    options: EncodingOptions = {\n      isSmallBytes: false,\n      isRightPadded: false,\n    }\n  ) {\n    const paddingLength = options.isSmallBytes ? 1 : 8;\n\n    super('boolean', 'boolean', paddingLength);\n\n    this.paddingLength = paddingLength;\n    this.options = options;\n  }\n\n  encode(value: boolean): Uint8Array {\n    const isTrueBool = value === true || value === false;\n\n    if (!isTrueBool) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid boolean value.`);\n    }\n\n    const output: Uint8Array = toBytes(value ? 1 : 0, this.paddingLength);\n\n    if (this.options.isRightPadded) {\n      return output.reverse();\n    }\n\n    return output;\n  }\n\n  decode(data: Uint8Array, offset: number): [boolean, number] {\n    if (data.length < this.paddingLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid boolean data size.`);\n    }\n\n    let bytes;\n\n    if (this.options.isRightPadded) {\n      bytes = data.slice(offset, offset + 1);\n    } else {\n      bytes = data.slice(offset, offset + this.paddingLength);\n    }\n\n    const decodedValue = bn(bytes);\n    if (decodedValue.isZero()) {\n      return [false, offset + this.paddingLength];\n    }\n\n    if (!decodedValue.eq(bn(1))) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid boolean value.`);\n    }\n\n    return [true, offset + this.paddingLength];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport type { Uint8ArrayWithDynamicData } from '../../../utils/utilities';\nimport { BASE_VECTOR_OFFSET, concatWithDynamicData } from '../../../utils/utilities';\nimport { Coder } from '../AbstractCoder';\n\nimport { BigNumberCoder } from './BigNumberCoder';\n\nexport class ByteCoder extends Coder<number[], Uint8Array> {\n  static memorySize = 1;\n  constructor() {\n    super('struct', 'struct Bytes', BASE_VECTOR_OFFSET);\n  }\n\n  encode(value: number[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new BigNumberCoder('u64').encode(BASE_VECTOR_OFFSET);\n\n    // pointer dynamicData, encode the byte vector now and attach to its pointer\n    const data = this.#getPaddedData(value);\n    pointer.dynamicData = {\n      0: concatWithDynamicData([data]),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new BigNumberCoder('u64').encode(data.byteLength));\n\n    // length (len)\n    parts.push(new BigNumberCoder('u64').encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  #getPaddedData(value: number[]): Uint8Array {\n    const data: Uint8Array[] = [Uint8Array.from(value)];\n\n    const paddingLength = (WORD_SIZE - (value.length % WORD_SIZE)) % WORD_SIZE;\n    if (paddingLength) {\n      data.push(new Uint8Array(paddingLength));\n    }\n\n    return concat(data);\n  }\n\n  decode(data: Uint8Array, offset: number): [Uint8Array, number] {\n    if (data.length < BASE_VECTOR_OFFSET) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid byte data size.`);\n    }\n\n    const len = data.slice(16, 24);\n    const encodedLength = bn(new BigNumberCoder('u64').decode(len, 0)[0]).toNumber();\n    const byteData = data.slice(BASE_VECTOR_OFFSET, BASE_VECTOR_OFFSET + encodedLength);\n\n    if (byteData.length !== encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid bytes byte data size.`);\n    }\n\n    return [byteData, offset + BASE_VECTOR_OFFSET];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { toNumber } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport type { RequireExactlyOne } from 'type-fest';\n\nimport { concatWithDynamicData } from '../../../utils/utilities';\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\n\nimport { BigNumberCoder } from './BigNumberCoder';\n\nexport type InputValueOf<TCoders extends Record<string, Coder>> = RequireExactlyOne<{\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n}>;\nexport type DecodedValueOf<TCoders extends Record<string, Coder>> = RequireExactlyOne<{\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n}>;\n\nconst isFullyNativeEnum = (enumCoders: { [s: string]: unknown } | ArrayLike<unknown>): boolean =>\n  Object.values(enumCoders).every(\n    // @ts-expect-error complicated types\n    ({ type, coders }) => type === '()' && JSON.stringify(coders) === JSON.stringify([])\n  );\n\nexport class EnumCoder<TCoders extends Record<string, Coder>> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  name: string;\n  coders: TCoders;\n  #caseIndexCoder: BigNumberCoder;\n  #encodedValueSize: number;\n\n  constructor(name: string, coders: TCoders) {\n    const caseIndexCoder = new BigNumberCoder('u64');\n    const encodedValueSize = Object.values(coders).reduce(\n      (max, coder) => Math.max(max, coder.encodedLength),\n      0\n    );\n    super('enum', `enum ${name}`, caseIndexCoder.encodedLength + encodedValueSize);\n    this.name = name;\n    this.coders = coders;\n    this.#caseIndexCoder = caseIndexCoder;\n    this.#encodedValueSize = encodedValueSize;\n  }\n\n  #encodeNativeEnum(value: string): Uint8Array {\n    const valueCoder = this.coders[value];\n    const encodedValue = valueCoder.encode([]);\n    const caseIndex = Object.keys(this.coders).indexOf(value);\n\n    const padding = new Uint8Array(this.#encodedValueSize - valueCoder.encodedLength);\n    return concat([this.#caseIndexCoder.encode(caseIndex), padding, encodedValue]);\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    if (typeof value === 'string' && this.coders[value]) {\n      return this.#encodeNativeEnum(value);\n    }\n\n    const [caseKey, ...empty] = Object.keys(value);\n    if (!caseKey) {\n      throw new FuelError(ErrorCode.INVALID_DECODE_VALUE, 'A field for the case must be provided.');\n    }\n    if (empty.length !== 0) {\n      throw new FuelError(ErrorCode.INVALID_DECODE_VALUE, 'Only one field must be provided.');\n    }\n    const valueCoder = this.coders[caseKey];\n    const caseIndex = Object.keys(this.coders).indexOf(caseKey);\n    const encodedValue = valueCoder.encode(value[caseKey]);\n\n    const padding = new Uint8Array(this.#encodedValueSize - valueCoder.encodedLength);\n    return concatWithDynamicData([this.#caseIndexCoder.encode(caseIndex), padding, encodedValue]);\n  }\n\n  #decodeNativeEnum(caseKey: string, newOffset: number): [DecodedValueOf<TCoders>, number] {\n    return [caseKey as unknown as DecodedValueOf<TCoders>, newOffset];\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    if (data.length < this.#encodedValueSize) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid enum data size.`);\n    }\n\n    let newOffset = offset;\n\n    let decoded;\n    [decoded, newOffset] = new BigNumberCoder('u64').decode(data, newOffset);\n    const caseIndex = toNumber(decoded);\n    const caseKey = Object.keys(this.coders)[caseIndex];\n    if (!caseKey) {\n      throw new FuelError(\n        ErrorCode.INVALID_DECODE_VALUE,\n        `Invalid caseIndex \"${caseIndex}\". Valid cases: ${Object.keys(this.coders)}.`\n      );\n    }\n\n    const valueCoder = this.coders[caseKey];\n    const padding = this.#encodedValueSize - valueCoder.encodedLength;\n    newOffset += padding;\n    [decoded, newOffset] = valueCoder.decode(data, newOffset);\n\n    if (isFullyNativeEnum(this.coders)) {\n      return this.#decodeNativeEnum(caseKey, newOffset);\n    }\n\n    return [{ [caseKey]: decoded } as DecodedValueOf<TCoders>, newOffset];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { Coder } from '../AbstractCoder';\n\nimport type { InputValueOf, DecodedValueOf } from './EnumCoder';\nimport { EnumCoder } from './EnumCoder';\n\ntype SwayOption<T> = { None: [] } | { Some: T };\nexport type Option<T> = T | undefined;\n\nexport class OptionCoder<TCoders extends Record<string, Coder>> extends EnumCoder<TCoders> {\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    const result = super.encode(this.toSwayOption(value) as unknown as InputValueOf<TCoders>);\n    return result;\n  }\n\n  toSwayOption(input: InputValueOf<TCoders>): SwayOption<unknown> {\n    if (input !== undefined) {\n      return { Some: input };\n    }\n\n    return { None: [] };\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    // An empty option will be one less than the expected encoded length\n    if (data.length < this.encodedLength - 1) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid option data size.`);\n    }\n\n    const [decoded, newOffset] = super.decode(data, offset);\n    return [this.toOption(decoded) as DecodedValueOf<TCoders>, newOffset];\n  }\n\n  toOption(output?: DecodedValueOf<TCoders>): Option<unknown> {\n    if (output && 'Some' in output) {\n      return output.Some;\n    }\n\n    return undefined;\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { toNumber, toBytes } from '@fuel-ts/math';\n\nimport type { EncodingOptions } from '../../../types/EncodingOptions';\nimport { Coder } from '../AbstractCoder';\n\ntype NumberCoderType = 'u8' | 'u16' | 'u32';\n\nexport class NumberCoder extends Coder<number, number> {\n  // This is to align the bits to the total bytes\n  // See https://github.com/FuelLabs/fuel-specs/blob/master/specs/protocol/abi.md#unsigned-integers\n  length: number;\n  paddingLength: number;\n  baseType: NumberCoderType;\n  options: EncodingOptions;\n\n  constructor(\n    baseType: NumberCoderType,\n    options: EncodingOptions = {\n      isSmallBytes: false,\n      isRightPadded: false,\n    }\n  ) {\n    const paddingLength = options.isSmallBytes && baseType === 'u8' ? 1 : 8;\n\n    super('number', baseType, paddingLength);\n    this.baseType = baseType;\n    switch (baseType) {\n      case 'u8':\n        this.length = 1;\n        break;\n      case 'u16':\n        this.length = 2;\n        break;\n      case 'u32':\n      default:\n        this.length = 4;\n        break;\n    }\n\n    this.paddingLength = paddingLength;\n    this.options = options;\n  }\n\n  encode(value: number | string): Uint8Array {\n    let bytes;\n\n    try {\n      bytes = toBytes(value);\n    } catch (error) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.baseType}.`);\n    }\n\n    if (bytes.length > this.length) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.baseType}, too many bytes.`);\n    }\n\n    const output = toBytes(bytes, this.paddingLength);\n\n    if (this.baseType !== 'u8') {\n      return output;\n    }\n\n    return this.options.isRightPadded ? output.reverse() : output;\n  }\n\n  private decodeU8(data: Uint8Array, offset: number): [number, number] {\n    let bytes;\n    if (this.options.isRightPadded) {\n      bytes = data.slice(offset, offset + 1);\n    } else {\n      bytes = data.slice(offset, offset + this.paddingLength);\n      bytes = bytes.slice(this.paddingLength - this.length, this.paddingLength);\n    }\n\n    return [toNumber(bytes), offset + this.paddingLength];\n  }\n\n  decode(data: Uint8Array, offset: number): [number, number] {\n    if (data.length < this.paddingLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid number data size.`);\n    }\n\n    if (this.baseType === 'u8') {\n      return this.decodeU8(data, offset);\n    }\n\n    let bytes = data.slice(offset, offset + this.paddingLength);\n    bytes = bytes.slice(8 - this.length, 8);\n\n    if (bytes.length !== this.paddingLength - (this.paddingLength - this.length)) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid number byte data size.`);\n    }\n\n    return [toNumber(bytes), offset + 8];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { Uint8ArrayWithDynamicData } from '../../../utils/utilities';\nimport { BASE_RAW_SLICE_OFFSET, concatWithDynamicData } from '../../../utils/utilities';\nimport { Coder } from '../AbstractCoder';\n\nimport { ArrayCoder } from './ArrayCoder';\nimport { BigNumberCoder } from './BigNumberCoder';\nimport { NumberCoder } from './NumberCoder';\n\nexport class RawSliceCoder extends Coder<number[], number[]> {\n  constructor() {\n    super('raw untyped slice', 'raw untyped slice', BASE_RAW_SLICE_OFFSET);\n  }\n\n  encode(value: number[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n    const coder = new NumberCoder('u8', { isSmallBytes: true });\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new BigNumberCoder('u64').encode(\n      BASE_RAW_SLICE_OFFSET\n    );\n\n    // pointer dynamicData, encode the vector now and attach to its pointer\n    pointer.dynamicData = {\n      0: concatWithDynamicData(value.map((v) => coder.encode(v))),\n    };\n\n    parts.push(pointer);\n\n    // length (len)\n    parts.push(new BigNumberCoder('u64').encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [number[], number] {\n    const dataBytes = data.slice(offset);\n    const internalCoder = new ArrayCoder(\n      new NumberCoder('u8', { isSmallBytes: true }),\n      dataBytes.length\n    );\n    const [decodedValue] = internalCoder.decode(dataBytes, 0);\n\n    return [decodedValue, offset + dataBytes.length];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport { toUtf8Bytes, toUtf8String } from 'ethers';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport type { Uint8ArrayWithDynamicData } from '../../../utils/utilities';\nimport { BASE_VECTOR_OFFSET, concatWithDynamicData } from '../../../utils/utilities';\nimport { Coder } from '../AbstractCoder';\n\nimport { BigNumberCoder } from './BigNumberCoder';\n\nexport class StdStringCoder extends Coder<string, string> {\n  static memorySize = 1;\n  constructor() {\n    super('struct', 'struct String', 1);\n  }\n\n  encode(value: string): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new BigNumberCoder('u64').encode(BASE_VECTOR_OFFSET);\n\n    // pointer dynamicData, encode the string vector now and attach to its pointer\n    const data = this.#getPaddedData(value);\n    pointer.dynamicData = {\n      0: concatWithDynamicData([data]),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new BigNumberCoder('u64').encode(data.byteLength));\n\n    // length (len)\n    parts.push(new BigNumberCoder('u64').encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  #getPaddedData(value: string): Uint8Array {\n    const data: Uint8Array[] = [toUtf8Bytes(value)];\n\n    const paddingLength = (WORD_SIZE - (value.length % WORD_SIZE)) % WORD_SIZE;\n    if (paddingLength) {\n      data.push(new Uint8Array(paddingLength));\n    }\n\n    return concat(data);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid std string data size.`);\n    }\n\n    const len = data.slice(16, 24);\n    const encodedLength = bn(new BigNumberCoder('u64').decode(len, 0)[0]).toNumber();\n    const byteData = data.slice(BASE_VECTOR_OFFSET, BASE_VECTOR_OFFSET + encodedLength);\n\n    if (byteData.length !== encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid std string byte data size.`);\n    }\n\n    const value = toUtf8String(byteData);\n    return [value, offset + BASE_VECTOR_OFFSET];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { concat } from '@fuel-ts/utils';\nimport { toUtf8Bytes, toUtf8String } from 'ethers';\n\nimport { Coder } from '../AbstractCoder';\n\nexport class StringCoder<TLength extends number = number> extends Coder<string, string> {\n  length: TLength;\n  #paddingLength: number;\n\n  constructor(length: TLength) {\n    let paddingLength = (8 - length) % 8;\n    paddingLength = paddingLength < 0 ? paddingLength + 8 : paddingLength;\n    super('string', `str[${length}]`, length + paddingLength);\n    this.length = length;\n    this.#paddingLength = paddingLength;\n  }\n\n  encode(value: string): Uint8Array {\n    if (this.length !== value.length) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Value length mismatch during encode.`);\n    }\n\n    const encoded = toUtf8Bytes(value);\n    const padding = new Uint8Array(this.#paddingLength);\n    return concat([encoded, padding]);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid string data size.`);\n    }\n\n    const bytes = data.slice(offset, offset + this.length);\n\n    if (bytes.length !== this.length) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid string byte data size.`);\n    }\n\n    const value = toUtf8String(bytes);\n\n    const padding = this.#paddingLength;\n    return [value, offset + this.length + padding];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport {\n  concatWithDynamicData,\n  getWordSizePadding,\n  isMultipleOfWordSize,\n  rightPadToWordSize,\n} from '../../../utils/utilities';\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\n\nimport { OptionCoder } from './OptionCoder';\n\ntype InputValueOf<TCoders extends Record<string, Coder>> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n};\ntype DecodedValueOf<TCoders extends Record<string, Coder>> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n};\n\nexport class StructCoder<TCoders extends Record<string, Coder>> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  name: string;\n  coders: TCoders;\n\n  constructor(name: string, coders: TCoders) {\n    const encodedLength = Object.values(coders).reduce(\n      (acc, coder) => acc + coder.encodedLength,\n      0\n    );\n    super('struct', `struct ${name}`, encodedLength);\n    this.name = name;\n    this.coders = coders;\n  }\n\n  encode(value: InputValueOf<TCoders>) {\n    const encodedFields = Object.keys(this.coders).map((fieldName) => {\n      const fieldCoder = this.coders[fieldName];\n      const fieldValue = value[fieldName];\n\n      if (!(fieldCoder instanceof OptionCoder) && fieldValue == null) {\n        throw new FuelError(\n          ErrorCode.ENCODE_ERROR,\n          `Invalid ${this.type}. Field \"${fieldName}\" not present.`\n        );\n      }\n\n      const encoded = fieldCoder.encode(fieldValue);\n\n      if (!isMultipleOfWordSize(encoded.length)) {\n        return rightPadToWordSize(encoded);\n      }\n\n      return encoded;\n    });\n\n    return concatWithDynamicData([concatWithDynamicData(encodedFields)]);\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid struct data size.`);\n    }\n\n    let newOffset = offset;\n    const decodedValue = Object.keys(this.coders).reduce((obj, fieldName) => {\n      const fieldCoder = this.coders[fieldName];\n      let decoded;\n      [decoded, newOffset] = fieldCoder.decode(data, newOffset);\n\n      if (!isMultipleOfWordSize(newOffset)) {\n        newOffset += getWordSizePadding(newOffset);\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      obj[fieldName as keyof DecodedValueOf<TCoders>] = decoded;\n      return obj;\n    }, {} as DecodedValueOf<TCoders>);\n\n    return [decodedValue, newOffset];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport {\n  concatWithDynamicData,\n  getWordSizePadding,\n  isMultipleOfWordSize,\n  rightPadToWordSize,\n} from '../../../utils/utilities';\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\n\ntype InputValueOf<TCoders extends Coder[]> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n};\ntype DecodedValueOf<TCoders extends Coder[]> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n};\n\nexport class TupleCoder<TCoders extends Coder[]> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  coders: TCoders;\n\n  constructor(coders: TCoders) {\n    const encodedLength = coders.reduce((acc, coder) => acc + coder.encodedLength, 0);\n    super('tuple', `(${coders.map((coder) => coder.type).join(', ')})`, encodedLength);\n    this.coders = coders;\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    if (this.coders.length !== value.length) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Types/values length mismatch.`);\n    }\n\n    return concatWithDynamicData(\n      this.coders.map((coder, i) => {\n        const encoded = coder.encode(value[i]);\n        if (!isMultipleOfWordSize(encoded.length)) {\n          return rightPadToWordSize(encoded);\n        }\n        return encoded;\n      })\n    );\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid tuple data size.`);\n    }\n\n    let newOffset = offset;\n    const decodedValue = this.coders.map((coder) => {\n      let decoded;\n      [decoded, newOffset] = coder.decode(data, newOffset);\n\n      if (!isMultipleOfWordSize(newOffset)) {\n        newOffset += getWordSizePadding(newOffset);\n      }\n\n      return decoded;\n    });\n\n    return [decodedValue as DecodedValueOf<TCoders>, newOffset];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\n\nimport { MAX_BYTES } from '../../../utils/constants';\nimport type { Uint8ArrayWithDynamicData } from '../../../utils/utilities';\nimport { concatWithDynamicData, BASE_VECTOR_OFFSET, chunkByLength } from '../../../utils/utilities';\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\n\nimport { BigNumberCoder } from './BigNumberCoder';\n\ntype InputValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Input']>;\ntype DecodedValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Decoded']>;\n\nexport class VecCoder<TCoder extends Coder> extends Coder<\n  InputValueOf<TCoder>,\n  DecodedValueOf<TCoder>\n> {\n  coder: TCoder;\n\n  constructor(coder: TCoder) {\n    super('struct', `struct Vec`, coder.encodedLength + BASE_VECTOR_OFFSET);\n    this.coder = coder;\n  }\n\n  encode(value: InputValueOf<TCoder>): Uint8Array {\n    if (!Array.isArray(value)) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const parts: Uint8Array[] = [];\n\n    // pointer (ptr)\n    const pointer: Uint8ArrayWithDynamicData = new BigNumberCoder('u64').encode(BASE_VECTOR_OFFSET);\n    // pointer dynamicData, encode the vector now and attach to its pointer\n    pointer.dynamicData = {\n      0: concatWithDynamicData(Array.from(value).map((v) => this.coder.encode(v))),\n    };\n\n    parts.push(pointer);\n\n    // capacity (cap)\n    parts.push(new BigNumberCoder('u64').encode(value.length));\n\n    // length (len)\n    parts.push(new BigNumberCoder('u64').encode(value.length));\n\n    return concatWithDynamicData(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoder>, number] {\n    if (data.length < BASE_VECTOR_OFFSET || data.length > MAX_BYTES) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid vec data size.`);\n    }\n\n    const len = data.slice(16, 24);\n    const encodedLength = bn(new BigNumberCoder('u64').decode(len, 0)[0]).toNumber();\n    const vectorRawDataLength = encodedLength * this.coder.encodedLength;\n    const vectorRawData = data.slice(BASE_VECTOR_OFFSET, BASE_VECTOR_OFFSET + vectorRawDataLength);\n\n    if (vectorRawData.length !== vectorRawDataLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid vec byte data size.`);\n    }\n\n    return [\n      chunkByLength(vectorRawData, this.coder.encodedLength).map(\n        (chunk) => this.coder.decode(chunk, 0)[0]\n      ),\n      offset + BASE_VECTOR_OFFSET,\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport { AbiCoder } from './AbiCoder';\nimport { FunctionFragment } from './FunctionFragment';\nimport type { InputValue } from './encoding/coders/AbstractCoder';\nimport type { JsonAbi, JsonAbiConfigurable } from './types/JsonAbi';\nimport { findOrThrow } from './utils/utilities';\n\nexport class Interface<TAbi extends JsonAbi = JsonAbi> {\n  readonly functions!: Record<string, FunctionFragment>;\n\n  readonly configurables: Record<string, JsonAbiConfigurable>;\n\n  readonly jsonAbi: TAbi;\n\n  constructor(jsonAbi: TAbi) {\n    this.jsonAbi = jsonAbi;\n\n    this.functions = Object.fromEntries(\n      this.jsonAbi.functions.map((x) => [x.name, new FunctionFragment(this.jsonAbi, x.name)])\n    );\n\n    this.configurables = Object.fromEntries(this.jsonAbi.configurables.map((x) => [x.name, x]));\n  }\n\n  /**\n   * Returns function fragment for a dynamic input.\n   * @param nameOrSignatureOrSelector - name (e.g. 'transfer'), signature (e.g. 'transfer(address,uint256)') or selector (e.g. '0x00000000a9059cbb') of the function fragment\n   */\n  getFunction(nameOrSignatureOrSelector: string): FunctionFragment {\n    const fn = Object.values<FunctionFragment>(this.functions).find(\n      (f) =>\n        f.name === nameOrSignatureOrSelector ||\n        f.signature === nameOrSignatureOrSelector ||\n        f.selector === nameOrSignatureOrSelector\n    );\n\n    if (fn !== undefined) {\n      return fn;\n    }\n\n    throw new FuelError(\n      ErrorCode.FUNCTION_NOT_FOUND,\n      `function ${nameOrSignatureOrSelector} not found: ${JSON.stringify(fn)}.`\n    );\n  }\n\n  decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): any {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    if (!fragment) {\n      throw new FuelError(ErrorCode.FRAGMENT_NOT_FOUND, 'Fragment not found.');\n    }\n\n    return fragment.decodeArguments(data);\n  }\n\n  encodeFunctionData(\n    functionFragment: FunctionFragment | string,\n    values: Array<InputValue>,\n    offset = 0\n  ): Uint8Array {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    if (!fragment) {\n      throw new FuelError(ErrorCode.FRAGMENT_NOT_FOUND, 'Fragment not found.');\n    }\n\n    return fragment.encodeArguments(values, offset);\n  }\n\n  // Decode the result of a function call\n  decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): any {\n    const fragment =\n      typeof functionFragment === 'string' ? this.getFunction(functionFragment) : functionFragment;\n\n    return fragment.decodeOutput(data);\n  }\n\n  decodeLog(data: BytesLike, logId: number): any {\n    const { loggedType } = findOrThrow(this.jsonAbi.loggedTypes, (type) => type.logId === logId);\n\n    return AbiCoder.decode(this.jsonAbi, loggedType, arrayify(data), 0, {\n      encoding: this.jsonAbi.encoding,\n    });\n  }\n\n  encodeConfigurable(name: string, value: InputValue) {\n    const configurable = findOrThrow(\n      this.jsonAbi.configurables,\n      (c) => c.name === name,\n      () => {\n        throw new FuelError(\n          ErrorCode.CONFIGURABLE_NOT_FOUND,\n          `A configurable with the '${name}' was not found in the ABI.`\n        );\n      }\n    );\n\n    return AbiCoder.encode(this.jsonAbi, configurable.configurableType, value, {\n      isRightPadded: true,\n    });\n  }\n\n  getTypeById(typeId: number) {\n    return findOrThrow(\n      this.jsonAbi.types,\n      (t) => t.typeId === typeId,\n      () => {\n        throw new FuelError(\n          ErrorCode.TYPE_NOT_FOUND,\n          `Type with typeId '${typeId}' doesn't exist in the ABI.`\n        );\n      }\n    );\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { JsonAbi, JsonAbiArgument } from './types/JsonAbi';\nimport { arrayRegEx, enumRegEx, genericRegEx, stringRegEx, structRegEx } from './utils/constants';\nimport { findOrThrow } from './utils/utilities';\n\nexport class ResolvedAbiType {\n  readonly abi: JsonAbi;\n  name: string;\n  readonly type: string;\n  readonly originalTypeArguments: readonly JsonAbiArgument[] | null;\n  readonly components: readonly ResolvedAbiType[] | null;\n\n  constructor(abi: JsonAbi, argument: JsonAbiArgument) {\n    this.abi = abi;\n    const type = findOrThrow(\n      abi.types,\n      (t) => t.typeId === argument.type,\n      () => {\n        throw new FuelError(\n          ErrorCode.TYPE_NOT_FOUND,\n          `Type does not exist in the provided abi: ${JSON.stringify({\n            argument,\n            abi: this.abi,\n          })}`\n        );\n      }\n    );\n\n    this.name = argument.name;\n\n    this.type = type.type;\n    this.originalTypeArguments = argument.typeArguments;\n    this.components = ResolvedAbiType.getResolvedGenericComponents(\n      abi,\n      argument,\n      type.components,\n      type.typeParameters ?? ResolvedAbiType.getImplicitGenericTypeParameters(abi, type.components)\n    );\n  }\n\n  private static getResolvedGenericComponents(\n    abi: JsonAbi,\n    arg: JsonAbiArgument,\n    components: readonly JsonAbiArgument[] | null,\n    typeParameters: readonly number[] | null\n  ) {\n    if (components === null) {\n      return null;\n    }\n    if (typeParameters === null || typeParameters.length === 0) {\n      return components.map((c) => new ResolvedAbiType(abi, c));\n    }\n\n    const typeParametersAndArgsMap = typeParameters.reduce(\n      (obj, typeParameter, typeParameterIndex) => {\n        const o: Record<number, JsonAbiArgument> = { ...obj };\n        o[typeParameter] = structuredClone(\n          arg.typeArguments?.[typeParameterIndex]\n        ) as JsonAbiArgument;\n        return o;\n      },\n      {} as Record<number, JsonAbiArgument>\n    );\n\n    const resolvedComponents = this.resolveGenericArgTypes(\n      abi,\n      components,\n      typeParametersAndArgsMap\n    );\n\n    return resolvedComponents.map((c) => new ResolvedAbiType(abi, c));\n  }\n\n  private static resolveGenericArgTypes(\n    abi: JsonAbi,\n    args: readonly JsonAbiArgument[],\n    typeParametersAndArgsMap: Record<number, JsonAbiArgument>\n  ): readonly JsonAbiArgument[] {\n    return args.map((arg) => {\n      if (typeParametersAndArgsMap[arg.type] !== undefined) {\n        return {\n          ...typeParametersAndArgsMap[arg.type],\n          name: arg.name,\n        };\n      }\n\n      if (arg.typeArguments) {\n        return {\n          ...structuredClone(arg),\n          typeArguments: this.resolveGenericArgTypes(\n            abi,\n            arg.typeArguments,\n            typeParametersAndArgsMap\n          ),\n        };\n      }\n\n      const argType = findOrThrow(abi.types, (t) => t.typeId === arg.type);\n      const implicitTypeParameters = this.getImplicitGenericTypeParameters(abi, argType.components);\n\n      if (implicitTypeParameters && implicitTypeParameters.length > 0) {\n        return {\n          ...structuredClone(arg),\n          typeArguments: implicitTypeParameters.map((itp) => typeParametersAndArgsMap[itp]),\n        };\n      }\n\n      return arg;\n    });\n  }\n\n  private static getImplicitGenericTypeParameters(\n    abi: JsonAbi,\n    args: readonly JsonAbiArgument[] | null,\n    implicitGenericParametersParam?: number[]\n  ) {\n    if (!Array.isArray(args)) {\n      return null;\n    }\n\n    const implicitGenericParameters: number[] = implicitGenericParametersParam ?? [];\n\n    args.forEach((a) => {\n      const argType = findOrThrow(abi.types, (t) => t.typeId === a.type);\n\n      if (genericRegEx.test(argType.type)) {\n        implicitGenericParameters.push(argType.typeId);\n        return;\n      }\n\n      if (!Array.isArray(a.typeArguments)) {\n        return;\n      }\n      this.getImplicitGenericTypeParameters(abi, a.typeArguments, implicitGenericParameters);\n    });\n\n    return implicitGenericParameters.length > 0 ? implicitGenericParameters : null;\n  }\n\n  getSignature(): string {\n    const prefix = this.getArgSignaturePrefix();\n    const content = this.getArgSignatureContent();\n\n    return `${prefix}${content}`;\n  }\n\n  private getArgSignaturePrefix(): string {\n    const structMatch = structRegEx.test(this.type);\n    if (structMatch) {\n      return 's';\n    }\n\n    const arrayMatch = arrayRegEx.test(this.type);\n    if (arrayMatch) {\n      return 'a';\n    }\n\n    const enumMatch = enumRegEx.test(this.type);\n    if (enumMatch) {\n      return 'e';\n    }\n\n    return '';\n  }\n\n  private getArgSignatureContent(): string {\n    if (this.type === 'raw untyped ptr') {\n      return 'rawptr';\n    }\n\n    if (this.type === 'raw untyped slice') {\n      return 'rawslice';\n    }\n\n    const strMatch = stringRegEx.exec(this.type)?.groups;\n    if (strMatch) {\n      return `str[${strMatch.length}]`;\n    }\n\n    if (this.components === null) {\n      return this.type;\n    }\n\n    const arrayMatch = arrayRegEx.exec(this.type)?.groups;\n\n    if (arrayMatch) {\n      return `[${this.components[0].getSignature()};${arrayMatch.length}]`;\n    }\n\n    const typeArgumentsSignature =\n      this.originalTypeArguments !== null\n        ? `<${this.originalTypeArguments\n            .map((a) => new ResolvedAbiType(this.abi, a).getSignature())\n            .join(',')}>`\n        : '';\n\n    const componentsSignature = `(${this.components.map((c) => c.getSignature()).join(',')})`;\n\n    return `${typeArgumentsSignature}${componentsSignature}`;\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { GetCoderFn } from '../../types/GetCoder';\nimport { ENCODING_V0, ENCODING_V1 } from '../../utils/constants';\n\nimport { getCoder as getCoderV0 } from './getCoderV0';\nimport { getCoder as getCoderV1 } from './getCoderV1';\n\n/**\n * Retrieves the appropriate encoding function for a given encoding version.\n *\n * @param encoding - the version to provide a strategy for.\n * @throws for an unsupported encoding version.\n * @returns the appropriate encoding strategy.\n */\nexport function getCoderForEncoding(encoding: string = ENCODING_V0): GetCoderFn {\n  switch (encoding) {\n    case ENCODING_V1:\n      return getCoderV1;\n    case ENCODING_V0:\n      return getCoderV0;\n    default:\n      throw new FuelError(\n        ErrorCode.UNSUPPORTED_ENCODING_VERSION,\n        `Encoding version ${encoding} is unsupported.`\n      );\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { ResolvedAbiType } from '../../ResolvedAbiType';\nimport type { EncodingOptions } from '../../types/EncodingOptions';\nimport type { GetCoderFn } from '../../types/GetCoder';\nimport {\n  B256_CODER_TYPE,\n  B512_CODER_TYPE,\n  BOOL_CODER_TYPE,\n  BYTES_CODER_TYPE,\n  ENCODING_V0,\n  OPTION_CODER_TYPE,\n  RAW_PTR_CODER_TYPE,\n  RAW_SLICE_CODER_TYPE,\n  STD_STRING_CODER_TYPE,\n  STR_SLICE_CODER_TYPE,\n  U16_CODER_TYPE,\n  U256_CODER_TYPE,\n  U32_CODER_TYPE,\n  U64_CODER_TYPE,\n  U8_CODER_TYPE,\n  VEC_CODER_TYPE,\n  arrayRegEx,\n  enumRegEx,\n  stringRegEx,\n  structRegEx,\n  tupleRegEx,\n} from '../../utils/constants';\nimport { findOrThrow } from '../../utils/utilities';\nimport type { Coder } from '../coders/AbstractCoder';\nimport { ArrayCoder } from '../coders/v0/ArrayCoder';\nimport { B256Coder } from '../coders/v0/B256Coder';\nimport { B512Coder } from '../coders/v0/B512Coder';\nimport { BigNumberCoder } from '../coders/v0/BigNumberCoder';\nimport { BooleanCoder } from '../coders/v0/BooleanCoder';\nimport { ByteCoder } from '../coders/v0/ByteCoder';\nimport { EnumCoder } from '../coders/v0/EnumCoder';\nimport { NumberCoder } from '../coders/v0/NumberCoder';\nimport { OptionCoder } from '../coders/v0/OptionCoder';\nimport { RawSliceCoder } from '../coders/v0/RawSliceCoder';\nimport { StdStringCoder } from '../coders/v0/StdStringCoder';\nimport { StringCoder } from '../coders/v0/StringCoder';\nimport { StructCoder } from '../coders/v0/StructCoder';\nimport { TupleCoder } from '../coders/v0/TupleCoder';\nimport { VecCoder } from '../coders/v0/VecCoder';\n\nimport { getCoders } from './getCoders';\n\n/**\n * Retrieves coders that adhere to the v0 spec.\n *\n * @param resolvedAbiType - the resolved type to return a coder for.\n * @param options - options to be utilized during the encoding process.\n * @returns the coder for a given type.\n */\nexport const getCoder: GetCoderFn = (\n  resolvedAbiType: ResolvedAbiType,\n  options?: EncodingOptions\n): Coder => {\n  switch (resolvedAbiType.type) {\n    case U8_CODER_TYPE:\n    case U16_CODER_TYPE:\n    case U32_CODER_TYPE:\n      return new NumberCoder(resolvedAbiType.type, options);\n    case U64_CODER_TYPE:\n    case RAW_PTR_CODER_TYPE:\n      return new BigNumberCoder('u64');\n    case U256_CODER_TYPE:\n      return new BigNumberCoder('u256');\n    case RAW_SLICE_CODER_TYPE:\n      return new RawSliceCoder();\n    case BOOL_CODER_TYPE:\n      return new BooleanCoder(options);\n    case B256_CODER_TYPE:\n      return new B256Coder();\n    case B512_CODER_TYPE:\n      return new B512Coder();\n    case BYTES_CODER_TYPE:\n      return new ByteCoder();\n    case STD_STRING_CODER_TYPE:\n      return new StdStringCoder();\n    default:\n      break;\n  }\n\n  const stringMatch = stringRegEx.exec(resolvedAbiType.type)?.groups;\n  if (stringMatch) {\n    const length = parseInt(stringMatch.length, 10);\n\n    return new StringCoder(length);\n  }\n\n  // ABI types underneath MUST have components by definition\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const components = resolvedAbiType.components!;\n\n  const arrayMatch = arrayRegEx.exec(resolvedAbiType.type)?.groups;\n  if (arrayMatch) {\n    const length = parseInt(arrayMatch.length, 10);\n    const arg = components[0];\n    if (!arg) {\n      throw new FuelError(\n        ErrorCode.INVALID_COMPONENT,\n        `The provided Array type is missing an item of 'component'.`\n      );\n    }\n\n    const arrayElementCoder = getCoder(arg, { isSmallBytes: true });\n    return new ArrayCoder(arrayElementCoder as Coder, length);\n  }\n\n  if (resolvedAbiType.type === VEC_CODER_TYPE) {\n    const arg = findOrThrow(components, (c) => c.name === 'buf').originalTypeArguments?.[0];\n    if (!arg) {\n      throw new FuelError(\n        ErrorCode.INVALID_COMPONENT,\n        `The provided Vec type is missing the 'type argument'.`\n      );\n    }\n    const argType = new ResolvedAbiType(resolvedAbiType.abi, arg);\n\n    const itemCoder = getCoder(argType, { isSmallBytes: true, encoding: ENCODING_V0 });\n    return new VecCoder(itemCoder as Coder);\n  }\n\n  const structMatch = structRegEx.exec(resolvedAbiType.type)?.groups;\n  if (structMatch) {\n    const coders = getCoders(components, { isRightPadded: true, getCoder });\n    return new StructCoder(structMatch.name, coders);\n  }\n\n  const enumMatch = enumRegEx.exec(resolvedAbiType.type)?.groups;\n  if (enumMatch) {\n    const coders = getCoders(components, { getCoder });\n\n    const isOptionEnum = resolvedAbiType.type === OPTION_CODER_TYPE;\n    if (isOptionEnum) {\n      return new OptionCoder(enumMatch.name, coders);\n    }\n    return new EnumCoder(enumMatch.name, coders);\n  }\n\n  const tupleMatch = tupleRegEx.exec(resolvedAbiType.type)?.groups;\n  if (tupleMatch) {\n    const coders = components.map((component) =>\n      getCoder(component, { isRightPadded: true, encoding: ENCODING_V0 })\n    );\n    return new TupleCoder(coders as Coder[]);\n  }\n\n  if (resolvedAbiType.type === STR_SLICE_CODER_TYPE) {\n    throw new FuelError(\n      ErrorCode.INVALID_DATA,\n      'String slices can not be decoded from logs. Convert the slice to `str[N]` with `__to_str_array`'\n    );\n  }\n\n  throw new FuelError(\n    ErrorCode.CODER_NOT_FOUND,\n    `Coder not found: ${JSON.stringify(resolvedAbiType)}.`\n  );\n};\n","import type { ResolvedAbiType } from '../../ResolvedAbiType';\nimport type { EncodingOptions } from '../../types/EncodingOptions';\nimport type { GetCoderFn } from '../../types/GetCoder';\nimport type { Coder } from '../coders/AbstractCoder';\n\n/**\n * @param components - types array to create coders for.\n * @param options - options - options to be utilized during the encoding process.\n * @returns an object containing types and an appropriate coder.\n */\nexport function getCoders(\n  components: readonly ResolvedAbiType[],\n  options: EncodingOptions & { getCoder: GetCoderFn }\n) {\n  const { getCoder } = options;\n  return components.reduce((obj, component) => {\n    const o: Record<string, Coder> = obj;\n\n    o[component.name] = getCoder(component, options);\n    return o;\n  }, {});\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { ResolvedAbiType } from '../../ResolvedAbiType';\nimport type { EncodingOptions } from '../../types/EncodingOptions';\nimport type { GetCoderFn } from '../../types/GetCoder';\nimport {\n  B256_CODER_TYPE,\n  B512_CODER_TYPE,\n  BOOL_CODER_TYPE,\n  BYTES_CODER_TYPE,\n  ENCODING_V0,\n  OPTION_CODER_TYPE,\n  RAW_PTR_CODER_TYPE,\n  RAW_SLICE_CODER_TYPE,\n  STD_STRING_CODER_TYPE,\n  STR_SLICE_CODER_TYPE,\n  U16_CODER_TYPE,\n  U256_CODER_TYPE,\n  U32_CODER_TYPE,\n  U64_CODER_TYPE,\n  U8_CODER_TYPE,\n  VEC_CODER_TYPE,\n  arrayRegEx,\n  enumRegEx,\n  stringRegEx,\n  structRegEx,\n  tupleRegEx,\n} from '../../utils/constants';\nimport { findOrThrow } from '../../utils/utilities';\nimport type { Coder } from '../coders/AbstractCoder';\nimport { ArrayCoder } from '../coders/v0/ArrayCoder';\nimport { B256Coder } from '../coders/v0/B256Coder';\nimport { B512Coder } from '../coders/v0/B512Coder';\nimport { BigNumberCoder } from '../coders/v0/BigNumberCoder';\nimport { OptionCoder } from '../coders/v0/OptionCoder';\nimport { BooleanCoder } from '../coders/v1/BooleanCoder';\nimport { ByteCoder } from '../coders/v1/ByteCoder';\nimport { EnumCoder } from '../coders/v1/EnumCoder';\nimport { NumberCoder } from '../coders/v1/NumberCoder';\nimport { RawSliceCoder } from '../coders/v1/RawSliceCoder';\nimport { StdStringCoder } from '../coders/v1/StdStringCoder';\nimport { StringCoder } from '../coders/v1/StringCoder';\nimport { StructCoder } from '../coders/v1/StructCoder';\nimport { TupleCoder } from '../coders/v1/TupleCoder';\nimport { VecCoder } from '../coders/v1/VecCoder';\n\nimport { getCoders } from './getCoders';\n\n/**\n * Retrieves coders that adhere to the v0 spec.\n *\n * @param resolvedAbiType - the resolved type to return a coder for.\n * @param options - options to be utilized during the encoding process.\n * @returns the coder for a given type.\n */\nexport const getCoder: GetCoderFn = (\n  resolvedAbiType: ResolvedAbiType,\n  _options?: EncodingOptions\n): Coder => {\n  switch (resolvedAbiType.type) {\n    case U8_CODER_TYPE:\n    case U16_CODER_TYPE:\n    case U32_CODER_TYPE:\n      return new NumberCoder(resolvedAbiType.type);\n    case U64_CODER_TYPE:\n    case RAW_PTR_CODER_TYPE:\n      return new BigNumberCoder('u64');\n    case U256_CODER_TYPE:\n      return new BigNumberCoder('u256');\n    case RAW_SLICE_CODER_TYPE:\n      return new RawSliceCoder();\n    case BOOL_CODER_TYPE:\n      return new BooleanCoder();\n    case B256_CODER_TYPE:\n      return new B256Coder();\n    case B512_CODER_TYPE:\n      return new B512Coder();\n    case BYTES_CODER_TYPE:\n      return new ByteCoder();\n    case STD_STRING_CODER_TYPE:\n      return new StdStringCoder();\n    default:\n      break;\n  }\n\n  const stringMatch = stringRegEx.exec(resolvedAbiType.type)?.groups;\n  if (stringMatch) {\n    const length = parseInt(stringMatch.length, 10);\n\n    return new StringCoder(length);\n  }\n\n  // ABI types underneath MUST have components by definition\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const components = resolvedAbiType.components!;\n\n  const arrayMatch = arrayRegEx.exec(resolvedAbiType.type)?.groups;\n  if (arrayMatch) {\n    const length = parseInt(arrayMatch.length, 10);\n    const arg = components[0];\n    if (!arg) {\n      throw new FuelError(\n        ErrorCode.INVALID_COMPONENT,\n        `The provided Array type is missing an item of 'component'.`\n      );\n    }\n\n    const arrayElementCoder = getCoder(arg, { isSmallBytes: true });\n    return new ArrayCoder(arrayElementCoder as Coder, length);\n  }\n\n  if (resolvedAbiType.type === VEC_CODER_TYPE) {\n    const arg = findOrThrow(components, (c) => c.name === 'buf').originalTypeArguments?.[0];\n    if (!arg) {\n      throw new FuelError(\n        ErrorCode.INVALID_COMPONENT,\n        `The provided Vec type is missing the 'type argument'.`\n      );\n    }\n    const argType = new ResolvedAbiType(resolvedAbiType.abi, arg);\n\n    const itemCoder = getCoder(argType, { isSmallBytes: true, encoding: ENCODING_V0 });\n    return new VecCoder(itemCoder as Coder);\n  }\n\n  const structMatch = structRegEx.exec(resolvedAbiType.type)?.groups;\n  if (structMatch) {\n    const coders = getCoders(components, { isRightPadded: true, getCoder });\n    return new StructCoder(structMatch.name, coders);\n  }\n\n  const enumMatch = enumRegEx.exec(resolvedAbiType.type)?.groups;\n  if (enumMatch) {\n    const coders = getCoders(components, { getCoder });\n\n    const isOptionEnum = resolvedAbiType.type === OPTION_CODER_TYPE;\n    if (isOptionEnum) {\n      return new OptionCoder(enumMatch.name, coders);\n    }\n    return new EnumCoder(enumMatch.name, coders);\n  }\n\n  const tupleMatch = tupleRegEx.exec(resolvedAbiType.type)?.groups;\n  if (tupleMatch) {\n    const coders = components.map((component) =>\n      getCoder(component, { isRightPadded: true, encoding: ENCODING_V0 })\n    );\n    return new TupleCoder(coders as Coder[]);\n  }\n\n  if (resolvedAbiType.type === STR_SLICE_CODER_TYPE) {\n    throw new FuelError(\n      ErrorCode.INVALID_DATA,\n      'String slices can not be decoded from logs. Convert the slice to `str[N]` with `__to_str_array`'\n    );\n  }\n\n  throw new FuelError(\n    ErrorCode.CODER_NOT_FOUND,\n    `Coder not found: ${JSON.stringify(resolvedAbiType)}.`\n  );\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn, toBytes } from '@fuel-ts/math';\n\nimport { Coder } from '../AbstractCoder';\n\nexport class BooleanCoder extends Coder<boolean, boolean> {\n  constructor() {\n    super('boolean', 'boolean', 1);\n  }\n\n  encode(value: boolean): Uint8Array {\n    const isTrueBool = value === true || value === false;\n\n    if (!isTrueBool) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid boolean value.`);\n    }\n\n    return toBytes(value ? 1 : 0, this.encodedLength);\n  }\n\n  decode(data: Uint8Array, offset: number): [boolean, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid boolean data size.`);\n    }\n\n    const bytes = bn(data.slice(offset, offset + this.encodedLength));\n\n    if (bytes.isZero()) {\n      return [false, offset + this.encodedLength];\n    }\n\n    if (!bytes.eq(bn(1))) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid boolean value.`);\n    }\n\n    return [true, offset + this.encodedLength];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport { Coder } from '../AbstractCoder';\nimport { BigNumberCoder } from '../v0/BigNumberCoder';\n\nexport class ByteCoder extends Coder<number[], Uint8Array> {\n  static memorySize = 1;\n  constructor() {\n    super('struct', 'struct Bytes', WORD_SIZE);\n  }\n\n  encode(value: number[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const bytes = new Uint8Array(value);\n    const lengthBytes = new BigNumberCoder('u64').encode(value.length);\n\n    return new Uint8Array([...lengthBytes, ...bytes]);\n  }\n\n  decode(data: Uint8Array, offset: number): [Uint8Array, number] {\n    if (data.length < WORD_SIZE) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid byte data size.`);\n    }\n\n    const offsetAndLength = offset + WORD_SIZE;\n    const lengthBytes = data.slice(offset, offsetAndLength);\n    const length = bn(new BigNumberCoder('u64').decode(lengthBytes, 0)[0]).toNumber();\n\n    const dataBytes = data.slice(offsetAndLength, offsetAndLength + length);\n\n    if (dataBytes.length !== length) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid bytes byte data size.`);\n    }\n\n    return [dataBytes, offsetAndLength + length];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { toNumber } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\nimport type { RequireExactlyOne } from 'type-fest';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\nimport { BigNumberCoder } from '../v0/BigNumberCoder';\n\nexport type InputValueOf<TCoders extends Record<string, Coder>> = RequireExactlyOne<{\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n}>;\nexport type DecodedValueOf<TCoders extends Record<string, Coder>> = RequireExactlyOne<{\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n}>;\n\nconst isFullyNativeEnum = (enumCoders: { [s: string]: unknown } | ArrayLike<unknown>): boolean =>\n  Object.values(enumCoders).every(\n    // @ts-expect-error complicated types\n    ({ type, coders }) => type === '()' && JSON.stringify(coders) === JSON.stringify([])\n  );\n\nexport class EnumCoder<TCoders extends Record<string, Coder>> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  name: string;\n  coders: TCoders;\n  #caseIndexCoder: BigNumberCoder;\n  #encodedValueSize: number;\n\n  constructor(name: string, coders: TCoders) {\n    const caseIndexCoder = new BigNumberCoder('u64');\n    const encodedValueSize = Object.values(coders).reduce(\n      (max, coder) => Math.max(max, coder.encodedLength),\n      0\n    );\n    super('enum', `enum ${name}`, caseIndexCoder.encodedLength + encodedValueSize);\n    this.name = name;\n    this.coders = coders;\n    this.#caseIndexCoder = caseIndexCoder;\n    this.#encodedValueSize = encodedValueSize;\n  }\n\n  #encodeNativeEnum(value: string): Uint8Array {\n    const valueCoder = this.coders[value];\n    const encodedValue = valueCoder.encode([]);\n    const caseIndex = Object.keys(this.coders).indexOf(value);\n\n    const padding = new Uint8Array(this.#encodedValueSize - valueCoder.encodedLength);\n    return concat([this.#caseIndexCoder.encode(caseIndex), padding, encodedValue]);\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    if (typeof value === 'string' && this.coders[value]) {\n      return this.#encodeNativeEnum(value);\n    }\n\n    const [caseKey, ...empty] = Object.keys(value);\n    if (!caseKey) {\n      throw new FuelError(ErrorCode.INVALID_DECODE_VALUE, 'A field for the case must be provided.');\n    }\n    if (empty.length !== 0) {\n      throw new FuelError(ErrorCode.INVALID_DECODE_VALUE, 'Only one field must be provided.');\n    }\n    const valueCoder = this.coders[caseKey];\n    const caseIndex = Object.keys(this.coders).indexOf(caseKey);\n    const encodedValue = valueCoder.encode(value[caseKey]);\n\n    return new Uint8Array([...this.#caseIndexCoder.encode(caseIndex), ...encodedValue]);\n  }\n\n  #decodeNativeEnum(caseKey: string, newOffset: number): [DecodedValueOf<TCoders>, number] {\n    return [caseKey as unknown as DecodedValueOf<TCoders>, newOffset];\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    if (data.length < this.#encodedValueSize) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid enum data size.`);\n    }\n\n    const caseBytes = new BigNumberCoder('u64').decode(data, offset)[0];\n    const caseIndex = toNumber(caseBytes);\n    const caseKey = Object.keys(this.coders)[caseIndex];\n    if (!caseKey) {\n      throw new FuelError(\n        ErrorCode.INVALID_DECODE_VALUE,\n        `Invalid caseIndex \"${caseIndex}\". Valid cases: ${Object.keys(this.coders)}.`\n      );\n    }\n\n    const valueCoder = this.coders[caseKey];\n    const offsetAndCase = offset + WORD_SIZE;\n\n    const [decoded, newOffset] = valueCoder.decode(data, offsetAndCase);\n\n    if (isFullyNativeEnum(this.coders)) {\n      return this.#decodeNativeEnum(caseKey, newOffset);\n    }\n\n    return [{ [caseKey]: decoded } as DecodedValueOf<TCoders>, newOffset];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { toNumber, toBytes } from '@fuel-ts/math';\n\nimport { Coder } from '../AbstractCoder';\n\ntype NumberCoderType = 'u8' | 'u16' | 'u32' | 'u64';\n\nconst getLength = (baseType: NumberCoderType): number => {\n  switch (baseType) {\n    case 'u8':\n      return 1;\n    case 'u16':\n      return 2;\n    case 'u32':\n      return 4;\n    default:\n      throw new FuelError(ErrorCode.TYPE_NOT_SUPPORTED, `Invalid number type: ${baseType}`);\n  }\n};\n\nexport class NumberCoder extends Coder<number, number> {\n  length: number;\n  baseType: NumberCoderType;\n\n  constructor(baseType: NumberCoderType) {\n    const length = getLength(baseType);\n    super('number', baseType, length);\n    this.baseType = baseType;\n    this.length = length;\n  }\n\n  encode(value: number | string): Uint8Array {\n    let bytes;\n\n    try {\n      bytes = toBytes(value);\n    } catch (error) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.baseType}.`);\n    }\n\n    if (bytes.length > this.length) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Invalid ${this.baseType}, too many bytes.`);\n    }\n\n    return toBytes(bytes, this.length);\n  }\n\n  decode(data: Uint8Array, offset: number): [number, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid number data size.`);\n    }\n\n    const bytes = data.slice(offset, offset + this.length);\n\n    if (bytes.length !== this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid number byte data size.`);\n    }\n\n    return [toNumber(bytes), offset + this.length];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport { Coder } from '../AbstractCoder';\nimport { ArrayCoder } from '../v0/ArrayCoder';\nimport { BigNumberCoder } from '../v0/BigNumberCoder';\n\nimport { NumberCoder } from './NumberCoder';\n\nexport class RawSliceCoder extends Coder<number[], number[]> {\n  constructor() {\n    super('raw untyped slice', 'raw untyped slice', WORD_SIZE);\n  }\n\n  encode(value: number[]): Uint8Array {\n    if (!Array.isArray(value)) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const internalCoder = new ArrayCoder(new NumberCoder('u8'), value.length);\n    const bytes = internalCoder.encode(value);\n    const lengthBytes = new BigNumberCoder('u64').encode(bytes.length);\n\n    return new Uint8Array([...lengthBytes, ...bytes]);\n  }\n\n  decode(data: Uint8Array, offset: number): [number[], number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid raw slice data size.`);\n    }\n\n    const offsetAndLength = offset + WORD_SIZE;\n    const lengthBytes = data.slice(offset, offsetAndLength);\n    const length = bn(new BigNumberCoder('u64').decode(lengthBytes, 0)[0]).toNumber();\n    const dataBytes = data.slice(offsetAndLength, offsetAndLength + length);\n\n    if (dataBytes.length !== length) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid raw slice byte data size.`);\n    }\n\n    const internalCoder = new ArrayCoder(new NumberCoder('u8'), length);\n    const [decodedValue] = internalCoder.decode(dataBytes, 0);\n\n    return [decodedValue, offsetAndLength + length];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { toUtf8Bytes, toUtf8String } from 'ethers';\n\nimport { WORD_SIZE } from '../../../utils/constants';\nimport { Coder } from '../AbstractCoder';\nimport { BigNumberCoder } from '../v0/BigNumberCoder';\n\nexport class StdStringCoder extends Coder<string, string> {\n  static memorySize = 1;\n  constructor() {\n    super('struct', 'struct String', WORD_SIZE);\n  }\n\n  encode(value: string): Uint8Array {\n    const bytes = toUtf8Bytes(value);\n    const lengthBytes = new BigNumberCoder('u64').encode(value.length);\n\n    return new Uint8Array([...lengthBytes, ...bytes]);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid std string data size.`);\n    }\n\n    const offsetAndLength = offset + WORD_SIZE;\n    const lengthBytes = data.slice(offset, offsetAndLength);\n    const length = bn(new BigNumberCoder('u64').decode(lengthBytes, 0)[0]).toNumber();\n    const dataBytes = data.slice(offsetAndLength, offsetAndLength + length);\n\n    if (dataBytes.length !== length) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid std string byte data size.`);\n    }\n\n    return [toUtf8String(dataBytes), offsetAndLength + length];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { toUtf8Bytes, toUtf8String } from 'ethers';\n\nimport { Coder } from '../AbstractCoder';\n\nexport class StringCoder<TLength extends number = number> extends Coder<string, string> {\n  constructor(length: TLength) {\n    super('string', `str[${length}]`, length);\n  }\n\n  encode(value: string): Uint8Array {\n    if (value.length !== this.encodedLength) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Value length mismatch during encode.`);\n    }\n\n    return toUtf8Bytes(value);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid string data size.`);\n    }\n\n    const bytes = data.slice(offset, offset + this.encodedLength);\n\n    if (bytes.length !== this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid string byte data size.`);\n    }\n\n    return [toUtf8String(bytes), offset + this.encodedLength];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { concatBytes } from '@fuel-ts/utils';\n\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\nimport { OptionCoder } from '../v0/OptionCoder';\n\ntype InputValueOf<TCoders extends Record<string, Coder>> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n};\ntype DecodedValueOf<TCoders extends Record<string, Coder>> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n};\n\nexport class StructCoder<TCoders extends Record<string, Coder>> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  name: string;\n  coders: TCoders;\n\n  constructor(name: string, coders: TCoders) {\n    const encodedLength = Object.values(coders).reduce(\n      (acc, coder) => acc + coder.encodedLength,\n      0\n    );\n    super('struct', `struct ${name}`, encodedLength);\n    this.name = name;\n    this.coders = coders;\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    return concatBytes(\n      Object.keys(this.coders).map((fieldName) => {\n        const fieldCoder = this.coders[fieldName];\n        const fieldValue = value[fieldName];\n\n        if (!(fieldCoder instanceof OptionCoder) && fieldValue == null) {\n          throw new FuelError(\n            ErrorCode.ENCODE_ERROR,\n            `Invalid ${this.type}. Field \"${fieldName}\" not present.`\n          );\n        }\n\n        return fieldCoder.encode(fieldValue);\n      })\n    );\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid struct data size.`);\n    }\n\n    let newOffset = offset;\n    const decodedValue = Object.keys(this.coders).reduce((obj, fieldName) => {\n      const fieldCoder = this.coders[fieldName];\n      let decoded;\n      [decoded, newOffset] = fieldCoder.decode(data, newOffset);\n\n      // eslint-disable-next-line no-param-reassign\n      obj[fieldName as keyof DecodedValueOf<TCoders>] = decoded;\n      return obj;\n    }, {} as DecodedValueOf<TCoders>);\n\n    return [decodedValue, newOffset];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { concatBytes } from '@fuel-ts/utils';\n\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\n\ntype InputValueOf<TCoders extends Coder[]> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Input'];\n};\ntype DecodedValueOf<TCoders extends Coder[]> = {\n  [P in keyof TCoders]: TypesOfCoder<TCoders[P]>['Decoded'];\n};\n\nexport class TupleCoder<TCoders extends Coder[]> extends Coder<\n  InputValueOf<TCoders>,\n  DecodedValueOf<TCoders>\n> {\n  coders: TCoders;\n\n  constructor(coders: TCoders) {\n    const encodedLength = coders.reduce((acc, coder) => acc + coder.encodedLength, 0);\n    super('tuple', `(${coders.map((coder) => coder.type).join(', ')})`, encodedLength);\n    this.coders = coders;\n  }\n\n  encode(value: InputValueOf<TCoders>): Uint8Array {\n    if (this.coders.length !== value.length) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Types/values length mismatch.`);\n    }\n\n    return concatBytes(this.coders.map((coder, i) => coder.encode(value[i])));\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoders>, number] {\n    if (data.length < this.encodedLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid tuple data size.`);\n    }\n\n    let newOffset = offset;\n    const decodedValue = this.coders.map((coder) => {\n      let decoded;\n      [decoded, newOffset] = coder.decode(data, newOffset);\n\n      return decoded;\n    });\n\n    return [decodedValue as DecodedValueOf<TCoders>, newOffset];\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { concatBytes } from '@fuel-ts/utils';\n\nimport { MAX_BYTES, WORD_SIZE } from '../../../utils/constants';\nimport { chunkByLength } from '../../../utils/utilities';\nimport type { TypesOfCoder } from '../AbstractCoder';\nimport { Coder } from '../AbstractCoder';\nimport { BigNumberCoder } from '../v0/BigNumberCoder';\n\ntype InputValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Input']>;\ntype DecodedValueOf<TCoder extends Coder> = Array<TypesOfCoder<TCoder>['Decoded']>;\n\nexport class VecCoder<TCoder extends Coder> extends Coder<\n  InputValueOf<TCoder>,\n  DecodedValueOf<TCoder>\n> {\n  coder: TCoder;\n\n  constructor(coder: TCoder) {\n    super('struct', `struct Vec`, coder.encodedLength + WORD_SIZE);\n    this.coder = coder;\n  }\n\n  encode(value: InputValueOf<TCoder>): Uint8Array {\n    if (!Array.isArray(value)) {\n      throw new FuelError(ErrorCode.ENCODE_ERROR, `Expected array value.`);\n    }\n\n    const bytes = value.map((v) => this.coder.encode(v));\n    const lengthBytes = new BigNumberCoder('u64').encode(value.length);\n\n    return new Uint8Array([...lengthBytes, ...concatBytes(bytes)]);\n  }\n\n  decode(data: Uint8Array, offset: number): [DecodedValueOf<TCoder>, number] {\n    if (data.length < this.encodedLength || data.length > MAX_BYTES) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid vec data size.`);\n    }\n\n    const offsetAndLength = offset + WORD_SIZE;\n    const lengthBytes = data.slice(offset, offsetAndLength);\n    const length = bn(new BigNumberCoder('u64').decode(lengthBytes, 0)[0]).toNumber();\n    const dataLength = length * this.coder.encodedLength;\n    const dataBytes = data.slice(offsetAndLength, offsetAndLength + dataLength);\n\n    if (dataBytes.length !== dataLength) {\n      throw new FuelError(ErrorCode.DECODE_ERROR, `Invalid vec byte data size.`);\n    }\n\n    return [\n      chunkByLength(dataBytes, this.coder.encodedLength).map(\n        (chunk) => this.coder.decode(chunk, 0)[0]\n      ),\n      offsetAndLength + dataLength,\n    ];\n  }\n}\n","import { ResolvedAbiType } from './ResolvedAbiType';\nimport type { DecodedValue, InputValue, Coder } from './encoding/coders/AbstractCoder';\nimport { getCoderForEncoding } from './encoding/strategies/getCoderForEncoding';\nimport type { EncodingOptions } from './types/EncodingOptions';\nimport type { JsonAbi, JsonAbiArgument } from './types/JsonAbi';\n\nexport abstract class AbiCoder {\n  static getCoder(\n    abi: JsonAbi,\n    argument: JsonAbiArgument,\n    options: EncodingOptions = {\n      isSmallBytes: false,\n    }\n  ): Coder {\n    const resolvedAbiType = new ResolvedAbiType(abi, argument);\n    return getCoderForEncoding(options.encoding)(resolvedAbiType, options);\n  }\n\n  static encode(\n    abi: JsonAbi,\n    argument: JsonAbiArgument,\n    value: InputValue,\n    options?: EncodingOptions\n  ) {\n    return this.getCoder(abi, argument, options).encode(value);\n  }\n\n  static decode(\n    abi: JsonAbi,\n    argument: JsonAbiArgument,\n    data: Uint8Array,\n    offset: number,\n    options?: EncodingOptions\n  ): [DecodedValue | undefined, number] {\n    return this.getCoder(abi, argument, options).decode(data, offset) as [\n      DecodedValue | undefined,\n      number,\n    ];\n  }\n}\n","import { bufferFromString } from '@fuel-ts/crypto';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { sha256 } from '@fuel-ts/hasher';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { bn } from '@fuel-ts/math';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport { AbiCoder } from './AbiCoder';\nimport { ResolvedAbiType } from './ResolvedAbiType';\nimport type { DecodedValue, InputValue } from './encoding/coders/AbstractCoder';\nimport { ByteCoder } from './encoding/coders/v0/ByteCoder';\nimport { TupleCoder } from './encoding/coders/v0/TupleCoder';\nimport { VecCoder } from './encoding/coders/v0/VecCoder';\nimport type {\n  JsonAbi,\n  JsonAbiArgument,\n  JsonAbiFunction,\n  JsonAbiFunctionAttribute,\n} from './types/JsonAbi';\nimport { OPTION_CODER_TYPE } from './utils/constants';\nimport type { Uint8ArrayWithDynamicData } from './utils/utilities';\nimport { isPointerType, unpackDynamicData, findOrThrow, isHeapType } from './utils/utilities';\n\nexport class FunctionFragment<\n  TAbi extends JsonAbi = JsonAbi,\n  FnName extends TAbi['functions'][number]['name'] = string,\n> {\n  readonly signature: string;\n  readonly selector: string;\n  readonly name: string;\n  readonly jsonFn: JsonAbiFunction;\n  readonly attributes: readonly JsonAbiFunctionAttribute[];\n  readonly isInputDataPointer: boolean;\n  readonly outputMetadata: {\n    isHeapType: boolean;\n    encodedLength: number;\n  };\n\n  private readonly jsonAbi: JsonAbi;\n\n  constructor(jsonAbi: JsonAbi, name: FnName) {\n    this.jsonAbi = jsonAbi;\n    this.jsonFn = findOrThrow(this.jsonAbi.functions, (f) => f.name === name);\n    this.name = name;\n    this.signature = FunctionFragment.getSignature(this.jsonAbi, this.jsonFn);\n    this.selector = FunctionFragment.getFunctionSelector(this.signature);\n    this.isInputDataPointer = this.#isInputDataPointer();\n    this.outputMetadata = {\n      isHeapType: this.#isOutputDataHeap(),\n      encodedLength: this.#getOutputEncodedLength(),\n    };\n\n    this.attributes = this.jsonFn.attributes ?? [];\n  }\n\n  private static getSignature(abi: JsonAbi, fn: JsonAbiFunction): string {\n    const inputsSignatures = fn.inputs.map((input) =>\n      new ResolvedAbiType(abi, input).getSignature()\n    );\n    return `${fn.name}(${inputsSignatures.join(',')})`;\n  }\n\n  private static getFunctionSelector(functionSignature: string) {\n    const hashedFunctionSignature = sha256(bufferFromString(functionSignature, 'utf-8'));\n    // get first 4 bytes of signature + 0x prefix. then left-pad it to 8 bytes using toHex(8)\n    return bn(hashedFunctionSignature.slice(0, 10)).toHex(8);\n  }\n\n  #isInputDataPointer(): boolean {\n    const inputTypes = this.jsonFn.inputs.map((i) =>\n      this.jsonAbi.types.find((t) => t.typeId === i.type)\n    );\n\n    return this.jsonFn.inputs.length > 1 || isPointerType(inputTypes[0]?.type || '');\n  }\n\n  #isOutputDataHeap(): boolean {\n    const outputType = findOrThrow(this.jsonAbi.types, (t) => t.typeId === this.jsonFn.output.type);\n\n    return isHeapType(outputType?.type || '');\n  }\n\n  #getOutputEncodedLength(): number {\n    try {\n      const heapCoder = AbiCoder.getCoder(this.jsonAbi, this.jsonFn.output);\n      if (heapCoder instanceof VecCoder) {\n        return heapCoder.coder.encodedLength;\n      }\n      if (heapCoder instanceof ByteCoder) {\n        return ByteCoder.memorySize;\n      }\n\n      return heapCoder.encodedLength;\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  encodeArguments(values: InputValue[], offset = 0): Uint8Array {\n    FunctionFragment.verifyArgsAndInputsAlign(values, this.jsonFn.inputs, this.jsonAbi);\n\n    const shallowCopyValues = values.slice();\n\n    const nonEmptyInputs = this.jsonFn.inputs.filter(\n      (x) => findOrThrow(this.jsonAbi.types, (t) => t.typeId === x.type).type !== '()'\n    );\n\n    if (Array.isArray(values) && nonEmptyInputs.length !== values.length) {\n      shallowCopyValues.length = this.jsonFn.inputs.length;\n      shallowCopyValues.fill(undefined as unknown as InputValue, values.length);\n    }\n\n    const coders = nonEmptyInputs.map((t) =>\n      AbiCoder.getCoder(this.jsonAbi, t, {\n        isRightPadded: nonEmptyInputs.length > 1,\n      })\n    );\n\n    const coder = new TupleCoder(coders);\n    const results: Uint8ArrayWithDynamicData = coder.encode(shallowCopyValues);\n\n    return unpackDynamicData(results, offset, results.byteLength);\n  }\n\n  private static verifyArgsAndInputsAlign(\n    args: InputValue[],\n    inputs: readonly JsonAbiArgument[],\n    abi: JsonAbi\n  ) {\n    if (args.length === inputs.length) {\n      return;\n    }\n\n    const inputTypes = inputs.map((i) => findOrThrow(abi.types, (t) => t.typeId === i.type));\n    const optionalInputs = inputTypes.filter(\n      (x) => x.type === OPTION_CODER_TYPE || x.type === '()'\n    );\n    if (optionalInputs.length === inputTypes.length) {\n      return;\n    }\n    if (inputTypes.length - optionalInputs.length === args.length) {\n      return;\n    }\n\n    const errorMsg = `Mismatch between provided arguments and expected ABI inputs. Provided ${\n      args.length\n    } arguments, but expected ${inputs.length - optionalInputs.length} (excluding ${\n      optionalInputs.length\n    } optional inputs).`;\n\n    throw new FuelError(ErrorCode.ABI_TYPES_AND_VALUES_MISMATCH, errorMsg);\n  }\n\n  decodeArguments(data: BytesLike) {\n    const bytes = arrayify(data);\n    const nonEmptyInputs = this.jsonFn.inputs.filter(\n      (x) => findOrThrow(this.jsonAbi.types, (t) => t.typeId === x.type).type !== '()'\n    );\n\n    if (nonEmptyInputs.length === 0) {\n      // The VM is current return 0x0000000000000000, but we should treat it as undefined / void\n      if (bytes.length === 0) {\n        return undefined;\n      }\n\n      throw new FuelError(\n        ErrorCode.DECODE_ERROR,\n        `Types/values length mismatch during decode. ${JSON.stringify({\n          count: {\n            types: this.jsonFn.inputs.length,\n            nonEmptyInputs: nonEmptyInputs.length,\n            values: bytes.length,\n          },\n          value: {\n            args: this.jsonFn.inputs,\n            nonEmptyInputs,\n            values: bytes,\n          },\n        })}`\n      );\n    }\n\n    const result = nonEmptyInputs.reduce(\n      (obj: { decoded: unknown[]; offset: number }, input) => {\n        const coder = AbiCoder.getCoder(this.jsonAbi, input);\n        const [decodedValue, decodedValueByteSize] = coder.decode(bytes, obj.offset);\n\n        return {\n          decoded: [...obj.decoded, decodedValue],\n          offset: obj.offset + decodedValueByteSize,\n        };\n      },\n      { decoded: [], offset: 0 }\n    );\n\n    return result.decoded;\n  }\n\n  decodeOutput(data: BytesLike): [DecodedValue | undefined, number] {\n    const outputAbiType = findOrThrow(\n      this.jsonAbi.types,\n      (t) => t.typeId === this.jsonFn.output.type\n    );\n    if (outputAbiType.type === '()') {\n      return [undefined, 0];\n    }\n\n    const bytes = arrayify(data);\n    const coder = AbiCoder.getCoder(this.jsonAbi, this.jsonFn.output);\n\n    return coder.decode(bytes, 0) as [DecodedValue | undefined, number];\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport { Coder, B256Coder, NumberCoder, BigNumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { sha256 } from '@fuel-ts/hasher';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport type { BN } from '@fuel-ts/math';\nimport { concat, arrayify } from '@fuel-ts/utils';\n\nimport { ByteArrayCoder } from './byte-array';\nimport type { TxPointer } from './tx-pointer';\nimport { TxPointerCoder } from './tx-pointer';\n\nexport enum InputType {\n  Coin = 0,\n  Contract = 1,\n  Message = 2,\n}\n\nexport type InputCoin = {\n  type: InputType.Coin;\n\n  /** Hash of transaction (b256) */\n  txID: string;\n\n  /** Index of transaction output (u8) */\n  outputIndex: number;\n\n  /** Owning address or script hash (b256) */\n  owner: string;\n\n  /** Amount of coins (u64) */\n  amount: BN;\n\n  /** Asset ID of the coins (b256) */\n  assetId: string;\n\n  /** Points to the TX whose output is being spent. (TxPointer) */\n  txPointer: TxPointer;\n\n  /** Index of witness that authorizes spending the coin (u8) */\n  witnessIndex: number;\n\n  /** UTXO being spent must have been created at least this many blocks ago (u32) */\n  maturity: number;\n\n  /** Gas used by predicate (u64) */\n  predicateGasUsed: BN;\n\n  /** Length of predicate, in instructions (u16) */\n  predicateLength: number;\n\n  /** Length of predicate input data, in bytes (u16) */\n  predicateDataLength: number;\n\n  /** Predicate bytecode (byte[]) */\n  predicate: string;\n\n  /** Predicate input data (parameters) (byte[]) */\n  predicateData: string;\n};\n\nexport class InputCoinCoder extends Coder<InputCoin, InputCoin> {\n  constructor() {\n    super('InputCoin', 'struct InputCoin', 0);\n  }\n\n  encode(value: InputCoin): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.txID));\n    parts.push(new NumberCoder('u8').encode(value.outputIndex));\n    parts.push(new B256Coder().encode(value.owner));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new NumberCoder('u8').encode(value.witnessIndex));\n    parts.push(new NumberCoder('u32').encode(value.maturity));\n    parts.push(new BigNumberCoder('u64').encode(value.predicateGasUsed));\n    parts.push(new NumberCoder('u32').encode(value.predicateLength));\n    parts.push(new NumberCoder('u32').encode(value.predicateDataLength));\n    parts.push(new ByteArrayCoder(value.predicateLength).encode(value.predicate));\n    parts.push(new ByteArrayCoder(value.predicateDataLength).encode(value.predicateData));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [InputCoin, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const txID = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const outputIndex = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const owner = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const witnessIndex = Number(decoded);\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const maturity = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const predicateGasUsed = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const predicateLength = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const predicateDataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateLength).decode(data, o);\n    const predicate = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateDataLength).decode(data, o);\n    const predicateData = decoded;\n\n    return [\n      {\n        type: InputType.Coin,\n        txID,\n        outputIndex,\n        owner,\n        amount,\n        assetId,\n        txPointer,\n        witnessIndex,\n        maturity,\n        predicateGasUsed,\n        predicateLength,\n        predicateDataLength,\n        predicate,\n        predicateData,\n      },\n      o,\n    ];\n  }\n}\n\nexport type InputContract = {\n  type: InputType.Contract;\n\n  /** Hash of transaction (b256) */\n  txID: string;\n\n  /** Index of transaction output (u8) */\n  outputIndex: number;\n\n  /** Root of amount of coins owned by contract before transaction execution (b256) */\n  balanceRoot: string;\n\n  /** State root of contract before transaction execution (b256) */\n  stateRoot: string;\n\n  /** Points to the TX whose output is being spent. (TxPointer) */\n  txPointer: TxPointer;\n\n  /** Contract ID (b256) */\n  contractID: string;\n};\n\nexport class InputContractCoder extends Coder<InputContract, InputContract> {\n  constructor() {\n    super('InputContract', 'struct InputContract', 0);\n  }\n\n  encode(value: InputContract): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.txID));\n    parts.push(new NumberCoder('u8').encode(value.outputIndex));\n    parts.push(new B256Coder().encode(value.balanceRoot));\n    parts.push(new B256Coder().encode(value.stateRoot));\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new B256Coder().encode(value.contractID));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [InputContract, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const txID = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const outputIndex = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const balanceRoot = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const stateRoot = decoded;\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractID = decoded;\n\n    return [\n      {\n        type: InputType.Contract,\n        txID,\n        outputIndex,\n        balanceRoot,\n        stateRoot,\n        txPointer,\n        contractID,\n      },\n      o,\n    ];\n  }\n}\n\nexport type InputMessage = {\n  type: InputType.Message;\n\n  /** Address of sender */\n  sender: string;\n\n  /** Address of recipient */\n  recipient: string;\n\n  /** Amount of coins */\n  amount: BN;\n\n  /** data of message */\n  data?: string;\n\n  /** Length of predicate, in instructions (u16) */\n  dataLength?: number;\n\n  /** Unique nonce of message */\n  nonce: string;\n\n  /** Index of witness that authorizes message (u8) */\n  witnessIndex: number;\n\n  /** Gas used by predicate (u64) */\n  predicateGasUsed: BN;\n\n  /** Length of predicate, in instructions (u16) */\n  predicateLength: number;\n\n  /** Length of predicate input data, in bytes (u16) */\n  predicateDataLength: number;\n\n  /** Predicate bytecode (byte[]) */\n  predicate: string;\n\n  /** Predicate input data (parameters) (byte[]) */\n  predicateData: string;\n};\n\nexport class InputMessageCoder extends Coder<InputMessage, InputMessage> {\n  constructor() {\n    super('InputMessage', 'struct InputMessage', 0);\n  }\n\n  static getMessageId(\n    value: Pick<InputMessage, 'sender' | 'recipient' | 'nonce' | 'amount' | 'data'>\n  ): string {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new ByteArrayCoder(32).encode(value.sender));\n    parts.push(new ByteArrayCoder(32).encode(value.recipient));\n    parts.push(new ByteArrayCoder(32).encode(value.nonce));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(arrayify(value.data || '0x'));\n\n    return sha256(concat(parts));\n  }\n\n  static encodeData(messageData?: BytesLike): Uint8Array {\n    const bytes = arrayify(messageData || '0x');\n    const dataLength = bytes.length;\n    return new ByteArrayCoder(dataLength).encode(bytes);\n  }\n\n  encode(value: InputMessage): Uint8Array {\n    const parts: Uint8Array[] = [];\n    const data = InputMessageCoder.encodeData(value.data);\n\n    parts.push(new ByteArrayCoder(32).encode(value.sender));\n    parts.push(new ByteArrayCoder(32).encode(value.recipient));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new ByteArrayCoder(32).encode(value.nonce));\n    parts.push(new NumberCoder('u8').encode(value.witnessIndex));\n    parts.push(new BigNumberCoder('u64').encode(value.predicateGasUsed));\n    parts.push(new NumberCoder('u32').encode(data.length));\n    parts.push(new NumberCoder('u32').encode(value.predicateLength));\n    parts.push(new NumberCoder('u32').encode(value.predicateDataLength));\n    parts.push(new ByteArrayCoder(data.length).encode(data));\n    parts.push(new ByteArrayCoder(value.predicateLength).encode(value.predicate));\n    parts.push(new ByteArrayCoder(value.predicateDataLength).encode(value.predicateData));\n\n    return concat(parts);\n  }\n\n  static decodeData(messageData: BytesLike): Uint8Array {\n    const bytes = arrayify(messageData);\n    const dataLength = bytes.length;\n    const [data] = new ByteArrayCoder(dataLength).decode(bytes, 0);\n\n    return arrayify(data);\n  }\n\n  decode(data: Uint8Array, offset: number): [InputMessage, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const sender = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const recipient = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const nonce = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const witnessIndex = Number(decoded);\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const predicateGasUsed = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const dataLength = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const predicateLength = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const predicateDataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(dataLength).decode(data, o);\n    const messageData = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateLength).decode(data, o);\n    const predicate = decoded;\n    [decoded, o] = new ByteArrayCoder(predicateDataLength).decode(data, o);\n    const predicateData = decoded;\n\n    return [\n      {\n        type: InputType.Message,\n        sender,\n        recipient,\n        amount,\n        witnessIndex,\n        nonce,\n        predicateGasUsed,\n        dataLength,\n        predicateLength,\n        predicateDataLength,\n        data: messageData,\n        predicate,\n        predicateData,\n      },\n      o,\n    ];\n  }\n}\n\nexport type Input = InputCoin | InputContract | InputMessage;\n\nexport class InputCoder extends Coder<Input, Input> {\n  constructor() {\n    super('Input', 'struct Input', 0);\n  }\n\n  encode(value: Input): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.type));\n\n    const { type } = value;\n\n    switch (type) {\n      case InputType.Coin: {\n        parts.push(new InputCoinCoder().encode(value));\n        break;\n      }\n      case InputType.Contract: {\n        parts.push(new InputContractCoder().encode(value));\n        break;\n      }\n      case InputType.Message: {\n        parts.push(new InputMessageCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_INPUT,\n          `Invalid transaction input type: ${type}.`\n        );\n      }\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Input, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const type = decoded as InputType;\n    switch (type) {\n      case InputType.Coin: {\n        [decoded, o] = new InputCoinCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case InputType.Contract: {\n        [decoded, o] = new InputContractCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case InputType.Message: {\n        [decoded, o] = new InputMessageCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_INPUT,\n          `Invalid transaction input type: ${type}.`\n        );\n      }\n    }\n  }\n}\n","import { Coder } from '@fuel-ts/abi-coder';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { concat, hexlify, arrayify } from '@fuel-ts/utils';\n\nexport class ByteArrayCoder extends Coder<BytesLike, string> {\n  length: number;\n  #paddingLength: number;\n\n  constructor(length: number) {\n    const paddingLength = (8 - (length % 8)) % 8;\n    const encodedLength = length + paddingLength;\n    super(\n      'ByteArray',\n      // While this might sound like a [u8; N] coder it's actually not.\n      // A [u8; N] coder would pad every u8 to 8 bytes which would\n      // make every u8 have the same size as a u64.\n      // We are packing four u8s into u64s here, avoiding this padding.\n      `[u64; ${encodedLength / 4}]`,\n      encodedLength\n    );\n    this.length = length;\n    this.#paddingLength = paddingLength;\n  }\n\n  encode(value: BytesLike): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    const data = arrayify(value);\n    parts.push(data);\n    // Write padding\n    if (this.#paddingLength) {\n      parts.push(new Uint8Array(this.#paddingLength));\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [string, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = [hexlify(data.slice(o, o + this.length)), o + this.length];\n    const value = decoded;\n    // Read padding\n    if (this.#paddingLength) {\n      [decoded, o] = [null, o + this.#paddingLength];\n    }\n\n    return [value, o];\n  }\n}\n","import { NumberCoder, StructCoder } from '@fuel-ts/abi-coder';\n\nexport type TxPointer = {\n  /** Block height (u32) */\n  blockHeight: number;\n\n  /** Transaction index (u16) */\n  txIndex: number;\n};\n\nexport class TxPointerCoder extends StructCoder<{\n  blockHeight: NumberCoder;\n  txIndex: NumberCoder;\n}> {\n  constructor() {\n    super('TxPointer', {\n      blockHeight: new NumberCoder('u32'),\n      txIndex: new NumberCoder('u16'),\n    });\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport { Coder, B256Coder, NumberCoder, BigNumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\nexport enum OutputType /* u8 */ {\n  Coin = 0,\n  Contract = 1,\n  Change = 2,\n  Variable = 3,\n  ContractCreated = 4,\n}\n\nexport type OutputCoin = {\n  type: OutputType.Coin;\n  /** Receiving address or script hash (b256) */\n  to: string;\n  /** Amount of coins to send (u64) */\n  amount: BN;\n  /** Asset ID of coins (b256) */\n  assetId: string;\n};\n\nexport class OutputCoinCoder extends Coder<OutputCoin, OutputCoin> {\n  constructor() {\n    super('OutputCoin', 'struct OutputCoin', 0);\n  }\n\n  encode(value: OutputCoin): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputCoin, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n\n    return [\n      {\n        type: OutputType.Coin,\n        to,\n        amount,\n        assetId,\n      },\n      o,\n    ];\n  }\n}\n\nexport type OutputContract = {\n  type: OutputType.Contract;\n  /** Index of input contract (u8) */\n  inputIndex: number;\n  /** Root of amount of coins owned by contract after transaction execution (b256) */\n  balanceRoot: string;\n  /** State root of contract after transaction execution (b256) */\n  stateRoot: string;\n};\n\nexport class OutputContractCoder extends Coder<OutputContract, OutputContract> {\n  constructor() {\n    super('OutputContract', 'struct OutputContract', 0);\n  }\n\n  encode(value: OutputContract): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.inputIndex));\n    parts.push(new B256Coder().encode(value.balanceRoot));\n    parts.push(new B256Coder().encode(value.stateRoot));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputContract, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const inputIndex = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const balanceRoot = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const stateRoot = decoded;\n\n    return [\n      {\n        type: OutputType.Contract,\n        inputIndex,\n        balanceRoot,\n        stateRoot,\n      },\n      o,\n    ];\n  }\n}\n\nexport type OutputChange = {\n  type: OutputType.Change;\n  /** Receiving address or script hash (b256) */\n  to: string;\n  /** Amount of coins to send (u64) */\n  amount: BN;\n  /** Asset ID of coins (b256) */\n  assetId: string;\n};\n\nexport class OutputChangeCoder extends Coder<OutputChange, OutputChange> {\n  constructor() {\n    super('OutputChange', 'struct OutputChange', 0);\n  }\n\n  encode(value: OutputChange): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputChange, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n\n    return [\n      {\n        type: OutputType.Change,\n        to,\n        amount,\n        assetId,\n      },\n      o,\n    ];\n  }\n}\n\nexport type OutputVariable = {\n  type: OutputType.Variable;\n  /** Receiving address or script hash (b256) */\n  to: string;\n  /** Amount of coins to send (u64) */\n  amount: BN;\n  /** Asset ID of coins (b256) */\n  assetId: string;\n};\n\nexport class OutputVariableCoder extends Coder<OutputVariable, OutputVariable> {\n  constructor() {\n    super('OutputVariable', 'struct OutputVariable', 0);\n  }\n\n  encode(value: OutputVariable): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputVariable, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n\n    return [\n      {\n        type: OutputType.Variable,\n        to,\n        amount,\n        assetId,\n      },\n      o,\n    ];\n  }\n}\n\nexport type OutputContractCreated = {\n  type: OutputType.ContractCreated;\n  /** Contract ID (b256) */\n  contractId: string;\n  /** State root of contract (b256) */\n  stateRoot: string;\n};\n\nexport class OutputContractCreatedCoder extends Coder<\n  OutputContractCreated,\n  OutputContractCreated\n> {\n  constructor() {\n    super('OutputContractCreated', 'struct OutputContractCreated', 0);\n  }\n\n  encode(value: OutputContractCreated): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.contractId));\n    parts.push(new B256Coder().encode(value.stateRoot));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [OutputContractCreated, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractId = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const stateRoot = decoded;\n\n    return [\n      {\n        type: OutputType.ContractCreated,\n        contractId,\n        stateRoot,\n      },\n      o,\n    ];\n  }\n}\n\nexport type Output =\n  | OutputCoin\n  | OutputContract\n  | OutputChange\n  | OutputVariable\n  | OutputContractCreated;\n\nexport class OutputCoder extends Coder<Output, Output> {\n  constructor() {\n    super('Output', ' struct Output', 0);\n  }\n\n  encode(value: Output): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.type));\n\n    const { type } = value;\n\n    switch (type) {\n      case OutputType.Coin: {\n        parts.push(new OutputCoinCoder().encode(value));\n        break;\n      }\n      case OutputType.Contract: {\n        parts.push(new OutputContractCoder().encode(value));\n        break;\n      }\n      case OutputType.Change: {\n        parts.push(new OutputChangeCoder().encode(value));\n        break;\n      }\n      case OutputType.Variable: {\n        parts.push(new OutputVariableCoder().encode(value));\n        break;\n      }\n      case OutputType.ContractCreated: {\n        parts.push(new OutputContractCreatedCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_OUTPUT,\n          `Invalid transaction output type: ${type}.`\n        );\n      }\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Output, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const type = decoded as OutputType;\n    switch (type) {\n      case OutputType.Coin: {\n        [decoded, o] = new OutputCoinCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case OutputType.Contract: {\n        [decoded, o] = new OutputContractCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case OutputType.Change: {\n        [decoded, o] = new OutputChangeCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case OutputType.Variable: {\n        [decoded, o] = new OutputVariableCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case OutputType.ContractCreated: {\n        [decoded, o] = new OutputContractCreatedCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_OUTPUT,\n          `Invalid transaction output type: ${type}.`\n        );\n      }\n    }\n  }\n}\n","import { BigNumberCoder, Coder, NumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\n// Bitfield of used policy types.\nexport enum PolicyType {\n  GasPrice = 1,\n  WitnessLimit = 2,\n  Maturity = 4,\n  MaxFee = 8,\n}\n\nexport type Policy = PolicyGasPrice | PolicyWitnessLimit | PolicyMaturity | PolicyMaxFee;\n\nexport type PolicyGasPrice = {\n  type: PolicyType.GasPrice;\n  data: BN;\n};\n\nexport type PolicyWitnessLimit = {\n  type: PolicyType.WitnessLimit;\n  data: BN;\n};\n\nexport type PolicyMaturity = {\n  type: PolicyType.Maturity;\n  data: number;\n};\n\nexport type PolicyMaxFee = {\n  type: PolicyType.MaxFee;\n  data: BN;\n};\n\nexport const sortPolicies = (policies: Policy[]): Policy[] =>\n  policies.sort((a, b) => a.type - b.type);\n\nfunction validateDuplicatedPolicies(policies: Policy[]): void {\n  const seenTypes = new Set<PolicyType>();\n\n  policies.forEach((policy) => {\n    if (seenTypes.has(policy.type)) {\n      throw new FuelError(\n        ErrorCode.DUPLICATED_POLICY,\n        `Duplicate policy type found: ${PolicyType.MaxFee}`\n      );\n    }\n    seenTypes.add(policy.type);\n  });\n}\n\nexport class PoliciesCoder extends Coder<Policy[], Policy[]> {\n  constructor() {\n    super('Policies', 'array Policy', 0);\n  }\n\n  encode(policies: Policy[]): Uint8Array {\n    validateDuplicatedPolicies(policies);\n    const sortedPolicies = sortPolicies(policies);\n\n    const parts: Uint8Array[] = [];\n\n    sortedPolicies.forEach(({ data, type }) => {\n      switch (type) {\n        case PolicyType.MaxFee:\n        case PolicyType.GasPrice:\n        case PolicyType.WitnessLimit:\n          parts.push(new BigNumberCoder('u64').encode(data));\n          break;\n\n        case PolicyType.Maturity:\n          parts.push(new NumberCoder('u32').encode(data));\n          break;\n\n        default: {\n          throw new FuelError(ErrorCode.INVALID_POLICY_TYPE, `Invalid policy type: ${type}`);\n        }\n      }\n    });\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number, policyTypes: number): [Policy[], number] {\n    let o = offset;\n    const policies: Policy[] = [];\n\n    if (policyTypes & PolicyType.GasPrice) {\n      const [gasPrice, nextOffset] = new BigNumberCoder('u64').decode(data, o);\n      o = nextOffset;\n      policies.push({ type: PolicyType.GasPrice, data: gasPrice });\n    }\n\n    if (policyTypes & PolicyType.WitnessLimit) {\n      const [witnessLimit, nextOffset] = new BigNumberCoder('u64').decode(data, o);\n      o = nextOffset;\n      policies.push({ type: PolicyType.WitnessLimit, data: witnessLimit });\n    }\n\n    if (policyTypes & PolicyType.Maturity) {\n      const [maturity, nextOffset] = new NumberCoder('u32').decode(data, o);\n      o = nextOffset;\n      policies.push({ type: PolicyType.Maturity, data: maturity });\n    }\n\n    if (policyTypes & PolicyType.MaxFee) {\n      const [maxFee, nextOffset] = new BigNumberCoder('u64').decode(data, o);\n      o = nextOffset;\n      policies.push({ type: PolicyType.MaxFee, data: maxFee });\n    }\n\n    return [policies, o];\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport { Coder, BigNumberCoder, B256Coder, NumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { sha256 } from '@fuel-ts/hasher';\nimport type { BN } from '@fuel-ts/math';\nimport { arrayify, concat } from '@fuel-ts/utils';\n\nimport { ByteArrayCoder } from './byte-array';\n\nexport enum ReceiptType /* u8 */ {\n  Call = 0,\n  Return = 1,\n  ReturnData = 2,\n  Panic = 3,\n  Revert = 4,\n  Log = 5,\n  LogData = 6,\n  Transfer = 7,\n  TransferOut = 8,\n  ScriptResult = 9,\n  MessageOut = 10,\n  Mint = 11,\n  Burn = 12,\n}\n\nexport type ReceiptCall = {\n  type: ReceiptType.Call;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  from: string;\n  /** Contract ID of called contract (b256) */\n  to: string;\n  /** Amount of coins to forward, i.e. $rB (u64) */\n  amount: BN;\n  /** Asset ID of coins to forward, i.e. MEM[$rC, 32] (b256) */\n  assetId: string;\n  /** Gas to forward, i.e. $rD (u64) */\n  gas: BN;\n  /** First parameter (u64) */\n  param1: BN;\n  /** Second parameter (u64) */\n  param2: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptCallCoder extends Coder<ReceiptCall, ReceiptCall> {\n  constructor() {\n    super('ReceiptCall', 'struct ReceiptCall', 0);\n  }\n\n  encode(value: ReceiptCall): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.from));\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n    parts.push(new BigNumberCoder('u64').encode(value.gas));\n    parts.push(new BigNumberCoder('u64').encode(value.param1));\n    parts.push(new BigNumberCoder('u64').encode(value.param2));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptCall, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const from = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const gas = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const param1 = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const param2 = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Call,\n        from,\n        to,\n        amount,\n        assetId,\n        gas,\n        param1,\n        param2,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptReturn = {\n  type: ReceiptType.Return;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  val: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptReturnCoder extends Coder<ReceiptReturn, ReceiptReturn> {\n  constructor() {\n    super('ReceiptReturn', 'struct ReceiptReturn', 0);\n  }\n\n  encode(value: ReceiptReturn): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new BigNumberCoder('u64').encode(value.val));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptReturn, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Return,\n        id,\n        val,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptReturnData = {\n  type: ReceiptType.ReturnData;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  ptr: BN;\n  /** Value of register $rB (u64) */\n  len: BN;\n  /** Hash of MEM[$rA, $rB] (b256) */\n  digest: string;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptReturnDataCoder extends Coder<ReceiptReturnData, ReceiptReturnData> {\n  constructor() {\n    super('ReceiptReturnData', 'struct ReceiptReturnData', 0);\n  }\n\n  encode(value: ReceiptReturnData): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new BigNumberCoder('u64').encode(value.ptr));\n    parts.push(new BigNumberCoder('u64').encode(value.len));\n    parts.push(new B256Coder().encode(value.digest));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptReturnData, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const ptr = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const len = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const digest = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.ReturnData,\n        id,\n        ptr,\n        len,\n        digest,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptPanic = {\n  type: ReceiptType.Panic;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Panic reason (u64) */\n  reason: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n  /** Value of optional contract ID */\n  contractId: string;\n};\n\nexport class ReceiptPanicCoder extends Coder<ReceiptPanic, ReceiptPanic> {\n  constructor() {\n    super('ReceiptPanic', 'struct ReceiptPanic', 0);\n  }\n\n  encode(value: ReceiptPanic): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new BigNumberCoder('u64').encode(value.reason));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n    parts.push(new B256Coder().encode(value.contractId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptPanic, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const reason = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractId = decoded;\n\n    return [\n      {\n        type: ReceiptType.Panic,\n        id,\n        reason,\n        pc,\n        is,\n        contractId,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptRevert = {\n  type: ReceiptType.Revert;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  val: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptRevertCoder extends Coder<ReceiptRevert, ReceiptRevert> {\n  constructor() {\n    super('ReceiptRevert', 'struct ReceiptRevert', 0);\n  }\n\n  encode(value: ReceiptRevert): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new BigNumberCoder('u64').encode(value.val));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptRevert, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Revert,\n        id,\n        val,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptLog = {\n  type: ReceiptType.Log;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  val0: BN;\n  /** Value of register $rB (u64) */\n  val1: BN;\n  /** Value of register $rC (u64) */\n  val2: BN;\n  /** Value of register $rD (u64) */\n  val3: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptLogCoder extends Coder<ReceiptLog, ReceiptLog> {\n  constructor() {\n    super('ReceiptLog', 'struct ReceiptLog', 0);\n  }\n\n  encode(value: ReceiptLog): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new BigNumberCoder('u64').encode(value.val0));\n    parts.push(new BigNumberCoder('u64').encode(value.val1));\n    parts.push(new BigNumberCoder('u64').encode(value.val2));\n    parts.push(new BigNumberCoder('u64').encode(value.val3));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptLog, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val0 = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val1 = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val2 = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val3 = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Log,\n        id,\n        val0,\n        val1,\n        val2,\n        val3,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptLogData = {\n  type: ReceiptType.LogData;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  id: string;\n  /** Value of register $rA (u64) */\n  val0: BN;\n  /** Value of register $rB (u64) */\n  val1: BN;\n  /** Value of register $rC (u64) */\n  ptr: BN;\n  /** Value of register $rD (u64) */\n  len: BN;\n  /** Hash of MEM[$rC, $rD] (b256) */\n  digest: string;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptLogDataCoder extends Coder<ReceiptLogData, ReceiptLogData> {\n  constructor() {\n    super('ReceiptLogData', 'struct ReceiptLogData', 0);\n  }\n\n  encode(value: ReceiptLogData): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.id));\n    parts.push(new BigNumberCoder('u64').encode(value.val0));\n    parts.push(new BigNumberCoder('u64').encode(value.val1));\n    parts.push(new BigNumberCoder('u64').encode(value.ptr));\n    parts.push(new BigNumberCoder('u64').encode(value.len));\n    parts.push(new B256Coder().encode(value.digest));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptLogData, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const id = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val0 = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val1 = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const ptr = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const len = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const digest = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.LogData,\n        id,\n        val0,\n        val1,\n        ptr,\n        len,\n        digest,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptTransfer = {\n  type: ReceiptType.Transfer;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  from: string;\n  /** Contract ID of contract to transfer coins to (b256) */\n  to: string;\n  /** Amount of coins transferred (u64) */\n  amount: BN;\n  /** Asset ID of coins transferred (b256) */\n  assetId: string;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptTransferCoder extends Coder<ReceiptTransfer, ReceiptTransfer> {\n  constructor() {\n    super('ReceiptTransfer', 'struct ReceiptTransfer', 0);\n  }\n\n  encode(value: ReceiptTransfer): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.from));\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptTransfer, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const from = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.Transfer,\n        from,\n        to,\n        amount,\n        assetId,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptTransferOut = {\n  type: ReceiptType.TransferOut;\n  /** Contract ID of current context if in an internal context, zero otherwise (b256) */\n  from: string;\n  /** Address to transfer coins to (b256) */\n  to: string;\n  /** Amount of coins transferred (u64) */\n  amount: BN;\n  /** Asset ID of coins transferred (b256) */\n  assetId: string;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptTransferOutCoder extends Coder<ReceiptTransferOut, ReceiptTransferOut> {\n  constructor() {\n    super('ReceiptTransferOut', 'struct ReceiptTransferOut', 0);\n  }\n\n  encode(value: ReceiptTransferOut): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.from));\n    parts.push(new B256Coder().encode(value.to));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new B256Coder().encode(value.assetId));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptTransferOut, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const from = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const to = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const assetId = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    return [\n      {\n        type: ReceiptType.TransferOut,\n        from,\n        to,\n        amount,\n        assetId,\n        pc,\n        is,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptScriptResult = {\n  type: ReceiptType.ScriptResult;\n  /** Result variant with embedded `PanicReason` in first 8 bits and `instr` (u64) */\n  result: BN;\n  /** Gas consumed by the script (u64) */\n  gasUsed: BN;\n};\n\nexport class ReceiptScriptResultCoder extends Coder<ReceiptScriptResult, ReceiptScriptResult> {\n  constructor() {\n    super('ReceiptScriptResult', 'struct ReceiptScriptResult', 0);\n  }\n\n  encode(value: ReceiptScriptResult): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new BigNumberCoder('u64').encode(value.result));\n    parts.push(new BigNumberCoder('u64').encode(value.gasUsed));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptScriptResult, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const result = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const gasUsed = decoded;\n\n    return [\n      {\n        type: ReceiptType.ScriptResult,\n        result,\n        gasUsed,\n      },\n      o,\n    ];\n  }\n}\n\nexport type ReceiptMessageOut = {\n  type: ReceiptType.MessageOut;\n  /** Hexadecimal string representation of the 256-bit (32-byte) message ID */\n  messageId: string;\n  /** Hexadecimal string representation of the 256-bit (32-byte) address of the message sender: MEM[$fp, 32] */\n  sender: string;\n  /** Hexadecimal string representation of the 256-bit (32-byte) address of the message recipient: MEM[$rA, 32] */\n  recipient: string;\n  /** Hexadecimal string representation of a 64-bit unsigned integer; value of register $rD */\n  amount: BN;\n  /** Hexadecimal string representation of the 256-bit (32-byte) message nonce */\n  nonce: string;\n  /** Hexadecimal string representation of 256-bit (32-byte), hash of MEM[$rA + 32, $rB] */\n  digest: string;\n  /** Hexadecimal string representation of the value of the memory range MEM[$rA + 32, $rB] */\n  data: Uint8Array;\n};\n\nexport class ReceiptMessageOutCoder extends Coder<ReceiptMessageOut, ReceiptMessageOut> {\n  constructor() {\n    super('ReceiptMessageOut', 'struct ReceiptMessageOut', 0);\n  }\n\n  static getMessageId(\n    value: Pick<ReceiptMessageOut, 'sender' | 'recipient' | 'nonce' | 'amount' | 'data'>\n  ): string {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new ByteArrayCoder(32).encode(value.sender));\n    parts.push(new ByteArrayCoder(32).encode(value.recipient));\n    parts.push(new ByteArrayCoder(32).encode(value.nonce));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(arrayify(value.data || '0x'));\n\n    return sha256(concat(parts));\n  }\n\n  encode(value: Omit<ReceiptMessageOut, 'messageId'>): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.sender));\n    parts.push(new B256Coder().encode(value.recipient));\n    parts.push(new BigNumberCoder('u64').encode(value.amount));\n    parts.push(new B256Coder().encode(value.nonce));\n    parts.push(new NumberCoder('u16').encode(value.data.length));\n    parts.push(new B256Coder().encode(value.digest));\n    parts.push(new ByteArrayCoder(value.data.length).encode(value.data));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptMessageOut, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const sender = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const recipient = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const amount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const nonce = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const len = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const digest = decoded;\n    [decoded, o] = new ByteArrayCoder(len).decode(data, o);\n    const messageData = arrayify(decoded);\n\n    const receiptMessageOut: ReceiptMessageOut = {\n      type: ReceiptType.MessageOut,\n      messageId: '',\n      sender,\n      recipient,\n      amount,\n      nonce,\n      digest,\n      data: messageData,\n    };\n    receiptMessageOut.messageId = ReceiptMessageOutCoder.getMessageId(receiptMessageOut);\n\n    return [receiptMessageOut, o];\n  }\n}\n\nexport type ReceiptMint = {\n  type: ReceiptType.Mint;\n\n  subId: string;\n\n  contractId: string;\n\n  assetId: string;\n\n  val: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport const getAssetId = (contractId: string, subId: string): string => {\n  const contractIdBytes = arrayify(contractId);\n  const subIdBytes = arrayify(subId);\n\n  return sha256(concat([contractIdBytes, subIdBytes]));\n};\n\nexport class ReceiptMintCoder extends Coder<ReceiptMint, ReceiptMint> {\n  constructor() {\n    super('ReceiptMint', 'struct ReceiptMint', 0);\n  }\n\n  static getAssetId(contractId: string, subId: string): string {\n    return getAssetId(contractId, subId);\n  }\n\n  encode(value: ReceiptMint): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.subId));\n    parts.push(new B256Coder().encode(value.contractId));\n    parts.push(new BigNumberCoder('u64').encode(value.val));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptMint, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const subId = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractId = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    const assetId = ReceiptMintCoder.getAssetId(contractId, subId);\n\n    const receiptMint: ReceiptMint = {\n      type: ReceiptType.Mint,\n      subId,\n      contractId,\n      val,\n      pc,\n      is,\n      assetId,\n    };\n\n    return [receiptMint, o];\n  }\n}\n\nexport type ReceiptBurn = {\n  type: ReceiptType.Burn;\n\n  subId: string;\n\n  contractId: string;\n\n  assetId: string;\n\n  val: BN;\n  /** Value of register $pc (u64) */\n  pc: BN;\n  /** Value of register $is (u64) */\n  is: BN;\n};\n\nexport class ReceiptBurnCoder extends Coder<ReceiptBurn, ReceiptBurn> {\n  constructor() {\n    super('ReceiptBurn', 'struct ReceiptBurn', 0);\n  }\n\n  static getAssetId(contractId: string, subId: string): string {\n    return getAssetId(contractId, subId);\n  }\n\n  encode(value: ReceiptBurn): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new B256Coder().encode(value.subId));\n    parts.push(new B256Coder().encode(value.contractId));\n    parts.push(new BigNumberCoder('u64').encode(value.val));\n    parts.push(new BigNumberCoder('u64').encode(value.pc));\n    parts.push(new BigNumberCoder('u64').encode(value.is));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [ReceiptBurn, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new B256Coder().decode(data, o);\n    const subId = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const contractId = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const val = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const pc = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const is = decoded;\n\n    const assetId = ReceiptMintCoder.getAssetId(contractId, subId);\n\n    const receiptBurn: ReceiptBurn = {\n      type: ReceiptType.Burn,\n      subId,\n      contractId,\n      val,\n      pc,\n      is,\n      assetId,\n    };\n\n    return [receiptBurn, o];\n  }\n}\n\nexport type Receipt =\n  | ReceiptCall\n  | ReceiptReturn\n  | ReceiptReturnData\n  | ReceiptPanic\n  | ReceiptRevert\n  | ReceiptLog\n  | ReceiptLogData\n  | ReceiptTransfer\n  | ReceiptTransferOut\n  | ReceiptScriptResult\n  | ReceiptMessageOut\n  | ReceiptMint\n  | ReceiptBurn;\n\nexport class ReceiptCoder extends Coder<Receipt, Receipt> {\n  constructor() {\n    super('Receipt', 'struct Receipt', 0);\n  }\n\n  encode(value: Receipt): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.type));\n\n    const { type } = value;\n\n    switch (value.type) {\n      case ReceiptType.Call: {\n        parts.push(new ReceiptCallCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Return: {\n        parts.push(new ReceiptReturnCoder().encode(value));\n        break;\n      }\n      case ReceiptType.ReturnData: {\n        parts.push(new ReceiptReturnDataCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Panic: {\n        parts.push(new ReceiptPanicCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Revert: {\n        parts.push(new ReceiptRevertCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Log: {\n        parts.push(new ReceiptLogCoder().encode(value));\n        break;\n      }\n      case ReceiptType.LogData: {\n        parts.push(new ReceiptLogDataCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Transfer: {\n        parts.push(new ReceiptTransferCoder().encode(value));\n        break;\n      }\n      case ReceiptType.TransferOut: {\n        parts.push(new ReceiptTransferOutCoder().encode(value));\n        break;\n      }\n      case ReceiptType.ScriptResult: {\n        parts.push(new ReceiptScriptResultCoder().encode(value));\n        break;\n      }\n      case ReceiptType.MessageOut: {\n        parts.push(new ReceiptMessageOutCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Mint: {\n        parts.push(new ReceiptMintCoder().encode(value));\n        break;\n      }\n      case ReceiptType.Burn: {\n        parts.push(new ReceiptBurnCoder().encode(value));\n        break;\n      }\n      default: {\n        throw new FuelError(ErrorCode.INVALID_RECEIPT_TYPE, `Invalid receipt type: ${type}`);\n      }\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Receipt, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const type = decoded as ReceiptType;\n    switch (type) {\n      case ReceiptType.Call: {\n        [decoded, o] = new ReceiptCallCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Return: {\n        [decoded, o] = new ReceiptReturnCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.ReturnData: {\n        [decoded, o] = new ReceiptReturnDataCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Panic: {\n        [decoded, o] = new ReceiptPanicCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Revert: {\n        [decoded, o] = new ReceiptRevertCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Log: {\n        [decoded, o] = new ReceiptLogCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.LogData: {\n        [decoded, o] = new ReceiptLogDataCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Transfer: {\n        [decoded, o] = new ReceiptTransferCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.TransferOut: {\n        [decoded, o] = new ReceiptTransferOutCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.ScriptResult: {\n        [decoded, o] = new ReceiptScriptResultCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.MessageOut: {\n        [decoded, o] = new ReceiptMessageOutCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Mint: {\n        [decoded, o] = new ReceiptMintCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case ReceiptType.Burn: {\n        [decoded, o] = new ReceiptBurnCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new FuelError(ErrorCode.INVALID_RECEIPT_TYPE, `Invalid receipt type: ${type}`);\n      }\n    }\n  }\n}\n","import { B256Coder, StructCoder } from '@fuel-ts/abi-coder';\n\nexport type StorageSlot = {\n  /** Key (b256) */\n  key: string;\n  /** Value (b256) */\n  value: string;\n};\n\nexport class StorageSlotCoder extends StructCoder<{\n  key: B256Coder;\n  value: B256Coder;\n}> {\n  constructor() {\n    super('StorageSlot', {\n      key: new B256Coder(),\n      value: new B256Coder(),\n    });\n  }\n}\n","/* eslint-disable max-classes-per-file */\n\nimport { Coder, ArrayCoder, B256Coder, NumberCoder, BigNumberCoder } from '@fuel-ts/abi-coder';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { type BN } from '@fuel-ts/math';\nimport { concat } from '@fuel-ts/utils';\n\nimport { ByteArrayCoder } from './byte-array';\nimport type { Input, InputContract } from './input';\nimport { InputCoder, InputContractCoder } from './input';\nimport type { Output, OutputContract } from './output';\nimport { OutputCoder, OutputContractCoder } from './output';\nimport type { Policy } from './policy';\nimport { PoliciesCoder } from './policy';\nimport { StorageSlotCoder } from './storage-slot';\nimport type { StorageSlot } from './storage-slot';\nimport type { TxPointer } from './tx-pointer';\nimport { TxPointerCoder } from './tx-pointer';\nimport type { Witness } from './witness';\nimport { WitnessCoder } from './witness';\n\nexport enum TransactionType /* u8 */ {\n  Script = 0,\n  Create = 1,\n  Mint = 2,\n}\n\nexport type TransactionScript = {\n  type: TransactionType.Script;\n\n  /** Gas limit for transaction (u64) */\n  scriptGasLimit: BN;\n\n  /** Script length, in instructions (u16) */\n  scriptLength: number;\n\n  /** Length of script input data, in bytes (u16) */\n  scriptDataLength: number;\n\n  /** Bitfield of used policy types (u32) */\n  policyTypes: number;\n\n  /** Number of inputs (u8) */\n  inputsCount: number;\n\n  /** Number of outputs (u8) */\n  outputsCount: number;\n\n  /** Number of witnesses (u8) */\n  witnessesCount: number;\n\n  /** Merkle root of receipts (b256) */\n  receiptsRoot: string;\n\n  /** Script to execute (byte[]) */\n  script: string;\n\n  /** Script input data (parameters) (byte[]) */\n  scriptData: string;\n\n  /** List of inputs (Input[]) */\n  inputs: Input[];\n\n  /** List of policies, sorted by PolicyType. */\n  policies: Policy[];\n\n  /** List of outputs (Output[]) */\n  outputs: Output[];\n\n  /** List of witnesses (Witness[]) */\n  witnesses: Witness[];\n};\n\nexport class TransactionScriptCoder extends Coder<TransactionScript, TransactionScript> {\n  constructor() {\n    super('TransactionScript', 'struct TransactionScript', 0);\n  }\n\n  encode(value: TransactionScript): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new BigNumberCoder('u64').encode(value.scriptGasLimit));\n    parts.push(new NumberCoder('u32').encode(value.scriptLength));\n    parts.push(new NumberCoder('u32').encode(value.scriptDataLength));\n    parts.push(new NumberCoder('u32').encode(value.policyTypes));\n    parts.push(new NumberCoder('u8').encode(value.inputsCount));\n    parts.push(new NumberCoder('u8').encode(value.outputsCount));\n    parts.push(new NumberCoder('u8').encode(value.witnessesCount));\n    parts.push(new B256Coder().encode(value.receiptsRoot));\n    parts.push(new ByteArrayCoder(value.scriptLength).encode(value.script));\n    parts.push(new ByteArrayCoder(value.scriptDataLength).encode(value.scriptData));\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(new ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [TransactionScript, number] {\n    let decoded;\n    let o = offset;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const scriptGasLimit = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const scriptLength = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const scriptDataLength = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const receiptsRoot = decoded;\n    [decoded, o] = new ByteArrayCoder(scriptLength).decode(data, o);\n    const script = decoded;\n    [decoded, o] = new ByteArrayCoder(scriptDataLength).decode(data, o);\n    const scriptData = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n\n    return [\n      {\n        type: TransactionType.Script,\n        scriptGasLimit,\n        scriptLength,\n        scriptDataLength,\n        policyTypes,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        receiptsRoot,\n        script,\n        scriptData,\n        policies,\n        inputs,\n        outputs,\n        witnesses,\n      },\n      o,\n    ];\n  }\n}\n\nexport type TransactionCreate = {\n  type: TransactionType.Create;\n\n  /** Contract bytecode length, in instructions (u16) */\n  bytecodeLength: number;\n\n  /** Witness index of contract bytecode to create (u8) */\n  bytecodeWitnessIndex: number;\n\n  /** Bitfield of used policy types (u32) */\n  policyTypes: number;\n\n  /** Number of storage slots to initialize (u16) */\n  storageSlotsCount: number;\n\n  /** Number of inputs (u8) */\n  inputsCount: number;\n\n  /** Number of outputs (u8) */\n  outputsCount: number;\n\n  /** Number of witnesses (u8) */\n  witnessesCount: number;\n\n  /** Salt (b256) */\n  salt: string;\n\n  /** List of policies. */\n  policies: Policy[];\n\n  /** List of inputs (StorageSlot[]) */\n  storageSlots: StorageSlot[];\n\n  /** List of inputs (Input[]) */\n  inputs: Input[];\n\n  /** List of outputs (Output[]) */\n  outputs: Output[];\n\n  /** List of witnesses (Witness[]) */\n  witnesses: Witness[];\n};\n\nexport class TransactionCreateCoder extends Coder<TransactionCreate, TransactionCreate> {\n  constructor() {\n    super('TransactionCreate', 'struct TransactionCreate', 0);\n  }\n\n  encode(value: TransactionCreate): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u32').encode(value.bytecodeLength));\n    parts.push(new NumberCoder('u8').encode(value.bytecodeWitnessIndex));\n    parts.push(new NumberCoder('u32').encode(value.policyTypes));\n    parts.push(new NumberCoder('u16').encode(value.storageSlotsCount));\n    parts.push(new NumberCoder('u8').encode(value.inputsCount));\n    parts.push(new NumberCoder('u8').encode(value.outputsCount));\n    parts.push(new NumberCoder('u8').encode(value.witnessesCount));\n    parts.push(new B256Coder().encode(value.salt));\n    parts.push(new PoliciesCoder().encode(value.policies));\n    parts.push(\n      new ArrayCoder(new StorageSlotCoder(), value.storageSlotsCount).encode(value.storageSlots)\n    );\n    parts.push(new ArrayCoder(new InputCoder(), value.inputsCount).encode(value.inputs));\n    parts.push(new ArrayCoder(new OutputCoder(), value.outputsCount).encode(value.outputs));\n    parts.push(new ArrayCoder(new WitnessCoder(), value.witnessesCount).encode(value.witnesses));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [TransactionCreate, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const bytecodeLength = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const bytecodeWitnessIndex = decoded;\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const policyTypes = decoded;\n    [decoded, o] = new NumberCoder('u16').decode(data, o);\n    const storageSlotsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const inputsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const outputsCount = decoded;\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const witnessesCount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const salt = decoded;\n    [decoded, o] = new PoliciesCoder().decode(data, o, policyTypes);\n    const policies = decoded;\n    [decoded, o] = new ArrayCoder(new StorageSlotCoder(), storageSlotsCount).decode(data, o);\n    const storageSlots = decoded;\n    [decoded, o] = new ArrayCoder(new InputCoder(), inputsCount).decode(data, o);\n    const inputs = decoded;\n    [decoded, o] = new ArrayCoder(new OutputCoder(), outputsCount).decode(data, o);\n    const outputs = decoded;\n    [decoded, o] = new ArrayCoder(new WitnessCoder(), witnessesCount).decode(data, o);\n    const witnesses = decoded;\n\n    return [\n      {\n        type: TransactionType.Create,\n        bytecodeLength,\n        bytecodeWitnessIndex,\n        policyTypes,\n        storageSlotsCount,\n        inputsCount,\n        outputsCount,\n        witnessesCount,\n        salt,\n        policies,\n        storageSlots,\n        inputs,\n        outputs,\n        witnesses,\n      },\n      o,\n    ];\n  }\n}\n\nexport type TransactionMint = {\n  type: TransactionType.Mint;\n\n  /** The location of the Mint transaction in the block. */\n  txPointer: TxPointer;\n\n  /** The contract utxo that assets are minted to. */\n  inputContract: InputContract;\n\n  /** The contract utxo that assets are being minted to. */\n  outputContract: OutputContract;\n\n  /** The amount of funds minted. */\n  mintAmount: BN;\n\n  /** The asset ID corresponding to the minted amount. */\n  mintAssetId: string;\n};\n\nexport class TransactionMintCoder extends Coder<TransactionMint, TransactionMint> {\n  constructor() {\n    super('TransactionMint', 'struct TransactionMint', 0);\n  }\n\n  encode(value: TransactionMint): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new TxPointerCoder().encode(value.txPointer));\n    parts.push(new InputContractCoder().encode(value.inputContract));\n    parts.push(new OutputContractCoder().encode(value.outputContract));\n    parts.push(new BigNumberCoder('u64').encode(value.mintAmount));\n    parts.push(new B256Coder().encode(value.mintAssetId));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [TransactionMint, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new TxPointerCoder().decode(data, o);\n    const txPointer = decoded;\n    [decoded, o] = new InputContractCoder().decode(data, o);\n    const inputContract = decoded;\n    [decoded, o] = new OutputContractCoder().decode(data, o);\n    const outputContract = decoded;\n    [decoded, o] = new BigNumberCoder('u64').decode(data, o);\n    const mintAmount = decoded;\n    [decoded, o] = new B256Coder().decode(data, o);\n    const mintAssetId = decoded;\n\n    return [\n      {\n        type: TransactionType.Mint,\n        txPointer,\n        inputContract,\n        outputContract,\n        mintAmount,\n        mintAssetId,\n      },\n      o,\n    ];\n  }\n}\ntype PossibleTransactions = TransactionScript | TransactionCreate | TransactionMint;\nexport type Transaction<TTransactionType = void> = TTransactionType extends TransactionType\n  ? Extract<PossibleTransactions, { type: TTransactionType }>\n  : Partial<Omit<TransactionScript, 'type'>> &\n      Partial<Omit<TransactionCreate, 'type'>> &\n      Partial<Omit<TransactionMint, 'type'>> & {\n        type: TransactionType;\n      };\n\nexport class TransactionCoder extends Coder<Transaction, Transaction> {\n  constructor() {\n    super('Transaction', 'struct Transaction', 0);\n  }\n\n  encode(value: Transaction): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u8').encode(value.type));\n\n    const { type } = value;\n\n    switch (value.type) {\n      case TransactionType.Script: {\n        parts.push(\n          new TransactionScriptCoder().encode(value as Transaction<TransactionType.Script>)\n        );\n        break;\n      }\n      case TransactionType.Create: {\n        parts.push(\n          new TransactionCreateCoder().encode(value as Transaction<TransactionType.Create>)\n        );\n        break;\n      }\n      case TransactionType.Mint: {\n        parts.push(new TransactionMintCoder().encode(value as Transaction<TransactionType.Mint>));\n        break;\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_TYPE,\n          `Invalid transaction type: ${type}`\n        );\n      }\n    }\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Transaction, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u8').decode(data, o);\n    const type = decoded as TransactionType;\n\n    switch (type) {\n      case TransactionType.Script: {\n        [decoded, o] = new TransactionScriptCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case TransactionType.Create: {\n        [decoded, o] = new TransactionCreateCoder().decode(data, o);\n        return [decoded, o];\n      }\n      case TransactionType.Mint: {\n        [decoded, o] = new TransactionMintCoder().decode(data, o);\n        return [decoded, o];\n      }\n      default: {\n        throw new FuelError(\n          ErrorCode.INVALID_TRANSACTION_TYPE,\n          `Invalid transaction type: ${type}`\n        );\n      }\n    }\n  }\n}\n","import { Coder, NumberCoder } from '@fuel-ts/abi-coder';\nimport { concat } from '@fuel-ts/utils';\n\nimport { ByteArrayCoder } from './byte-array';\n\nexport type Witness = {\n  /** Length of witness data byte array */\n  dataLength: number;\n  /** Witness data (byte[]) */\n  data: string;\n};\n\nexport class WitnessCoder extends Coder<Witness, Witness> {\n  constructor() {\n    super(\n      'Witness',\n      // Types of dynamic length are not supported in the ABI\n      'unknown',\n      0\n    );\n  }\n\n  encode(value: Witness): Uint8Array {\n    const parts: Uint8Array[] = [];\n\n    parts.push(new NumberCoder('u32').encode(value.dataLength));\n    parts.push(new ByteArrayCoder(value.dataLength).encode(value.data));\n\n    return concat(parts);\n  }\n\n  decode(data: Uint8Array, offset: number): [Witness, number] {\n    let decoded;\n    let o = offset;\n\n    [decoded, o] = new NumberCoder('u32').decode(data, o);\n    const dataLength = decoded;\n    [decoded, o] = new ByteArrayCoder(dataLength).decode(data, o);\n    const witnessData = decoded;\n\n    return [\n      {\n        dataLength,\n        data: witnessData,\n      },\n      o,\n    ];\n  }\n}\n","import { B256Coder, NumberCoder, StructCoder } from '@fuel-ts/abi-coder';\n\nexport type UtxoId = {\n  /** Transaction ID (b256) */\n  transactionId: string;\n  /** Output index (u8) */\n  outputIndex: number;\n};\n\nexport class UtxoIdCoder extends StructCoder<{\n  transactionId: B256Coder;\n  outputIndex: NumberCoder;\n}> {\n  constructor() {\n    super('UtxoId', {\n      transactionId: new B256Coder(),\n      outputIndex: new NumberCoder('u8'),\n    });\n  }\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  let res = new Uint8Array(sum);\n  let pad = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","import { Address } from '@fuel-ts/address';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAccount, AbstractAddress, BytesLike } from '@fuel-ts/interfaces';\nimport { BN, bn, max } from '@fuel-ts/math';\nimport type { Transaction } from '@fuel-ts/transactions';\nimport {\n  InputType,\n  TransactionType,\n  InputMessageCoder,\n  TransactionCoder,\n} from '@fuel-ts/transactions';\nimport { arrayify, hexlify, DateTime } from '@fuel-ts/utils';\nimport { checkFuelCoreVersionCompatibility } from '@fuel-ts/versions';\nimport { equalBytes } from '@noble/curves/abstract/utils';\nimport { Network } from 'ethers';\nimport type { DocumentNode } from 'graphql';\nimport { GraphQLClient } from 'graphql-request';\nimport { clone } from 'ramda';\n\nimport type { Predicate } from '../predicate';\n\nimport { getSdk as getOperationsSdk } from './__generated__/operations';\nimport type {\n  GqlChainInfoFragmentFragment,\n  GqlGasCosts,\n  GqlGetBlocksQueryVariables,\n  GqlPeerInfo,\n} from './__generated__/operations';\nimport type { Coin } from './coin';\nimport type { CoinQuantity, CoinQuantityLike } from './coin-quantity';\nimport { coinQuantityfy } from './coin-quantity';\nimport { FuelGraphqlSubscriber } from './fuel-graphql-subscriber';\nimport { MemoryCache } from './memory-cache';\nimport type { Message, MessageCoin, MessageProof, MessageStatus } from './message';\nimport type { ExcludeResourcesOption, Resource } from './resource';\nimport type {\n  TransactionRequestLike,\n  TransactionRequest,\n  TransactionRequestInput,\n  CoinTransactionRequestInput,\n  ScriptTransactionRequest,\n  JsonAbisFromAllCalls,\n} from './transaction-request';\nimport { transactionRequestify } from './transaction-request';\nimport type { TransactionResultReceipt } from './transaction-response';\nimport { TransactionResponse } from './transaction-response';\nimport { processGqlReceipt } from './transaction-summary/receipt';\nimport {\n  calculatePriceWithFactor,\n  getGasUsedFromReceipts,\n  getReceiptsWithMissingData,\n} from './utils';\nimport type { RetryOptions } from './utils/auto-retry-fetch';\nimport { autoRetryFetch } from './utils/auto-retry-fetch';\nimport { mergeQuantities } from './utils/merge-quantities';\n\nconst MAX_RETRIES = 10;\n\nexport type CallResult = {\n  receipts: TransactionResultReceipt[];\n};\n\nexport type EstimateTxDependenciesReturns = CallResult & {\n  outputVariables: number;\n  missingContractIds: string[];\n};\n\n/**\n * A Fuel block\n */\nexport type Block = {\n  id: string;\n  height: BN;\n  time: string;\n  transactionIds: string[];\n};\n\n/**\n * Deployed Contract bytecode and contract id\n */\nexport type ContractResult = {\n  id: string;\n  bytecode: string;\n};\n\ntype ConsensusParameters = {\n  contractMaxSize: BN;\n  maxInputs: BN;\n  maxOutputs: BN;\n  maxWitnesses: BN;\n  maxGasPerTx: BN;\n  maxScriptLength: BN;\n  maxScriptDataLength: BN;\n  maxStorageSlots: BN;\n  maxPredicateLength: BN;\n  maxPredicateDataLength: BN;\n  maxGasPerPredicate: BN;\n  gasPriceFactor: BN;\n  gasPerByte: BN;\n  maxMessageDataLength: BN;\n  chainId: BN;\n  gasCosts: GqlGasCosts;\n};\n\n/**\n * Chain information\n */\nexport type ChainInfo = {\n  name: string;\n  baseChainHeight: BN;\n  consensusParameters: ConsensusParameters;\n  gasCosts: GqlGasCosts;\n  latestBlock: {\n    id: string;\n    height: BN;\n    time: string;\n    transactions: Array<{ id: string }>;\n  };\n};\n\n/**\n * Node information\n */\nexport type NodeInfo = {\n  utxoValidation: boolean;\n  vmBacktrace: boolean;\n  minGasPrice: BN;\n  maxTx: BN;\n  maxDepth: BN;\n  nodeVersion: string;\n  peers: GqlPeerInfo[];\n};\n\nexport type NodeInfoAndConsensusParameters = {\n  minGasPrice: BN;\n  nodeVersion: string;\n  gasPerByte: BN;\n  gasPriceFactor: BN;\n  maxGasPerTx: BN;\n};\n\n// #region cost-estimation-1\nexport type TransactionCost = {\n  requiredQuantities: CoinQuantity[];\n  receipts: TransactionResultReceipt[];\n  minGasPrice: BN;\n  gasPrice: BN;\n  minGas: BN;\n  maxGas: BN;\n  gasUsed: BN;\n  minFee: BN;\n  maxFee: BN;\n  usedFee: BN;\n  outputVariables: number;\n  missingContractIds: string[];\n  estimatedInputs: TransactionRequest['inputs'];\n};\n// #endregion cost-estimation-1\n\nconst processGqlChain = (chain: GqlChainInfoFragmentFragment): ChainInfo => {\n  const { name, daHeight, consensusParameters, latestBlock } = chain;\n\n  const { contractParams, feeParams, predicateParams, scriptParams, txParams, gasCosts } =\n    consensusParameters;\n\n  return {\n    name,\n    baseChainHeight: bn(daHeight),\n    consensusParameters: {\n      contractMaxSize: bn(contractParams.contractMaxSize),\n      maxInputs: bn(txParams.maxInputs),\n      maxOutputs: bn(txParams.maxOutputs),\n      maxWitnesses: bn(txParams.maxWitnesses),\n      maxGasPerTx: bn(txParams.maxGasPerTx),\n      maxScriptLength: bn(scriptParams.maxScriptLength),\n      maxScriptDataLength: bn(scriptParams.maxScriptDataLength),\n      maxStorageSlots: bn(contractParams.maxStorageSlots),\n      maxPredicateLength: bn(predicateParams.maxPredicateLength),\n      maxPredicateDataLength: bn(predicateParams.maxPredicateDataLength),\n      maxGasPerPredicate: bn(predicateParams.maxGasPerPredicate),\n      gasPriceFactor: bn(feeParams.gasPriceFactor),\n      gasPerByte: bn(feeParams.gasPerByte),\n      maxMessageDataLength: bn(predicateParams.maxMessageDataLength),\n      chainId: bn(consensusParameters.chainId),\n      gasCosts,\n    },\n    gasCosts,\n    latestBlock: {\n      id: latestBlock.id,\n      height: bn(latestBlock.header.height),\n      time: latestBlock.header.time,\n      transactions: latestBlock.transactions.map((i) => ({\n        id: i.id,\n      })),\n    },\n  };\n};\n\n/**\n * @hidden\n *\n * Cursor pagination arguments\n *\n * https://relay.dev/graphql/connections.htm#sec-Arguments\n */\nexport type CursorPaginationArgs = {\n  /** Forward pagination limit */\n  first?: number | null;\n  /** Forward pagination cursor */\n  after?: string | null;\n  /** Backward pagination limit  */\n  last?: number | null;\n  /** Backward pagination cursor */\n  before?: string | null;\n};\n\n/*\n * Provider initialization options\n */\nexport type ProviderOptions = {\n  /**\n   * Custom fetch function to use for making requests.\n   */\n  fetch?: (\n    url: string,\n    requestInit?: RequestInit,\n    providerOptions?: Omit<ProviderOptions, 'fetch'>\n  ) => Promise<Response>;\n  /**\n   * Timeout [ms] after which every request will be aborted.\n   */\n  timeout?: number;\n  /**\n   * Cache UTXOs for the given time [ms].\n   */\n  cacheUtxo?: number;\n  /**\n   * Retry options to use when fetching data from the node.\n   */\n  retryOptions?: RetryOptions;\n  /**\n   * Middleware to modify the request before it is sent.\n   * This can be used to add headers, modify the body, etc.\n   */\n  requestMiddleware?: (request: RequestInit) => RequestInit | Promise<RequestInit>;\n};\n\n/**\n * UTXO Validation Param\n */\nexport type UTXOValidationParams = {\n  utxoValidation?: boolean;\n};\n\n/**\n * Transaction estimation Param\n */\nexport type EstimateTransactionParams = {\n  estimateTxDependencies?: boolean;\n};\n\nexport type EstimatePredicateParams = {\n  estimatePredicates?: boolean;\n};\n\nexport type TransactionCostParams = EstimateTransactionParams &\n  EstimatePredicateParams & {\n    resourcesOwner?: AbstractAccount;\n    signatureCallback?: (request: ScriptTransactionRequest) => Promise<ScriptTransactionRequest>;\n  };\n\n/**\n * Provider Call transaction params\n */\nexport type ProviderCallParams = UTXOValidationParams & EstimateTransactionParams;\n\n/**\n * Provider Send transaction params\n */\nexport type ProviderSendTxParams = EstimateTransactionParams & {\n  /**\n   * By default, the promise will resolve immediately after the transaction is submitted.\n   *\n   * If set to true, the promise will resolve only when the transaction changes status\n   * from `SubmittedStatus` to one of `SuccessStatus`, `FailureStatus` or `SqueezedOutStatus`.\n   *\n   */\n  awaitExecution?: boolean;\n};\n\n/**\n * URL - Consensus Params mapping.\n */\ntype ChainInfoCache = Record<string, ChainInfo>;\n\n/**\n * URL - Node Info mapping.\n */\ntype NodeInfoCache = Record<string, NodeInfo>;\n\n/**\n * A provider for connecting to a node\n */\nexport default class Provider {\n  operations: ReturnType<typeof getOperationsSdk>;\n  cache?: MemoryCache;\n\n  static clearChainAndNodeCaches() {\n    Provider.nodeInfoCache = {};\n    Provider.chainInfoCache = {};\n  }\n\n  private static chainInfoCache: ChainInfoCache = {};\n  private static nodeInfoCache: NodeInfoCache = {};\n\n  options: ProviderOptions = {\n    timeout: undefined,\n    cacheUtxo: undefined,\n    fetch: undefined,\n    retryOptions: undefined,\n  };\n\n  private static getFetchFn(options: ProviderOptions): NonNullable<ProviderOptions['fetch']> {\n    const { retryOptions, timeout } = options;\n\n    return autoRetryFetch(async (...args) => {\n      const url = args[0];\n      const request = args[1];\n      const signal = timeout ? AbortSignal.timeout(timeout) : undefined;\n\n      let fullRequest: RequestInit = { ...request, signal };\n\n      if (options.requestMiddleware) {\n        fullRequest = await options.requestMiddleware(fullRequest);\n      }\n\n      return options.fetch ? options.fetch(url, fullRequest, options) : fetch(url, fullRequest);\n    }, retryOptions);\n  }\n\n  /**\n   * Constructor to initialize a Provider.\n   *\n   * @param url - GraphQL endpoint of the Fuel node\n   * @param chainInfo - Chain info of the Fuel node\n   * @param options - Additional options for the provider\n   * @hidden\n   */\n  protected constructor(\n    /** GraphQL endpoint of the Fuel node */\n    public url: string,\n    options: ProviderOptions = {}\n  ) {\n    this.options = { ...this.options, ...options };\n    this.url = url;\n\n    this.operations = this.createOperations();\n    this.cache = options.cacheUtxo ? new MemoryCache(options.cacheUtxo) : undefined;\n  }\n\n  /**\n   * Creates a new instance of the Provider class. This is the recommended way to initialize a Provider.\n   * @param url - GraphQL endpoint of the Fuel node\n   * @param options - Additional options for the provider\n   */\n  static async create(url: string, options: ProviderOptions = {}) {\n    const provider = new Provider(url, options);\n    await provider.fetchChainAndNodeInfo();\n    return provider;\n  }\n\n  /**\n   * Returns the cached chainInfo for the current URL.\n   */\n  getChain() {\n    const chain = Provider.chainInfoCache[this.url];\n    if (!chain) {\n      throw new FuelError(\n        ErrorCode.CHAIN_INFO_CACHE_EMPTY,\n        'Chain info cache is empty. Make sure you have called `Provider.create` to initialize the provider.'\n      );\n    }\n    return chain;\n  }\n\n  /**\n   * Returns the cached nodeInfo for the current URL.\n   */\n  getNode() {\n    const node = Provider.nodeInfoCache[this.url];\n    if (!node) {\n      throw new FuelError(\n        ErrorCode.NODE_INFO_CACHE_EMPTY,\n        'Node info cache is empty. Make sure you have called `Provider.create` to initialize the provider.'\n      );\n    }\n    return node;\n  }\n\n  /**\n   * Returns some helpful parameters related to gas fees.\n   */\n  getGasConfig() {\n    const { minGasPrice } = this.getNode();\n    const { maxGasPerTx, maxGasPerPredicate, gasPriceFactor, gasPerByte, gasCosts } =\n      this.getChain().consensusParameters;\n    return {\n      minGasPrice,\n      maxGasPerTx,\n      maxGasPerPredicate,\n      gasPriceFactor,\n      gasPerByte,\n      gasCosts,\n    };\n  }\n\n  /**\n   * Updates the URL for the provider and fetches the consensus parameters for the new URL, if needed.\n   */\n  async connect(url: string, options?: ProviderOptions) {\n    this.url = url;\n    this.options = options ?? this.options;\n    this.operations = this.createOperations();\n    await this.fetchChainAndNodeInfo();\n  }\n\n  /**\n   * Fetches both the chain and node information, saves it to the cache, and return it.\n   *\n   * @returns NodeInfo and Chain\n   */\n  async fetchChainAndNodeInfo() {\n    const chain = await this.fetchChain();\n    const nodeInfo = await this.fetchNode();\n\n    Provider.ensureClientVersionIsSupported(nodeInfo);\n\n    return {\n      chain,\n      nodeInfo,\n    };\n  }\n\n  private static ensureClientVersionIsSupported(nodeInfo: NodeInfo) {\n    const { isMajorSupported, isMinorSupported, supportedVersion } =\n      checkFuelCoreVersionCompatibility(nodeInfo.nodeVersion);\n\n    if (!isMajorSupported || !isMinorSupported) {\n      throw new FuelError(\n        FuelError.CODES.UNSUPPORTED_FUEL_CLIENT_VERSION,\n        `Fuel client version: ${nodeInfo.nodeVersion}, Supported version: ${supportedVersion}`\n      );\n    }\n  }\n\n  /**\n   * Create GraphQL client and set operations.\n   *\n   * @returns The operation SDK object\n   */\n  private createOperations() {\n    const fetchFn = Provider.getFetchFn(this.options);\n    const gqlClient = new GraphQLClient(this.url, {\n      fetch: (url: string, requestInit: RequestInit) => fetchFn(url, requestInit, this.options),\n    });\n\n    const executeQuery = (query: DocumentNode, vars: Record<string, unknown>) => {\n      const opDefinition = query.definitions.find((x) => x.kind === 'OperationDefinition') as {\n        operation: string;\n      };\n      const isSubscription = opDefinition?.operation === 'subscription';\n\n      if (isSubscription) {\n        return new FuelGraphqlSubscriber({\n          url: this.url,\n          query,\n          fetchFn: (url, requestInit) => fetchFn(url as string, requestInit, this.options),\n          variables: vars,\n        });\n      }\n      return gqlClient.request(query, vars);\n    };\n\n    // @ts-expect-error This is due to this function being generic. Its type is specified when calling a specific operation via provider.operations.xyz.\n    return getOperationsSdk(executeQuery);\n  }\n\n  /**\n   * Returns the version of the connected node.\n   *\n   * @returns A promise that resolves to the version string.\n   */\n  async getVersion(): Promise<string> {\n    const {\n      nodeInfo: { nodeVersion },\n    } = await this.operations.getVersion();\n    return nodeVersion;\n  }\n\n  /**\n   * @hidden\n   *\n   * Returns the network configuration of the connected Fuel node.\n   *\n   * @returns A promise that resolves to the network configuration object\n   */\n  async getNetwork(): Promise<Network> {\n    const {\n      name,\n      consensusParameters: { chainId },\n    } = await this.getChain();\n    const network = new Network(name, chainId.toNumber());\n    return Promise.resolve(network);\n  }\n\n  /**\n   * Returns the block number.\n   *\n   * @returns A promise that resolves to the block number\n   */\n  async getBlockNumber(): Promise<BN> {\n    const { chain } = await this.operations.getChain();\n    return bn(chain.latestBlock.header.height, 10);\n  }\n\n  /**\n   * Returns the chain information.\n   * @param url - The URL of the Fuel node\n   * @returns NodeInfo object\n   */\n  async fetchNode(): Promise<NodeInfo> {\n    const { nodeInfo } = await this.operations.getNodeInfo();\n\n    const processedNodeInfo: NodeInfo = {\n      maxDepth: bn(nodeInfo.maxDepth),\n      maxTx: bn(nodeInfo.maxTx),\n      minGasPrice: bn(nodeInfo.minGasPrice),\n      nodeVersion: nodeInfo.nodeVersion,\n      utxoValidation: nodeInfo.utxoValidation,\n      vmBacktrace: nodeInfo.vmBacktrace,\n      peers: nodeInfo.peers,\n    };\n\n    Provider.nodeInfoCache[this.url] = processedNodeInfo;\n\n    return processedNodeInfo;\n  }\n\n  /**\n   * Fetches the `chainInfo` for the given node URL.\n   * @param url - The URL of the Fuel node\n   * @returns ChainInfo object\n   */\n  async fetchChain(): Promise<ChainInfo> {\n    const { chain } = await this.operations.getChain();\n\n    const processedChain = processGqlChain(chain);\n\n    Provider.chainInfoCache[this.url] = processedChain;\n\n    return processedChain;\n  }\n\n  /**\n   * Returns the chain ID\n   * @returns A promise that resolves to the chain ID number\n   */\n  getChainId() {\n    const {\n      consensusParameters: { chainId },\n    } = this.getChain();\n    return chainId.toNumber();\n  }\n\n  /**\n   * @hidden\n   */\n  #cacheInputs(inputs: TransactionRequestInput[]): void {\n    if (!this.cache) {\n      return;\n    }\n\n    inputs.forEach((input) => {\n      if (input.type === InputType.Coin) {\n        this.cache?.set(input.id);\n      }\n    });\n  }\n\n  /**\n   * Submits a transaction to the chain to be executed.\n   *\n   * If the transaction is missing any dependencies,\n   * the transaction will be mutated and those dependencies will be added.\n   *\n   * @param transactionRequestLike - The transaction request object.\n   * @returns A promise that resolves to the transaction response object.\n   */\n  // #region Provider-sendTransaction\n  async sendTransaction(\n    transactionRequestLike: TransactionRequestLike,\n    { estimateTxDependencies = true, awaitExecution = false }: ProviderSendTxParams = {}\n  ): Promise<TransactionResponse> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    this.#cacheInputs(transactionRequest.inputs);\n    if (estimateTxDependencies) {\n      await this.estimateTxDependencies(transactionRequest);\n    }\n    // #endregion Provider-sendTransaction\n\n    const encodedTransaction = hexlify(transactionRequest.toTransactionBytes());\n\n    let abis: JsonAbisFromAllCalls | undefined;\n\n    if (transactionRequest.type === TransactionType.Script) {\n      abis = transactionRequest.abis;\n    }\n\n    if (awaitExecution) {\n      const subscription = this.operations.submitAndAwait({ encodedTransaction });\n      for await (const { submitAndAwait } of subscription) {\n        if (submitAndAwait.type === 'SqueezedOutStatus') {\n          throw new FuelError(\n            ErrorCode.TRANSACTION_SQUEEZED_OUT,\n            `Transaction Squeezed Out with reason: ${submitAndAwait.reason}`\n          );\n        }\n\n        if (submitAndAwait.type !== 'SubmittedStatus') {\n          break;\n        }\n      }\n\n      const transactionId = transactionRequest.getTransactionId(this.getChainId());\n      const response = new TransactionResponse(transactionId, this, abis);\n      await response.fetch();\n      return response;\n    }\n\n    const {\n      submit: { id: transactionId },\n    } = await this.operations.submit({ encodedTransaction });\n\n    return new TransactionResponse(transactionId, this, abis);\n  }\n\n  /**\n   * Executes a transaction without actually submitting it to the chain.\n   *\n   * If the transaction is missing any dependencies,\n   * the transaction will be mutated and those dependencies will be added.\n   *\n   * @param transactionRequestLike - The transaction request object.\n   * @param utxoValidation - Additional provider call parameters.\n   * @returns A promise that resolves to the call result object.\n   */\n  async call(\n    transactionRequestLike: TransactionRequestLike,\n    { utxoValidation, estimateTxDependencies = true }: ProviderCallParams = {}\n  ): Promise<CallResult> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    if (estimateTxDependencies) {\n      return this.estimateTxDependencies(transactionRequest);\n    }\n    const encodedTransaction = hexlify(transactionRequest.toTransactionBytes());\n    const { dryRun: gqlReceipts } = await this.operations.dryRun({\n      encodedTransaction,\n      utxoValidation: utxoValidation || false,\n    });\n    const receipts = gqlReceipts.map(processGqlReceipt);\n    return {\n      receipts,\n    };\n  }\n\n  /**\n   * Verifies whether enough gas is available to complete transaction.\n   *\n   * @param transactionRequest - The transaction request object.\n   * @returns A promise that resolves to the estimated transaction request object.\n   */\n  async estimatePredicates(transactionRequest: TransactionRequest): Promise<TransactionRequest> {\n    const shouldEstimatePredicates = Boolean(\n      transactionRequest.inputs.find(\n        (input) =>\n          'predicate' in input &&\n          input.predicate &&\n          !equalBytes(arrayify(input.predicate), arrayify('0x')) &&\n          new BN(input.predicateGasUsed).isZero()\n      )\n    );\n    if (!shouldEstimatePredicates) {\n      return transactionRequest;\n    }\n    const encodedTransaction = hexlify(transactionRequest.toTransactionBytes());\n    const response = await this.operations.estimatePredicates({\n      encodedTransaction,\n    });\n\n    const {\n      estimatePredicates: { inputs },\n    } = response;\n\n    if (inputs) {\n      inputs.forEach((input, index) => {\n        if ('predicateGasUsed' in input && bn(input.predicateGasUsed).gt(0)) {\n          // eslint-disable-next-line no-param-reassign\n          (<CoinTransactionRequestInput>transactionRequest.inputs[index]).predicateGasUsed =\n            input.predicateGasUsed;\n        }\n      });\n    }\n\n    return transactionRequest;\n  }\n\n  /**\n   * Will dryRun a transaction and check for missing dependencies.\n   *\n   * If there are missing variable outputs,\n   * `addVariableOutputs` is called on the transaction.\n   *\n   * @privateRemarks\n   * TODO: Investigate support for missing contract IDs\n   * TODO: Add support for missing output messages\n   *\n   * @param transactionRequest - The transaction request object.\n   * @returns A promise.\n   */\n  async estimateTxDependencies(\n    transactionRequest: TransactionRequest\n  ): Promise<EstimateTxDependenciesReturns> {\n    if (transactionRequest.type === TransactionType.Create) {\n      return {\n        receipts: [],\n        outputVariables: 0,\n        missingContractIds: [],\n      };\n    }\n\n    await this.estimatePredicates(transactionRequest);\n\n    let receipts: TransactionResultReceipt[] = [];\n    const missingContractIds: string[] = [];\n    let outputVariables = 0;\n\n    for (let attempt = 0; attempt < MAX_RETRIES; attempt++) {\n      const { dryRun: gqlReceipts } = await this.operations.dryRun({\n        encodedTransaction: hexlify(transactionRequest.toTransactionBytes()),\n        utxoValidation: false,\n      });\n      receipts = gqlReceipts.map(processGqlReceipt);\n      const { missingOutputVariables, missingOutputContractIds } =\n        getReceiptsWithMissingData(receipts);\n\n      const hasMissingOutputs =\n        missingOutputVariables.length !== 0 || missingOutputContractIds.length !== 0;\n\n      if (hasMissingOutputs) {\n        outputVariables += missingOutputVariables.length;\n        transactionRequest.addVariableOutputs(missingOutputVariables.length);\n        missingOutputContractIds.forEach(({ contractId }) => {\n          transactionRequest.addContractInputAndOutput(Address.fromString(contractId));\n          missingContractIds.push(contractId);\n        });\n      } else {\n        break;\n      }\n    }\n\n    return {\n      receipts,\n      outputVariables,\n      missingContractIds,\n    };\n  }\n\n  /**\n   * Executes a signed transaction without applying the states changes\n   * on the chain.\n   *\n   * If the transaction is missing any dependencies,\n   * the transaction will be mutated and those dependencies will be added\n   *\n   * @param transactionRequestLike - The transaction request object.\n   * @returns A promise that resolves to the call result object.\n   */\n  async simulate(\n    transactionRequestLike: TransactionRequestLike,\n    { estimateTxDependencies = true }: EstimateTransactionParams = {}\n  ): Promise<CallResult> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    if (estimateTxDependencies) {\n      return this.estimateTxDependencies(transactionRequest);\n    }\n    const encodedTransaction = hexlify(transactionRequest.toTransactionBytes());\n    const { dryRun: gqlReceipts } = await this.operations.dryRun({\n      encodedTransaction,\n      utxoValidation: true,\n    });\n    const receipts = gqlReceipts.map(processGqlReceipt);\n    return {\n      receipts,\n    };\n  }\n\n  /**\n   * Returns a transaction cost to enable user\n   * to set gasLimit and also reserve balance amounts\n   * on the the transaction.\n   *\n   * @privateRemarks\n   * The tolerance is add on top of the gasUsed calculated\n   * from the node, this create a safe margin costs like\n   * change states on transfer that don't occur on the dryRun\n   * transaction. The default value is 0.2 or 20%\n   *\n   * @param transactionRequestLike - The transaction request object.\n   * @param tolerance - The tolerance to add on top of the gasUsed.\n   * @returns A promise that resolves to the transaction cost object.\n   */\n  async getTransactionCost(\n    transactionRequestLike: TransactionRequestLike,\n    forwardingQuantities: CoinQuantity[] = [],\n    {\n      estimateTxDependencies = true,\n      estimatePredicates = true,\n      resourcesOwner,\n      signatureCallback,\n    }: TransactionCostParams = {}\n  ): Promise<TransactionCost> {\n    const txRequestClone = clone(transactionRequestify(transactionRequestLike));\n    const chainInfo = this.getChain();\n    const { gasPriceFactor, minGasPrice, maxGasPerTx } = this.getGasConfig();\n    const gasPrice = max(txRequestClone.gasPrice, minGasPrice);\n    const isScriptTransaction = txRequestClone.type === TransactionType.Script;\n\n    // Fund with fake UTXOs to avoid not enough funds error\n    // Getting coin quantities from amounts being transferred\n    const coinOutputsQuantities = txRequestClone.getCoinOutputsQuantities();\n    // Combining coin quantities from amounts being transferred and forwarding to contracts\n    const allQuantities = mergeQuantities(coinOutputsQuantities, forwardingQuantities);\n    // Funding transaction with fake utxos\n    txRequestClone.fundWithFakeUtxos(allQuantities, resourcesOwner?.address);\n\n    /**\n     * Estimate predicates gasUsed\n     */\n    if (estimatePredicates) {\n      // Remove gasLimit to avoid gasLimit when estimating predicates\n      if (isScriptTransaction) {\n        txRequestClone.gasLimit = bn(0);\n      }\n\n      /**\n       * The fake utxos added above can be from a predicate\n       * If the resources owner is a predicate,\n       * we need to populate the resources with the predicate's data\n       * so that predicate estimation can happen.\n       */\n      if (resourcesOwner && 'populateTransactionPredicateData' in resourcesOwner) {\n        (resourcesOwner as Predicate<[]>).populateTransactionPredicateData(txRequestClone);\n      }\n      await this.estimatePredicates(txRequestClone);\n    }\n\n    if (signatureCallback && isScriptTransaction) {\n      await signatureCallback(txRequestClone);\n    }\n\n    /**\n     * Calculate minGas and maxGas based on the real transaction\n     */\n    const minGas = txRequestClone.calculateMinGas(chainInfo);\n    const maxGas = txRequestClone.calculateMaxGas(chainInfo, minGas);\n\n    /**\n     * Estimate gasUsed for script transactions\n     */\n\n    let receipts: TransactionResultReceipt[] = [];\n    let missingContractIds: string[] = [];\n    let outputVariables = 0;\n    // Transactions of type Create does not consume any gas so we can the dryRun\n    if (isScriptTransaction && estimateTxDependencies) {\n      /**\n       * Setting the gasPrice to 0 on a dryRun will result in no fees being charged.\n       * This simplifies the funding with fake utxos, since the coin quantities required\n       * will only be amounts being transferred (coin outputs) and amounts being forwarded\n       * to contract calls.\n       */\n      // Calculate the gasLimit again as we insert a fake UTXO and signer\n\n      txRequestClone.gasPrice = bn(0);\n      txRequestClone.gasLimit = bn(maxGasPerTx.sub(maxGas).toNumber() * 0.9);\n\n      // Executing dryRun with fake utxos to get gasUsed\n      const result = await this.estimateTxDependencies(txRequestClone);\n\n      receipts = result.receipts;\n      outputVariables = result.outputVariables;\n      missingContractIds = result.missingContractIds;\n    }\n\n    // For CreateTransaction the gasUsed is going to be the minGas\n    const gasUsed = isScriptTransaction ? getGasUsedFromReceipts(receipts) : minGas;\n\n    const usedFee = calculatePriceWithFactor(\n      gasUsed,\n      gasPrice,\n      gasPriceFactor\n    ).normalizeZeroToOne();\n    const minFee = calculatePriceWithFactor(minGas, gasPrice, gasPriceFactor).normalizeZeroToOne();\n    const maxFee = calculatePriceWithFactor(maxGas, gasPrice, gasPriceFactor).normalizeZeroToOne();\n\n    return {\n      requiredQuantities: allQuantities,\n      receipts,\n      gasUsed,\n      minGasPrice,\n      gasPrice,\n      minGas,\n      maxGas,\n      usedFee,\n      minFee,\n      maxFee,\n      estimatedInputs: txRequestClone.inputs,\n      outputVariables,\n      missingContractIds,\n    };\n  }\n\n  async getResourcesForTransaction(\n    owner: string | AbstractAddress,\n    transactionRequestLike: TransactionRequestLike,\n    forwardingQuantities: CoinQuantity[] = []\n  ) {\n    const ownerAddress = Address.fromAddressOrString(owner);\n    const transactionRequest = transactionRequestify(clone(transactionRequestLike));\n    const transactionCost = await this.getTransactionCost(transactionRequest, forwardingQuantities);\n\n    // Add the required resources to the transaction from the owner\n    transactionRequest.addResources(\n      await this.getResourcesToSpend(ownerAddress, transactionCost.requiredQuantities)\n    );\n    // Refetch transaction costs with the new resources\n    // TODO: we could find a way to avoid fetch estimatePredicates again, by returning the transaction or\n    // returning a specific gasUsed by the predicate.\n    // Also for the dryRun we could have the same issue as we are going to run twice the dryRun and the\n    // estimateTxDependencies as we don't have access to the transaction, maybe returning the transaction would\n    // be better.\n    const { requiredQuantities, ...txCost } = await this.getTransactionCost(\n      transactionRequest,\n      forwardingQuantities\n    );\n    const resources = await this.getResourcesToSpend(ownerAddress, requiredQuantities);\n\n    return {\n      resources,\n      requiredQuantities,\n      ...txCost,\n    };\n  }\n\n  /**\n   * Returns coins for the given owner.\n   */\n  async getCoins(\n    /** The address to get coins for */\n    owner: string | AbstractAddress,\n    /** The asset ID of coins to get */\n    assetId?: BytesLike,\n    /** Pagination arguments */\n    paginationArgs?: CursorPaginationArgs\n  ): Promise<Coin[]> {\n    const ownerAddress = Address.fromAddressOrString(owner);\n    const result = await this.operations.getCoins({\n      first: 10,\n      ...paginationArgs,\n      filter: { owner: ownerAddress.toB256(), assetId: assetId && hexlify(assetId) },\n    });\n\n    const coins = result.coins.edges.map((edge) => edge.node);\n\n    return coins.map((coin) => ({\n      id: coin.utxoId,\n      assetId: coin.assetId,\n      amount: bn(coin.amount),\n      owner: Address.fromAddressOrString(coin.owner),\n      maturity: bn(coin.maturity).toNumber(),\n      blockCreated: bn(coin.blockCreated),\n      txCreatedIdx: bn(coin.txCreatedIdx),\n    }));\n  }\n\n  /**\n   * Returns resources for the given owner satisfying the spend query.\n   *\n   * @param owner - The address to get resources for.\n   * @param quantities - The quantities to get.\n   * @param excludedIds - IDs of excluded resources from the selection.\n   * @returns A promise that resolves to the resources.\n   */\n  async getResourcesToSpend(\n    /** The address to get coins for */\n    owner: string | AbstractAddress,\n    /** The quantities to get */\n    quantities: CoinQuantityLike[],\n    /** IDs of excluded resources from the selection. */\n    excludedIds?: ExcludeResourcesOption\n  ): Promise<Resource[]> {\n    const ownerAddress = Address.fromAddressOrString(owner);\n    const excludeInput = {\n      messages: excludedIds?.messages?.map((nonce) => hexlify(nonce)) || [],\n      utxos: excludedIds?.utxos?.map((id) => hexlify(id)) || [],\n    };\n\n    if (this.cache) {\n      const uniqueUtxos = new Set(\n        excludeInput.utxos.concat(this.cache?.getActiveData().map((id) => hexlify(id)))\n      );\n      excludeInput.utxos = Array.from(uniqueUtxos);\n    }\n    const coinsQuery = {\n      owner: ownerAddress.toB256(),\n      queryPerAsset: quantities\n        .map(coinQuantityfy)\n        .map(({ assetId, amount, max: maxPerAsset }) => ({\n          assetId: hexlify(assetId),\n          amount: amount.toString(10),\n          max: maxPerAsset ? maxPerAsset.toString(10) : undefined,\n        })),\n      excludedIds: excludeInput,\n    };\n\n    const result = await this.operations.getCoinsToSpend(coinsQuery);\n\n    const coins = result.coinsToSpend\n      .flat()\n      .map((coin) => {\n        switch (coin.__typename) {\n          case 'MessageCoin':\n            return {\n              amount: bn(coin.amount),\n              assetId: coin.assetId,\n              daHeight: bn(coin.daHeight),\n              sender: Address.fromAddressOrString(coin.sender),\n              recipient: Address.fromAddressOrString(coin.recipient),\n              nonce: coin.nonce,\n            } as MessageCoin;\n          case 'Coin':\n            return {\n              id: coin.utxoId,\n              amount: bn(coin.amount),\n              assetId: coin.assetId,\n              owner: Address.fromAddressOrString(coin.owner),\n              maturity: bn(coin.maturity).toNumber(),\n              blockCreated: bn(coin.blockCreated),\n              txCreatedIdx: bn(coin.txCreatedIdx),\n            } as Coin;\n          default:\n            return null;\n        }\n      })\n      .filter((v) => !!v) as Array<Resource>;\n\n    return coins;\n  }\n\n  /**\n   * Returns block matching the given ID or height.\n   *\n   * @param idOrHeight - ID or height of the block.\n   * @returns A promise that resolves to the block.\n   */\n  async getBlock(\n    /** ID or height of the block */\n    idOrHeight: string | number | 'latest'\n  ): Promise<Block | null> {\n    let variables;\n    if (typeof idOrHeight === 'number') {\n      variables = { height: bn(idOrHeight).toString(10) };\n    } else if (idOrHeight === 'latest') {\n      variables = { height: (await this.getBlockNumber()).toString(10) };\n    } else if (idOrHeight.length === 66) {\n      variables = { blockId: idOrHeight };\n    } else {\n      variables = { blockId: bn(idOrHeight).toString(10) };\n    }\n\n    const { block } = await this.operations.getBlock(variables);\n\n    if (!block) {\n      return null;\n    }\n\n    return {\n      id: block.id,\n      height: bn(block.header.height),\n      time: block.header.time,\n      transactionIds: block.transactions.map((tx) => tx.id),\n    };\n  }\n\n  /**\n   * Returns all the blocks matching the given parameters.\n   *\n   * @param params - The parameters to query blocks.\n   * @returns A promise that resolves to the blocks.\n   */\n  async getBlocks(params: GqlGetBlocksQueryVariables): Promise<Block[]> {\n    const { blocks: fetchedData } = await this.operations.getBlocks(params);\n\n    const blocks: Block[] = fetchedData.edges.map(({ node: block }) => ({\n      id: block.id,\n      height: bn(block.header.height),\n      time: block.header.time,\n      transactionIds: block.transactions.map((tx) => tx.id),\n    }));\n\n    return blocks;\n  }\n\n  /**\n   * Returns block matching the given ID or type, including transaction data.\n   *\n   * @param idOrHeight - ID or height of the block.\n   * @returns A promise that resolves to the block.\n   */\n  async getBlockWithTransactions(\n    /** ID or height of the block */\n    idOrHeight: string | number | 'latest'\n  ): Promise<(Block & { transactions: Transaction[] }) | null> {\n    let variables;\n    if (typeof idOrHeight === 'number') {\n      variables = { blockHeight: bn(idOrHeight).toString(10) };\n    } else if (idOrHeight === 'latest') {\n      variables = { blockHeight: (await this.getBlockNumber()).toString() };\n    } else {\n      variables = { blockId: idOrHeight };\n    }\n\n    const { block } = await this.operations.getBlockWithTransactions(variables);\n\n    if (!block) {\n      return null;\n    }\n\n    return {\n      id: block.id,\n      height: bn(block.header.height, 10),\n      time: block.header.time,\n      transactionIds: block.transactions.map((tx) => tx.id),\n      transactions: block.transactions.map(\n        (tx) => new TransactionCoder().decode(arrayify(tx.rawPayload), 0)?.[0]\n      ),\n    };\n  }\n\n  /**\n   * Get transaction with the given ID.\n   *\n   * @param transactionId - ID of the transaction.\n   * @returns A promise that resolves to the transaction.\n   */\n  async getTransaction<TTransactionType = void>(\n    transactionId: string\n  ): Promise<Transaction<TTransactionType> | null> {\n    const { transaction } = await this.operations.getTransaction({ transactionId });\n    if (!transaction) {\n      return null;\n    }\n    return new TransactionCoder().decode(\n      arrayify(transaction.rawPayload),\n      0\n    )?.[0] as Transaction<TTransactionType>;\n  }\n\n  /**\n   * Get deployed contract with the given ID.\n   *\n   * @param contractId - ID of the contract.\n   * @returns A promise that resolves to the contract.\n   */\n  async getContract(contractId: string): Promise<ContractResult | null> {\n    const { contract } = await this.operations.getContract({ contractId });\n    if (!contract) {\n      return null;\n    }\n    return contract;\n  }\n\n  /**\n   * Returns the balance for the given contract for the given asset ID.\n   *\n   * @param contractId - The contract ID to get the balance for.\n   * @param assetId - The asset ID of coins to get.\n   * @returns A promise that resolves to the balance.\n   */\n  async getContractBalance(\n    /** The contract ID to get the balance for */\n    contractId: string | AbstractAddress,\n    /** The asset ID of coins to get */\n    assetId: BytesLike\n  ): Promise<BN> {\n    const { contractBalance } = await this.operations.getContractBalance({\n      contract: Address.fromAddressOrString(contractId).toB256(),\n      asset: hexlify(assetId),\n    });\n    return bn(contractBalance.amount, 10);\n  }\n\n  /**\n   * Returns the balance for the given owner for the given asset ID.\n   *\n   * @param owner - The address to get coins for.\n   * @param assetId - The asset ID of coins to get.\n   * @returns A promise that resolves to the balance.\n   */\n  async getBalance(\n    /** The address to get coins for */\n    owner: string | AbstractAddress,\n    /** The asset ID of coins to get */\n    assetId: BytesLike\n  ): Promise<BN> {\n    const { balance } = await this.operations.getBalance({\n      owner: Address.fromAddressOrString(owner).toB256(),\n      assetId: hexlify(assetId),\n    });\n    return bn(balance.amount, 10);\n  }\n\n  /**\n   * Returns balances for the given owner.\n   *\n   * @param owner - The address to get coins for.\n   * @param paginationArgs - Pagination arguments.\n   * @returns A promise that resolves to the balances.\n   */\n  async getBalances(\n    /** The address to get coins for */\n    owner: string | AbstractAddress,\n    /** Pagination arguments */\n    paginationArgs?: CursorPaginationArgs\n  ): Promise<CoinQuantity[]> {\n    const result = await this.operations.getBalances({\n      first: 10,\n      ...paginationArgs,\n      filter: { owner: Address.fromAddressOrString(owner).toB256() },\n    });\n\n    const balances = result.balances.edges.map((edge) => edge.node);\n\n    return balances.map((balance) => ({\n      assetId: balance.assetId,\n      amount: bn(balance.amount),\n    }));\n  }\n\n  /**\n   * Returns message for the given address.\n   *\n   * @param address - The address to get message from.\n   * @param paginationArgs - Pagination arguments.\n   * @returns A promise that resolves to the messages.\n   */\n  async getMessages(\n    /** The address to get message from */\n    address: string | AbstractAddress,\n    /** Pagination arguments */\n    paginationArgs?: CursorPaginationArgs\n  ): Promise<Message[]> {\n    const result = await this.operations.getMessages({\n      first: 10,\n      ...paginationArgs,\n      owner: Address.fromAddressOrString(address).toB256(),\n    });\n\n    const messages = result.messages.edges.map((edge) => edge.node);\n\n    return messages.map((message) => ({\n      messageId: InputMessageCoder.getMessageId({\n        sender: message.sender,\n        recipient: message.recipient,\n        nonce: message.nonce,\n        amount: bn(message.amount),\n        data: message.data,\n      }),\n      sender: Address.fromAddressOrString(message.sender),\n      recipient: Address.fromAddressOrString(message.recipient),\n      nonce: message.nonce,\n      amount: bn(message.amount),\n      data: InputMessageCoder.decodeData(message.data),\n      daHeight: bn(message.daHeight),\n    }));\n  }\n\n  /**\n   * Returns Message Proof for given transaction id and the message id from MessageOut receipt.\n   *\n   * @param transactionId - The transaction to get message from.\n   * @param messageId - The message id from MessageOut receipt.\n   * @param commitBlockId - The commit block id.\n   * @param commitBlockHeight - The commit block height.\n   * @returns A promise that resolves to the message proof.\n   */\n  async getMessageProof(\n    /** The transaction to get message from */\n    transactionId: string,\n    nonce: string,\n    commitBlockId?: string,\n    commitBlockHeight?: BN\n  ): Promise<MessageProof | null> {\n    let inputObject: {\n      /** The transaction to get message from */\n      transactionId: string;\n      /** The message id from MessageOut receipt */\n      nonce: string;\n      commitBlockId?: string;\n      commitBlockHeight?: string;\n    } = {\n      transactionId,\n      nonce,\n    };\n\n    if (commitBlockId && commitBlockHeight) {\n      throw new FuelError(\n        ErrorCode.INVALID_INPUT_PARAMETERS,\n        'commitBlockId and commitBlockHeight cannot be used together'\n      );\n    }\n\n    if (commitBlockId) {\n      inputObject = {\n        ...inputObject,\n        commitBlockId,\n      };\n    }\n\n    if (commitBlockHeight) {\n      inputObject = {\n        ...inputObject,\n        // Conver BN into a number string required on the query\n        // This should problably be fixed on the fuel client side\n        commitBlockHeight: commitBlockHeight.toNumber().toString(),\n      };\n    }\n\n    const result = await this.operations.getMessageProof(inputObject);\n\n    if (!result.messageProof) {\n      return null;\n    }\n\n    const {\n      messageProof,\n      messageBlockHeader,\n      commitBlockHeader,\n      blockProof,\n      sender,\n      recipient,\n      amount,\n      data,\n    } = result.messageProof;\n\n    return {\n      messageProof: {\n        proofIndex: bn(messageProof.proofIndex),\n        proofSet: messageProof.proofSet,\n      },\n      blockProof: {\n        proofIndex: bn(blockProof.proofIndex),\n        proofSet: blockProof.proofSet,\n      },\n      messageBlockHeader: {\n        id: messageBlockHeader.id,\n        daHeight: bn(messageBlockHeader.daHeight),\n        transactionsCount: bn(messageBlockHeader.transactionsCount),\n        transactionsRoot: messageBlockHeader.transactionsRoot,\n        height: bn(messageBlockHeader.height),\n        prevRoot: messageBlockHeader.prevRoot,\n        time: messageBlockHeader.time,\n        applicationHash: messageBlockHeader.applicationHash,\n        messageReceiptRoot: messageBlockHeader.messageReceiptRoot,\n        messageReceiptCount: bn(messageBlockHeader.messageReceiptCount),\n      },\n      commitBlockHeader: {\n        id: commitBlockHeader.id,\n        daHeight: bn(commitBlockHeader.daHeight),\n        transactionsCount: bn(commitBlockHeader.transactionsCount),\n        transactionsRoot: commitBlockHeader.transactionsRoot,\n        height: bn(commitBlockHeader.height),\n        prevRoot: commitBlockHeader.prevRoot,\n        time: commitBlockHeader.time,\n        applicationHash: commitBlockHeader.applicationHash,\n        messageReceiptRoot: commitBlockHeader.messageReceiptRoot,\n        messageReceiptCount: bn(commitBlockHeader.messageReceiptCount),\n      },\n      sender: Address.fromAddressOrString(sender),\n      recipient: Address.fromAddressOrString(recipient),\n      nonce,\n      amount: bn(amount),\n      data,\n    };\n  }\n\n  /**\n   * Returns Message Proof for given transaction id and the message id from MessageOut receipt.\n   *\n   * @param nonce - The nonce of the message to get status from.\n   * @returns A promise that resolves to the message status\n   */\n  async getMessageStatus(\n    /** The nonce of the message to get status from */\n    nonce: string\n  ): Promise<MessageStatus> {\n    const result = await this.operations.getMessageStatus({ nonce });\n    return result.messageStatus;\n  }\n\n  /**\n   * Lets you produce blocks with custom timestamps and the block number of the last block produced.\n   *\n   * @param amount - The amount of blocks to produce\n   * @param startTime - The UNIX timestamp (milliseconds) to set for the first produced block\n   * @returns A promise that resolves to the block number of the last produced block.\n   */\n  async produceBlocks(amount: number, startTime?: number) {\n    const { produceBlocks: latestBlockHeight } = await this.operations.produceBlocks({\n      blocksToProduce: bn(amount).toString(10),\n      startTimestamp: startTime ? DateTime.fromUnixMilliseconds(startTime).toTai64() : undefined,\n    });\n    return bn(latestBlockHeight);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async getTransactionResponse(transactionId: string): Promise<TransactionResponse> {\n    return new TransactionResponse(transactionId, this);\n  }\n}\n","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig * -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, pattern.flags ? pattern.flags : (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : '') + (pattern.dotAll ? 's' : ''));\n}","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, deep, map) {\n  map || (map = new _ObjectMap()); // this avoids the slower switch with a quick if decision removing some milliseconds in each run.\n\n  if (_isPrimitive(value)) {\n    return value;\n  }\n\n  var copy = function copy(copiedValue) {\n    // Check for circular and same references on the object graph and return its corresponding clone.\n    var cachedCopy = map.get(value);\n\n    if (cachedCopy) {\n      return cachedCopy;\n    }\n\n    map.set(value, copiedValue);\n\n    for (var key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        copiedValue[key] = deep ? _clone(value[key], true, map) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}\n\nfunction _isPrimitive(param) {\n  var type = typeof param;\n  return param == null || type != 'object' && type != 'function';\n}\n\nvar _ObjectMap =\n/*#__PURE__*/\nfunction () {\n  function _ObjectMap() {\n    this.map = {};\n    this.length = 0;\n  }\n\n  _ObjectMap.prototype.set = function (key, value) {\n    const hashedKey = this.hash(key);\n    let bucket = this.map[hashedKey];\n\n    if (!bucket) {\n      this.map[hashedKey] = bucket = [];\n    }\n\n    bucket.push([key, value]);\n    this.length += 1;\n  };\n\n  _ObjectMap.prototype.hash = function (key) {\n    let hashedKey = [];\n\n    for (var value in key) {\n      hashedKey.push(Object.prototype.toString.call(key[value]));\n    }\n\n    return hashedKey.join();\n  };\n\n  _ObjectMap.prototype.get = function (key) {\n    /**\n     * depending on the number of objects to be cloned is faster to just iterate over the items in the map just because the hash function is so costly,\n     * on my tests this number is 180, anything above that using the hash function is faster.\n     */\n    if (this.length <= 180) {\n      for (const p in this.map) {\n        const bucket = this.map[p];\n\n        for (let i = 0; i < bucket.length; i += 1) {\n          const element = bucket[i];\n\n          if (element[0] === key) {\n            return element[1];\n          }\n        }\n      }\n\n      return;\n    }\n\n    const hashedKey = this.hash(key);\n    const bucket = this.map[hashedKey];\n\n    if (!bucket) {\n      return;\n    }\n\n    for (let i = 0; i < bucket.length; i += 1) {\n      const element = bucket[i];\n\n      if (element[0] === key) {\n        return element[1];\n      }\n    }\n  };\n\n  return _ObjectMap;\n}();","import _clone from \"./internal/_clone.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a deep copy of the source that can be used in place of the source\n * object without retaining any references to it.\n * The source object may contain (nested) `Array`s and `Object`s,\n * `Number`s, `String`s, `Boolean`s and `Date`s.\n * `Function`s are assigned by reference rather than copied.\n *\n * Dispatches to a `clone` method if present.\n *\n * Note that if the source object has multiple nodes that share a reference,\n * the returned object will have the same structure, but the references will\n * be pointed to the location within the cloned value.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, true);\n});\n\nexport default clone;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { parse } from 'graphql';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  Location,\n} from 'graphql/language/ast';\n\n// A map docString -> graphql document\nconst docCache = new Map<string, DocumentNode>();\n\n// A map fragmentName -> [normalized source]\nconst fragmentSourceMap = new Map<string, Set<string>>();\n\nlet printFragmentWarnings = true;\nlet experimentalFragmentVariables = false;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string: string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc: Location) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nfunction processFragments(ast: DocumentNode) {\n  const seenKeys = new Set<string>();\n  const definitions: DefinitionNode[] = [];\n\n  ast.definitions.forEach(fragmentDefinition => {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc!);\n\n      // We know something about this fragment\n      let sourceKeySet = fragmentSourceMap.get(fragmentName)!;\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n\n  return {\n    ...ast,\n    definitions,\n  };\n}\n\nfunction stripLoc(doc: DocumentNode) {\n  const workSet = new Set<Record<string, any>>(doc.definitions);\n\n  workSet.forEach(node => {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(key => {\n      const value = node[key];\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n\n  const loc = doc.loc as Record<string, any>;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source: string) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    const parsed = parse(source, {\n      experimentalFragmentVariables,\n      allowLegacyFragmentVariables: experimentalFragmentVariables,\n    } as any);\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n    docCache.set(\n      cacheKey,\n      // check that all \"new\" fragments inside the documents are consistent with\n      // existing fragments of the same name\n      stripLoc(processFragments(parsed)),\n    );\n  }\n  return docCache.get(cacheKey)!;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nexport function gql(\n  literals: string | readonly string[],\n  ...args: any[]\n) {\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  let result = literals[0];\n\n  args.forEach((arg, i) => {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n\n  return parseDocument(result);\n}\n\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\n\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\nconst extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n};\n\nexport namespace gql {\n  export const {\n    gql,\n    resetCaches,\n    disableFragmentWarnings,\n    enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables,\n  } = extras;\n}\n\ngql.default = gql;\n\nexport default gql;\n","import type { DocumentNode } from 'graphql';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  Address: string;\n  AssetId: string;\n  BlockId: string;\n  Bytes32: string;\n  ContractId: string;\n  HexString: string;\n  Nonce: string;\n  Salt: string;\n  Signature: any;\n  Tai64Timestamp: string;\n  TransactionId: string;\n  TxPointer: any;\n  U8: any;\n  U32: any;\n  U64: string;\n  UtxoId: string;\n};\n\nexport type GqlBalance = {\n  __typename: 'Balance';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  owner: Scalars['Address'];\n};\n\nexport type GqlBalanceConnection = {\n  __typename: 'BalanceConnection';\n  /** A list of edges. */\n  edges: Array<GqlBalanceEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlBalance>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlBalanceEdge = {\n  __typename: 'BalanceEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlBalance;\n};\n\nexport type GqlBalanceFilterInput = {\n  /** Filter coins based on the `owner` field */\n  owner: Scalars['Address'];\n};\n\nexport type GqlBlock = {\n  __typename: 'Block';\n  consensus: GqlConsensus;\n  header: GqlHeader;\n  id: Scalars['BlockId'];\n  transactions: Array<GqlTransaction>;\n};\n\nexport type GqlBlockConnection = {\n  __typename: 'BlockConnection';\n  /** A list of edges. */\n  edges: Array<GqlBlockEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlBlock>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlBlockEdge = {\n  __typename: 'BlockEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlBlock;\n};\n\nexport type GqlBreakpoint = {\n  contract: Scalars['ContractId'];\n  pc: Scalars['U64'];\n};\n\nexport type GqlChainInfo = {\n  __typename: 'ChainInfo';\n  consensusParameters: GqlConsensusParameters;\n  daHeight: Scalars['U64'];\n  gasCosts: GqlGasCosts;\n  latestBlock: GqlBlock;\n  name: Scalars['String'];\n};\n\nexport type GqlChangeOutput = {\n  __typename: 'ChangeOutput';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  to: Scalars['Address'];\n};\n\nexport type GqlCoin = {\n  __typename: 'Coin';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  /** TxPointer - the height of the block this coin was created in */\n  blockCreated: Scalars['U32'];\n  maturity: Scalars['U32'];\n  owner: Scalars['Address'];\n  /** TxPointer - the index of the transaction that created this coin */\n  txCreatedIdx: Scalars['U64'];\n  utxoId: Scalars['UtxoId'];\n};\n\nexport type GqlCoinConnection = {\n  __typename: 'CoinConnection';\n  /** A list of edges. */\n  edges: Array<GqlCoinEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlCoin>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlCoinEdge = {\n  __typename: 'CoinEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlCoin;\n};\n\nexport type GqlCoinFilterInput = {\n  /** Returns coins only with `asset_id`. */\n  assetId?: InputMaybe<Scalars['AssetId']>;\n  /** Returns coins owned by the `owner`. */\n  owner: Scalars['Address'];\n};\n\nexport type GqlCoinOutput = {\n  __typename: 'CoinOutput';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  to: Scalars['Address'];\n};\n\n/** The schema analog of the [`coins::CoinType`]. */\nexport type GqlCoinType = GqlCoin | GqlMessageCoin;\n\nexport type GqlConsensus = GqlGenesis | GqlPoAConsensus;\n\nexport type GqlConsensusParameters = {\n  __typename: 'ConsensusParameters';\n  baseAssetId: Scalars['AssetId'];\n  chainId: Scalars['U64'];\n  contractParams: GqlContractParameters;\n  feeParams: GqlFeeParameters;\n  gasCosts: GqlGasCosts;\n  predicateParams: GqlPredicateParameters;\n  scriptParams: GqlScriptParameters;\n  txParams: GqlTxParameters;\n};\n\nexport type GqlContract = {\n  __typename: 'Contract';\n  bytecode: Scalars['HexString'];\n  id: Scalars['ContractId'];\n  salt: Scalars['Salt'];\n};\n\nexport type GqlContractBalance = {\n  __typename: 'ContractBalance';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  contract: Scalars['ContractId'];\n};\n\nexport type GqlContractBalanceConnection = {\n  __typename: 'ContractBalanceConnection';\n  /** A list of edges. */\n  edges: Array<GqlContractBalanceEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlContractBalance>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlContractBalanceEdge = {\n  __typename: 'ContractBalanceEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlContractBalance;\n};\n\nexport type GqlContractBalanceFilterInput = {\n  /** Filter assets based on the `contractId` field */\n  contract: Scalars['ContractId'];\n};\n\nexport type GqlContractCreated = {\n  __typename: 'ContractCreated';\n  contract: GqlContract;\n  stateRoot: Scalars['Bytes32'];\n};\n\nexport type GqlContractOutput = {\n  __typename: 'ContractOutput';\n  balanceRoot: Scalars['Bytes32'];\n  inputIndex: Scalars['Int'];\n  stateRoot: Scalars['Bytes32'];\n};\n\nexport type GqlContractParameters = {\n  __typename: 'ContractParameters';\n  contractMaxSize: Scalars['U64'];\n  maxStorageSlots: Scalars['U64'];\n};\n\nexport type GqlDependentCost = GqlHeavyOperation | GqlLightOperation;\n\nexport type GqlExcludeInput = {\n  /** Messages to exclude from the selection. */\n  messages: Array<Scalars['Nonce']>;\n  /** Utxos to exclude from the selection. */\n  utxos: Array<Scalars['UtxoId']>;\n};\n\nexport type GqlFailureStatus = {\n  __typename: 'FailureStatus';\n  block: GqlBlock;\n  programState?: Maybe<GqlProgramState>;\n  reason: Scalars['String'];\n  receipts: Array<GqlReceipt>;\n  time: Scalars['Tai64Timestamp'];\n  transactionId: Scalars['TransactionId'];\n};\n\nexport type GqlFeeParameters = {\n  __typename: 'FeeParameters';\n  gasPerByte: Scalars['U64'];\n  gasPriceFactor: Scalars['U64'];\n};\n\nexport type GqlGasCosts = {\n  __typename: 'GasCosts';\n  add: Scalars['U64'];\n  addi: Scalars['U64'];\n  aloc: Scalars['U64'];\n  and: Scalars['U64'];\n  andi: Scalars['U64'];\n  bal: Scalars['U64'];\n  bhei: Scalars['U64'];\n  bhsh: Scalars['U64'];\n  burn: Scalars['U64'];\n  call: GqlDependentCost;\n  cb: Scalars['U64'];\n  ccp: GqlDependentCost;\n  cfei: Scalars['U64'];\n  cfsi: Scalars['U64'];\n  contractRoot: GqlDependentCost;\n  croo: Scalars['U64'];\n  csiz: GqlDependentCost;\n  div: Scalars['U64'];\n  divi: Scalars['U64'];\n  eck1: Scalars['U64'];\n  ecr1: Scalars['U64'];\n  ed19: Scalars['U64'];\n  eq: Scalars['U64'];\n  exp: Scalars['U64'];\n  expi: Scalars['U64'];\n  flag: Scalars['U64'];\n  gm: Scalars['U64'];\n  gt: Scalars['U64'];\n  gtf: Scalars['U64'];\n  ji: Scalars['U64'];\n  jmp: Scalars['U64'];\n  jmpb: Scalars['U64'];\n  jmpf: Scalars['U64'];\n  jne: Scalars['U64'];\n  jneb: Scalars['U64'];\n  jnef: Scalars['U64'];\n  jnei: Scalars['U64'];\n  jnzb: Scalars['U64'];\n  jnzf: Scalars['U64'];\n  jnzi: Scalars['U64'];\n  k256: GqlDependentCost;\n  lb: Scalars['U64'];\n  ldc: GqlDependentCost;\n  log: Scalars['U64'];\n  logd: GqlDependentCost;\n  lt: Scalars['U64'];\n  lw: Scalars['U64'];\n  mcl: GqlDependentCost;\n  mcli: GqlDependentCost;\n  mcp: GqlDependentCost;\n  mcpi: GqlDependentCost;\n  meq: GqlDependentCost;\n  mint: Scalars['U64'];\n  mldv: Scalars['U64'];\n  mlog: Scalars['U64'];\n  modOp: Scalars['U64'];\n  modi: Scalars['U64'];\n  moveOp: Scalars['U64'];\n  movi: Scalars['U64'];\n  mroo: Scalars['U64'];\n  mul: Scalars['U64'];\n  muli: Scalars['U64'];\n  newStoragePerByte: Scalars['U64'];\n  noop: Scalars['U64'];\n  not: Scalars['U64'];\n  or: Scalars['U64'];\n  ori: Scalars['U64'];\n  poph: Scalars['U64'];\n  popl: Scalars['U64'];\n  pshh: Scalars['U64'];\n  pshl: Scalars['U64'];\n  ret: Scalars['U64'];\n  retd: GqlDependentCost;\n  rvrt: Scalars['U64'];\n  s256: GqlDependentCost;\n  sb: Scalars['U64'];\n  scwq: GqlDependentCost;\n  sll: Scalars['U64'];\n  slli: Scalars['U64'];\n  smo: GqlDependentCost;\n  srl: Scalars['U64'];\n  srli: Scalars['U64'];\n  srw: Scalars['U64'];\n  srwq: GqlDependentCost;\n  stateRoot: GqlDependentCost;\n  sub: Scalars['U64'];\n  subi: Scalars['U64'];\n  sw: Scalars['U64'];\n  sww: Scalars['U64'];\n  swwq: GqlDependentCost;\n  time: Scalars['U64'];\n  tr: Scalars['U64'];\n  tro: Scalars['U64'];\n  vmInitialization: GqlDependentCost;\n  wdam: Scalars['U64'];\n  wdcm: Scalars['U64'];\n  wddv: Scalars['U64'];\n  wdmd: Scalars['U64'];\n  wdml: Scalars['U64'];\n  wdmm: Scalars['U64'];\n  wdop: Scalars['U64'];\n  wqam: Scalars['U64'];\n  wqcm: Scalars['U64'];\n  wqdv: Scalars['U64'];\n  wqmd: Scalars['U64'];\n  wqml: Scalars['U64'];\n  wqmm: Scalars['U64'];\n  wqop: Scalars['U64'];\n  xor: Scalars['U64'];\n  xori: Scalars['U64'];\n};\n\nexport type GqlGenesis = {\n  __typename: 'Genesis';\n  /**\n   * The chain configs define what consensus type to use, what settlement layer to use,\n   * rules of block validity, etc.\n   */\n  chainConfigHash: Scalars['Bytes32'];\n  /** The Binary Merkle Tree root of all genesis coins. */\n  coinsRoot: Scalars['Bytes32'];\n  /** The Binary Merkle Tree root of state, balances, contracts code hash of each contract. */\n  contractsRoot: Scalars['Bytes32'];\n  /** The Binary Merkle Tree root of all genesis messages. */\n  messagesRoot: Scalars['Bytes32'];\n};\n\nexport type GqlHeader = {\n  __typename: 'Header';\n  /** Hash of the application header. */\n  applicationHash: Scalars['Bytes32'];\n  /** The layer 1 height of messages and events to include since the last layer 1 block number. */\n  daHeight: Scalars['U64'];\n  /** Fuel block height. */\n  height: Scalars['U32'];\n  /** Hash of the header */\n  id: Scalars['BlockId'];\n  /** Number of message receipts in this block. */\n  messageReceiptCount: Scalars['U64'];\n  /** Merkle root of message receipts in this block. */\n  messageReceiptRoot: Scalars['Bytes32'];\n  /** Merkle root of all previous block header hashes. */\n  prevRoot: Scalars['Bytes32'];\n  /** The block producer time. */\n  time: Scalars['Tai64Timestamp'];\n  /** Number of transactions in this block. */\n  transactionsCount: Scalars['U64'];\n  /** Merkle root of transactions. */\n  transactionsRoot: Scalars['Bytes32'];\n};\n\nexport type GqlHeavyOperation = {\n  __typename: 'HeavyOperation';\n  base: Scalars['U64'];\n  gasPerUnit: Scalars['U64'];\n};\n\nexport type GqlInput = GqlInputCoin | GqlInputContract | GqlInputMessage;\n\nexport type GqlInputCoin = {\n  __typename: 'InputCoin';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  maturity: Scalars['U32'];\n  owner: Scalars['Address'];\n  predicate: Scalars['HexString'];\n  predicateData: Scalars['HexString'];\n  predicateGasUsed: Scalars['U64'];\n  txPointer: Scalars['TxPointer'];\n  utxoId: Scalars['UtxoId'];\n  witnessIndex: Scalars['Int'];\n};\n\nexport type GqlInputContract = {\n  __typename: 'InputContract';\n  balanceRoot: Scalars['Bytes32'];\n  contract: GqlContract;\n  stateRoot: Scalars['Bytes32'];\n  txPointer: Scalars['TxPointer'];\n  utxoId: Scalars['UtxoId'];\n};\n\nexport type GqlInputMessage = {\n  __typename: 'InputMessage';\n  amount: Scalars['U64'];\n  data: Scalars['HexString'];\n  nonce: Scalars['Nonce'];\n  predicate: Scalars['HexString'];\n  predicateData: Scalars['HexString'];\n  predicateGasUsed: Scalars['U64'];\n  recipient: Scalars['Address'];\n  sender: Scalars['Address'];\n  witnessIndex: Scalars['Int'];\n};\n\nexport type GqlLightOperation = {\n  __typename: 'LightOperation';\n  base: Scalars['U64'];\n  unitsPerGas: Scalars['U64'];\n};\n\nexport type GqlMerkleProof = {\n  __typename: 'MerkleProof';\n  proofIndex: Scalars['U64'];\n  proofSet: Array<Scalars['Bytes32']>;\n};\n\nexport type GqlMessage = {\n  __typename: 'Message';\n  amount: Scalars['U64'];\n  daHeight: Scalars['U64'];\n  data: Scalars['HexString'];\n  nonce: Scalars['Nonce'];\n  recipient: Scalars['Address'];\n  sender: Scalars['Address'];\n};\n\nexport type GqlMessageCoin = {\n  __typename: 'MessageCoin';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  daHeight: Scalars['U64'];\n  nonce: Scalars['Nonce'];\n  recipient: Scalars['Address'];\n  sender: Scalars['Address'];\n};\n\nexport type GqlMessageConnection = {\n  __typename: 'MessageConnection';\n  /** A list of edges. */\n  edges: Array<GqlMessageEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlMessage>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlMessageEdge = {\n  __typename: 'MessageEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlMessage;\n};\n\nexport type GqlMessageProof = {\n  __typename: 'MessageProof';\n  amount: Scalars['U64'];\n  blockProof: GqlMerkleProof;\n  commitBlockHeader: GqlHeader;\n  data: Scalars['HexString'];\n  messageBlockHeader: GqlHeader;\n  messageProof: GqlMerkleProof;\n  nonce: Scalars['Nonce'];\n  recipient: Scalars['Address'];\n  sender: Scalars['Address'];\n};\n\nexport enum GqlMessageState {\n  NotFound = 'NOT_FOUND',\n  Spent = 'SPENT',\n  Unspent = 'UNSPENT'\n}\n\nexport type GqlMessageStatus = {\n  __typename: 'MessageStatus';\n  state: GqlMessageState;\n};\n\nexport type GqlMutation = {\n  __typename: 'Mutation';\n  continueTx: GqlRunResult;\n  /** Execute a dry-run of the transaction using a fork of current state, no changes are committed. */\n  dryRun: Array<GqlReceipt>;\n  endSession: Scalars['Boolean'];\n  execute: Scalars['Boolean'];\n  /**\n   * Sequentially produces `blocks_to_produce` blocks. The first block starts with\n   * `start_timestamp`. If the block production in the [`crate::service::Config`] is\n   * `Trigger::Interval { block_time }`, produces blocks with `block_time ` intervals between\n   * them. The `start_timestamp` is the timestamp in seconds.\n   */\n  produceBlocks: Scalars['U32'];\n  reset: Scalars['Boolean'];\n  setBreakpoint: Scalars['Boolean'];\n  setSingleStepping: Scalars['Boolean'];\n  startSession: Scalars['ID'];\n  startTx: GqlRunResult;\n  /**\n   * Submits transaction to the `TxPool`.\n   *\n   * Returns submitted transaction if the transaction is included in the `TxPool` without problems.\n   */\n  submit: GqlTransaction;\n};\n\n\nexport type GqlMutationContinueTxArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationDryRunArgs = {\n  tx: Scalars['HexString'];\n  utxoValidation?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type GqlMutationEndSessionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationExecuteArgs = {\n  id: Scalars['ID'];\n  op: Scalars['String'];\n};\n\n\nexport type GqlMutationProduceBlocksArgs = {\n  blocksToProduce: Scalars['U32'];\n  startTimestamp?: InputMaybe<Scalars['Tai64Timestamp']>;\n};\n\n\nexport type GqlMutationResetArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationSetBreakpointArgs = {\n  breakpoint: GqlBreakpoint;\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationSetSingleSteppingArgs = {\n  enable: Scalars['Boolean'];\n  id: Scalars['ID'];\n};\n\n\nexport type GqlMutationStartTxArgs = {\n  id: Scalars['ID'];\n  txJson: Scalars['String'];\n};\n\n\nexport type GqlMutationSubmitArgs = {\n  tx: Scalars['HexString'];\n};\n\nexport type GqlNodeInfo = {\n  __typename: 'NodeInfo';\n  maxDepth: Scalars['U64'];\n  maxTx: Scalars['U64'];\n  minGasPrice: Scalars['U64'];\n  nodeVersion: Scalars['String'];\n  peers: Array<GqlPeerInfo>;\n  utxoValidation: Scalars['Boolean'];\n  vmBacktrace: Scalars['Boolean'];\n};\n\nexport type GqlOutput = GqlChangeOutput | GqlCoinOutput | GqlContractCreated | GqlContractOutput | GqlVariableOutput;\n\n/**\n * A separate `Breakpoint` type to be used as an output, as a single\n * type cannot act as both input and output type in async-graphql\n */\nexport type GqlOutputBreakpoint = {\n  __typename: 'OutputBreakpoint';\n  contract: Scalars['ContractId'];\n  pc: Scalars['U64'];\n};\n\n/** Information about pagination in a connection */\nexport type GqlPageInfo = {\n  __typename: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport type GqlPeerInfo = {\n  __typename: 'PeerInfo';\n  /** The advertised multi-addrs that can be used to connect to this peer */\n  addresses: Array<Scalars['String']>;\n  /** The internal fuel p2p reputation of this peer */\n  appScore: Scalars['Float'];\n  /** The last reported height of the peer */\n  blockHeight?: Maybe<Scalars['U32']>;\n  /** The self-reported version of the client the peer is using */\n  clientVersion?: Maybe<Scalars['String']>;\n  /** The libp2p peer id */\n  id: Scalars['String'];\n  /** The last heartbeat from this peer in unix epoch time ms */\n  lastHeartbeatMs: Scalars['U64'];\n};\n\nexport type GqlPoAConsensus = {\n  __typename: 'PoAConsensus';\n  /** Gets the signature of the block produced by `PoA` consensus. */\n  signature: Scalars['Signature'];\n};\n\nexport type GqlPolicies = {\n  __typename: 'Policies';\n  gasPrice?: Maybe<Scalars['U64']>;\n  maturity?: Maybe<Scalars['U32']>;\n  maxFee?: Maybe<Scalars['U64']>;\n  witnessLimit?: Maybe<Scalars['U64']>;\n};\n\nexport type GqlPredicateParameters = {\n  __typename: 'PredicateParameters';\n  maxGasPerPredicate: Scalars['U64'];\n  maxMessageDataLength: Scalars['U64'];\n  maxPredicateDataLength: Scalars['U64'];\n  maxPredicateLength: Scalars['U64'];\n};\n\nexport type GqlProgramState = {\n  __typename: 'ProgramState';\n  data: Scalars['HexString'];\n  returnType: GqlReturnType;\n};\n\nexport type GqlQuery = {\n  __typename: 'Query';\n  balance: GqlBalance;\n  balances: GqlBalanceConnection;\n  block?: Maybe<GqlBlock>;\n  blocks: GqlBlockConnection;\n  chain: GqlChainInfo;\n  /** Gets the coin by `utxo_id`. */\n  coin?: Maybe<GqlCoin>;\n  /** Gets all unspent coins of some `owner` maybe filtered with by `asset_id` per page. */\n  coins: GqlCoinConnection;\n  /**\n   * For each `query_per_asset`, get some spendable coins(of asset specified by the query) owned by\n   * `owner` that add up at least the query amount. The returned coins can be spent.\n   * The number of coins is optimized to prevent dust accumulation.\n   *\n   * The query supports excluding and maximum the number of coins.\n   *\n   * Returns:\n   * The list of spendable coins per asset from the query. The length of the result is\n   * the same as the length of `query_per_asset`. The ordering of assets and `query_per_asset`\n   * is the same.\n   */\n  coinsToSpend: Array<Array<GqlCoinType>>;\n  contract?: Maybe<GqlContract>;\n  contractBalance: GqlContractBalance;\n  contractBalances: GqlContractBalanceConnection;\n  /** Estimate the predicate gas for the provided transaction */\n  estimatePredicates: GqlTransaction;\n  /** Returns true when the GraphQL API is serving requests. */\n  health: Scalars['Boolean'];\n  memory: Scalars['String'];\n  messageProof?: Maybe<GqlMessageProof>;\n  messageStatus: GqlMessageStatus;\n  messages: GqlMessageConnection;\n  nodeInfo: GqlNodeInfo;\n  register: Scalars['U64'];\n  transaction?: Maybe<GqlTransaction>;\n  transactions: GqlTransactionConnection;\n  transactionsByOwner: GqlTransactionConnection;\n};\n\n\nexport type GqlQueryBalanceArgs = {\n  assetId: Scalars['AssetId'];\n  owner: Scalars['Address'];\n};\n\n\nexport type GqlQueryBalancesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filter: GqlBalanceFilterInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryBlockArgs = {\n  height?: InputMaybe<Scalars['U32']>;\n  id?: InputMaybe<Scalars['BlockId']>;\n};\n\n\nexport type GqlQueryBlocksArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryCoinArgs = {\n  utxoId: Scalars['UtxoId'];\n};\n\n\nexport type GqlQueryCoinsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filter: GqlCoinFilterInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryCoinsToSpendArgs = {\n  excludedIds?: InputMaybe<GqlExcludeInput>;\n  owner: Scalars['Address'];\n  queryPerAsset: Array<GqlSpendQueryElementInput>;\n};\n\n\nexport type GqlQueryContractArgs = {\n  id: Scalars['ContractId'];\n};\n\n\nexport type GqlQueryContractBalanceArgs = {\n  asset: Scalars['AssetId'];\n  contract: Scalars['ContractId'];\n};\n\n\nexport type GqlQueryContractBalancesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  filter: GqlContractBalanceFilterInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryEstimatePredicatesArgs = {\n  tx: Scalars['HexString'];\n};\n\n\nexport type GqlQueryMemoryArgs = {\n  id: Scalars['ID'];\n  size: Scalars['U32'];\n  start: Scalars['U32'];\n};\n\n\nexport type GqlQueryMessageProofArgs = {\n  commitBlockHeight?: InputMaybe<Scalars['U32']>;\n  commitBlockId?: InputMaybe<Scalars['BlockId']>;\n  nonce: Scalars['Nonce'];\n  transactionId: Scalars['TransactionId'];\n};\n\n\nexport type GqlQueryMessageStatusArgs = {\n  nonce: Scalars['Nonce'];\n};\n\n\nexport type GqlQueryMessagesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  owner?: InputMaybe<Scalars['Address']>;\n};\n\n\nexport type GqlQueryRegisterArgs = {\n  id: Scalars['ID'];\n  register: Scalars['U32'];\n};\n\n\nexport type GqlQueryTransactionArgs = {\n  id: Scalars['TransactionId'];\n};\n\n\nexport type GqlQueryTransactionsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type GqlQueryTransactionsByOwnerArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  owner: Scalars['Address'];\n};\n\nexport type GqlReceipt = {\n  __typename: 'Receipt';\n  amount?: Maybe<Scalars['U64']>;\n  assetId?: Maybe<Scalars['AssetId']>;\n  contract?: Maybe<GqlContract>;\n  contractId?: Maybe<Scalars['ContractId']>;\n  data?: Maybe<Scalars['HexString']>;\n  digest?: Maybe<Scalars['Bytes32']>;\n  gas?: Maybe<Scalars['U64']>;\n  gasUsed?: Maybe<Scalars['U64']>;\n  is?: Maybe<Scalars['U64']>;\n  len?: Maybe<Scalars['U64']>;\n  nonce?: Maybe<Scalars['Nonce']>;\n  param1?: Maybe<Scalars['U64']>;\n  param2?: Maybe<Scalars['U64']>;\n  pc?: Maybe<Scalars['U64']>;\n  ptr?: Maybe<Scalars['U64']>;\n  ra?: Maybe<Scalars['U64']>;\n  rb?: Maybe<Scalars['U64']>;\n  rc?: Maybe<Scalars['U64']>;\n  rd?: Maybe<Scalars['U64']>;\n  reason?: Maybe<Scalars['U64']>;\n  receiptType: GqlReceiptType;\n  recipient?: Maybe<Scalars['Address']>;\n  result?: Maybe<Scalars['U64']>;\n  sender?: Maybe<Scalars['Address']>;\n  subId?: Maybe<Scalars['Bytes32']>;\n  to?: Maybe<GqlContract>;\n  toAddress?: Maybe<Scalars['Address']>;\n  val?: Maybe<Scalars['U64']>;\n};\n\nexport enum GqlReceiptType {\n  Burn = 'BURN',\n  Call = 'CALL',\n  Log = 'LOG',\n  LogData = 'LOG_DATA',\n  MessageOut = 'MESSAGE_OUT',\n  Mint = 'MINT',\n  Panic = 'PANIC',\n  Return = 'RETURN',\n  ReturnData = 'RETURN_DATA',\n  Revert = 'REVERT',\n  ScriptResult = 'SCRIPT_RESULT',\n  Transfer = 'TRANSFER',\n  TransferOut = 'TRANSFER_OUT'\n}\n\nexport enum GqlReturnType {\n  Return = 'RETURN',\n  ReturnData = 'RETURN_DATA',\n  Revert = 'REVERT'\n}\n\nexport type GqlRunResult = {\n  __typename: 'RunResult';\n  breakpoint?: Maybe<GqlOutputBreakpoint>;\n  jsonReceipts: Array<Scalars['String']>;\n  state: GqlRunState;\n};\n\nexport enum GqlRunState {\n  /** Stopped on a breakpoint */\n  Breakpoint = 'BREAKPOINT',\n  /** All breakpoints have been processed, and the program has terminated */\n  Completed = 'COMPLETED'\n}\n\nexport type GqlScriptParameters = {\n  __typename: 'ScriptParameters';\n  maxScriptDataLength: Scalars['U64'];\n  maxScriptLength: Scalars['U64'];\n};\n\nexport type GqlSpendQueryElementInput = {\n  /** Target amount for the query. */\n  amount: Scalars['U64'];\n  /** Identifier of the asset to spend. */\n  assetId: Scalars['AssetId'];\n  /** The maximum number of currencies for selection. */\n  max?: InputMaybe<Scalars['U32']>;\n};\n\nexport type GqlSqueezedOutStatus = {\n  __typename: 'SqueezedOutStatus';\n  reason: Scalars['String'];\n};\n\nexport type GqlSubmittedStatus = {\n  __typename: 'SubmittedStatus';\n  time: Scalars['Tai64Timestamp'];\n};\n\nexport type GqlSubscription = {\n  __typename: 'Subscription';\n  /**\n   * Returns a stream of status updates for the given transaction id.\n   * If the current status is [`TransactionStatus::Success`], [`TransactionStatus::SqueezedOut`]\n   * or [`TransactionStatus::Failed`] the stream will return that and end immediately.\n   * If the current status is [`TransactionStatus::Submitted`] this will be returned\n   * and the stream will wait for a future update.\n   *\n   * This stream will wait forever so it's advised to use within a timeout.\n   *\n   * It is possible for the stream to miss an update if it is polled slower\n   * then the updates arrive. In such a case the stream will close without\n   * a status. If this occurs the stream can simply be restarted to return\n   * the latest status.\n   */\n  statusChange: GqlTransactionStatus;\n  /** Submits transaction to the `TxPool` and await either confirmation or failure. */\n  submitAndAwait: GqlTransactionStatus;\n};\n\n\nexport type GqlSubscriptionStatusChangeArgs = {\n  id: Scalars['TransactionId'];\n};\n\n\nexport type GqlSubscriptionSubmitAndAwaitArgs = {\n  tx: Scalars['HexString'];\n};\n\nexport type GqlSuccessStatus = {\n  __typename: 'SuccessStatus';\n  block: GqlBlock;\n  programState?: Maybe<GqlProgramState>;\n  receipts: Array<GqlReceipt>;\n  time: Scalars['Tai64Timestamp'];\n  transactionId: Scalars['TransactionId'];\n};\n\nexport type GqlTransaction = {\n  __typename: 'Transaction';\n  bytecodeLength?: Maybe<Scalars['U64']>;\n  bytecodeWitnessIndex?: Maybe<Scalars['Int']>;\n  gasPrice?: Maybe<Scalars['U64']>;\n  id: Scalars['TransactionId'];\n  inputAssetIds?: Maybe<Array<Scalars['AssetId']>>;\n  inputContract?: Maybe<GqlInputContract>;\n  inputContracts?: Maybe<Array<GqlContract>>;\n  inputs?: Maybe<Array<GqlInput>>;\n  isCreate: Scalars['Boolean'];\n  isMint: Scalars['Boolean'];\n  isScript: Scalars['Boolean'];\n  maturity?: Maybe<Scalars['U32']>;\n  mintAmount?: Maybe<Scalars['U64']>;\n  mintAssetId?: Maybe<Scalars['AssetId']>;\n  outputContract?: Maybe<GqlContractOutput>;\n  outputs: Array<GqlOutput>;\n  policies?: Maybe<GqlPolicies>;\n  /** Return the transaction bytes using canonical encoding */\n  rawPayload: Scalars['HexString'];\n  receipts?: Maybe<Array<GqlReceipt>>;\n  receiptsRoot?: Maybe<Scalars['Bytes32']>;\n  salt?: Maybe<Scalars['Salt']>;\n  script?: Maybe<Scalars['HexString']>;\n  scriptData?: Maybe<Scalars['HexString']>;\n  scriptGasLimit?: Maybe<Scalars['U64']>;\n  status?: Maybe<GqlTransactionStatus>;\n  storageSlots?: Maybe<Array<Scalars['HexString']>>;\n  txPointer?: Maybe<Scalars['TxPointer']>;\n  witnesses?: Maybe<Array<Scalars['HexString']>>;\n};\n\nexport type GqlTransactionConnection = {\n  __typename: 'TransactionConnection';\n  /** A list of edges. */\n  edges: Array<GqlTransactionEdge>;\n  /** A list of nodes. */\n  nodes: Array<GqlTransaction>;\n  /** Information to aid in pagination. */\n  pageInfo: GqlPageInfo;\n};\n\n/** An edge in a connection. */\nexport type GqlTransactionEdge = {\n  __typename: 'TransactionEdge';\n  /** A cursor for use in pagination */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge */\n  node: GqlTransaction;\n};\n\nexport type GqlTransactionStatus = GqlFailureStatus | GqlSqueezedOutStatus | GqlSubmittedStatus | GqlSuccessStatus;\n\nexport type GqlTxParameters = {\n  __typename: 'TxParameters';\n  maxGasPerTx: Scalars['U64'];\n  maxInputs: Scalars['U8'];\n  maxOutputs: Scalars['U8'];\n  maxSize: Scalars['U64'];\n  maxWitnesses: Scalars['U32'];\n};\n\nexport type GqlVariableOutput = {\n  __typename: 'VariableOutput';\n  amount: Scalars['U64'];\n  assetId: Scalars['AssetId'];\n  to: Scalars['Address'];\n};\n\ntype GqlTransactionStatusFragment_FailureStatus_Fragment = { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } };\n\ntype GqlTransactionStatusFragment_SqueezedOutStatus_Fragment = { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' };\n\ntype GqlTransactionStatusFragment_SubmittedStatus_Fragment = { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' };\n\ntype GqlTransactionStatusFragment_SuccessStatus_Fragment = { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null };\n\nexport type GqlTransactionStatusFragmentFragment = GqlTransactionStatusFragment_FailureStatus_Fragment | GqlTransactionStatusFragment_SqueezedOutStatus_Fragment | GqlTransactionStatusFragment_SubmittedStatus_Fragment | GqlTransactionStatusFragment_SuccessStatus_Fragment;\n\nexport type GqlTransactionFragmentFragment = { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string } | null, to?: { __typename: 'Contract', id: string } | null }> | null, status?: { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null };\n\ntype GqlInputEstimatePredicatesFragment_InputCoin_Fragment = { __typename: 'InputCoin', predicateGasUsed: string };\n\ntype GqlInputEstimatePredicatesFragment_InputContract_Fragment = { __typename: 'InputContract' };\n\ntype GqlInputEstimatePredicatesFragment_InputMessage_Fragment = { __typename: 'InputMessage', predicateGasUsed: string };\n\nexport type GqlInputEstimatePredicatesFragmentFragment = GqlInputEstimatePredicatesFragment_InputCoin_Fragment | GqlInputEstimatePredicatesFragment_InputContract_Fragment | GqlInputEstimatePredicatesFragment_InputMessage_Fragment;\n\nexport type GqlTransactionEstimatePredicatesFragmentFragment = { __typename: 'Transaction', inputs?: Array<{ __typename: 'InputCoin', predicateGasUsed: string } | { __typename: 'InputContract' } | { __typename: 'InputMessage', predicateGasUsed: string }> | null };\n\nexport type GqlReceiptFragmentFragment = { __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string } | null, to?: { __typename: 'Contract', id: string } | null };\n\nexport type GqlBlockFragmentFragment = { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: string }, transactions: Array<{ __typename: 'Transaction', id: string }> };\n\nexport type GqlCoinFragmentFragment = { __typename: 'Coin', utxoId: string, owner: string, amount: string, assetId: string, maturity: any, blockCreated: any, txCreatedIdx: string };\n\nexport type GqlMessageCoinFragmentFragment = { __typename: 'MessageCoin', sender: string, recipient: string, nonce: string, amount: string, assetId: string, daHeight: string };\n\nexport type GqlMessageFragmentFragment = { __typename: 'Message', amount: string, sender: string, recipient: string, data: string, nonce: string, daHeight: string };\n\nexport type GqlMessageProofFragmentFragment = { __typename: 'MessageProof', sender: string, recipient: string, nonce: string, amount: string, data: string, messageProof: { __typename: 'MerkleProof', proofSet: Array<string>, proofIndex: string }, blockProof: { __typename: 'MerkleProof', proofSet: Array<string>, proofIndex: string }, messageBlockHeader: { __typename: 'Header', id: string, daHeight: string, transactionsCount: string, transactionsRoot: string, height: any, prevRoot: string, time: string, applicationHash: string, messageReceiptRoot: string, messageReceiptCount: string }, commitBlockHeader: { __typename: 'Header', id: string, daHeight: string, transactionsCount: string, transactionsRoot: string, height: any, prevRoot: string, time: string, applicationHash: string, messageReceiptRoot: string, messageReceiptCount: string } };\n\nexport type GqlBalanceFragmentFragment = { __typename: 'Balance', owner: string, amount: string, assetId: string };\n\nexport type GqlTxParametersFragmentFragment = { __typename: 'TxParameters', maxInputs: any, maxOutputs: any, maxWitnesses: any, maxGasPerTx: string, maxSize: string };\n\nexport type GqlPredicateParametersFragmentFragment = { __typename: 'PredicateParameters', maxPredicateLength: string, maxPredicateDataLength: string, maxGasPerPredicate: string, maxMessageDataLength: string };\n\nexport type GqlScriptParametersFragmentFragment = { __typename: 'ScriptParameters', maxScriptLength: string, maxScriptDataLength: string };\n\nexport type GqlContractParametersFragmentFragment = { __typename: 'ContractParameters', contractMaxSize: string, maxStorageSlots: string };\n\nexport type GqlFeeParametersFragmentFragment = { __typename: 'FeeParameters', gasPriceFactor: string, gasPerByte: string };\n\ntype GqlDependentCostFragment_HeavyOperation_Fragment = { __typename: 'HeavyOperation', base: string, gasPerUnit: string };\n\ntype GqlDependentCostFragment_LightOperation_Fragment = { __typename: 'LightOperation', base: string, unitsPerGas: string };\n\nexport type GqlDependentCostFragmentFragment = GqlDependentCostFragment_HeavyOperation_Fragment | GqlDependentCostFragment_LightOperation_Fragment;\n\nexport type GqlGasCostsFragmentFragment = { __typename: 'GasCosts', add: string, addi: string, aloc: string, and: string, andi: string, bal: string, bhei: string, bhsh: string, burn: string, cb: string, cfei: string, cfsi: string, croo: string, div: string, divi: string, ecr1: string, eck1: string, ed19: string, eq: string, exp: string, expi: string, flag: string, gm: string, gt: string, gtf: string, ji: string, jmp: string, jne: string, jnei: string, jnzi: string, jmpf: string, jmpb: string, jnzf: string, jnzb: string, jnef: string, jneb: string, lb: string, log: string, lt: string, lw: string, mint: string, mlog: string, modOp: string, modi: string, moveOp: string, movi: string, mroo: string, mul: string, muli: string, mldv: string, noop: string, not: string, or: string, ori: string, poph: string, popl: string, pshh: string, pshl: string, ret: string, rvrt: string, sb: string, sll: string, slli: string, srl: string, srli: string, srw: string, sub: string, subi: string, sw: string, sww: string, time: string, tr: string, tro: string, wdcm: string, wqcm: string, wdop: string, wqop: string, wdml: string, wqml: string, wddv: string, wqdv: string, wdmd: string, wqmd: string, wdam: string, wqam: string, wdmm: string, wqmm: string, xor: string, xori: string, newStoragePerByte: string, call: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ccp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, csiz: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, k256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ldc: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, logd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcl: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcli: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcpi: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, meq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, retd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, s256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, scwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, smo: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, srwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, swwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, contractRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, stateRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, vmInitialization: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string } };\n\nexport type GqlConsensusParametersFragmentFragment = { __typename: 'ConsensusParameters', baseAssetId: string, chainId: string, txParams: { __typename: 'TxParameters', maxInputs: any, maxOutputs: any, maxWitnesses: any, maxGasPerTx: string, maxSize: string }, predicateParams: { __typename: 'PredicateParameters', maxPredicateLength: string, maxPredicateDataLength: string, maxGasPerPredicate: string, maxMessageDataLength: string }, scriptParams: { __typename: 'ScriptParameters', maxScriptLength: string, maxScriptDataLength: string }, contractParams: { __typename: 'ContractParameters', contractMaxSize: string, maxStorageSlots: string }, feeParams: { __typename: 'FeeParameters', gasPriceFactor: string, gasPerByte: string }, gasCosts: { __typename: 'GasCosts', add: string, addi: string, aloc: string, and: string, andi: string, bal: string, bhei: string, bhsh: string, burn: string, cb: string, cfei: string, cfsi: string, croo: string, div: string, divi: string, ecr1: string, eck1: string, ed19: string, eq: string, exp: string, expi: string, flag: string, gm: string, gt: string, gtf: string, ji: string, jmp: string, jne: string, jnei: string, jnzi: string, jmpf: string, jmpb: string, jnzf: string, jnzb: string, jnef: string, jneb: string, lb: string, log: string, lt: string, lw: string, mint: string, mlog: string, modOp: string, modi: string, moveOp: string, movi: string, mroo: string, mul: string, muli: string, mldv: string, noop: string, not: string, or: string, ori: string, poph: string, popl: string, pshh: string, pshl: string, ret: string, rvrt: string, sb: string, sll: string, slli: string, srl: string, srli: string, srw: string, sub: string, subi: string, sw: string, sww: string, time: string, tr: string, tro: string, wdcm: string, wqcm: string, wdop: string, wqop: string, wdml: string, wqml: string, wddv: string, wqdv: string, wdmd: string, wqmd: string, wdam: string, wqam: string, wdmm: string, wqmm: string, xor: string, xori: string, newStoragePerByte: string, call: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ccp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, csiz: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, k256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ldc: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, logd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcl: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcli: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcpi: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, meq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, retd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, s256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, scwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, smo: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, srwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, swwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, contractRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, stateRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, vmInitialization: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string } } };\n\nexport type GqlChainInfoFragmentFragment = { __typename: 'ChainInfo', name: string, daHeight: string, latestBlock: { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: string }, transactions: Array<{ __typename: 'Transaction', id: string }> }, consensusParameters: { __typename: 'ConsensusParameters', baseAssetId: string, chainId: string, txParams: { __typename: 'TxParameters', maxInputs: any, maxOutputs: any, maxWitnesses: any, maxGasPerTx: string, maxSize: string }, predicateParams: { __typename: 'PredicateParameters', maxPredicateLength: string, maxPredicateDataLength: string, maxGasPerPredicate: string, maxMessageDataLength: string }, scriptParams: { __typename: 'ScriptParameters', maxScriptLength: string, maxScriptDataLength: string }, contractParams: { __typename: 'ContractParameters', contractMaxSize: string, maxStorageSlots: string }, feeParams: { __typename: 'FeeParameters', gasPriceFactor: string, gasPerByte: string }, gasCosts: { __typename: 'GasCosts', add: string, addi: string, aloc: string, and: string, andi: string, bal: string, bhei: string, bhsh: string, burn: string, cb: string, cfei: string, cfsi: string, croo: string, div: string, divi: string, ecr1: string, eck1: string, ed19: string, eq: string, exp: string, expi: string, flag: string, gm: string, gt: string, gtf: string, ji: string, jmp: string, jne: string, jnei: string, jnzi: string, jmpf: string, jmpb: string, jnzf: string, jnzb: string, jnef: string, jneb: string, lb: string, log: string, lt: string, lw: string, mint: string, mlog: string, modOp: string, modi: string, moveOp: string, movi: string, mroo: string, mul: string, muli: string, mldv: string, noop: string, not: string, or: string, ori: string, poph: string, popl: string, pshh: string, pshl: string, ret: string, rvrt: string, sb: string, sll: string, slli: string, srl: string, srli: string, srw: string, sub: string, subi: string, sw: string, sww: string, time: string, tr: string, tro: string, wdcm: string, wqcm: string, wdop: string, wqop: string, wdml: string, wqml: string, wddv: string, wqdv: string, wdmd: string, wqmd: string, wdam: string, wqam: string, wdmm: string, wqmm: string, xor: string, xori: string, newStoragePerByte: string, call: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ccp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, csiz: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, k256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ldc: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, logd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcl: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcli: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcpi: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, meq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, retd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, s256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, scwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, smo: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, srwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, swwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, contractRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, stateRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, vmInitialization: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string } } } };\n\nexport type GqlContractBalanceFragmentFragment = { __typename: 'ContractBalance', contract: string, amount: string, assetId: string };\n\nexport type GqlPageInfoFragmentFragment = { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null };\n\nexport type GqlGetVersionQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GqlGetVersionQuery = { __typename: 'Query', nodeInfo: { __typename: 'NodeInfo', nodeVersion: string } };\n\nexport type GqlNodeInfoFragmentFragment = { __typename: 'NodeInfo', utxoValidation: boolean, vmBacktrace: boolean, minGasPrice: string, maxTx: string, maxDepth: string, nodeVersion: string, peers: Array<{ __typename: 'PeerInfo', id: string, addresses: Array<string>, clientVersion?: string | null, blockHeight?: any | null, lastHeartbeatMs: string, appScore: number }> };\n\nexport type GqlGetNodeInfoQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GqlGetNodeInfoQuery = { __typename: 'Query', nodeInfo: { __typename: 'NodeInfo', utxoValidation: boolean, vmBacktrace: boolean, minGasPrice: string, maxTx: string, maxDepth: string, nodeVersion: string, peers: Array<{ __typename: 'PeerInfo', id: string, addresses: Array<string>, clientVersion?: string | null, blockHeight?: any | null, lastHeartbeatMs: string, appScore: number }> } };\n\nexport type GqlGetChainQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GqlGetChainQuery = { __typename: 'Query', chain: { __typename: 'ChainInfo', name: string, daHeight: string, latestBlock: { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: string }, transactions: Array<{ __typename: 'Transaction', id: string }> }, consensusParameters: { __typename: 'ConsensusParameters', baseAssetId: string, chainId: string, txParams: { __typename: 'TxParameters', maxInputs: any, maxOutputs: any, maxWitnesses: any, maxGasPerTx: string, maxSize: string }, predicateParams: { __typename: 'PredicateParameters', maxPredicateLength: string, maxPredicateDataLength: string, maxGasPerPredicate: string, maxMessageDataLength: string }, scriptParams: { __typename: 'ScriptParameters', maxScriptLength: string, maxScriptDataLength: string }, contractParams: { __typename: 'ContractParameters', contractMaxSize: string, maxStorageSlots: string }, feeParams: { __typename: 'FeeParameters', gasPriceFactor: string, gasPerByte: string }, gasCosts: { __typename: 'GasCosts', add: string, addi: string, aloc: string, and: string, andi: string, bal: string, bhei: string, bhsh: string, burn: string, cb: string, cfei: string, cfsi: string, croo: string, div: string, divi: string, ecr1: string, eck1: string, ed19: string, eq: string, exp: string, expi: string, flag: string, gm: string, gt: string, gtf: string, ji: string, jmp: string, jne: string, jnei: string, jnzi: string, jmpf: string, jmpb: string, jnzf: string, jnzb: string, jnef: string, jneb: string, lb: string, log: string, lt: string, lw: string, mint: string, mlog: string, modOp: string, modi: string, moveOp: string, movi: string, mroo: string, mul: string, muli: string, mldv: string, noop: string, not: string, or: string, ori: string, poph: string, popl: string, pshh: string, pshl: string, ret: string, rvrt: string, sb: string, sll: string, slli: string, srl: string, srli: string, srw: string, sub: string, subi: string, sw: string, sww: string, time: string, tr: string, tro: string, wdcm: string, wqcm: string, wdop: string, wqop: string, wdml: string, wqml: string, wddv: string, wqdv: string, wdmd: string, wqmd: string, wdam: string, wqam: string, wdmm: string, wqmm: string, xor: string, xori: string, newStoragePerByte: string, call: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ccp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, csiz: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, k256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, ldc: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, logd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcl: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcli: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcp: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, mcpi: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, meq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, retd: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, s256: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, scwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, smo: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, srwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, swwq: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, contractRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, stateRoot: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string }, vmInitialization: { __typename: 'HeavyOperation', base: string, gasPerUnit: string } | { __typename: 'LightOperation', base: string, unitsPerGas: string } } } } };\n\nexport type GqlGetTransactionQueryVariables = Exact<{\n  transactionId: Scalars['TransactionId'];\n}>;\n\n\nexport type GqlGetTransactionQuery = { __typename: 'Query', transaction?: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string } | null, to?: { __typename: 'Contract', id: string } | null }> | null, status?: { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } | null };\n\nexport type GqlGetTransactionWithReceiptsQueryVariables = Exact<{\n  transactionId: Scalars['TransactionId'];\n}>;\n\n\nexport type GqlGetTransactionWithReceiptsQuery = { __typename: 'Query', transaction?: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string } | null, to?: { __typename: 'Contract', id: string } | null }> | null, status?: { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } | null };\n\nexport type GqlGetTransactionsQueryVariables = Exact<{\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetTransactionsQuery = { __typename: 'Query', transactions: { __typename: 'TransactionConnection', edges: Array<{ __typename: 'TransactionEdge', node: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string } | null, to?: { __typename: 'Contract', id: string } | null }> | null, status?: { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } }> } };\n\nexport type GqlGetTransactionsByOwnerQueryVariables = Exact<{\n  owner: Scalars['Address'];\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetTransactionsByOwnerQuery = { __typename: 'Query', transactionsByOwner: { __typename: 'TransactionConnection', pageInfo: { __typename: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null, endCursor?: string | null }, edges: Array<{ __typename: 'TransactionEdge', node: { __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string } | null, to?: { __typename: 'Contract', id: string } | null }> | null, status?: { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null } }> } };\n\nexport type GqlEstimatePredicatesQueryVariables = Exact<{\n  encodedTransaction: Scalars['HexString'];\n}>;\n\n\nexport type GqlEstimatePredicatesQuery = { __typename: 'Query', estimatePredicates: { __typename: 'Transaction', inputs?: Array<{ __typename: 'InputCoin', predicateGasUsed: string } | { __typename: 'InputContract' } | { __typename: 'InputMessage', predicateGasUsed: string }> | null } };\n\nexport type GqlGetBlockQueryVariables = Exact<{\n  blockId?: InputMaybe<Scalars['BlockId']>;\n  height?: InputMaybe<Scalars['U32']>;\n}>;\n\n\nexport type GqlGetBlockQuery = { __typename: 'Query', block?: { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: string }, transactions: Array<{ __typename: 'Transaction', id: string }> } | null };\n\nexport type GqlGetBlockWithTransactionsQueryVariables = Exact<{\n  blockId?: InputMaybe<Scalars['BlockId']>;\n  blockHeight?: InputMaybe<Scalars['U32']>;\n}>;\n\n\nexport type GqlGetBlockWithTransactionsQuery = { __typename: 'Query', block?: { __typename: 'Block', id: string, transactions: Array<{ __typename: 'Transaction', id: string, rawPayload: string, gasPrice?: string | null, receipts?: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string } | null, to?: { __typename: 'Contract', id: string } | null }> | null, status?: { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } | null }>, header: { __typename: 'Header', height: any, time: string } } | null };\n\nexport type GqlGetBlocksQueryVariables = Exact<{\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetBlocksQuery = { __typename: 'Query', blocks: { __typename: 'BlockConnection', edges: Array<{ __typename: 'BlockEdge', node: { __typename: 'Block', id: string, header: { __typename: 'Header', height: any, time: string }, transactions: Array<{ __typename: 'Transaction', id: string }> } }> } };\n\nexport type GqlGetCoinQueryVariables = Exact<{\n  coinId: Scalars['UtxoId'];\n}>;\n\n\nexport type GqlGetCoinQuery = { __typename: 'Query', coin?: { __typename: 'Coin', utxoId: string, owner: string, amount: string, assetId: string, maturity: any, blockCreated: any, txCreatedIdx: string } | null };\n\nexport type GqlGetCoinsQueryVariables = Exact<{\n  filter: GqlCoinFilterInput;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetCoinsQuery = { __typename: 'Query', coins: { __typename: 'CoinConnection', edges: Array<{ __typename: 'CoinEdge', node: { __typename: 'Coin', utxoId: string, owner: string, amount: string, assetId: string, maturity: any, blockCreated: any, txCreatedIdx: string } }> } };\n\nexport type GqlGetCoinsToSpendQueryVariables = Exact<{\n  owner: Scalars['Address'];\n  queryPerAsset: Array<GqlSpendQueryElementInput> | GqlSpendQueryElementInput;\n  excludedIds?: InputMaybe<GqlExcludeInput>;\n}>;\n\n\nexport type GqlGetCoinsToSpendQuery = { __typename: 'Query', coinsToSpend: Array<Array<{ __typename: 'Coin', utxoId: string, owner: string, amount: string, assetId: string, maturity: any, blockCreated: any, txCreatedIdx: string } | { __typename: 'MessageCoin', sender: string, recipient: string, nonce: string, amount: string, assetId: string, daHeight: string }>> };\n\nexport type GqlGetContractQueryVariables = Exact<{\n  contractId: Scalars['ContractId'];\n}>;\n\n\nexport type GqlGetContractQuery = { __typename: 'Query', contract?: { __typename: 'Contract', bytecode: string, id: string } | null };\n\nexport type GqlGetContractBalanceQueryVariables = Exact<{\n  contract: Scalars['ContractId'];\n  asset: Scalars['AssetId'];\n}>;\n\n\nexport type GqlGetContractBalanceQuery = { __typename: 'Query', contractBalance: { __typename: 'ContractBalance', contract: string, amount: string, assetId: string } };\n\nexport type GqlGetBalanceQueryVariables = Exact<{\n  owner: Scalars['Address'];\n  assetId: Scalars['AssetId'];\n}>;\n\n\nexport type GqlGetBalanceQuery = { __typename: 'Query', balance: { __typename: 'Balance', owner: string, amount: string, assetId: string } };\n\nexport type GqlGetBalancesQueryVariables = Exact<{\n  filter: GqlBalanceFilterInput;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetBalancesQuery = { __typename: 'Query', balances: { __typename: 'BalanceConnection', edges: Array<{ __typename: 'BalanceEdge', node: { __typename: 'Balance', owner: string, amount: string, assetId: string } }> } };\n\nexport type GqlGetMessagesQueryVariables = Exact<{\n  owner: Scalars['Address'];\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n}>;\n\n\nexport type GqlGetMessagesQuery = { __typename: 'Query', messages: { __typename: 'MessageConnection', edges: Array<{ __typename: 'MessageEdge', node: { __typename: 'Message', amount: string, sender: string, recipient: string, data: string, nonce: string, daHeight: string } }> } };\n\nexport type GqlGetMessageProofQueryVariables = Exact<{\n  transactionId: Scalars['TransactionId'];\n  nonce: Scalars['Nonce'];\n  commitBlockId?: InputMaybe<Scalars['BlockId']>;\n  commitBlockHeight?: InputMaybe<Scalars['U32']>;\n}>;\n\n\nexport type GqlGetMessageProofQuery = { __typename: 'Query', messageProof?: { __typename: 'MessageProof', sender: string, recipient: string, nonce: string, amount: string, data: string, messageProof: { __typename: 'MerkleProof', proofSet: Array<string>, proofIndex: string }, blockProof: { __typename: 'MerkleProof', proofSet: Array<string>, proofIndex: string }, messageBlockHeader: { __typename: 'Header', id: string, daHeight: string, transactionsCount: string, transactionsRoot: string, height: any, prevRoot: string, time: string, applicationHash: string, messageReceiptRoot: string, messageReceiptCount: string }, commitBlockHeader: { __typename: 'Header', id: string, daHeight: string, transactionsCount: string, transactionsRoot: string, height: any, prevRoot: string, time: string, applicationHash: string, messageReceiptRoot: string, messageReceiptCount: string } } | null };\n\nexport type GqlGetMessageStatusQueryVariables = Exact<{\n  nonce: Scalars['Nonce'];\n}>;\n\n\nexport type GqlGetMessageStatusQuery = { __typename: 'Query', messageStatus: { __typename: 'MessageStatus', state: GqlMessageState } };\n\nexport type GqlDryRunMutationVariables = Exact<{\n  encodedTransaction: Scalars['HexString'];\n  utxoValidation?: InputMaybe<Scalars['Boolean']>;\n}>;\n\n\nexport type GqlDryRunMutation = { __typename: 'Mutation', dryRun: Array<{ __typename: 'Receipt', pc?: string | null, is?: string | null, toAddress?: string | null, amount?: string | null, assetId?: string | null, gas?: string | null, param1?: string | null, param2?: string | null, val?: string | null, ptr?: string | null, digest?: string | null, reason?: string | null, ra?: string | null, rb?: string | null, rc?: string | null, rd?: string | null, len?: string | null, receiptType: GqlReceiptType, result?: string | null, gasUsed?: string | null, data?: string | null, sender?: string | null, recipient?: string | null, nonce?: string | null, contractId?: string | null, subId?: string | null, contract?: { __typename: 'Contract', id: string } | null, to?: { __typename: 'Contract', id: string } | null }> };\n\nexport type GqlSubmitMutationVariables = Exact<{\n  encodedTransaction: Scalars['HexString'];\n}>;\n\n\nexport type GqlSubmitMutation = { __typename: 'Mutation', submit: { __typename: 'Transaction', id: string } };\n\nexport type GqlProduceBlocksMutationVariables = Exact<{\n  startTimestamp?: InputMaybe<Scalars['Tai64Timestamp']>;\n  blocksToProduce: Scalars['U32'];\n}>;\n\n\nexport type GqlProduceBlocksMutation = { __typename: 'Mutation', produceBlocks: any };\n\nexport type GqlSubmitAndAwaitSubscriptionVariables = Exact<{\n  encodedTransaction: Scalars['HexString'];\n}>;\n\n\nexport type GqlSubmitAndAwaitSubscription = { __typename: 'Subscription', submitAndAwait: { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } };\n\nexport type GqlStatusChangeSubscriptionVariables = Exact<{\n  transactionId: Scalars['TransactionId'];\n}>;\n\n\nexport type GqlStatusChangeSubscription = { __typename: 'Subscription', statusChange: { __typename: 'FailureStatus', time: string, reason: string, type: 'FailureStatus', block: { __typename: 'Block', id: string } } | { __typename: 'SqueezedOutStatus', reason: string, type: 'SqueezedOutStatus' } | { __typename: 'SubmittedStatus', time: string, type: 'SubmittedStatus' } | { __typename: 'SuccessStatus', time: string, type: 'SuccessStatus', block: { __typename: 'Block', id: string }, programState?: { __typename: 'ProgramState', returnType: GqlReturnType, data: string } | null } };\n\nexport const ReceiptFragmentFragmentDoc = gql`\n    fragment receiptFragment on Receipt {\n  contract {\n    id\n  }\n  pc\n  is\n  to {\n    id\n  }\n  toAddress\n  amount\n  assetId\n  gas\n  param1\n  param2\n  val\n  ptr\n  digest\n  reason\n  ra\n  rb\n  rc\n  rd\n  len\n  receiptType\n  result\n  gasUsed\n  data\n  sender\n  recipient\n  nonce\n  contractId\n  subId\n}\n    `;\nexport const TransactionStatusFragmentFragmentDoc = gql`\n    fragment transactionStatusFragment on TransactionStatus {\n  type: __typename\n  ... on SubmittedStatus {\n    time\n  }\n  ... on SuccessStatus {\n    block {\n      id\n    }\n    time\n    programState {\n      returnType\n      data\n    }\n  }\n  ... on FailureStatus {\n    block {\n      id\n    }\n    time\n    reason\n  }\n  ... on SqueezedOutStatus {\n    reason\n  }\n}\n    `;\nexport const TransactionFragmentFragmentDoc = gql`\n    fragment transactionFragment on Transaction {\n  id\n  rawPayload\n  gasPrice\n  receipts {\n    ...receiptFragment\n  }\n  status {\n    ...transactionStatusFragment\n  }\n}\n    ${ReceiptFragmentFragmentDoc}\n${TransactionStatusFragmentFragmentDoc}`;\nexport const InputEstimatePredicatesFragmentFragmentDoc = gql`\n    fragment inputEstimatePredicatesFragment on Input {\n  ... on InputCoin {\n    predicateGasUsed\n  }\n  ... on InputMessage {\n    predicateGasUsed\n  }\n}\n    `;\nexport const TransactionEstimatePredicatesFragmentFragmentDoc = gql`\n    fragment transactionEstimatePredicatesFragment on Transaction {\n  inputs {\n    ...inputEstimatePredicatesFragment\n  }\n}\n    ${InputEstimatePredicatesFragmentFragmentDoc}`;\nexport const CoinFragmentFragmentDoc = gql`\n    fragment coinFragment on Coin {\n  __typename\n  utxoId\n  owner\n  amount\n  assetId\n  maturity\n  blockCreated\n  txCreatedIdx\n}\n    `;\nexport const MessageCoinFragmentFragmentDoc = gql`\n    fragment messageCoinFragment on MessageCoin {\n  __typename\n  sender\n  recipient\n  nonce\n  amount\n  assetId\n  daHeight\n}\n    `;\nexport const MessageFragmentFragmentDoc = gql`\n    fragment messageFragment on Message {\n  amount\n  sender\n  recipient\n  data\n  nonce\n  daHeight\n}\n    `;\nexport const MessageProofFragmentFragmentDoc = gql`\n    fragment messageProofFragment on MessageProof {\n  messageProof {\n    proofSet\n    proofIndex\n  }\n  blockProof {\n    proofSet\n    proofIndex\n  }\n  messageBlockHeader {\n    id\n    daHeight\n    transactionsCount\n    transactionsRoot\n    height\n    prevRoot\n    time\n    applicationHash\n    messageReceiptRoot\n    messageReceiptCount\n  }\n  commitBlockHeader {\n    id\n    daHeight\n    transactionsCount\n    transactionsRoot\n    height\n    prevRoot\n    time\n    applicationHash\n    messageReceiptRoot\n    messageReceiptCount\n  }\n  sender\n  recipient\n  nonce\n  amount\n  data\n}\n    `;\nexport const BalanceFragmentFragmentDoc = gql`\n    fragment balanceFragment on Balance {\n  owner\n  amount\n  assetId\n}\n    `;\nexport const BlockFragmentFragmentDoc = gql`\n    fragment blockFragment on Block {\n  id\n  header {\n    height\n    time\n  }\n  transactions {\n    id\n  }\n}\n    `;\nexport const TxParametersFragmentFragmentDoc = gql`\n    fragment TxParametersFragment on TxParameters {\n  maxInputs\n  maxOutputs\n  maxWitnesses\n  maxGasPerTx\n  maxSize\n}\n    `;\nexport const PredicateParametersFragmentFragmentDoc = gql`\n    fragment PredicateParametersFragment on PredicateParameters {\n  maxPredicateLength\n  maxPredicateDataLength\n  maxGasPerPredicate\n  maxMessageDataLength\n}\n    `;\nexport const ScriptParametersFragmentFragmentDoc = gql`\n    fragment ScriptParametersFragment on ScriptParameters {\n  maxScriptLength\n  maxScriptDataLength\n}\n    `;\nexport const ContractParametersFragmentFragmentDoc = gql`\n    fragment ContractParametersFragment on ContractParameters {\n  contractMaxSize\n  maxStorageSlots\n}\n    `;\nexport const FeeParametersFragmentFragmentDoc = gql`\n    fragment FeeParametersFragment on FeeParameters {\n  gasPriceFactor\n  gasPerByte\n}\n    `;\nexport const DependentCostFragmentFragmentDoc = gql`\n    fragment DependentCostFragment on DependentCost {\n  __typename\n  ... on LightOperation {\n    base\n    unitsPerGas\n  }\n  ... on HeavyOperation {\n    base\n    gasPerUnit\n  }\n}\n    `;\nexport const GasCostsFragmentFragmentDoc = gql`\n    fragment GasCostsFragment on GasCosts {\n  add\n  addi\n  aloc\n  and\n  andi\n  bal\n  bhei\n  bhsh\n  burn\n  cb\n  cfei\n  cfsi\n  croo\n  div\n  divi\n  ecr1\n  eck1\n  ed19\n  eq\n  exp\n  expi\n  flag\n  gm\n  gt\n  gtf\n  ji\n  jmp\n  jne\n  jnei\n  jnzi\n  jmpf\n  jmpb\n  jnzf\n  jnzb\n  jnef\n  jneb\n  lb\n  log\n  lt\n  lw\n  mint\n  mlog\n  modOp\n  modi\n  moveOp\n  movi\n  mroo\n  mul\n  muli\n  mldv\n  noop\n  not\n  or\n  ori\n  poph\n  popl\n  pshh\n  pshl\n  ret\n  rvrt\n  sb\n  sll\n  slli\n  srl\n  srli\n  srw\n  sub\n  subi\n  sw\n  sww\n  time\n  tr\n  tro\n  wdcm\n  wqcm\n  wdop\n  wqop\n  wdml\n  wqml\n  wddv\n  wqdv\n  wdmd\n  wqmd\n  wdam\n  wqam\n  wdmm\n  wqmm\n  xor\n  xori\n  call {\n    ...DependentCostFragment\n  }\n  ccp {\n    ...DependentCostFragment\n  }\n  csiz {\n    ...DependentCostFragment\n  }\n  k256 {\n    ...DependentCostFragment\n  }\n  ldc {\n    ...DependentCostFragment\n  }\n  logd {\n    ...DependentCostFragment\n  }\n  mcl {\n    ...DependentCostFragment\n  }\n  mcli {\n    ...DependentCostFragment\n  }\n  mcp {\n    ...DependentCostFragment\n  }\n  mcpi {\n    ...DependentCostFragment\n  }\n  meq {\n    ...DependentCostFragment\n  }\n  retd {\n    ...DependentCostFragment\n  }\n  s256 {\n    ...DependentCostFragment\n  }\n  scwq {\n    ...DependentCostFragment\n  }\n  smo {\n    ...DependentCostFragment\n  }\n  srwq {\n    ...DependentCostFragment\n  }\n  swwq {\n    ...DependentCostFragment\n  }\n  contractRoot {\n    ...DependentCostFragment\n  }\n  stateRoot {\n    ...DependentCostFragment\n  }\n  vmInitialization {\n    ...DependentCostFragment\n  }\n  newStoragePerByte\n}\n    ${DependentCostFragmentFragmentDoc}`;\nexport const ConsensusParametersFragmentFragmentDoc = gql`\n    fragment consensusParametersFragment on ConsensusParameters {\n  txParams {\n    ...TxParametersFragment\n  }\n  predicateParams {\n    ...PredicateParametersFragment\n  }\n  scriptParams {\n    ...ScriptParametersFragment\n  }\n  contractParams {\n    ...ContractParametersFragment\n  }\n  feeParams {\n    ...FeeParametersFragment\n  }\n  gasCosts {\n    ...GasCostsFragment\n  }\n  baseAssetId\n  chainId\n}\n    ${TxParametersFragmentFragmentDoc}\n${PredicateParametersFragmentFragmentDoc}\n${ScriptParametersFragmentFragmentDoc}\n${ContractParametersFragmentFragmentDoc}\n${FeeParametersFragmentFragmentDoc}\n${GasCostsFragmentFragmentDoc}`;\nexport const ChainInfoFragmentFragmentDoc = gql`\n    fragment chainInfoFragment on ChainInfo {\n  name\n  latestBlock {\n    ...blockFragment\n  }\n  daHeight\n  consensusParameters {\n    ...consensusParametersFragment\n  }\n}\n    ${BlockFragmentFragmentDoc}\n${ConsensusParametersFragmentFragmentDoc}`;\nexport const ContractBalanceFragmentFragmentDoc = gql`\n    fragment contractBalanceFragment on ContractBalance {\n  contract\n  amount\n  assetId\n}\n    `;\nexport const PageInfoFragmentFragmentDoc = gql`\n    fragment pageInfoFragment on PageInfo {\n  hasPreviousPage\n  hasNextPage\n  startCursor\n  endCursor\n}\n    `;\nexport const NodeInfoFragmentFragmentDoc = gql`\n    fragment nodeInfoFragment on NodeInfo {\n  utxoValidation\n  vmBacktrace\n  minGasPrice\n  maxTx\n  maxDepth\n  nodeVersion\n  peers {\n    id\n    addresses\n    clientVersion\n    blockHeight\n    lastHeartbeatMs\n    appScore\n  }\n}\n    `;\nexport const GetVersionDocument = gql`\n    query getVersion {\n  nodeInfo {\n    nodeVersion\n  }\n}\n    `;\nexport const GetNodeInfoDocument = gql`\n    query getNodeInfo {\n  nodeInfo {\n    ...nodeInfoFragment\n  }\n}\n    ${NodeInfoFragmentFragmentDoc}`;\nexport const GetChainDocument = gql`\n    query getChain {\n  chain {\n    ...chainInfoFragment\n  }\n}\n    ${ChainInfoFragmentFragmentDoc}`;\nexport const GetTransactionDocument = gql`\n    query getTransaction($transactionId: TransactionId!) {\n  transaction(id: $transactionId) {\n    ...transactionFragment\n  }\n}\n    ${TransactionFragmentFragmentDoc}`;\nexport const GetTransactionWithReceiptsDocument = gql`\n    query getTransactionWithReceipts($transactionId: TransactionId!) {\n  transaction(id: $transactionId) {\n    ...transactionFragment\n    receipts {\n      ...receiptFragment\n    }\n  }\n}\n    ${TransactionFragmentFragmentDoc}\n${ReceiptFragmentFragmentDoc}`;\nexport const GetTransactionsDocument = gql`\n    query getTransactions($after: String, $before: String, $first: Int, $last: Int) {\n  transactions(after: $after, before: $before, first: $first, last: $last) {\n    edges {\n      node {\n        ...transactionFragment\n      }\n    }\n  }\n}\n    ${TransactionFragmentFragmentDoc}`;\nexport const GetTransactionsByOwnerDocument = gql`\n    query getTransactionsByOwner($owner: Address!, $after: String, $before: String, $first: Int, $last: Int) {\n  transactionsByOwner(\n    owner: $owner\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    pageInfo {\n      ...pageInfoFragment\n    }\n    edges {\n      node {\n        ...transactionFragment\n      }\n    }\n  }\n}\n    ${PageInfoFragmentFragmentDoc}\n${TransactionFragmentFragmentDoc}`;\nexport const EstimatePredicatesDocument = gql`\n    query estimatePredicates($encodedTransaction: HexString!) {\n  estimatePredicates(tx: $encodedTransaction) {\n    ...transactionEstimatePredicatesFragment\n  }\n}\n    ${TransactionEstimatePredicatesFragmentFragmentDoc}`;\nexport const GetBlockDocument = gql`\n    query getBlock($blockId: BlockId, $height: U32) {\n  block(id: $blockId, height: $height) {\n    ...blockFragment\n  }\n}\n    ${BlockFragmentFragmentDoc}`;\nexport const GetBlockWithTransactionsDocument = gql`\n    query getBlockWithTransactions($blockId: BlockId, $blockHeight: U32) {\n  block(id: $blockId, height: $blockHeight) {\n    ...blockFragment\n    transactions {\n      ...transactionFragment\n    }\n  }\n}\n    ${BlockFragmentFragmentDoc}\n${TransactionFragmentFragmentDoc}`;\nexport const GetBlocksDocument = gql`\n    query getBlocks($after: String, $before: String, $first: Int, $last: Int) {\n  blocks(after: $after, before: $before, first: $first, last: $last) {\n    edges {\n      node {\n        ...blockFragment\n      }\n    }\n  }\n}\n    ${BlockFragmentFragmentDoc}`;\nexport const GetCoinDocument = gql`\n    query getCoin($coinId: UtxoId!) {\n  coin(utxoId: $coinId) {\n    ...coinFragment\n  }\n}\n    ${CoinFragmentFragmentDoc}`;\nexport const GetCoinsDocument = gql`\n    query getCoins($filter: CoinFilterInput!, $after: String, $before: String, $first: Int, $last: Int) {\n  coins(\n    filter: $filter\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    edges {\n      node {\n        ...coinFragment\n      }\n    }\n  }\n}\n    ${CoinFragmentFragmentDoc}`;\nexport const GetCoinsToSpendDocument = gql`\n    query getCoinsToSpend($owner: Address!, $queryPerAsset: [SpendQueryElementInput!]!, $excludedIds: ExcludeInput) {\n  coinsToSpend(\n    owner: $owner\n    queryPerAsset: $queryPerAsset\n    excludedIds: $excludedIds\n  ) {\n    ...coinFragment\n    ...messageCoinFragment\n  }\n}\n    ${CoinFragmentFragmentDoc}\n${MessageCoinFragmentFragmentDoc}`;\nexport const GetContractDocument = gql`\n    query getContract($contractId: ContractId!) {\n  contract(id: $contractId) {\n    bytecode\n    id\n  }\n}\n    `;\nexport const GetContractBalanceDocument = gql`\n    query getContractBalance($contract: ContractId!, $asset: AssetId!) {\n  contractBalance(contract: $contract, asset: $asset) {\n    ...contractBalanceFragment\n  }\n}\n    ${ContractBalanceFragmentFragmentDoc}`;\nexport const GetBalanceDocument = gql`\n    query getBalance($owner: Address!, $assetId: AssetId!) {\n  balance(owner: $owner, assetId: $assetId) {\n    ...balanceFragment\n  }\n}\n    ${BalanceFragmentFragmentDoc}`;\nexport const GetBalancesDocument = gql`\n    query getBalances($filter: BalanceFilterInput!, $after: String, $before: String, $first: Int, $last: Int) {\n  balances(\n    filter: $filter\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    edges {\n      node {\n        ...balanceFragment\n      }\n    }\n  }\n}\n    ${BalanceFragmentFragmentDoc}`;\nexport const GetMessagesDocument = gql`\n    query getMessages($owner: Address!, $after: String, $before: String, $first: Int, $last: Int) {\n  messages(\n    owner: $owner\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    edges {\n      node {\n        ...messageFragment\n      }\n    }\n  }\n}\n    ${MessageFragmentFragmentDoc}`;\nexport const GetMessageProofDocument = gql`\n    query getMessageProof($transactionId: TransactionId!, $nonce: Nonce!, $commitBlockId: BlockId, $commitBlockHeight: U32) {\n  messageProof(\n    transactionId: $transactionId\n    nonce: $nonce\n    commitBlockId: $commitBlockId\n    commitBlockHeight: $commitBlockHeight\n  ) {\n    ...messageProofFragment\n  }\n}\n    ${MessageProofFragmentFragmentDoc}`;\nexport const GetMessageStatusDocument = gql`\n    query getMessageStatus($nonce: Nonce!) {\n  messageStatus(nonce: $nonce) {\n    state\n  }\n}\n    `;\nexport const DryRunDocument = gql`\n    mutation dryRun($encodedTransaction: HexString!, $utxoValidation: Boolean) {\n  dryRun(tx: $encodedTransaction, utxoValidation: $utxoValidation) {\n    ...receiptFragment\n  }\n}\n    ${ReceiptFragmentFragmentDoc}`;\nexport const SubmitDocument = gql`\n    mutation submit($encodedTransaction: HexString!) {\n  submit(tx: $encodedTransaction) {\n    id\n  }\n}\n    `;\nexport const ProduceBlocksDocument = gql`\n    mutation produceBlocks($startTimestamp: Tai64Timestamp, $blocksToProduce: U32!) {\n  produceBlocks(\n    blocksToProduce: $blocksToProduce\n    startTimestamp: $startTimestamp\n  )\n}\n    `;\nexport const SubmitAndAwaitDocument = gql`\n    subscription submitAndAwait($encodedTransaction: HexString!) {\n  submitAndAwait(tx: $encodedTransaction) {\n    ...transactionStatusFragment\n  }\n}\n    ${TransactionStatusFragmentFragmentDoc}`;\nexport const StatusChangeDocument = gql`\n    subscription statusChange($transactionId: TransactionId!) {\n  statusChange(id: $transactionId) {\n    ...transactionStatusFragment\n  }\n}\n    ${TransactionStatusFragmentFragmentDoc}`;\nexport type Requester<C = {}, E = unknown> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R> | AsyncIterable<R>\nexport function getSdk<C, E>(requester: Requester<C, E>) {\n  return {\n    getVersion(variables?: GqlGetVersionQueryVariables, options?: C): Promise<GqlGetVersionQuery> {\n      return requester<GqlGetVersionQuery, GqlGetVersionQueryVariables>(GetVersionDocument, variables, options) as Promise<GqlGetVersionQuery>;\n    },\n    getNodeInfo(variables?: GqlGetNodeInfoQueryVariables, options?: C): Promise<GqlGetNodeInfoQuery> {\n      return requester<GqlGetNodeInfoQuery, GqlGetNodeInfoQueryVariables>(GetNodeInfoDocument, variables, options) as Promise<GqlGetNodeInfoQuery>;\n    },\n    getChain(variables?: GqlGetChainQueryVariables, options?: C): Promise<GqlGetChainQuery> {\n      return requester<GqlGetChainQuery, GqlGetChainQueryVariables>(GetChainDocument, variables, options) as Promise<GqlGetChainQuery>;\n    },\n    getTransaction(variables: GqlGetTransactionQueryVariables, options?: C): Promise<GqlGetTransactionQuery> {\n      return requester<GqlGetTransactionQuery, GqlGetTransactionQueryVariables>(GetTransactionDocument, variables, options) as Promise<GqlGetTransactionQuery>;\n    },\n    getTransactionWithReceipts(variables: GqlGetTransactionWithReceiptsQueryVariables, options?: C): Promise<GqlGetTransactionWithReceiptsQuery> {\n      return requester<GqlGetTransactionWithReceiptsQuery, GqlGetTransactionWithReceiptsQueryVariables>(GetTransactionWithReceiptsDocument, variables, options) as Promise<GqlGetTransactionWithReceiptsQuery>;\n    },\n    getTransactions(variables?: GqlGetTransactionsQueryVariables, options?: C): Promise<GqlGetTransactionsQuery> {\n      return requester<GqlGetTransactionsQuery, GqlGetTransactionsQueryVariables>(GetTransactionsDocument, variables, options) as Promise<GqlGetTransactionsQuery>;\n    },\n    getTransactionsByOwner(variables: GqlGetTransactionsByOwnerQueryVariables, options?: C): Promise<GqlGetTransactionsByOwnerQuery> {\n      return requester<GqlGetTransactionsByOwnerQuery, GqlGetTransactionsByOwnerQueryVariables>(GetTransactionsByOwnerDocument, variables, options) as Promise<GqlGetTransactionsByOwnerQuery>;\n    },\n    estimatePredicates(variables: GqlEstimatePredicatesQueryVariables, options?: C): Promise<GqlEstimatePredicatesQuery> {\n      return requester<GqlEstimatePredicatesQuery, GqlEstimatePredicatesQueryVariables>(EstimatePredicatesDocument, variables, options) as Promise<GqlEstimatePredicatesQuery>;\n    },\n    getBlock(variables?: GqlGetBlockQueryVariables, options?: C): Promise<GqlGetBlockQuery> {\n      return requester<GqlGetBlockQuery, GqlGetBlockQueryVariables>(GetBlockDocument, variables, options) as Promise<GqlGetBlockQuery>;\n    },\n    getBlockWithTransactions(variables?: GqlGetBlockWithTransactionsQueryVariables, options?: C): Promise<GqlGetBlockWithTransactionsQuery> {\n      return requester<GqlGetBlockWithTransactionsQuery, GqlGetBlockWithTransactionsQueryVariables>(GetBlockWithTransactionsDocument, variables, options) as Promise<GqlGetBlockWithTransactionsQuery>;\n    },\n    getBlocks(variables?: GqlGetBlocksQueryVariables, options?: C): Promise<GqlGetBlocksQuery> {\n      return requester<GqlGetBlocksQuery, GqlGetBlocksQueryVariables>(GetBlocksDocument, variables, options) as Promise<GqlGetBlocksQuery>;\n    },\n    getCoin(variables: GqlGetCoinQueryVariables, options?: C): Promise<GqlGetCoinQuery> {\n      return requester<GqlGetCoinQuery, GqlGetCoinQueryVariables>(GetCoinDocument, variables, options) as Promise<GqlGetCoinQuery>;\n    },\n    getCoins(variables: GqlGetCoinsQueryVariables, options?: C): Promise<GqlGetCoinsQuery> {\n      return requester<GqlGetCoinsQuery, GqlGetCoinsQueryVariables>(GetCoinsDocument, variables, options) as Promise<GqlGetCoinsQuery>;\n    },\n    getCoinsToSpend(variables: GqlGetCoinsToSpendQueryVariables, options?: C): Promise<GqlGetCoinsToSpendQuery> {\n      return requester<GqlGetCoinsToSpendQuery, GqlGetCoinsToSpendQueryVariables>(GetCoinsToSpendDocument, variables, options) as Promise<GqlGetCoinsToSpendQuery>;\n    },\n    getContract(variables: GqlGetContractQueryVariables, options?: C): Promise<GqlGetContractQuery> {\n      return requester<GqlGetContractQuery, GqlGetContractQueryVariables>(GetContractDocument, variables, options) as Promise<GqlGetContractQuery>;\n    },\n    getContractBalance(variables: GqlGetContractBalanceQueryVariables, options?: C): Promise<GqlGetContractBalanceQuery> {\n      return requester<GqlGetContractBalanceQuery, GqlGetContractBalanceQueryVariables>(GetContractBalanceDocument, variables, options) as Promise<GqlGetContractBalanceQuery>;\n    },\n    getBalance(variables: GqlGetBalanceQueryVariables, options?: C): Promise<GqlGetBalanceQuery> {\n      return requester<GqlGetBalanceQuery, GqlGetBalanceQueryVariables>(GetBalanceDocument, variables, options) as Promise<GqlGetBalanceQuery>;\n    },\n    getBalances(variables: GqlGetBalancesQueryVariables, options?: C): Promise<GqlGetBalancesQuery> {\n      return requester<GqlGetBalancesQuery, GqlGetBalancesQueryVariables>(GetBalancesDocument, variables, options) as Promise<GqlGetBalancesQuery>;\n    },\n    getMessages(variables: GqlGetMessagesQueryVariables, options?: C): Promise<GqlGetMessagesQuery> {\n      return requester<GqlGetMessagesQuery, GqlGetMessagesQueryVariables>(GetMessagesDocument, variables, options) as Promise<GqlGetMessagesQuery>;\n    },\n    getMessageProof(variables: GqlGetMessageProofQueryVariables, options?: C): Promise<GqlGetMessageProofQuery> {\n      return requester<GqlGetMessageProofQuery, GqlGetMessageProofQueryVariables>(GetMessageProofDocument, variables, options) as Promise<GqlGetMessageProofQuery>;\n    },\n    getMessageStatus(variables: GqlGetMessageStatusQueryVariables, options?: C): Promise<GqlGetMessageStatusQuery> {\n      return requester<GqlGetMessageStatusQuery, GqlGetMessageStatusQueryVariables>(GetMessageStatusDocument, variables, options) as Promise<GqlGetMessageStatusQuery>;\n    },\n    dryRun(variables: GqlDryRunMutationVariables, options?: C): Promise<GqlDryRunMutation> {\n      return requester<GqlDryRunMutation, GqlDryRunMutationVariables>(DryRunDocument, variables, options) as Promise<GqlDryRunMutation>;\n    },\n    submit(variables: GqlSubmitMutationVariables, options?: C): Promise<GqlSubmitMutation> {\n      return requester<GqlSubmitMutation, GqlSubmitMutationVariables>(SubmitDocument, variables, options) as Promise<GqlSubmitMutation>;\n    },\n    produceBlocks(variables: GqlProduceBlocksMutationVariables, options?: C): Promise<GqlProduceBlocksMutation> {\n      return requester<GqlProduceBlocksMutation, GqlProduceBlocksMutationVariables>(ProduceBlocksDocument, variables, options) as Promise<GqlProduceBlocksMutation>;\n    },\n    submitAndAwait(variables: GqlSubmitAndAwaitSubscriptionVariables, options?: C): AsyncIterable<GqlSubmitAndAwaitSubscription> {\n      return requester<GqlSubmitAndAwaitSubscription, GqlSubmitAndAwaitSubscriptionVariables>(SubmitAndAwaitDocument, variables, options) as AsyncIterable<GqlSubmitAndAwaitSubscription>;\n    },\n    statusChange(variables: GqlStatusChangeSubscriptionVariables, options?: C): AsyncIterable<GqlStatusChangeSubscription> {\n      return requester<GqlStatusChangeSubscription, GqlStatusChangeSubscriptionVariables>(StatusChangeDocument, variables, options) as AsyncIterable<GqlStatusChangeSubscription>;\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { DocumentNode } from 'graphql';\nimport { print } from 'graphql';\n\ntype FuelGraphQLSubscriberOptions = {\n  url: string;\n  query: DocumentNode;\n  variables?: Record<string, unknown>;\n  fetchFn: typeof fetch;\n};\n\nexport class FuelGraphqlSubscriber implements AsyncIterator<unknown> {\n  private stream!: ReadableStreamDefaultReader<Uint8Array>;\n  private static textDecoder = new TextDecoder();\n\n  public constructor(private options: FuelGraphQLSubscriberOptions) {}\n\n  private async setStream() {\n    const { url, query, variables, fetchFn } = this.options;\n\n    const response = await fetchFn(`${url}-sub`, {\n      method: 'POST',\n      body: JSON.stringify({\n        query: print(query),\n        variables,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/event-stream',\n      },\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.stream = response.body!.getReader();\n  }\n\n  async next(): Promise<IteratorResult<unknown, unknown>> {\n    if (!this.stream) {\n      await this.setStream();\n    }\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const { value, done } = await this.stream.read();\n      if (done) {\n        return { value, done };\n      }\n\n      const text = FuelGraphqlSubscriber.textDecoder.decode(value);\n\n      /**\n       * We don't care about responses that don't start with 'data:' like keep-alive messages.\n       * The only responses that I came across from the node are either 200 responses with data or keep-alive messages.\n       * You can find the keep-alive message in the fuel-core codebase (latest permalink as of writing):\n       * https://github.com/FuelLabs/fuel-core/blob/e1e631902f762081d2124d9c457ddfe13ac366dc/crates/fuel-core/src/graphql_api/service.rs#L247\n       * To get the actual latest info you need to check out the master branch (might change):\n       * https://github.com/FuelLabs/fuel-core/blob/master/crates/fuel-core/src/graphql_api/service.rs#L247\n       * */\n      if (!text.startsWith('data:')) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      let data;\n      let errors;\n\n      try {\n        ({ data, errors } = JSON.parse(text.replace(/^data:/, '')));\n      } catch (e) {\n        throw new FuelError(\n          ErrorCode.STREAM_PARSING_ERROR,\n          `Error while parsing stream data response: ${text}`\n        );\n      }\n\n      if (Array.isArray(errors)) {\n        throw new FuelError(\n          FuelError.CODES.INVALID_REQUEST,\n          errors.map((err) => err.message).join('\\n\\n')\n        );\n      }\n\n      return { value: data, done: false };\n    }\n  }\n\n  /**\n   * Gets called when `break` is called in a `for-await-of` loop.\n   */\n  async return(): Promise<IteratorResult<unknown, undefined>> {\n    await this.stream.cancel();\n    this.stream.releaseLock();\n    return { done: true, value: undefined };\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<unknown, unknown, undefined> {\n    return this;\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { hexlify } from '@fuel-ts/utils';\n\ntype Cache = {\n  [key: string]: {\n    expires: number;\n    value: BytesLike;\n  };\n};\nconst cache: Cache = {}; // it's a cache hash ~~> cash?\n\nconst DEFAULT_TTL_IN_MS = 30 * 1000; // 30seconds\n\nexport class MemoryCache {\n  ttl: number;\n  constructor(ttlInMs: number = DEFAULT_TTL_IN_MS) {\n    this.ttl = ttlInMs;\n\n    if (typeof ttlInMs !== 'number' || this.ttl <= 0) {\n      throw new FuelError(\n        ErrorCode.INVALID_TTL,\n        `Invalid TTL: ${this.ttl}. Use a value greater than zero.`\n      );\n    }\n  }\n\n  get(value: BytesLike, isAutoExpiring = true): BytesLike | undefined {\n    const key = hexlify(value);\n    if (cache[key]) {\n      if (!isAutoExpiring || cache[key].expires > Date.now()) {\n        return cache[key].value;\n      }\n\n      this.del(value);\n    }\n\n    return undefined;\n  }\n\n  set(value: BytesLike): number {\n    const expiresAt = Date.now() + this.ttl;\n    const key = hexlify(value);\n    cache[key] = {\n      expires: expiresAt,\n      value,\n    };\n\n    return expiresAt;\n  }\n\n  getAllData(): BytesLike[] {\n    return Object.keys(cache).reduce((list, key) => {\n      const data = this.get(key, false);\n      if (data) {\n        list.push(data);\n      }\n\n      return list;\n    }, [] as BytesLike[]);\n  }\n\n  getActiveData(): BytesLike[] {\n    return Object.keys(cache).reduce((list, key) => {\n      const data = this.get(key);\n      if (data) {\n        list.push(data);\n      }\n\n      return list;\n    }, [] as BytesLike[]);\n  }\n\n  del(value: BytesLike) {\n    const key = hexlify(value);\n    delete cache[key];\n  }\n}\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport type { BigNumberish } from '@fuel-ts/math';\nimport { bn, toNumber } from '@fuel-ts/math';\nimport type { Input } from '@fuel-ts/transactions';\nimport { InputType } from '@fuel-ts/transactions';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\n\nexport type CoinTransactionRequestInput = {\n  type: InputType.Coin;\n\n  /** UTXO ID */\n  id: BytesLike;\n\n  /** Owning address or script hash */\n  owner: BytesLike;\n\n  /** Amount of coins */\n  amount: BigNumberish;\n\n  /** Asset ID of the coins */\n  assetId: BytesLike;\n\n  /** Points to the TX whose output is being spent. (TxPointer) */\n  txPointer: BytesLike;\n\n  /** Index of witness that authorizes spending the coin */\n  witnessIndex: number;\n\n  /** UTXO being spent must have been created at least this many blocks ago */\n  maturity?: number;\n\n  /** Gas used by predicate */\n  predicateGasUsed?: BigNumberish;\n\n  /** Predicate bytecode */\n  predicate?: BytesLike;\n\n  /** Predicate input data (parameters) */\n  predicateData?: BytesLike;\n};\n\nexport type MessageTransactionRequestInput = {\n  type: InputType.Message;\n\n  /** Address of sender */\n  sender: BytesLike;\n\n  /** Address of recipient */\n  recipient: BytesLike;\n\n  /** Amount of coins */\n  amount: BigNumberish;\n\n  /** Index of witness that authorizes the message */\n  witnessIndex: number;\n\n  /** Unique nonce of message */\n  nonce: BytesLike;\n\n  /** Gas used by predicate */\n  predicateGasUsed?: BigNumberish;\n\n  /** Predicate bytecode */\n  predicate?: BytesLike;\n\n  /** Predicate input data (parameters) */\n  predicateData?: BytesLike;\n\n  /** data of message */\n  data?: BytesLike;\n};\n\nexport type ContractTransactionRequestInput = {\n  type: InputType.Contract;\n\n  /** Points to the TX whose output is being spent. (TxPointer) */\n  txPointer: BytesLike;\n\n  /** Contract ID */\n  contractId: BytesLike;\n};\nexport type TransactionRequestInput =\n  | CoinTransactionRequestInput\n  | ContractTransactionRequestInput\n  | MessageTransactionRequestInput;\n\n/** @hidden */\nexport const inputify = (value: TransactionRequestInput): Input => {\n  const { type } = value;\n\n  switch (value.type) {\n    case InputType.Coin: {\n      const predicate = arrayify(value.predicate ?? '0x');\n      const predicateData = arrayify(value.predicateData ?? '0x');\n      return {\n        type: InputType.Coin,\n        txID: hexlify(arrayify(value.id).slice(0, 32)),\n        outputIndex: arrayify(value.id)[32],\n        owner: hexlify(value.owner),\n        amount: bn(value.amount),\n        assetId: hexlify(value.assetId),\n        txPointer: {\n          blockHeight: toNumber(arrayify(value.txPointer).slice(0, 8)),\n          txIndex: toNumber(arrayify(value.txPointer).slice(8, 16)),\n        },\n        witnessIndex: value.witnessIndex,\n        maturity: value.maturity ?? 0,\n        predicateGasUsed: bn(value.predicateGasUsed),\n        predicateLength: predicate.length,\n        predicateDataLength: predicateData.length,\n        predicate: hexlify(predicate),\n        predicateData: hexlify(predicateData),\n      };\n    }\n    case InputType.Contract: {\n      return {\n        type: InputType.Contract,\n        txID: ZeroBytes32,\n        outputIndex: 0,\n        balanceRoot: ZeroBytes32,\n        stateRoot: ZeroBytes32,\n        txPointer: {\n          blockHeight: toNumber(arrayify(value.txPointer).slice(0, 8)),\n          txIndex: toNumber(arrayify(value.txPointer).slice(8, 16)),\n        },\n        contractID: hexlify(value.contractId),\n      };\n    }\n    case InputType.Message: {\n      const predicate = arrayify(value.predicate ?? '0x');\n      const predicateData = arrayify(value.predicateData ?? '0x');\n      const data = arrayify(value.data ?? '0x');\n      return {\n        type: InputType.Message,\n        sender: hexlify(value.sender),\n        recipient: hexlify(value.recipient),\n        amount: bn(value.amount),\n        nonce: hexlify(value.nonce),\n        witnessIndex: value.witnessIndex,\n        predicateGasUsed: bn(value.predicateGasUsed),\n        predicateLength: predicate.length,\n        predicateDataLength: predicateData.length,\n        predicate: hexlify(predicate),\n        predicateData: hexlify(predicateData),\n        data: hexlify(data),\n        dataLength: data.length,\n      };\n    }\n    default: {\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSACTION_INPUT,\n        `Invalid transaction input type: ${type}.`\n      );\n    }\n  }\n};\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport type { BigNumberish } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type { Output } from '@fuel-ts/transactions';\nimport { OutputType } from '@fuel-ts/transactions';\nimport { hexlify } from '@fuel-ts/utils';\n\nexport type CoinTransactionRequestOutput = {\n  type: OutputType.Coin;\n  /** Receiving address or script hash */\n  to: BytesLike;\n  /** Amount of coins to send */\n  amount: BigNumberish;\n  /** Asset ID of coins */\n  assetId: BytesLike;\n};\nexport type ContractTransactionRequestOutput = {\n  type: OutputType.Contract;\n  /** Index of input contract */\n  inputIndex: number;\n};\nexport type ChangeTransactionRequestOutput = {\n  type: OutputType.Change;\n  /** Receiving address or script hash */\n  to: BytesLike;\n  /** Asset ID of coins */\n  assetId: BytesLike;\n};\nexport type VariableTransactionRequestOutput = {\n  type: OutputType.Variable;\n};\nexport type ContractCreatedTransactionRequestOutput = {\n  type: OutputType.ContractCreated;\n  /** Contract ID */\n  contractId: BytesLike;\n  /** State Root */\n  stateRoot: BytesLike;\n};\nexport type TransactionRequestOutput =\n  | CoinTransactionRequestOutput\n  | ContractTransactionRequestOutput\n  | ChangeTransactionRequestOutput\n  | VariableTransactionRequestOutput\n  | ContractCreatedTransactionRequestOutput;\n\n/** @hidden */\nexport const outputify = (value: TransactionRequestOutput): Output => {\n  const { type } = value;\n\n  switch (type) {\n    case OutputType.Coin: {\n      return {\n        type: OutputType.Coin,\n        to: hexlify(value.to),\n        amount: bn(value.amount),\n        assetId: hexlify(value.assetId),\n      };\n    }\n    case OutputType.Contract: {\n      return {\n        type: OutputType.Contract,\n        inputIndex: value.inputIndex,\n        balanceRoot: ZeroBytes32,\n        stateRoot: ZeroBytes32,\n      };\n    }\n    case OutputType.Change: {\n      return {\n        type: OutputType.Change,\n        to: hexlify(value.to),\n        amount: bn(0),\n        assetId: hexlify(value.assetId),\n      };\n    }\n    case OutputType.Variable: {\n      return {\n        type: OutputType.Variable,\n        to: ZeroBytes32,\n        amount: bn(0),\n        assetId: ZeroBytes32,\n      };\n    }\n    case OutputType.ContractCreated: {\n      return {\n        type: OutputType.ContractCreated,\n        contractId: hexlify(value.contractId),\n        stateRoot: hexlify(value.stateRoot),\n      };\n    }\n    default: {\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSACTION_INPUT,\n        `Invalid transaction output type: ${type}.`\n      );\n    }\n  }\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport type { Coin } from './coin';\nimport type { MessageCoin } from './message';\n\nexport type RawCoin = {\n  utxoId: string;\n  owner: string;\n  amount: string;\n  assetId: string;\n  maturity: string;\n  blockCreated: string;\n  txCreatedIdx: string;\n};\n\nexport type RawMessage = {\n  amount: string;\n  sender: string;\n  assetId: string;\n  recipient: string;\n  data: string;\n  nonce: string;\n  daHeight: string;\n};\n\nexport type RawResource = RawCoin | RawMessage;\nexport type Resource = Coin | MessageCoin;\n\n/** @hidden */\nexport type ExcludeResourcesOption = {\n  utxos?: BytesLike[];\n  messages?: BytesLike[];\n};\n\n/** @hidden */\nexport const isRawCoin = (resource: RawResource): resource is RawCoin => 'utxoId' in resource;\n/** @hidden */\nexport const isRawMessage = (resource: RawResource): resource is RawMessage =>\n  'recipient' in resource;\n/** @hidden */\nexport const isCoin = (resource: Resource): resource is Coin => 'id' in resource;\n/** @hidden */\nexport const isMessage = (resource: Resource): resource is MessageCoin => 'recipient' in resource;\n","/** Maximum contract size, in bytes. */\nexport const CONTRACT_MAX_SIZE = 16 * 1024;\n\n/** Maximum number of witnesses. */\nexport const MAX_WITNESSES = 16;\n\n/**\n * Gas Price factor this is used to calculate\n * This is used to calculate the gas fee in Native Coins.\n * Ex.: transactionFee = Math.ceil(<gasUsed> / MAX_GAS_PER_TX);\n */\n\n// TODO: set max script length const\n/** Maximum length of script, in instructions. */\nexport const MAX_SCRIPT_LENGTH = 1024 * 1024 * 1024;\n\n// TODO: set max script length const\n/** Maximum length of script data, in bytes. */\nexport const MAX_SCRIPT_DATA_LENGTH = 1024 * 1024 * 1024;\n\n/** Maximum number of static contracts. */\nexport const MAX_STATIC_CONTRACTS = 255;\n\n// TODO: set max predicate length value\n/** Maximum length of predicate, in instructions. */\nexport const MAX_PREDICATE_LENGTH = 1024 * 1024;\n\n// TODO: set max predicate data length value\n/** Maximum length of predicate data, in bytes. */\nexport const MAX_PREDICATE_DATA_LENGTH = 1024 * 1024;\n\n// Revert with this value for a failing call to `std::revert::require`.\nexport const FAILED_REQUIRE_SIGNAL = '0xffffffffffff0000';\n\n// Revert with this value for a failing call to `std::asset::transfer_to_address`.\nexport const FAILED_TRANSFER_TO_ADDRESS_SIGNAL = '0xffffffffffff0001';\n\n// Revert with this value for a failing call to `std::message::send_message`.\nexport const FAILED_SEND_MESSAGE_SIGNAL = '0xffffffffffff0002';\n\n// Revert with this value for a failing call to `std::assert::assert_eq`.\nexport const FAILED_ASSERT_EQ_SIGNAL = '0xffffffffffff0003';\n\n// Revert with this value for a failing call to `std::assert::assert`.\nexport const FAILED_ASSERT_SIGNAL = '0xffffffffffff0004';\n\nexport const FAILED_UNKNOWN_SIGNAL = '0x0';\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport type {\n  ReceiptBurn,\n  ReceiptCall,\n  ReceiptLog,\n  ReceiptLogData,\n  ReceiptMessageOut,\n  ReceiptMint,\n  ReceiptPanic,\n  ReceiptReturn,\n  ReceiptReturnData,\n  ReceiptRevert,\n  ReceiptScriptResult,\n  ReceiptTransfer,\n  ReceiptTransferOut,\n} from '@fuel-ts/transactions';\nimport {\n  ReceiptBurnCoder,\n  ReceiptMessageOutCoder,\n  ReceiptMintCoder,\n  ReceiptType,\n} from '@fuel-ts/transactions';\nimport { FAILED_TRANSFER_TO_ADDRESS_SIGNAL } from '@fuel-ts/transactions/configs';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport type { GqlReceiptFragmentFragment } from '../__generated__/operations';\nimport { GqlReceiptType } from '../__generated__/operations';\nimport type { TransactionResultReceipt } from '../transaction-response';\n\n/** @hidden */\nconst doesReceiptHaveMissingOutputVariables = (\n  receipt: TransactionResultReceipt\n): receipt is ReceiptRevert =>\n  receipt.type === ReceiptType.Revert &&\n  receipt.val.toString('hex') === FAILED_TRANSFER_TO_ADDRESS_SIGNAL;\n\n/** @hidden */\nconst doesReceiptHaveMissingContractId = (\n  receipt: TransactionResultReceipt\n): receipt is ReceiptPanic =>\n  receipt.type === ReceiptType.Panic &&\n  receipt.contractId !== '0x0000000000000000000000000000000000000000000000000000000000000000';\n\n/** @hidden */\nexport const getReceiptsWithMissingData = (receipts: Array<TransactionResultReceipt>) =>\n  receipts.reduce<{\n    missingOutputVariables: Array<ReceiptRevert>;\n    missingOutputContractIds: Array<ReceiptPanic>;\n  }>(\n    (memo, receipt) => {\n      if (doesReceiptHaveMissingOutputVariables(receipt)) {\n        memo.missingOutputVariables.push(receipt);\n      }\n      if (doesReceiptHaveMissingContractId(receipt)) {\n        memo.missingOutputContractIds.push(receipt);\n      }\n      return memo;\n    },\n    {\n      missingOutputVariables: [],\n      missingOutputContractIds: [],\n    }\n  );\n\nconst hexOrZero = (hex?: string | null) => hex || ZeroBytes32;\n\nexport function assembleReceiptByType(receipt: GqlReceiptFragmentFragment) {\n  const { receiptType } = receipt;\n\n  switch (receiptType) {\n    case GqlReceiptType.Call: {\n      const callReceipt: ReceiptCall = {\n        type: ReceiptType.Call,\n        from: hexOrZero(receipt.contract?.id),\n        to: hexOrZero(receipt?.to?.id),\n        amount: bn(receipt.amount),\n        assetId: hexOrZero(receipt.assetId),\n        gas: bn(receipt.gas),\n        param1: bn(receipt.param1),\n        param2: bn(receipt.param2),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return callReceipt;\n    }\n\n    case GqlReceiptType.Return: {\n      const returnReceipt: ReceiptReturn = {\n        type: ReceiptType.Return,\n        id: hexOrZero(receipt.contract?.id),\n        val: bn(receipt.val),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return returnReceipt;\n    }\n\n    case GqlReceiptType.ReturnData: {\n      const returnDataReceipt: ReceiptReturnData = {\n        type: ReceiptType.ReturnData,\n        id: hexOrZero(receipt.contract?.id),\n        ptr: bn(receipt.ptr),\n        len: bn(receipt.len),\n        digest: hexOrZero(receipt.digest),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return returnDataReceipt;\n    }\n\n    case GqlReceiptType.Panic: {\n      const panicReceipt: ReceiptPanic = {\n        type: ReceiptType.Panic,\n        id: hexOrZero(receipt.contract?.id),\n        reason: bn(receipt.reason),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n        contractId: hexOrZero(receipt.contractId),\n      };\n\n      return panicReceipt;\n    }\n\n    case GqlReceiptType.Revert: {\n      const revertReceipt: ReceiptRevert = {\n        type: ReceiptType.Revert,\n        id: hexOrZero(receipt.contract?.id),\n        val: bn(receipt.ra),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n      return revertReceipt;\n    }\n\n    case GqlReceiptType.Log: {\n      const logReceipt: ReceiptLog = {\n        type: ReceiptType.Log,\n        id: hexOrZero(receipt.contract?.id),\n        val0: bn(receipt.ra),\n        val1: bn(receipt.rb),\n        val2: bn(receipt.rc),\n        val3: bn(receipt.rd),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return logReceipt;\n    }\n\n    case GqlReceiptType.LogData: {\n      const logDataReceipt: ReceiptLogData = {\n        type: ReceiptType.LogData,\n        id: hexOrZero(receipt.contract?.id),\n        val0: bn(receipt.ra),\n        val1: bn(receipt.rb),\n        ptr: bn(receipt.ptr),\n        len: bn(receipt.len),\n        digest: hexOrZero(receipt.digest),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n      return logDataReceipt;\n    }\n\n    case GqlReceiptType.Transfer: {\n      const transferReceipt: ReceiptTransfer = {\n        type: ReceiptType.Transfer,\n        from: hexOrZero(receipt.contract?.id),\n        to: hexOrZero(receipt.toAddress || receipt?.to?.id),\n        amount: bn(receipt.amount),\n        assetId: hexOrZero(receipt.assetId),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return transferReceipt;\n    }\n\n    case GqlReceiptType.TransferOut: {\n      const transferOutReceipt: ReceiptTransferOut = {\n        type: ReceiptType.TransferOut,\n        from: hexOrZero(receipt.contract?.id),\n        to: hexOrZero(receipt.toAddress || receipt.to?.id),\n        amount: bn(receipt.amount),\n        assetId: hexOrZero(receipt.assetId),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n      return transferOutReceipt;\n    }\n\n    case GqlReceiptType.ScriptResult: {\n      const scriptResultReceipt: ReceiptScriptResult = {\n        type: ReceiptType.ScriptResult,\n        result: bn(receipt.result),\n        gasUsed: bn(receipt.gasUsed),\n      };\n\n      return scriptResultReceipt;\n    }\n\n    case GqlReceiptType.MessageOut: {\n      const sender = hexOrZero(receipt.sender);\n      const recipient = hexOrZero(receipt.recipient);\n      const nonce = hexOrZero(receipt.nonce);\n      const amount = bn(receipt.amount);\n      const data = receipt.data ? arrayify(receipt.data) : Uint8Array.from([]);\n      const digest = hexOrZero(receipt.digest);\n\n      const messageId = ReceiptMessageOutCoder.getMessageId({\n        sender,\n        recipient,\n        nonce,\n        amount,\n        data,\n      });\n\n      const receiptMessageOut: ReceiptMessageOut = {\n        type: ReceiptType.MessageOut,\n        sender,\n        recipient,\n        amount,\n        nonce,\n        data,\n        digest,\n        messageId,\n      };\n\n      return receiptMessageOut;\n    }\n\n    case GqlReceiptType.Mint: {\n      const contractId = hexOrZero(receipt.contract?.id);\n      const subId = hexOrZero(receipt.subId);\n      const assetId = ReceiptMintCoder.getAssetId(contractId, subId);\n\n      const mintReceipt: ReceiptMint = {\n        type: ReceiptType.Mint,\n        subId,\n        contractId,\n        assetId,\n        val: bn(receipt.val),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return mintReceipt;\n    }\n\n    case GqlReceiptType.Burn: {\n      const contractId = hexOrZero(receipt.contract?.id);\n      const subId = hexOrZero(receipt.subId);\n      const assetId = ReceiptBurnCoder.getAssetId(contractId, subId);\n\n      const burnReceipt: ReceiptBurn = {\n        type: ReceiptType.Burn,\n        subId,\n        contractId,\n        assetId,\n        val: bn(receipt.val),\n        pc: bn(receipt.pc),\n        is: bn(receipt.is),\n      };\n\n      return burnReceipt;\n    }\n\n    default:\n      throw new FuelError(ErrorCode.INVALID_RECEIPT_TYPE, `Invalid receipt type: ${receiptType}.`);\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nconst DEFAULT_BLOCK_EXPLORER_URL = 'https://fuellabs.github.io/block-explorer-v2';\n\n/** @hidden */\nconst getPathFromInput = (\n  key: BuildBlockExplorerUrlHelperParam,\n  value: string | number | undefined\n) => {\n  const pathMap = {\n    address: `address`,\n    txId: `transaction`,\n    blockNumber: `block`,\n  };\n  const path = pathMap[key] || key;\n  return `${path}/${value}`;\n};\n\ntype BuildBlockExplorerUrlHelperParam = 'address' | 'txId' | 'blockNumber';\n\n/**\n * @hidden\n *\n * Builds a block explorer url based on and the given path, block explorer URL and provider URL\n */\nexport const buildBlockExplorerUrl = (\n  options: {\n    blockExplorerUrl?: string;\n    path?: string;\n    providerUrl?: string;\n    address?: string;\n    txId?: string;\n    blockNumber?: number;\n  } = {}\n) => {\n  const { blockExplorerUrl, path, providerUrl, address, txId, blockNumber } = options;\n  const explorerUrl = blockExplorerUrl || DEFAULT_BLOCK_EXPLORER_URL;\n\n  // make sure that only ONE or none of the following is defined: address, txId, blockNumber\n  const customInputParams = [\n    {\n      key: 'address',\n      value: address,\n    },\n    {\n      key: 'txId',\n      value: txId,\n    },\n    {\n      key: 'blockNumber',\n      value: blockNumber,\n    },\n  ];\n\n  const definedValues = customInputParams\n    .filter((param) => !!param.value)\n    .map(({ key, value }) => ({\n      key,\n      value,\n    }));\n\n  const hasAnyDefinedValues = definedValues.length > 0;\n\n  if (definedValues.length > 1) {\n    throw new FuelError(\n      ErrorCode.ERROR_BUILDING_BLOCK_EXPLORER_URL,\n      `Only one of the following can be passed in to buildBlockExplorerUrl: ${customInputParams\n        .map((param) => param.key)\n        .join(', ')}.`\n    );\n  }\n\n  if (path && definedValues.length > 0) {\n    const inputKeys = customInputParams.map(({ key }) => key).join(', ');\n    throw new FuelError(\n      ErrorCode.ERROR_BUILDING_BLOCK_EXPLORER_URL,\n      `You cannot pass in a path to 'buildBlockExplorerUrl' along with any of the following: ${inputKeys}.`\n    );\n  }\n\n  const pathGeneratedFromInputParams = hasAnyDefinedValues\n    ? getPathFromInput(\n        definedValues[0].key as BuildBlockExplorerUrlHelperParam,\n        definedValues[0].value\n      )\n    : '';\n\n  // Remove leading and trailing slashes from the path and block explorer url respectively, if present\n  const trimSlashes = /^\\/|\\/$/gm;\n  const cleanPath = path ? path.replace(trimSlashes, '') : pathGeneratedFromInputParams;\n  const cleanBlockExplorerUrl = explorerUrl.replace(trimSlashes, '');\n  const cleanProviderUrl = providerUrl?.replace(trimSlashes, '');\n  const encodedProviderUrl = cleanProviderUrl ? encodeURIComponent(cleanProviderUrl) : undefined;\n\n  // if the block explorer url doesn't have a protocol i.e. http:// or https://, add https://\n  const protocol = cleanBlockExplorerUrl.match(/^https?:\\/\\//) ? '' : 'https://';\n  const providerUrlProtocol = cleanProviderUrl?.match(/^https?:\\/\\//) ? '' : 'https://';\n\n  const url = `${protocol}${cleanBlockExplorerUrl}/${cleanPath}${\n    encodedProviderUrl ? `?providerUrl=${providerUrlProtocol}${encodedProviderUrl}` : ''\n  }`;\n\n  return url;\n};\n","import type { BN, BNInput } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport { ReceiptType, type Input } from '@fuel-ts/transactions';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport type { GqlDependentCost, GqlGasCosts } from '../__generated__/operations';\nimport type { TransactionRequestInput } from '../transaction-request';\nimport type {\n  TransactionResultReceipt,\n  TransactionResultScriptResultReceipt,\n} from '../transaction-response';\n\n/** @hidden */\nexport const calculatePriceWithFactor = (gas: BN, gasPrice: BN, priceFactor: BN): BN =>\n  bn(Math.ceil(gas.mul(gasPrice).toNumber() / priceFactor.toNumber()));\n\n/** @hidden */\nexport const getGasUsedFromReceipts = (receipts: Array<TransactionResultReceipt>): BN => {\n  const scriptResult = receipts.filter(\n    (receipt) => receipt.type === ReceiptType.ScriptResult\n  ) as TransactionResultScriptResultReceipt[];\n\n  const gasUsed = scriptResult.reduce((prev, receipt) => prev.add(receipt.gasUsed), bn(0));\n\n  return gasUsed;\n};\n\nexport function resolveGasDependentCosts(byteSize: BNInput, gasDependentCost: GqlDependentCost) {\n  const base = bn(gasDependentCost.base);\n  let dependentValue = bn(0);\n  if (gasDependentCost.__typename === 'LightOperation') {\n    dependentValue = bn(byteSize).div(bn(gasDependentCost.unitsPerGas));\n  }\n  if (gasDependentCost.__typename === 'HeavyOperation') {\n    dependentValue = bn(byteSize).mul(bn(gasDependentCost.gasPerUnit));\n  }\n  return base.add(dependentValue);\n}\n\nexport function gasUsedByInputs(\n  inputs: Array<TransactionRequestInput | Input>,\n  txBytesSize: number,\n  gasCosts: GqlGasCosts\n) {\n  const witnessCache: Array<number> = [];\n  const totalGas = inputs.reduce((total, input) => {\n    if ('predicate' in input && input.predicate && input.predicate !== '0x') {\n      return total.add(\n        resolveGasDependentCosts(txBytesSize, gasCosts.vmInitialization)\n          .add(resolveGasDependentCosts(arrayify(input.predicate).length, gasCosts.contractRoot))\n          .add(bn(input.predicateGasUsed))\n      );\n    }\n    if ('witnessIndex' in input && !witnessCache.includes(input.witnessIndex)) {\n      witnessCache.push(input.witnessIndex);\n      return total.add(gasCosts.ecr1);\n    }\n    return total;\n  }, bn());\n  // Never allow gas to exceed MAX_U64\n  return totalGas;\n}\n\nexport interface IGetMinGasParams {\n  inputs: Array<TransactionRequestInput | Input>;\n  gasCosts: GqlGasCosts;\n  txBytesSize: number;\n  metadataGas: BN;\n  gasPerByte: BN;\n}\n\nexport function getMinGas(params: IGetMinGasParams) {\n  const { gasCosts, gasPerByte, inputs, metadataGas, txBytesSize } = params;\n\n  const vmInitGas = resolveGasDependentCosts(txBytesSize, gasCosts.vmInitialization);\n  const bytesGas = bn(txBytesSize).mul(gasPerByte);\n  const inputsGas = gasUsedByInputs(inputs, txBytesSize, gasCosts);\n\n  const minGas = vmInitGas.add(bytesGas).add(inputsGas).add(metadataGas).maxU64();\n\n  return minGas;\n}\n\nexport interface IGetMaxGasParams {\n  witnessesLength: number;\n  witnessLimit?: BN;\n  gasPerByte: BN;\n  minGas: BN;\n  gasLimit?: BN;\n}\n\nexport function getMaxGas(params: IGetMaxGasParams) {\n  const { gasPerByte, witnessesLength, witnessLimit, minGas, gasLimit = bn(0) } = params;\n\n  let remainingAllowedWitnessGas = bn(0);\n\n  if (witnessLimit?.gt(0) && witnessLimit.gte(witnessesLength)) {\n    remainingAllowedWitnessGas = bn(witnessLimit).sub(witnessesLength).mul(gasPerByte);\n  }\n\n  return remainingAllowedWitnessGas.add(minGas).add(gasLimit);\n}\n\nexport function calculateMetadataGasForTxCreate({\n  gasCosts,\n  stateRootSize,\n  txBytesSize,\n  contractBytesSize,\n}: {\n  gasCosts: GqlGasCosts;\n  contractBytesSize: BN;\n  stateRootSize: number;\n  txBytesSize: number;\n}) {\n  const contractRootGas = resolveGasDependentCosts(contractBytesSize, gasCosts.contractRoot);\n  const stateRootGas = resolveGasDependentCosts(stateRootSize, gasCosts.stateRoot);\n  const txIdGas = resolveGasDependentCosts(txBytesSize, gasCosts.s256);\n  // See https://github.com/FuelLabs/fuel-specs/blob/master/src/identifiers/contract-id.md\n  const contractIdInputSize = bn(4 + 32 + 32 + 32);\n  const contractIdGas = resolveGasDependentCosts(contractIdInputSize, gasCosts.s256);\n  const metadataGas = contractRootGas.add(stateRootGas).add(txIdGas).add(contractIdGas);\n  return metadataGas.maxU64();\n}\n\nexport function calculateMetadataGasForTxScript({\n  gasCosts,\n  txBytesSize,\n}: {\n  gasCosts: GqlGasCosts;\n  txBytesSize: number;\n}) {\n  return resolveGasDependentCosts(txBytesSize, gasCosts.s256);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nimport { hexlify } from '@fuel-ts/utils';\nimport { clone } from 'ramda';\n\n// When parsing a Transaction to JSON we need\n// to convert special types into each respective\n// JSON friendly value. This enables a tx to be\n// stringified and parsed back into a Transaction\n/** @hidden */\nfunction normalize(object: any) {\n  Object.keys(object).forEach((key) => {\n    switch (object[key]?.constructor.name) {\n      case 'Uint8Array':\n        object[key] = hexlify(object[key]);\n        break;\n      case 'Array':\n        object[key] = normalize(object[key]);\n        break;\n      case 'BN':\n        object[key] = object[key].toHex();\n        break;\n      case 'Address':\n        object[key] = object[key].toB256();\n        break;\n      case 'Object':\n        object[key] = normalize(object[key]);\n        break;\n      default:\n        break;\n    }\n  });\n  return object;\n}\n\n/**\n * Stringify Transaction to a JSON object\n * compatible with the Transaction class constructor.\n */\n/** @hidden */\nexport function normalizeJSON(root: any) {\n  // Do a single deep clone before normalizing\n  // to avoid mutating the original object\n  // and doing extra clones on each iteration\n  return normalize(clone(root));\n}\n","/** @hidden */\nexport function sleep(time: number) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, time);\n  });\n}\n","/* eslint-disable max-classes-per-file */\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\n\n/**\n * @hidden\n */\nexport class ChangeOutputCollisionError extends Error {\n  name = 'ChangeOutputCollisionError';\n  message = 'A ChangeOutput with the same \"assetId\" already exists for a different \"to\" address';\n}\n\n/**\n * @hidden\n */\nexport class NoWitnessAtIndexError extends Error {\n  name = 'NoWitnessAtIndexError';\n  constructor(public readonly index: number) {\n    super();\n    this.message = `Witness at index \"${index}\" was not found`;\n  }\n}\n\n/**\n * @hidden\n */\nexport class NoWitnessByOwnerError extends Error {\n  name = 'NoWitnessByOwnerError';\n  constructor(public readonly owner: AbstractAddress) {\n    super();\n    this.message = `A witness for the given owner \"${owner}\" was not found`;\n  }\n}\n","import type { BytesLike } from '@fuel-ts/interfaces';\nimport type { Witness } from '@fuel-ts/transactions';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\n\nexport type TransactionRequestWitness = BytesLike;\n\nexport const witnessify = (value: TransactionRequestWitness): Witness => {\n  const data = arrayify(value);\n\n  return {\n    data: hexlify(data),\n    dataLength: data.length,\n  };\n};\n","import type { InputValue } from '@fuel-ts/abi-coder';\nimport { Address, addressify } from '@fuel-ts/address';\nimport { BaseAssetId, ZeroBytes32 } from '@fuel-ts/address/configs';\nimport type { AddressLike, AbstractAddress, BytesLike } from '@fuel-ts/interfaces';\nimport type { BN, BigNumberish } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type { TransactionScript, Policy, TransactionCreate } from '@fuel-ts/transactions';\nimport {\n  PolicyType,\n  TransactionCoder,\n  InputType,\n  OutputType,\n  TransactionType,\n} from '@fuel-ts/transactions';\nimport { concat, hexlify } from '@fuel-ts/utils';\n\nimport type { Account } from '../../account';\nimport type { Predicate } from '../../predicate';\nimport type { GqlGasCosts } from '../__generated__/operations';\nimport type { Coin } from '../coin';\nimport type { CoinQuantity, CoinQuantityLike } from '../coin-quantity';\nimport { coinQuantityfy } from '../coin-quantity';\nimport type { MessageCoin } from '../message';\nimport type { ChainInfo } from '../provider';\nimport type { Resource } from '../resource';\nimport { isCoin } from '../resource';\nimport { normalizeJSON } from '../utils';\nimport { getMaxGas, getMinGas } from '../utils/gas';\n\nimport { NoWitnessAtIndexError } from './errors';\nimport type {\n  TransactionRequestInput,\n  CoinTransactionRequestInput,\n  MessageTransactionRequestInput,\n} from './input';\nimport { inputify } from './input';\nimport type {\n  TransactionRequestOutput,\n  ChangeTransactionRequestOutput,\n  CoinTransactionRequestOutput,\n} from './output';\nimport { outputify } from './output';\nimport type { TransactionRequestLike } from './types';\nimport type { TransactionRequestWitness } from './witness';\nimport { witnessify } from './witness';\n\nexport {\n  /**\n   * @hidden\n   */\n  TransactionType,\n};\n\n/**\n * @hidden\n *\n * Interface defining a like structure for a base transaction request.\n */\nexport interface BaseTransactionRequestLike {\n  /** Gas price for transaction */\n  gasPrice?: BigNumberish;\n  /** Block until which tx cannot be included */\n  maturity?: number;\n  /** The maximum fee payable by this transaction using BASE_ASSET. */\n  maxFee?: BigNumberish;\n  /** The maximum amount of witness data allowed for the transaction */\n  witnessLimit?: BigNumberish;\n  /** List of inputs */\n  inputs?: TransactionRequestInput[];\n  /** List of outputs */\n  outputs?: TransactionRequestOutput[];\n  /** List of witnesses */\n  witnesses?: TransactionRequestWitness[];\n}\n\ntype ToBaseTransactionResponse = Pick<\n  TransactionScript,\n  | 'inputs'\n  | 'inputsCount'\n  | 'outputs'\n  | 'outputsCount'\n  | 'witnesses'\n  | 'witnessesCount'\n  | 'policies'\n  | 'policyTypes'\n>;\n\n/**\n * Abstract class to define the functionalities of a transaction request transaction request.\n */\nexport abstract class BaseTransactionRequest implements BaseTransactionRequestLike {\n  /** Type of the transaction */\n  abstract type: TransactionType;\n  /** Gas price for transaction */\n  gasPrice: BN;\n  /** Block until which tx cannot be included */\n  maturity: number;\n  /** The maximum fee payable by this transaction using BASE_ASSET. */\n  maxFee?: BN;\n  /** The maximum amount of witness data allowed for the transaction */\n  witnessLimit?: BN | undefined;\n  /** List of inputs */\n  inputs: TransactionRequestInput[] = [];\n  /** List of outputs */\n  outputs: TransactionRequestOutput[] = [];\n  /** List of witnesses */\n  witnesses: TransactionRequestWitness[] = [];\n\n  /**\n   * Constructor for initializing a base transaction request.\n   *\n   * @param baseTransactionRequest - Optional object containing properties to initialize the transaction request.\n   */\n  constructor({\n    gasPrice,\n    maturity,\n    maxFee,\n    witnessLimit,\n    inputs,\n    outputs,\n    witnesses,\n  }: BaseTransactionRequestLike = {}) {\n    this.gasPrice = bn(gasPrice);\n    this.maturity = maturity ?? 0;\n    this.witnessLimit = witnessLimit ? bn(witnessLimit) : undefined;\n    this.maxFee = maxFee ? bn(maxFee) : undefined;\n    this.inputs = inputs ?? [];\n    this.outputs = outputs ?? [];\n    this.witnesses = witnesses ?? [];\n  }\n\n  static getPolicyMeta(req: BaseTransactionRequest) {\n    let policyTypes = 0;\n    const policies: Policy[] = [];\n\n    if (req.gasPrice) {\n      policyTypes += PolicyType.GasPrice;\n      policies.push({ data: req.gasPrice, type: PolicyType.GasPrice });\n    }\n    if (req.witnessLimit) {\n      policyTypes += PolicyType.WitnessLimit;\n      policies.push({ data: req.witnessLimit, type: PolicyType.WitnessLimit });\n    }\n    if (req.maturity > 0) {\n      policyTypes += PolicyType.Maturity;\n      policies.push({ data: req.maturity, type: PolicyType.Maturity });\n    }\n    if (req.maxFee) {\n      policyTypes += PolicyType.MaxFee;\n      policies.push({ data: req.maxFee, type: PolicyType.MaxFee });\n    }\n\n    return {\n      policyTypes,\n      policies,\n    };\n  }\n\n  /**\n   * Method to obtain the base transaction details.\n   *\n   * @returns The base transaction details.\n   */\n\n  protected getBaseTransaction(): ToBaseTransactionResponse {\n    const inputs = this.inputs?.map(inputify) ?? [];\n    const outputs = this.outputs?.map(outputify) ?? [];\n    const witnesses = this.witnesses?.map(witnessify) ?? [];\n\n    const { policyTypes, policies } = BaseTransactionRequest.getPolicyMeta(this);\n\n    return {\n      policyTypes,\n      inputs,\n      outputs,\n      policies,\n      witnesses,\n      inputsCount: inputs.length,\n      outputsCount: outputs.length,\n      witnessesCount: witnesses.length,\n    };\n  }\n\n  abstract toTransaction(): TransactionCreate | TransactionScript;\n\n  /**\n   * Converts the transaction request to a byte array.\n   *\n   * @returns The transaction bytes.\n   */\n  toTransactionBytes(): Uint8Array {\n    return new TransactionCoder().encode(this.toTransaction());\n  }\n\n  /**\n   * @hidden\n   *\n   * Pushes an input to the list without any side effects and returns the index\n   */\n  protected pushInput(input: TransactionRequestInput): number {\n    this.inputs.push(input);\n    return this.inputs.length - 1;\n  }\n\n  /**\n   * @hidden\n   *\n   * Pushes an output to the list without any side effects and returns the index\n   */\n  protected pushOutput(output: TransactionRequestOutput): number {\n    this.outputs.push(output);\n    return this.outputs.length - 1;\n  }\n\n  /**\n   * @hidden\n   *\n   * Pushes a witness to the list and returns the index\n   *\n   * @param signature - The signature to add to the witness.\n   * @returns The index of the created witness.\n   */\n  addWitness(signature: BytesLike) {\n    this.witnesses.push(signature);\n    return this.witnesses.length - 1;\n  }\n\n  /**\n   * @hidden\n   *\n   * Creates an empty witness without any side effects and returns the index\n   *\n   * @returns The index of the created witness.\n   */\n  protected addEmptyWitness(): number {\n    // Push a dummy witness with same byte size as a real witness signature\n    this.addWitness(concat([ZeroBytes32, ZeroBytes32]));\n    return this.witnesses.length - 1;\n  }\n\n  /**\n   * Updates the witness for a given owner and signature.\n   *\n   * @param address - The address to get the coin input witness index for.\n   * @param signature - The signature to update the witness with.\n   */\n  updateWitnessByOwner(address: string | AbstractAddress, signature: BytesLike) {\n    const ownerAddress = Address.fromAddressOrString(address);\n    const witnessIndex = this.getCoinInputWitnessIndexByOwner(ownerAddress);\n    if (typeof witnessIndex === 'number') {\n      this.updateWitness(witnessIndex, signature);\n    }\n  }\n\n  /**\n   * Updates an existing witness without any side effects.\n   *\n   * @param index - The index of the witness to update.\n   * @param witness - The new witness.\n   * @throws If the witness does not exist.\n   */\n  updateWitness(index: number, witness: TransactionRequestWitness) {\n    if (!this.witnesses[index]) {\n      throw new NoWitnessAtIndexError(index);\n    }\n    this.witnesses[index] = witness;\n  }\n\n  /**\n   * Helper function to add an external signature to the transaction.\n   *\n   * @param account - The account/s to sign to the transaction.\n   * @returns The transaction with the signature witness added.\n   */\n  async addAccountWitnesses(account: Account | Account[]) {\n    const accounts = Array.isArray(account) ? account : [account];\n    await Promise.all(\n      accounts.map(async (acc) => {\n        this.addWitness(await acc.signTransaction(<TransactionRequestLike>this));\n      })\n    );\n\n    return this;\n  }\n\n  /**\n   * Gets the coin inputs for a transaction.\n   *\n   * @returns The coin inputs.\n   */\n  getCoinInputs(): CoinTransactionRequestInput[] {\n    return this.inputs.filter(\n      (input): input is CoinTransactionRequestInput => input.type === InputType.Coin\n    );\n  }\n\n  /**\n   * Gets the coin outputs for a transaction.\n   *\n   * @returns The coin outputs.\n   */\n  getCoinOutputs(): CoinTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is CoinTransactionRequestOutput => output.type === OutputType.Coin\n    );\n  }\n\n  /**\n   * Gets the change outputs for a transaction.\n   *\n   * @returns The change outputs.\n   */\n  getChangeOutputs(): ChangeTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is ChangeTransactionRequestOutput => output.type === OutputType.Change\n    );\n  }\n\n  /**\n   * @hidden\n   *\n   * Returns the witnessIndex of the found CoinInput.\n   */\n  getCoinInputWitnessIndexByOwner(owner: AddressLike): number | undefined {\n    const ownerAddress = addressify(owner);\n\n    const found = this.inputs.find((input) => {\n      switch (input.type) {\n        case InputType.Coin:\n          return hexlify((<CoinTransactionRequestInput>input).owner) === ownerAddress.toB256();\n        case InputType.Message:\n          return (\n            hexlify((<MessageTransactionRequestInput>input).recipient) === ownerAddress.toB256()\n          );\n        default:\n          return false;\n      }\n    });\n\n    return (<CoinTransactionRequestInput>found)?.witnessIndex;\n  }\n\n  /**\n   * Adds a single coin input to the transaction and a change output for the related\n   * assetId, if one it was not added yet.\n   *\n   * @param coin - Coin resource.\n   * @param predicate - Predicate bytes.\n   * @param predicateData - Predicate data bytes.\n   */\n  addCoinInput(coin: Coin, predicate?: Predicate<InputValue[]>) {\n    const { assetId, owner, amount } = coin;\n\n    let witnessIndex;\n\n    if (predicate) {\n      witnessIndex = 0;\n    } else {\n      witnessIndex = this.getCoinInputWitnessIndexByOwner(owner);\n\n      // Insert a dummy witness if no witness exists\n      if (typeof witnessIndex !== 'number') {\n        witnessIndex = this.addEmptyWitness();\n      }\n    }\n\n    const input: CoinTransactionRequestInput = {\n      ...coin,\n      type: InputType.Coin,\n      owner: owner.toB256(),\n      amount,\n      assetId,\n      txPointer: '0x00000000000000000000000000000000',\n      witnessIndex,\n      predicate: predicate?.bytes,\n      predicateData: predicate?.predicateDataBytes,\n    };\n\n    // Insert the Input\n    this.pushInput(input);\n\n    // Insert a ChangeOutput if it does not exist\n    this.addChangeOutput(owner, assetId);\n  }\n\n  /**\n   * Adds a single message input to the transaction and a change output for the\n   * baseAssetId, if one it was not added yet.\n   *\n   * @param message - Message resource.\n   * @param predicate - Predicate bytes.\n   * @param predicateData - Predicate data bytes.\n   */\n  addMessageInput(message: MessageCoin, predicate?: Predicate<InputValue[]>) {\n    const { recipient, sender, amount } = message;\n\n    const assetId = BaseAssetId;\n\n    let witnessIndex;\n\n    if (predicate) {\n      witnessIndex = 0;\n    } else {\n      witnessIndex = this.getCoinInputWitnessIndexByOwner(recipient);\n\n      // Insert a dummy witness if no witness exists\n      if (typeof witnessIndex !== 'number') {\n        witnessIndex = this.addEmptyWitness();\n      }\n    }\n\n    const input: MessageTransactionRequestInput = {\n      ...message,\n      type: InputType.Message,\n      sender: sender.toB256(),\n      recipient: recipient.toB256(),\n      amount,\n      witnessIndex,\n      predicate: predicate?.bytes,\n      predicateData: predicate?.predicateDataBytes,\n    };\n\n    // Insert the Input\n    this.pushInput(input);\n\n    // Insert a ChangeOutput if it does not exist\n    this.addChangeOutput(recipient, assetId);\n  }\n\n  /**\n   * Adds a single resource to the transaction by adding a coin/message input and a\n   * change output for the related assetId, if one it was not added yet.\n   *\n   * @param resource - The resource to add.\n   * @returns This transaction.\n   */\n  addResource(resource: Resource) {\n    if (isCoin(resource)) {\n      this.addCoinInput(resource);\n    } else {\n      this.addMessageInput(resource);\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds multiple resources to the transaction by adding coin/message inputs and change\n   * outputs from the related assetIds.\n   *\n   * @param resources - The resources to add.\n   * @returns This transaction.\n   */\n  addResources(resources: ReadonlyArray<Resource>) {\n    resources.forEach((resource) => this.addResource(resource));\n\n    return this;\n  }\n\n  /**\n   * Adds multiple resources to the transaction by adding coin/message inputs and change\n   * outputs from the related assetIds.\n   *\n   * @param resources - The resources to add.\n   * @returns This transaction.\n   */\n  addPredicateResource(resource: Resource, predicate: Predicate<InputValue[]>) {\n    if (isCoin(resource)) {\n      this.addCoinInput(resource, predicate);\n    } else {\n      this.addMessageInput(resource, predicate);\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds multiple predicate coin/message inputs to the transaction and change outputs\n   * from the related assetIds.\n   *\n   * @param resources - The resources to add.\n   * @returns This transaction.\n   */\n  addPredicateResources(resources: Resource[], predicate: Predicate<InputValue[]>) {\n    resources.forEach((resource) => this.addPredicateResource(resource, predicate));\n\n    return this;\n  }\n\n  /**\n   * Adds a coin output to the transaction.\n   *\n   * @param to - Address of the owner.\n   * @param amount - Amount of coin.\n   * @param assetId - Asset ID of coin.\n   */\n  addCoinOutput(to: AddressLike, amount: BigNumberish, assetId: BytesLike = BaseAssetId) {\n    this.pushOutput({\n      type: OutputType.Coin,\n      to: addressify(to).toB256(),\n      amount,\n      assetId,\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds multiple coin outputs to the transaction.\n   *\n   * @param to - Address of the destination.\n   * @param quantities - Quantities of coins.\n   */\n  addCoinOutputs(to: AddressLike, quantities: CoinQuantityLike[]) {\n    quantities.map(coinQuantityfy).forEach((quantity) => {\n      this.pushOutput({\n        type: OutputType.Coin,\n        to: addressify(to).toB256(),\n        amount: quantity.amount,\n        assetId: quantity.assetId,\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds a change output to the transaction.\n   *\n   * @param to - Address of the owner.\n   * @param assetId - Asset ID of coin.\n   */\n  addChangeOutput(to: AddressLike, assetId: BytesLike = BaseAssetId) {\n    // Find the ChangeOutput for the AssetId of the Resource\n    const changeOutput = this.getChangeOutputs().find(\n      (output) => hexlify(output.assetId) === assetId\n    );\n\n    // Insert a ChangeOutput if it does not exist\n    if (!changeOutput) {\n      this.pushOutput({\n        type: OutputType.Change,\n        to: addressify(to).toB256(),\n        assetId,\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  byteSize() {\n    return this.toTransactionBytes().length;\n  }\n\n  /**\n   * @hidden\n   */\n  metadataGas(_gasCosts: GqlGasCosts): BN {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @hidden\n   */\n  calculateMinGas(chainInfo: ChainInfo): BN {\n    const { gasCosts, consensusParameters } = chainInfo;\n    const { gasPerByte } = consensusParameters;\n    return getMinGas({\n      gasPerByte,\n      gasCosts,\n      inputs: this.inputs,\n      txBytesSize: this.byteSize(),\n      metadataGas: this.metadataGas(gasCosts),\n    });\n  }\n\n  calculateMaxGas(chainInfo: ChainInfo, minGas: BN): BN {\n    const { consensusParameters } = chainInfo;\n    const { gasPerByte } = consensusParameters;\n\n    const witnessesLength = this.toTransaction().witnesses.reduce(\n      (acc, wit) => acc + wit.dataLength,\n      0\n    );\n    return getMaxGas({\n      gasPerByte,\n      minGas,\n      witnessesLength,\n      witnessLimit: this.witnessLimit,\n    });\n  }\n\n  /**\n   * Funds the transaction with fake UTXOs for each assetId and amount in the\n   * quantities array.\n   *\n   * @param quantities - CoinQuantity Array.\n   */\n  fundWithFakeUtxos(quantities: CoinQuantity[], resourcesOwner?: AbstractAddress) {\n    let idCounter = 0;\n    const generateId = (): string => {\n      const counterString = String(idCounter++);\n      const id = ZeroBytes32.slice(0, -counterString.length).concat(counterString);\n      return id;\n    };\n\n    const findAssetInput = (assetId: string) =>\n      this.inputs.find((input) => {\n        if ('assetId' in input) {\n          return input.assetId === assetId;\n        }\n        return false;\n      });\n\n    const updateAssetInput = (assetId: string, quantity: BN) => {\n      const assetInput = findAssetInput(assetId);\n\n      if (assetInput && 'assetId' in assetInput) {\n        assetInput.id = generateId();\n        assetInput.amount = quantity;\n      } else {\n        this.addResources([\n          {\n            id: generateId(),\n            amount: quantity,\n            assetId,\n            owner: resourcesOwner || Address.fromRandom(),\n            maturity: 0,\n            blockCreated: bn(1),\n            txCreatedIdx: bn(1),\n          },\n        ]);\n      }\n    };\n\n    updateAssetInput(BaseAssetId, bn(100_000_000_000));\n    quantities.forEach((q) => updateAssetInput(q.assetId, q.amount));\n  }\n\n  /**\n   * Retrieves an array of CoinQuantity for each coin output present in the transaction.\n   * a transaction.\n   *\n   * @returns  CoinQuantity array.\n   */\n  getCoinOutputsQuantities(): CoinQuantity[] {\n    const coinsQuantities = this.getCoinOutputs().map(({ amount, assetId }) => ({\n      amount: bn(amount),\n      assetId: assetId.toString(),\n    }));\n\n    return coinsQuantities;\n  }\n\n  /**\n   * Gets the Transaction Request by hashing the transaction.\n   *\n   * @param chainId - The chain ID.\n   *\n   * @returns - A hash of the transaction, which is the transaction ID.\n   */\n  abstract getTransactionId(chainId: number): string;\n\n  /**\n   * Return the minimum amount in native coins required to create\n   * a transaction.\n   *\n   * @returns The transaction as a JSON object.\n   */\n  toJSON() {\n    return normalizeJSON(this);\n  }\n\n  updatePredicateInputs(inputs: TransactionRequestInput[]) {\n    this.inputs.forEach((i) => {\n      let correspondingInput: TransactionRequestInput | undefined;\n      switch (i.type) {\n        case InputType.Coin:\n          correspondingInput = inputs.find((x) => x.type === InputType.Coin && x.owner === i.owner);\n          break;\n        case InputType.Message:\n          correspondingInput = inputs.find(\n            (x) => x.type === InputType.Message && x.sender === i.sender\n          );\n          break;\n        default:\n          return;\n      }\n      if (\n        correspondingInput &&\n        'predicateGasUsed' in correspondingInput &&\n        bn(correspondingInput.predicateGasUsed).gt(0)\n      ) {\n        // eslint-disable-next-line no-param-reassign\n        i.predicate = correspondingInput.predicate;\n        // eslint-disable-next-line no-param-reassign\n        i.predicateData = correspondingInput.predicateData;\n        // eslint-disable-next-line no-param-reassign\n        i.predicateGasUsed = correspondingInput.predicateGasUsed;\n      }\n    });\n  }\n}\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { uint64ToBytesBE, sha256 } from '@fuel-ts/hasher';\nimport { bn } from '@fuel-ts/math';\nimport { TransactionType, InputType, OutputType, TransactionCoder } from '@fuel-ts/transactions';\nimport { concat } from '@fuel-ts/utils';\nimport { clone } from 'ramda';\n\nimport type { TransactionRequest } from './types';\n\n/**\n * Hash transaction request with sha256. [Read more](https://github.com/FuelLabs/fuel-specs/blob/master/specs/protocol/identifiers.md#transaction-id)\n *\n * @param transactionRequest - Transaction request to be hashed\n * @returns sha256 hash of the transaction\n */\nexport function hashTransaction(transactionRequest: TransactionRequest, chainId: number) {\n  const transaction = transactionRequest.toTransaction();\n\n  if (transaction.type === TransactionType.Script) {\n    transaction.receiptsRoot = ZeroBytes32;\n  }\n\n  // Zero out input fields\n  transaction.inputs = transaction.inputs.map((input) => {\n    const inputClone = clone(input);\n\n    switch (inputClone.type) {\n      // Zero out on signing: txPointer, predicateGasUsed\n      case InputType.Coin: {\n        inputClone.txPointer = {\n          blockHeight: 0,\n          txIndex: 0,\n        };\n        inputClone.predicateGasUsed = bn(0);\n        return inputClone;\n      }\n      // Zero out on signing: predicateGasUsed\n      case InputType.Message: {\n        inputClone.predicateGasUsed = bn(0);\n        return inputClone;\n      }\n      // Zero out on signing: txID, outputIndex, balanceRoot, stateRoot, and txPointer\n      case InputType.Contract: {\n        inputClone.txPointer = {\n          blockHeight: 0,\n          txIndex: 0,\n        };\n        inputClone.txID = ZeroBytes32;\n        inputClone.outputIndex = 0;\n        inputClone.balanceRoot = ZeroBytes32;\n        inputClone.stateRoot = ZeroBytes32;\n        return inputClone;\n      }\n      default:\n        return inputClone;\n    }\n  });\n  // Zero out output fields\n  transaction.outputs = transaction.outputs.map((output) => {\n    const outputClone = clone(output);\n\n    switch (outputClone.type) {\n      // Zero out on signing: balanceRoot, stateRoot\n      case OutputType.Contract: {\n        outputClone.balanceRoot = ZeroBytes32;\n        outputClone.stateRoot = ZeroBytes32;\n        return outputClone;\n      }\n      // Zero out on signing: amount\n      case OutputType.Change: {\n        outputClone.amount = bn(0);\n        return outputClone;\n      }\n      // Zero out on signing: amount, to and assetId\n      case OutputType.Variable: {\n        outputClone.to = ZeroBytes32;\n        outputClone.amount = bn(0);\n        outputClone.assetId = ZeroBytes32;\n        return outputClone;\n      }\n      default:\n        return outputClone;\n    }\n  });\n  transaction.witnessesCount = 0;\n  transaction.witnesses = [];\n\n  const chainIdBytes = uint64ToBytesBE(chainId);\n  const concatenatedData = concat([chainIdBytes, new TransactionCoder().encode(transaction)]);\n  return sha256(concatenatedData);\n}\n","import type { BytesLike } from '@fuel-ts/interfaces';\nimport type { StorageSlot } from '@fuel-ts/transactions';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\n\nexport type TransactionRequestStorageSlot =\n  | {\n      /** Key */\n      key: BytesLike;\n      /** Value */\n      value: BytesLike;\n    }\n  | [key: BytesLike, value: BytesLike];\n\n// Make sure all values have 32 bytes\nconst getStorageValue = (value: BytesLike): Uint8Array => {\n  const v = new Uint8Array(32);\n  v.set(arrayify(value));\n  return v;\n};\n\nexport const storageSlotify = (storageSlot: TransactionRequestStorageSlot): StorageSlot => {\n  let key;\n  let value;\n\n  if (Array.isArray(storageSlot)) {\n    key = storageSlot[0];\n    value = storageSlot[1];\n  } else {\n    key = storageSlot.key;\n    value = storageSlot.value;\n  }\n\n  return {\n    key: hexlify(key),\n    value: hexlify(getStorageValue(value)),\n  };\n};\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { bn, type BN } from '@fuel-ts/math';\nimport type { TransactionCreate } from '@fuel-ts/transactions';\nimport { TransactionType, OutputType } from '@fuel-ts/transactions';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\n\nimport type { GqlGasCosts } from '../__generated__/operations';\nimport { calculateMetadataGasForTxCreate } from '../utils/gas';\n\nimport { hashTransaction } from './hash-transaction';\nimport type { ContractCreatedTransactionRequestOutput } from './output';\nimport type { TransactionRequestStorageSlot } from './storage-slot';\nimport { storageSlotify } from './storage-slot';\nimport { BaseTransactionRequest } from './transaction-request';\nimport type { BaseTransactionRequestLike } from './transaction-request';\n\n/**\n * @hidden\n */\nexport interface CreateTransactionRequestLike extends BaseTransactionRequestLike {\n  /** Witness index of contract bytecode to create */\n  bytecodeWitnessIndex?: number;\n  /** Salt */\n  salt?: BytesLike;\n  /** List of storage slots to initialize */\n  storageSlots?: TransactionRequestStorageSlot[];\n}\n\n/**\n * `CreateTransactionRequest` provides functionalities for creating a transaction request that creates a contract.\n */\nexport class CreateTransactionRequest extends BaseTransactionRequest {\n  static from(obj: CreateTransactionRequestLike) {\n    if (obj instanceof this) {\n      return obj;\n    }\n    return new this(obj);\n  }\n\n  /** Type of the transaction */\n  type = TransactionType.Create as const;\n  /** Witness index of contract bytecode to create */\n  bytecodeWitnessIndex: number;\n  /** Salt */\n  salt: string;\n  /** List of storage slots to initialize */\n  storageSlots: TransactionRequestStorageSlot[];\n\n  /**\n   * Creates an instance `CreateTransactionRequest`.\n   *\n   * @param createTransactionRequestLike - The initial values for the instance\n   */\n  constructor({\n    bytecodeWitnessIndex,\n    salt,\n    storageSlots,\n    ...rest\n  }: CreateTransactionRequestLike = {}) {\n    super(rest);\n    this.bytecodeWitnessIndex = bytecodeWitnessIndex ?? 0;\n    this.salt = hexlify(salt ?? ZeroBytes32);\n    this.storageSlots = [...(storageSlots ?? [])];\n  }\n\n  /**\n   * Converts the transaction request to a `TransactionCreate`.\n   *\n   * @returns The transaction create object.\n   */\n  toTransaction(): TransactionCreate {\n    const baseTransaction = this.getBaseTransaction();\n    const bytecodeWitnessIndex = this.bytecodeWitnessIndex;\n    const storageSlots = this.storageSlots?.map(storageSlotify) ?? [];\n    return {\n      type: TransactionType.Create,\n      ...baseTransaction,\n      bytecodeLength: baseTransaction.witnesses[bytecodeWitnessIndex].dataLength / 4,\n      bytecodeWitnessIndex,\n      storageSlotsCount: storageSlots.length,\n      salt: this.salt ? hexlify(this.salt) : ZeroBytes32,\n      storageSlots,\n    };\n  }\n\n  /**\n   * Get contract created outputs for the transaction.\n   *\n   * @returns An array of contract created transaction request outputs.\n   */\n  getContractCreatedOutputs(): ContractCreatedTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is ContractCreatedTransactionRequestOutput =>\n        output.type === OutputType.ContractCreated\n    );\n  }\n\n  /**\n   * Gets the Transaction Request by hashing the transaction.\n   *\n   * @param chainId - The chain ID.\n   *\n   * @returns - A hash of the transaction, which is the transaction ID.\n   */\n  getTransactionId(chainId: number): string {\n    return hashTransaction(this, chainId);\n  }\n\n  /**\n   * Adds a contract created output to the transaction request.\n   *\n   * @param contractId - The contract ID.\n   * @param stateRoot - The state root.\n   */\n  addContractCreatedOutput(\n    /** Contract ID */\n    contractId: BytesLike,\n    /** State Root */\n    stateRoot: BytesLike\n  ) {\n    this.pushOutput({\n      type: OutputType.ContractCreated,\n      contractId,\n      stateRoot,\n    });\n  }\n\n  metadataGas(gasCosts: GqlGasCosts): BN {\n    return calculateMetadataGasForTxCreate({\n      contractBytesSize: bn(arrayify(this.witnesses[this.bytecodeWitnessIndex] || '0x').length),\n      gasCosts,\n      stateRootSize: this.storageSlots.length,\n      txBytesSize: this.byteSize(),\n    });\n  }\n}\n","import type { AbstractScriptRequest } from '@fuel-ts/interfaces';\nimport { arrayify } from '@fuel-ts/utils';\n\n// We can't import this from `@fuel-ts/script` because it causes\n// cyclic dependency errors so we duplicate it here.\n/** @hidden */\nexport const returnZeroScript: AbstractScriptRequest<void> = {\n  /*\n      Opcode::RET(REG_ZERO)\n      Opcode::NOOP\n    */\n  // TODO: Don't use hardcoded scripts: https://github.com/FuelLabs/fuels-ts/issues/281\n  bytes: arrayify('0x24000000'),\n  encodeScriptData: () => new Uint8Array(0),\n};\n\n/** @hidden */\nexport const withdrawScript: AbstractScriptRequest<void> = {\n  /*\n          The following code loads some basic values into registers and calls SMO to create an output message\n          5040C010 \t- ADDI r16 $is i16   [r16 now points to memory 16 bytes from the start of this program (start of receiver data)]\n          5D44C006\t- LW r17 $is i6      [r17 set to the 6th word in this program (6*8=48 bytes from the start of this program)]\n          4C400011\t- SMO r16 r0 r0 r17  [send message out to address starting at memory position r16 with amount in r17]\n          24000000\t- RET                [return 0]\n          00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 [recipient address]\n          00000000 00000000 [amount value]\n      */\n  // TODO: Don't use hardcoded scripts: https://github.com/FuelLabs/fuels-ts/issues/281\n  bytes: arrayify('0x5040C0105D44C0064C40001124000000'),\n  encodeScriptData: () => new Uint8Array(0),\n};\n","import type { InputValue, JsonAbi } from '@fuel-ts/abi-coder';\nimport { Interface } from '@fuel-ts/abi-coder';\nimport { addressify } from '@fuel-ts/address';\nimport { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport type { AbstractScriptRequest, ContractIdLike, BytesLike } from '@fuel-ts/interfaces';\nimport { bn } from '@fuel-ts/math';\nimport type { BN, BigNumberish } from '@fuel-ts/math';\nimport type { TransactionScript } from '@fuel-ts/transactions';\nimport { InputType, OutputType, TransactionType } from '@fuel-ts/transactions';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\n\nimport type { GqlGasCosts } from '../__generated__/operations';\nimport type { ChainInfo } from '../provider';\nimport { calculateMetadataGasForTxScript, getMaxGas } from '../utils/gas';\n\nimport { hashTransaction } from './hash-transaction';\nimport type { ContractTransactionRequestInput } from './input';\nimport type { ContractTransactionRequestOutput, VariableTransactionRequestOutput } from './output';\nimport { returnZeroScript } from './scripts';\nimport type { BaseTransactionRequestLike } from './transaction-request';\nimport { BaseTransactionRequest } from './transaction-request';\nimport type { JsonAbisFromAllCalls } from './types';\n\n/**\n * @hidden\n */\nexport interface ScriptTransactionRequestLike extends BaseTransactionRequestLike {\n  /** Gas limit for transaction */\n  gasLimit?: BigNumberish;\n  /** Script to execute */\n  script?: BytesLike;\n  /** Script input data (parameters) */\n  scriptData?: BytesLike;\n\n  abis?: JsonAbisFromAllCalls;\n}\n\n/**\n * `ScriptTransactionRequest` provides functionalities for creating a transaction request that uses a script.\n */\nexport class ScriptTransactionRequest extends BaseTransactionRequest {\n  static from(obj: ScriptTransactionRequestLike) {\n    if (obj instanceof this) {\n      return obj;\n    }\n    return new this(obj);\n  }\n\n  /** Type of the transaction */\n  type = TransactionType.Script as const;\n  /** Gas limit for transaction */\n  gasLimit: BN;\n  /** Script to execute */\n  script: Uint8Array;\n  /** Script input data (parameters) */\n  scriptData: Uint8Array;\n\n  abis?: JsonAbisFromAllCalls;\n\n  /**\n   * Constructor for `ScriptTransactionRequest`.\n   *\n   * @param scriptTransactionRequestLike - The initial values for the instance.\n   */\n  constructor({ script, scriptData, gasLimit, ...rest }: ScriptTransactionRequestLike = {}) {\n    super(rest);\n    this.gasLimit = bn(gasLimit);\n    this.script = arrayify(script ?? returnZeroScript.bytes);\n    this.scriptData = arrayify(scriptData ?? returnZeroScript.encodeScriptData());\n    this.abis = rest.abis;\n  }\n\n  /**\n   * Converts the transaction request to a `TransactionScript`.\n   *\n   * @returns The transaction script object.\n   */\n  toTransaction(): TransactionScript {\n    const script = arrayify(this.script ?? '0x');\n    const scriptData = arrayify(this.scriptData ?? '0x');\n    return {\n      type: TransactionType.Script,\n      scriptGasLimit: this.gasLimit,\n      ...super.getBaseTransaction(),\n      scriptLength: script.length,\n      scriptDataLength: scriptData.length,\n      receiptsRoot: ZeroBytes32,\n      script: hexlify(script),\n      scriptData: hexlify(scriptData),\n    };\n  }\n\n  /**\n   * Get contract inputs for the transaction.\n   *\n   * @returns An array of contract transaction request inputs.\n   */\n  getContractInputs(): ContractTransactionRequestInput[] {\n    return this.inputs.filter(\n      (input): input is ContractTransactionRequestInput => input.type === InputType.Contract\n    );\n  }\n\n  /**\n   * Get contract outputs for the transaction.\n   *\n   * @returns An array of contract transaction request outputs.\n   */\n  getContractOutputs(): ContractTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is ContractTransactionRequestOutput => output.type === OutputType.Contract\n    );\n  }\n\n  /**\n   * Get variable outputs for the transaction.\n   *\n   * @returns An array of variable transaction request outputs.\n   */\n  getVariableOutputs(): VariableTransactionRequestOutput[] {\n    return this.outputs.filter(\n      (output): output is VariableTransactionRequestOutput => output.type === OutputType.Variable\n    );\n  }\n\n  /**\n   * Set the script and its data.\n   *\n   * @param script - The abstract script request.\n   * @param data - The script data.\n   */\n  setScript<T>(script: AbstractScriptRequest<T>, data: T) {\n    this.scriptData = script.encodeScriptData(data);\n    this.script = script.bytes;\n  }\n\n  /**\n   * Adds variable outputs to the transaction request.\n   *\n   * @param numberOfVariables - The number of variables to add.\n   * @returns The new length of the outputs array.\n   */\n  addVariableOutputs(numberOfVariables: number = 1) {\n    let outputsNumber = numberOfVariables;\n\n    while (outputsNumber) {\n      this.pushOutput({\n        type: OutputType.Variable,\n      });\n      outputsNumber -= 1;\n    }\n\n    return this.outputs.length - 1;\n  }\n\n  calculateMaxGas(chainInfo: ChainInfo, minGas: BN): BN {\n    const { consensusParameters } = chainInfo;\n    const { gasPerByte } = consensusParameters;\n\n    const witnessesLength = this.toTransaction().witnesses.reduce(\n      (acc, wit) => acc + wit.dataLength,\n      0\n    );\n\n    return getMaxGas({\n      gasPerByte,\n      minGas,\n      witnessesLength,\n      witnessLimit: this.witnessLimit,\n      gasLimit: this.gasLimit,\n    });\n  }\n\n  /**\n   * Adds a contract input and output to the transaction request.\n   *\n   * @param contract - The contract ID.\n   * @returns The current instance of the `ScriptTransactionRequest`.\n   */\n  addContractInputAndOutput(contract: ContractIdLike): ScriptTransactionRequest {\n    const contractAddress = addressify(contract);\n\n    // Add only one input contract per contractId\n    if (this.getContractInputs().find((i) => i.contractId === contractAddress.toB256())) {\n      return this;\n    }\n\n    const inputIndex = super.pushInput({\n      type: InputType.Contract,\n      contractId: contractAddress.toB256(),\n      txPointer: '0x00000000000000000000000000000000',\n    });\n\n    this.pushOutput({\n      type: OutputType.Contract,\n      inputIndex,\n    });\n\n    return this;\n  }\n\n  /**\n   * Gets the Transaction Request by hashing the transaction.\n   *\n   * @param chainId - The chain ID.\n   *\n   * @returns - A hash of the transaction, which is the transaction ID.\n   */\n  getTransactionId(chainId: number): string {\n    return hashTransaction(this, chainId);\n  }\n\n  /**\n   * Sets the data for the transaction request.\n   *\n   * @param abi - Script JSON ABI.\n   * @param args - The input arguments.\n   * @returns The current instance of the `ScriptTransactionRequest`.\n   */\n  setData(abi: JsonAbi, args: InputValue[]): ScriptTransactionRequest {\n    const abiInterface = new Interface(abi);\n    this.scriptData = abiInterface.functions.main.encodeArguments(args);\n    return this;\n  }\n\n  metadataGas(gasCosts: GqlGasCosts): BN {\n    return calculateMetadataGasForTxScript({\n      gasCosts,\n      txBytesSize: this.byteSize(),\n    });\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { TransactionType } from '@fuel-ts/transactions';\n\nimport { CreateTransactionRequest } from './create-transaction-request';\nimport { ScriptTransactionRequest } from './script-transaction-request';\nimport type { TransactionRequestLike, TransactionRequest } from './types';\n\n/** @hidden */\nexport const transactionRequestify = (obj: TransactionRequestLike): TransactionRequest => {\n  if (obj instanceof ScriptTransactionRequest || obj instanceof CreateTransactionRequest) {\n    return obj;\n  }\n\n  const { type } = obj;\n\n  switch (obj.type) {\n    case TransactionType.Script: {\n      return ScriptTransactionRequest.from(obj);\n    }\n    case TransactionType.Create: {\n      return CreateTransactionRequest.from(obj);\n    }\n    default: {\n      throw new FuelError(ErrorCode.INVALID_TRANSACTION_TYPE, `Invalid transaction type: ${type}.`);\n    }\n  }\n};\n","import type { BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type { TransactionCreate, TransactionScript } from '@fuel-ts/transactions';\nimport { PolicyType, TransactionCoder, TransactionType } from '@fuel-ts/transactions';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport type { GqlConsensusParameters, GqlFeeParameters } from '../__generated__/operations';\nimport { calculatePriceWithFactor } from '../utils';\nimport {\n  calculateMetadataGasForTxCreate,\n  calculateMetadataGasForTxScript,\n  getMaxGas,\n  getMinGas,\n} from '../utils/gas';\n\ntype FeeParams =\n  | Pick<GqlFeeParameters, 'gasPerByte' | 'gasPriceFactor'>\n  | {\n      gasPerByte: BN | number;\n      gasPriceFactor: BN | number;\n    };\n\nexport type CalculateTransactionFeeParams = {\n  gasUsed: BN;\n  rawPayload: string;\n  consensusParameters: Pick<GqlConsensusParameters, 'gasCosts'> & { feeParams: FeeParams };\n};\n\nexport const calculateTransactionFee = (params: CalculateTransactionFeeParams) => {\n  const {\n    gasUsed,\n    rawPayload,\n    consensusParameters: { gasCosts, feeParams },\n  } = params;\n\n  const gasPerByte = bn(feeParams.gasPerByte);\n  const gasPriceFactor = bn(feeParams.gasPriceFactor);\n\n  const transactionBytes = arrayify(rawPayload);\n\n  const [transaction] = new TransactionCoder().decode(transactionBytes, 0);\n\n  if (transaction.type === TransactionType.Mint) {\n    return {\n      fee: bn(0),\n      minFee: bn(0),\n      maxFee: bn(0),\n      feeFromGasUsed: bn(0),\n    };\n  }\n\n  const { type, witnesses, inputs, policies } = transaction as\n    | TransactionCreate\n    | TransactionScript;\n\n  let metadataGas = bn(0);\n  let gasLimit = bn(0);\n\n  if (type === TransactionType.Create) {\n    const { bytecodeWitnessIndex, storageSlots } = transaction as TransactionCreate;\n\n    const contractBytesSize = bn(arrayify(witnesses[bytecodeWitnessIndex].data).length);\n\n    metadataGas = calculateMetadataGasForTxCreate({\n      contractBytesSize,\n      gasCosts,\n      stateRootSize: storageSlots.length || 0,\n      txBytesSize: transactionBytes.length,\n    });\n  } else {\n    const { scriptGasLimit } = transaction;\n\n    if (scriptGasLimit) {\n      gasLimit = scriptGasLimit;\n    }\n\n    metadataGas = calculateMetadataGasForTxScript({\n      gasCosts,\n      txBytesSize: transactionBytes.length,\n    });\n  }\n\n  const minGas = getMinGas({\n    gasCosts,\n    gasPerByte: bn(gasPerByte),\n    inputs,\n    metadataGas,\n    txBytesSize: transactionBytes.length,\n  });\n\n  const gasPrice = bn(policies.find((policy) => policy.type === PolicyType.GasPrice)?.data);\n  const witnessLimit = policies.find((policy) => policy.type === PolicyType.WitnessLimit)?.data as\n    | BN\n    | undefined;\n\n  const witnessesLength = witnesses.reduce((acc, wit) => acc + wit.dataLength, 0);\n\n  const maxGas = getMaxGas({\n    gasPerByte,\n    minGas,\n    witnessesLength,\n    gasLimit,\n    witnessLimit,\n  });\n\n  const feeFromGasUsed = calculatePriceWithFactor(gasUsed, gasPrice, gasPriceFactor);\n  const minFee = calculatePriceWithFactor(minGas, gasPrice, gasPriceFactor);\n  const maxFee = calculatePriceWithFactor(maxGas, gasPrice, gasPriceFactor);\n  const fee = minFee.add(feeFromGasUsed);\n\n  return {\n    fee,\n    minFee,\n    maxFee,\n    feeFromGasUsed,\n  };\n};\n","import { Interface, type JsonAbi, calculateVmTxMemory } from '@fuel-ts/abi-coder';\nimport type { BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type { ReceiptCall } from '@fuel-ts/transactions';\n\ntype GetFunctionCallProps = {\n  abi: JsonAbi;\n  receipt: ReceiptCall;\n  rawPayload?: string;\n  maxInputs: BN;\n};\n\nexport const getFunctionCall = ({ abi, receipt, rawPayload, maxInputs }: GetFunctionCallProps) => {\n  const abiInterface = new Interface(abi);\n  const callFunctionSelector = receipt.param1.toHex(8);\n  const functionFragment = abiInterface.getFunction(callFunctionSelector);\n  const inputs = functionFragment.jsonFn.inputs;\n\n  let encodedArgs;\n\n  // if has more than 1 input or input type is bigger than 8 bytes, then it's a pointer to data\n  if (functionFragment.isInputDataPointer) {\n    if (rawPayload) {\n      // calculate offset to get function params from rawPayload. should also consider vm offset\n      const argsOffset = bn(receipt.param2)\n        .sub(calculateVmTxMemory({ maxInputs: maxInputs.toNumber() }))\n        .toNumber();\n\n      // slice(2) to remove first 0x, then slice again to remove offset and get only args\n      encodedArgs = `0x${rawPayload.slice(2).slice(argsOffset * 2)}`;\n    }\n  } else {\n    // for small inputs, param2 is directly the value\n    encodedArgs = receipt.param2.toHex();\n  }\n\n  let argumentsProvided;\n  if (encodedArgs) {\n    // use bytes got from rawPayload to decode function params\n    const data = functionFragment.decodeArguments(encodedArgs);\n    if (data) {\n      // put together decoded data with input names from abi\n      argumentsProvided = inputs.reduce((prev, input, index) => {\n        const value = data[index];\n        const name = input.name;\n\n        if (name) {\n          return {\n            ...prev,\n            // reparse to remove bn\n            [name]: JSON.parse(JSON.stringify(value)),\n          };\n        }\n\n        return prev;\n      }, {});\n    }\n  }\n\n  const call = {\n    functionSignature: functionFragment.signature,\n    functionName: functionFragment.name,\n    argumentsProvided,\n    ...(receipt.amount?.isZero() ? {} : { amount: receipt.amount, assetId: receipt.assetId }),\n  };\n\n  return call;\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { Input, InputCoin, InputContract, InputMessage } from '@fuel-ts/transactions';\nimport { InputType } from '@fuel-ts/transactions';\n\n/** @hidden */\nexport function getInputsByTypes<T = Input>(inputs: Input[], types: Array<InputType>) {\n  return inputs.filter((i) => types.includes(i.type)) as T[];\n}\n\n/** @hidden */\nexport function getInputsByType<T = Input>(inputs: Input[], type: InputType) {\n  return inputs.filter((i) => i.type === type) as T[];\n}\n\n/** @hidden */\nexport function getInputsCoin(inputs: Input[]) {\n  return getInputsByType<InputCoin>(inputs, InputType.Coin);\n}\n\n/** @hidden */\nexport function getInputsMessage(inputs: Input[]) {\n  return getInputsByType<InputMessage>(inputs, InputType.Message);\n}\n\n/** @hidden */\nexport function getInputsCoinAndMessage(inputs: Input[]) {\n  return getInputsByTypes<InputCoin | InputMessage>(inputs, [InputType.Coin, InputType.Message]);\n}\n\n/** @hidden */\nexport function getInputsContract(inputs: Input[]) {\n  return getInputsByType<InputContract>(inputs, InputType.Contract);\n}\n\n/** @hidden */\nexport function getInputFromAssetId(inputs: Input[], assetId: string) {\n  const coinInputs = getInputsCoin(inputs);\n  const messageInputs = getInputsMessage(inputs);\n  const coinInput = coinInputs.find((i) => i.assetId === assetId);\n  // TODO: should include assetId in InputMessage as well. for now we're mocking ETH\n  const messageInput = messageInputs.find(\n    (_) => assetId === '0x0000000000000000000000000000000000000000000000000000000000000000'\n  );\n\n  return coinInput || messageInput;\n}\n\n/** @hidden */\nexport function getInputContractFromIndex(\n  inputs: Input[],\n  inputIndex: number\n): InputContract | undefined {\n  if (inputIndex == null) {\n    return undefined;\n  }\n\n  const contractInput = inputs?.[inputIndex];\n\n  if (!contractInput) {\n    return undefined;\n  }\n  if (contractInput.type !== InputType.Contract) {\n    throw new FuelError(\n      ErrorCode.INVALID_TRANSACTION_INPUT,\n      `Contract input should be of type 'contract'.`\n    );\n  }\n\n  return contractInput as InputContract;\n}\n\n/** @hidden */\nexport function getInputAccountAddress(input: Input) {\n  if (input.type === InputType.Coin) {\n    return input.owner.toString();\n  }\n\n  if (input.type === InputType.Message) {\n    return input.recipient.toString();\n  }\n\n  return '';\n}\n","import type {\n  Output,\n  OutputChange,\n  OutputCoin,\n  OutputContract,\n  OutputContractCreated,\n  OutputVariable,\n} from '@fuel-ts/transactions';\nimport { OutputType } from '@fuel-ts/transactions';\n\n/** @hidden */\nexport function getOutputsByType<T = Output>(outputs: Output[], type: OutputType) {\n  return outputs.filter((o) => o.type === type) as T[];\n}\n\n/** @hidden */\nexport function getOutputsContractCreated(outputs: Output[]) {\n  return getOutputsByType<OutputContractCreated>(outputs, OutputType.ContractCreated);\n}\n\n/** @hidden */\nexport function getOutputsCoin(outputs: Output[]) {\n  return getOutputsByType<OutputCoin>(outputs, OutputType.Coin);\n}\n\n/** @hidden */\nexport function getOutputsChange(outputs: Output[]) {\n  return getOutputsByType<OutputChange>(outputs, OutputType.Change);\n}\n\n/** @hidden */\nexport function getOutputsContract(outputs: Output[]) {\n  return getOutputsByType<OutputContract>(outputs, OutputType.Contract);\n}\n\n/** @hidden */\nexport function getOutputsVariable(outputs: Output[]) {\n  return getOutputsByType<OutputVariable>(outputs, OutputType.Variable);\n}\n","import type { JsonAbi } from '@fuel-ts/abi-coder';\nimport type { B256Address } from '@fuel-ts/interfaces';\nimport type { BN, BNInput } from '@fuel-ts/math';\nimport type { Input, Output, Transaction, TransactionType } from '@fuel-ts/transactions';\n\nimport type { GqlGetTransactionQuery } from '../__generated__/operations';\nimport type { TransactionResultReceipt } from '../transaction-response';\n\nexport type GqlTransaction = NonNullable<GqlGetTransactionQuery['transaction']>;\n\nexport type GraphqlTransactionStatus = GqlTransaction['status'];\n\nexport type SuccessStatus = Extract<GraphqlTransactionStatus, { __typename: 'SuccessStatus' }>;\nexport type FailureStatus = Extract<GraphqlTransactionStatus, { __typename: 'FailureStatus' }>;\nexport type SubmittedStatus = Extract<GraphqlTransactionStatus, { __typename: 'SubmittedStatus' }>;\nexport type SqueezedOutStatus = Extract<\n  GraphqlTransactionStatus,\n  { __typename: 'SqueezedOutStatus' }\n>;\n\nexport type Reason = FailureStatus['reason'];\nexport type ProgramState = SuccessStatus['programState'];\nexport type Time = SubmittedStatus['time'] | SuccessStatus['time'] | FailureStatus['time'];\nexport type BlockId = SuccessStatus['block']['id'] | FailureStatus['block']['id'];\n\n/**\n * @hidden\n */\nexport enum TransactionTypeName {\n  Create = 'Create',\n  Mint = 'Mint',\n  Script = 'Script',\n}\n\n/**\n * @hidden\n */\nexport enum TransactionStatus {\n  submitted = 'submitted',\n  success = 'success',\n  squeezedout = 'squeezedout',\n  failure = 'failure',\n}\n\n/**\n * @hidden\n */\nexport type GqlTransactionStatusesNames =\n  | 'FailureStatus'\n  | 'SubmittedStatus'\n  | 'SuccessStatus'\n  | 'SqueezedOutStatus';\n\n/**\n * @hidden\n */\nexport enum OperationName {\n  payBlockProducer = 'Pay network fee to block producer',\n  contractCreated = 'Contract created',\n  transfer = 'Transfer asset',\n  contractCall = 'Contract call',\n  receive = 'Receive asset',\n  mint = 'Mint asset',\n  predicatecall = 'Predicate call',\n  script = 'Script',\n  sent = 'Sent asset',\n  withdrawFromFuel = 'Withdraw from Fuel',\n}\n\nexport type OperationCoin = {\n  assetId: string;\n  amount: BNInput;\n};\n\nexport type OperationFunctionCall = {\n  functionSignature: string;\n  functionName: string;\n  argumentsProvided?: Record<string, unknown>;\n} & Partial<OperationCoin>;\n\nexport type Operation = {\n  name?: OperationName;\n  from?: OperationTransactionAddress;\n  to?: OperationTransactionAddress;\n  assetsSent?: Array<OperationCoin>;\n  calls?: Array<OperationFunctionCall>;\n};\n\n/**\n * @hidden\n */\nexport enum AddressType {\n  contract,\n  account,\n}\n\n/**\n * @hidden\n */\nexport enum ChainName {\n  ethereum = 'ethereum',\n  fuel = 'fuel',\n}\n\nexport type OperationTransactionAddress = {\n  address: string;\n  type: AddressType;\n  chain?: ChainName;\n};\n\nexport type InputParam = {\n  inputs: Input[];\n};\n\nexport type OutputParam = {\n  outputs: Output[];\n};\n\nexport type ReceiptParam = {\n  receipts: TransactionResultReceipt[];\n};\n\nexport type AbiMap = Record<string, JsonAbi>;\n\nexport type RawPayloadParam = {\n  rawPayload?: string;\n};\n\nexport type InputOutputParam = InputParam & OutputParam;\n\nexport interface GetTransferOperationsParams extends InputOutputParam {\n  receipts: TransactionResultReceipt[];\n}\n\nexport type GetOperationParams = {\n  transactionType: TransactionType;\n  abiMap?: AbiMap;\n  maxInputs: BN;\n} & InputOutputParam &\n  ReceiptParam &\n  RawPayloadParam;\n\nexport interface MintedAsset {\n  subId: B256Address;\n  contractId: B256Address;\n  assetId: B256Address;\n  amount: BN;\n}\n\nexport type BurnedAsset = MintedAsset;\n\nexport type TransactionSummary<TTransactionType = void> = {\n  id?: string;\n  time?: string;\n  operations: Operation[];\n  gasUsed: BN;\n  fee: BN;\n  type: TransactionTypeName;\n  blockId?: BlockId;\n  status?: TransactionStatus;\n  isTypeMint: boolean;\n  isTypeCreate: boolean;\n  isTypeScript: boolean;\n  isStatusPending: boolean;\n  isStatusSuccess: boolean;\n  isStatusFailure: boolean;\n  mintedAssets: MintedAsset[];\n  burnedAssets: BurnedAsset[];\n  date?: Date;\n  receipts: TransactionResultReceipt[];\n  transaction: Transaction<TTransactionType>;\n};\n","import { ZeroBytes32 } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { ReceiptType, TransactionType } from '@fuel-ts/transactions';\nimport type { InputContract, Output, OutputChange } from '@fuel-ts/transactions';\n\nimport type {\n  TransactionResultReceipt,\n  TransactionResultCallReceipt,\n  TransactionResultMessageOutReceipt,\n  TransactionResultTransferOutReceipt,\n  TransactionResultTransferReceipt,\n} from '../transaction-response';\n\nimport { getFunctionCall } from './call';\nimport {\n  getInputFromAssetId,\n  getInputAccountAddress,\n  getInputContractFromIndex,\n  getInputsContract,\n  getInputsCoinAndMessage,\n} from './input';\nimport {\n  getOutputsChange,\n  getOutputsCoin,\n  getOutputsContract,\n  getOutputsContractCreated,\n} from './output';\nimport { AddressType, ChainName, OperationName, TransactionTypeName } from './types';\nimport type {\n  InputOutputParam,\n  InputParam,\n  OperationCoin,\n  RawPayloadParam,\n  ReceiptParam,\n  Operation,\n  GetOperationParams,\n  GetTransferOperationsParams,\n} from './types';\n\n/** @hidden */\nexport function getReceiptsByType<T = TransactionResultReceipt>(\n  receipts: TransactionResultReceipt[],\n  type: ReceiptType\n) {\n  return (receipts ?? []).filter((r) => r.type === type) as T[];\n}\n\n/** @hidden */\nexport function getTransactionTypeName(transactionType: TransactionType): TransactionTypeName {\n  switch (transactionType) {\n    case TransactionType.Mint:\n      return TransactionTypeName.Mint;\n    case TransactionType.Create:\n      return TransactionTypeName.Create;\n    case TransactionType.Script:\n      return TransactionTypeName.Script;\n    default:\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSACTION_TYPE,\n        `Invalid transaction type: ${transactionType}.`\n      );\n  }\n}\n\n/** @hidden */\nexport function isType(transactionType: TransactionType, type: TransactionTypeName) {\n  const txType = getTransactionTypeName(transactionType);\n\n  return txType === type;\n}\n\n/** @hidden */\nexport function isTypeMint(transactionType: TransactionType) {\n  return isType(transactionType, TransactionTypeName.Mint);\n}\n\n/** @hidden */\nexport function isTypeCreate(transactionType: TransactionType) {\n  return isType(transactionType, TransactionTypeName.Create);\n}\n\n/** @hidden */\nexport function isTypeScript(transactionType: TransactionType) {\n  return isType(transactionType, TransactionTypeName.Script);\n}\n\n/** @hidden */\nexport function hasSameAssetId(a: OperationCoin) {\n  return (b: OperationCoin) => a.assetId === b.assetId;\n}\n\n/** @hidden */\nexport function getReceiptsCall(receipts: TransactionResultReceipt[]) {\n  return getReceiptsByType<TransactionResultCallReceipt>(receipts, ReceiptType.Call);\n}\n\n/** @hidden */\nexport function getReceiptsMessageOut(receipts: TransactionResultReceipt[]) {\n  return getReceiptsByType<TransactionResultMessageOutReceipt>(receipts, ReceiptType.MessageOut);\n}\n\n/** @hidden */\nconst mergeAssets = (op1: Operation, op2: Operation) => {\n  const assets1 = op1.assetsSent || [];\n  const assets2 = op2.assetsSent || [];\n\n  // Getting assets from op2 that don't exist in op1\n  const filteredAssets = assets2.filter(\n    (asset2) => !assets1.some((asset1) => asset1.assetId === asset2.assetId)\n  );\n\n  // Merge assets that already exist in op1\n  const mergedAssets = assets1.map((asset1) => {\n    // Find matching asset in op2\n    const matchingAsset = assets2.find((asset2) => asset2.assetId === asset1.assetId);\n    if (!matchingAsset) {\n      // No matching asset found, return asset1\n      return asset1;\n    }\n    // Matching asset found, merge amounts\n    const mergedAmount = bn(asset1.amount).add(matchingAsset.amount);\n    return { ...asset1, amount: mergedAmount };\n  });\n\n  // Return merged assets from op1 with filtered assets from op2\n  return mergedAssets.concat(filteredAssets);\n};\n\n/** @hidden */\nfunction isSameOperation(a: Operation, b: Operation) {\n  return (\n    a.name === b.name &&\n    a.from?.address === b.from?.address &&\n    a.to?.address === b.to?.address &&\n    a.from?.type === b.from?.type &&\n    a.to?.type === b.to?.type\n  );\n}\n\n/** @hidden */\nexport function addOperation(operations: Operation[], toAdd: Operation) {\n  const allOperations = [...operations];\n\n  // Verifying if the operation to add already exists.\n  const index = allOperations.findIndex((op) => isSameOperation(op, toAdd));\n\n  if (allOperations[index]) {\n    // Existent operation, we want to edit it.\n    const existentOperation = { ...allOperations[index] };\n\n    if (toAdd.assetsSent?.length) {\n      /**\n       * If the assetSent already exists, we call 'mergeAssets' to merge possible\n       * entries of the same 'assetId', otherwise we just add the new 'assetSent'.\n       */\n      existentOperation.assetsSent = existentOperation.assetsSent?.length\n        ? mergeAssets(existentOperation, toAdd)\n        : toAdd.assetsSent;\n    }\n\n    if (toAdd.calls?.length) {\n      // We need to stack the new call(s) with the possible existent ones.\n      existentOperation.calls = [...(existentOperation.calls || []), ...toAdd.calls];\n    }\n\n    allOperations[index] = existentOperation;\n  } else {\n    // New operation, we can simply add it.\n    allOperations.push(toAdd);\n  }\n\n  return allOperations;\n}\n\n/** @hidden */\nexport function getReceiptsTransferOut(receipts: TransactionResultReceipt[]) {\n  return getReceiptsByType<TransactionResultTransferOutReceipt>(receipts, ReceiptType.TransferOut);\n}\n\n/** @hidden */\nexport function getWithdrawFromFuelOperations({\n  inputs,\n  receipts,\n}: InputParam & ReceiptParam): Operation[] {\n  const messageOutReceipts = getReceiptsMessageOut(receipts);\n\n  const withdrawFromFuelOperations = messageOutReceipts.reduce(\n    (prevWithdrawFromFuelOps, receipt) => {\n      // TODO: replace this hardcode with receipt.assetId when assetId gets added to MessageOutReceipt\n      const assetId = '0x0000000000000000000000000000000000000000000000000000000000000000';\n      const input = getInputFromAssetId(inputs, assetId);\n      if (input) {\n        const inputAddress = getInputAccountAddress(input);\n        const newWithdrawFromFuelOps = addOperation(prevWithdrawFromFuelOps, {\n          name: OperationName.withdrawFromFuel,\n          from: {\n            type: AddressType.account,\n            address: inputAddress,\n          },\n          to: {\n            type: AddressType.account,\n            address: receipt.recipient.toString(),\n            chain: ChainName.ethereum,\n          },\n          assetsSent: [\n            {\n              amount: receipt.amount,\n              assetId,\n            },\n          ],\n        });\n\n        return newWithdrawFromFuelOps;\n      }\n\n      return prevWithdrawFromFuelOps;\n    },\n    [] as Operation[]\n  );\n\n  return withdrawFromFuelOperations;\n}\n\n/** @hidden */\nexport function getContractCallOperations({\n  inputs,\n  outputs,\n  receipts,\n  abiMap,\n  rawPayload,\n  maxInputs,\n}: InputOutputParam &\n  ReceiptParam &\n  Pick<GetOperationParams, 'abiMap' | 'maxInputs'> &\n  RawPayloadParam): Operation[] {\n  const contractCallReceipts = getReceiptsCall(receipts);\n  const contractOutputs = getOutputsContract(outputs);\n\n  const contractCallOperations = contractOutputs.reduce((prevOutputCallOps, output) => {\n    const contractInput = getInputContractFromIndex(inputs, output.inputIndex);\n\n    if (contractInput) {\n      const newCallOps = contractCallReceipts.reduce((prevContractCallOps, receipt) => {\n        if (receipt.to === contractInput.contractID) {\n          const input = getInputFromAssetId(inputs, receipt.assetId);\n          if (input) {\n            const inputAddress = getInputAccountAddress(input);\n            const calls = [];\n\n            const abi = abiMap?.[contractInput.contractID];\n            if (abi) {\n              calls.push(\n                getFunctionCall({\n                  abi,\n                  receipt,\n                  rawPayload,\n                  maxInputs,\n                })\n              );\n            }\n\n            const newContractCallOps = addOperation(prevContractCallOps, {\n              name: OperationName.contractCall,\n              from: {\n                type: AddressType.account,\n                address: inputAddress,\n              },\n              to: {\n                type: AddressType.contract,\n                address: receipt.to,\n              },\n              // if no amount is forwarded to the contract, skip showing assetsSent\n              assetsSent: receipt.amount?.isZero()\n                ? undefined\n                : [\n                    {\n                      amount: receipt.amount,\n                      assetId: receipt.assetId,\n                    },\n                  ],\n              calls,\n            });\n\n            return newContractCallOps;\n          }\n        }\n        return prevContractCallOps;\n      }, prevOutputCallOps as Operation[]);\n\n      return newCallOps;\n    }\n\n    return prevOutputCallOps;\n  }, [] as Operation[]);\n\n  return contractCallOperations;\n}\n\n/** @hidden */\nfunction extractTransferOperationFromReceipt(\n  receipt: TransactionResultTransferReceipt | TransactionResultTransferOutReceipt,\n  contractInputs: InputContract[],\n  changeOutputs: OutputChange[]\n) {\n  const { to: toAddress, assetId, amount } = receipt;\n  let { from: fromAddress } = receipt;\n\n  const toType = contractInputs.some((input) => input.contractID === toAddress)\n    ? AddressType.contract\n    : AddressType.account;\n\n  if (ZeroBytes32 === fromAddress) {\n    const change = changeOutputs.find((output) => output.assetId === assetId);\n\n    fromAddress = change?.to || fromAddress;\n  }\n\n  const fromType = contractInputs.some((input) => input.contractID === fromAddress)\n    ? AddressType.contract\n    : AddressType.account;\n\n  return {\n    name: OperationName.transfer,\n    from: {\n      type: fromType,\n      address: fromAddress,\n    },\n    to: {\n      type: toType,\n      address: toAddress,\n    },\n    assetsSent: [\n      {\n        assetId: assetId.toString(),\n        amount,\n      },\n    ],\n  };\n}\n\n/** @hidden */\nexport function getTransferOperations({\n  inputs,\n  outputs,\n  receipts,\n}: GetTransferOperationsParams): Operation[] {\n  let operations: Operation[] = [];\n\n  const coinOutputs = getOutputsCoin(outputs);\n  const contractInputs = getInputsContract(inputs);\n  const changeOutputs = getOutputsChange(outputs);\n\n  /**\n   * Extracting transfer operations between wallets, as they do not produce receipts\n   */\n  coinOutputs.forEach((output) => {\n    const { amount, assetId, to } = output;\n\n    const changeOutput = changeOutputs.find((change) => change.assetId === assetId);\n\n    if (changeOutput) {\n      operations = addOperation(operations, {\n        name: OperationName.transfer,\n        from: {\n          type: AddressType.account,\n          address: changeOutput.to,\n        },\n        to: {\n          type: AddressType.account,\n          address: to,\n        },\n        assetsSent: [\n          {\n            assetId,\n            amount,\n          },\n        ],\n      });\n    }\n  });\n\n  /**\n   * `Transfer` receipts are produced from transfers:\n   * - Wallet to Contract\n   * - Contract to Contract\n   */\n  const transferReceipts = getReceiptsByType<TransactionResultTransferReceipt>(\n    receipts,\n    ReceiptType.Transfer\n  );\n\n  /**\n   * `TransferOut` receipts are produced from transfer:\n   * - Contract to Wallet\n   */\n  const transferOutReceipts = getReceiptsByType<TransactionResultTransferOutReceipt>(\n    receipts,\n    ReceiptType.TransferOut\n  );\n\n  [...transferReceipts, ...transferOutReceipts].forEach((receipt) => {\n    const operation = extractTransferOperationFromReceipt(receipt, contractInputs, changeOutputs);\n\n    operations = addOperation(operations, operation);\n  });\n\n  return operations;\n}\n\n/** @hidden */\nexport function getPayProducerOperations(outputs: Output[]): Operation[] {\n  const coinOutputs = getOutputsCoin(outputs);\n  const payProducerOperations = coinOutputs.reduce((prev, output) => {\n    const operations = addOperation(prev, {\n      name: OperationName.payBlockProducer,\n      from: {\n        type: AddressType.account,\n        address: 'Network',\n      },\n      to: {\n        type: AddressType.account,\n        address: output.to.toString(),\n      },\n      assetsSent: [\n        {\n          assetId: output.assetId.toString(),\n          amount: output.amount,\n        },\n      ],\n    });\n\n    return operations;\n  }, [] as Operation[]);\n\n  return payProducerOperations;\n}\n\n/** @hidden */\nexport function getContractCreatedOperations({ inputs, outputs }: InputOutputParam): Operation[] {\n  const contractCreatedOutputs = getOutputsContractCreated(outputs);\n  const input = getInputsCoinAndMessage(inputs)[0];\n  const fromAddress = getInputAccountAddress(input);\n  const contractCreatedOperations = contractCreatedOutputs.reduce((prev, contractCreatedOutput) => {\n    const operations = addOperation(prev, {\n      name: OperationName.contractCreated,\n      from: {\n        type: AddressType.account,\n        address: fromAddress,\n      },\n      to: {\n        type: AddressType.contract,\n        address: contractCreatedOutput?.contractId || '',\n      },\n    });\n\n    return operations;\n  }, [] as Operation[]);\n\n  return contractCreatedOperations;\n}\n\n/** @hidden */\nexport function getOperations({\n  transactionType,\n  inputs,\n  outputs,\n  receipts,\n  abiMap,\n  rawPayload,\n  maxInputs,\n}: GetOperationParams): Operation[] {\n  if (isTypeCreate(transactionType)) {\n    return [\n      ...getContractCreatedOperations({ inputs, outputs }),\n      ...getTransferOperations({ inputs, outputs, receipts }),\n    ];\n  }\n\n  if (isTypeScript(transactionType)) {\n    return [\n      ...getTransferOperations({ inputs, outputs, receipts }),\n      ...getContractCallOperations({\n        inputs,\n        outputs,\n        receipts,\n        abiMap,\n        rawPayload,\n        maxInputs,\n      }),\n      ...getWithdrawFromFuelOperations({ inputs, receipts }),\n    ];\n  }\n  // at this point we are sure it's a mint transaction\n  return [...getPayProducerOperations(outputs)];\n}\n","import { ReceiptType } from '@fuel-ts/transactions';\n\nimport type { GqlReceiptFragmentFragment } from '../__generated__/operations';\nimport type { TransactionResultReceipt } from '../transaction-response';\nimport { assembleReceiptByType } from '../utils';\n\nimport type { BurnedAsset, MintedAsset } from './types';\n\nexport const processGqlReceipt = (\n  gqlReceipt: GqlReceiptFragmentFragment\n): TransactionResultReceipt => {\n  const receipt = assembleReceiptByType(gqlReceipt);\n\n  switch (receipt.type) {\n    case ReceiptType.ReturnData: {\n      return {\n        ...receipt,\n        data: gqlReceipt.data || '0x',\n      };\n    }\n    case ReceiptType.LogData: {\n      return {\n        ...receipt,\n        data: gqlReceipt.data || '0x',\n      };\n    }\n    default:\n      return receipt;\n  }\n};\n\nexport const extractMintedAssetsFromReceipts = (\n  receipts: Array<TransactionResultReceipt>\n): MintedAsset[] => {\n  const mintedAssets: MintedAsset[] = [];\n\n  receipts.forEach((receipt) => {\n    if (receipt.type === ReceiptType.Mint) {\n      mintedAssets.push({\n        subId: receipt.subId,\n        contractId: receipt.contractId,\n        assetId: receipt.assetId,\n        amount: receipt.val,\n      });\n    }\n  });\n\n  return mintedAssets;\n};\n\nexport const extractBurnedAssetsFromReceipts = (\n  receipts: Array<TransactionResultReceipt>\n): BurnedAsset[] => {\n  const burnedAssets: BurnedAsset[] = [];\n\n  receipts.forEach((receipt) => {\n    if (receipt.type === ReceiptType.Burn) {\n      burnedAssets.push({\n        subId: receipt.subId,\n        contractId: receipt.contractId,\n        assetId: receipt.assetId,\n        amount: receipt.val,\n      });\n    }\n  });\n\n  return burnedAssets;\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type {\n  BlockId,\n  GqlTransactionStatusesNames,\n  GraphqlTransactionStatus,\n  Time,\n  TransactionSummary,\n} from './types';\nimport { TransactionStatus } from './types';\n\n/** @hidden */\nexport const getTransactionStatusName = (gqlStatus: GqlTransactionStatusesNames) => {\n  switch (gqlStatus) {\n    case 'FailureStatus':\n      return TransactionStatus.failure;\n    case 'SuccessStatus':\n      return TransactionStatus.success;\n    case 'SubmittedStatus':\n      return TransactionStatus.submitted;\n    case 'SqueezedOutStatus':\n      return TransactionStatus.squeezedout;\n    default:\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSACTION_STATUS,\n        `Invalid transaction status: ${gqlStatus}.`\n      );\n  }\n};\n\ntype IProcessGraphqlStatusResponse = Pick<\n  TransactionSummary,\n  'time' | 'blockId' | 'isStatusPending' | 'isStatusSuccess' | 'isStatusFailure' | 'status'\n>;\n\n/** @hidden */\nexport const processGraphqlStatus = (gqlTransactionStatus?: GraphqlTransactionStatus) => {\n  let time: Time | undefined;\n  let blockId: BlockId | undefined;\n  let status: TransactionStatus | undefined;\n\n  let isStatusFailure = false;\n  let isStatusSuccess = false;\n  let isStatusPending = false;\n\n  if (gqlTransactionStatus?.type) {\n    status = getTransactionStatusName(gqlTransactionStatus.type);\n\n    switch (gqlTransactionStatus.type) {\n      case 'SuccessStatus':\n        time = gqlTransactionStatus.time;\n        blockId = gqlTransactionStatus.block.id;\n        isStatusSuccess = true;\n        break;\n\n      case 'FailureStatus':\n        time = gqlTransactionStatus.time;\n        blockId = gqlTransactionStatus.block.id;\n        isStatusFailure = true;\n        break;\n\n      case 'SubmittedStatus':\n        time = gqlTransactionStatus.time;\n        isStatusPending = true;\n        break;\n      default:\n    }\n  }\n\n  const processedGraphqlStatus: IProcessGraphqlStatusResponse = {\n    time,\n    blockId,\n    status,\n    isStatusFailure,\n    isStatusSuccess,\n    isStatusPending,\n  };\n\n  return processedGraphqlStatus;\n};\n","import { type BN } from '@fuel-ts/math';\nimport { type Transaction } from '@fuel-ts/transactions';\nimport { DateTime, hexlify } from '@fuel-ts/utils';\n\nimport type { GqlGasCosts } from '../__generated__/operations';\nimport type { TransactionResultReceipt } from '../transaction-response';\nimport { getGasUsedFromReceipts } from '../utils';\n\nimport { calculateTransactionFee } from './calculate-transaction-fee';\nimport {\n  getOperations,\n  getTransactionTypeName,\n  isTypeMint,\n  isTypeCreate,\n  isTypeScript,\n} from './operations';\nimport { extractBurnedAssetsFromReceipts, extractMintedAssetsFromReceipts } from './receipt';\nimport { processGraphqlStatus } from './status';\nimport type { AbiMap, GraphqlTransactionStatus, TransactionSummary } from './types';\n\nexport interface AssembleTransactionSummaryParams {\n  gasPerByte: BN;\n  gasPriceFactor: BN;\n  transaction: Transaction;\n  id?: string;\n  transactionBytes: Uint8Array;\n  gqlTransactionStatus?: GraphqlTransactionStatus;\n  receipts: TransactionResultReceipt[];\n  abiMap?: AbiMap;\n  maxInputs: BN;\n  gasCosts: GqlGasCosts;\n}\n\n/** @hidden */\nexport function assembleTransactionSummary<TTransactionType = void>(\n  params: AssembleTransactionSummaryParams\n) {\n  const {\n    id,\n    receipts,\n    gasPerByte,\n    gasPriceFactor,\n    transaction,\n    transactionBytes,\n    gqlTransactionStatus,\n    abiMap = {},\n    maxInputs,\n    gasCosts,\n  } = params;\n\n  const gasUsed = getGasUsedFromReceipts(receipts);\n\n  const rawPayload = hexlify(transactionBytes);\n\n  const operations = getOperations({\n    transactionType: transaction.type,\n    inputs: transaction.inputs || [],\n    outputs: transaction.outputs || [],\n    receipts,\n    rawPayload,\n    abiMap,\n    maxInputs,\n  });\n\n  const typeName = getTransactionTypeName(transaction.type);\n\n  const { fee } = calculateTransactionFee({\n    gasUsed,\n    rawPayload,\n    consensusParameters: {\n      gasCosts,\n      feeParams: {\n        gasPerByte,\n        gasPriceFactor,\n      },\n    },\n  });\n\n  const { isStatusFailure, isStatusPending, isStatusSuccess, blockId, status, time } =\n    processGraphqlStatus(gqlTransactionStatus);\n\n  const mintedAssets = extractMintedAssetsFromReceipts(receipts);\n  const burnedAssets = extractBurnedAssetsFromReceipts(receipts);\n\n  let date: DateTime | undefined;\n\n  if (time) {\n    date = DateTime.fromTai64(time);\n  }\n\n  const transactionSummary: TransactionSummary<TTransactionType> = {\n    id,\n    fee,\n    gasUsed,\n    operations,\n    type: typeName,\n    blockId,\n    time,\n    status,\n    receipts,\n    mintedAssets,\n    burnedAssets,\n    isTypeMint: isTypeMint(transaction.type),\n    isTypeCreate: isTypeCreate(transaction.type),\n    isTypeScript: isTypeScript(transaction.type),\n    isStatusFailure,\n    isStatusSuccess,\n    isStatusPending,\n    date,\n    transaction: transaction as Transaction<TTransactionType>,\n  };\n\n  return transactionSummary;\n}\n","import type { JsonAbi } from '@fuel-ts/abi-coder';\nimport { Interface, BigNumberCoder } from '@fuel-ts/abi-coder';\nimport { ReceiptType } from '@fuel-ts/transactions';\n\nimport type { TransactionResultReceipt } from './transaction-response';\n\n/** @hidden */\nexport function getDecodedLogs<T = unknown>(\n  receipts: Array<TransactionResultReceipt>,\n  mainAbi: JsonAbi,\n  externalAbis: Record<string, JsonAbi> = {}\n): T[] {\n  /**\n   * This helper decodes logs from transaction receipts.\n   * It loops through all receipts and decodes two types of logs:\n   * - ReceiptType.LogData\n   * - ReceiptType.Log\n   *\n   * The \"mainAbi\" parameter represents the ABI of the main contract used to create the transaction\n   * or the ABI from a script used within a \"BaseInvocationScope\" context.\n   * The \"externalAbis\" parameter is a record of contract ABIs that are also part of the transaction.\n   * These ABIs were added using `contract.addContracts` or through a multicall with `contract.multiCall`.\n   *\n   * @param receipts - The array of transaction result receipts.\n   * @param mainAbi - The ABI of the script or main contract.\n   * @param externalAbis - The record of external contract ABIs.\n   * @returns An array of decoded logs from Sway projects.\n   */\n  return receipts.reduce((logs: T[], receipt) => {\n    if (receipt.type === ReceiptType.LogData || receipt.type === ReceiptType.Log) {\n      const interfaceToUse = new Interface(externalAbis[receipt.id] || mainAbi);\n\n      const data =\n        receipt.type === ReceiptType.Log\n          ? new BigNumberCoder('u64').encode(receipt.val0)\n          : receipt.data;\n\n      const [decodedLog] = interfaceToUse.decodeLog(data, receipt.val1.toNumber());\n      logs.push(decodedLog);\n    }\n\n    return logs;\n  }, []);\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport type {\n  ReceiptCall,\n  ReceiptLog,\n  ReceiptLogData,\n  ReceiptPanic,\n  ReceiptReturn,\n  ReceiptReturnData,\n  ReceiptRevert,\n  ReceiptTransfer,\n  ReceiptTransferOut,\n  ReceiptScriptResult,\n  ReceiptMessageOut,\n  Transaction,\n  ReceiptMint,\n  ReceiptBurn,\n} from '@fuel-ts/transactions';\nimport { TransactionCoder } from '@fuel-ts/transactions';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport type Provider from '../provider';\nimport type { JsonAbisFromAllCalls } from '../transaction-request';\nimport { assembleTransactionSummary } from '../transaction-summary/assemble-transaction-summary';\nimport { processGqlReceipt } from '../transaction-summary/receipt';\nimport type {\n  TransactionSummary,\n  FailureStatus,\n  GqlTransaction,\n  AbiMap,\n} from '../transaction-summary/types';\n\nimport { getDecodedLogs } from './getDecodedLogs';\n\n/** @hidden */\nexport type TransactionResultCallReceipt = ReceiptCall;\n/** @hidden */\nexport type TransactionResultReturnReceipt = ReceiptReturn;\n/** @hidden */\nexport type TransactionResultReturnDataReceipt = ReceiptReturnData & { data: string };\n/** @hidden */\nexport type TransactionResultPanicReceipt = ReceiptPanic;\n/** @hidden */\nexport type TransactionResultRevertReceipt = ReceiptRevert;\n/** @hidden */\nexport type TransactionResultLogReceipt = ReceiptLog;\n/** @hidden */\nexport type TransactionResultLogDataReceipt = ReceiptLogData & { data: string };\n/** @hidden */\nexport type TransactionResultTransferReceipt = ReceiptTransfer;\n/** @hidden */\nexport type TransactionResultTransferOutReceipt = ReceiptTransferOut;\n/** @hidden */\nexport type TransactionResultScriptResultReceipt = ReceiptScriptResult;\n/** @hidden */\nexport type TransactionResultMessageOutReceipt = ReceiptMessageOut;\nexport type TransactionResultMintReceipt = ReceiptMint;\nexport type TransactionResultBurnReceipt = ReceiptBurn;\n\n/** @hidden */\nexport type TransactionResultReceipt =\n  | ReceiptCall\n  | ReceiptReturn\n  | (ReceiptReturnData & { data: string })\n  | ReceiptPanic\n  | ReceiptRevert\n  | ReceiptLog\n  | (ReceiptLogData & { data: string })\n  | ReceiptTransfer\n  | ReceiptTransferOut\n  | ReceiptScriptResult\n  | ReceiptMessageOut\n  | TransactionResultMintReceipt\n  | TransactionResultBurnReceipt;\n\n/** @hidden */\nexport type TransactionResult<TTransactionType = void> = TransactionSummary<TTransactionType> & {\n  gqlTransaction: GqlTransaction;\n  logs?: Array<unknown>;\n};\n\n/**\n * Represents a response for a transaction.\n */\nexport class TransactionResponse {\n  /** Transaction ID */\n  id: string;\n  /** Current provider */\n  provider: Provider;\n  /** Gas used on the transaction */\n  gasUsed: BN = bn(0);\n  /** The graphql Transaction with receipts object. */\n  gqlTransaction?: GqlTransaction;\n\n  abis?: JsonAbisFromAllCalls;\n\n  /**\n   * Constructor for `TransactionResponse`.\n   *\n   * @param id - The transaction ID.\n   * @param provider - The provider.\n   */\n  constructor(id: string, provider: Provider, abis?: JsonAbisFromAllCalls) {\n    this.id = id;\n    this.provider = provider;\n    this.abis = abis;\n  }\n\n  /**\n   * Async constructor for `TransactionResponse`. This method can be used to create\n   * an instance of `TransactionResponse` and wait for the transaction to be fetched\n   * from the chain, ensuring that the `gqlTransaction` property is set.\n   *\n   * @param id - The transaction ID.\n   * @param provider - The provider.\n   */\n  static async create(\n    id: string,\n    provider: Provider,\n    abis?: JsonAbisFromAllCalls\n  ): Promise<TransactionResponse> {\n    const response = new TransactionResponse(id, provider, abis);\n    await response.fetch();\n    return response;\n  }\n\n  /**\n   * Fetch the transaction with receipts from the provider.\n   *\n   * @returns Transaction with receipts query result.\n   */\n  async fetch(): Promise<GqlTransaction> {\n    const response = await this.provider.operations.getTransactionWithReceipts({\n      transactionId: this.id,\n    });\n\n    if (!response.transaction) {\n      const subscription = this.provider.operations.statusChange({\n        transactionId: this.id,\n      });\n\n      for await (const { statusChange } of subscription) {\n        if (statusChange) {\n          break;\n        }\n      }\n\n      return this.fetch();\n    }\n\n    this.gqlTransaction = response.transaction;\n\n    return response.transaction;\n  }\n\n  /**\n   * Decode the raw payload of the transaction.\n   *\n   * @param transactionWithReceipts - The transaction with receipts object.\n   * @returns The decoded transaction.\n   */\n  decodeTransaction<TTransactionType = void>(transactionWithReceipts: GqlTransaction) {\n    return new TransactionCoder().decode(\n      arrayify(transactionWithReceipts.rawPayload),\n      0\n    )?.[0] as Transaction<TTransactionType>;\n  }\n\n  /**\n   * Retrieves the TransactionSummary. If the `gqlTransaction` is not set, it will\n   * fetch it from the provider\n   *\n   * @param contractsAbiMap - The contracts ABI map.\n   * @returns\n   */\n  async getTransactionSummary<TTransactionType = void>(\n    contractsAbiMap?: AbiMap\n  ): Promise<TransactionSummary<TTransactionType>> {\n    let transaction = this.gqlTransaction;\n\n    if (!transaction) {\n      transaction = await this.fetch();\n    }\n\n    const decodedTransaction = this.decodeTransaction<TTransactionType>(\n      transaction\n    ) as Transaction<TTransactionType>;\n\n    const receipts = transaction.receipts?.map(processGqlReceipt) || [];\n\n    const { gasPerByte, gasPriceFactor, gasCosts } = this.provider.getGasConfig();\n    const maxInputs = this.provider.getChain().consensusParameters.maxInputs;\n\n    const transactionSummary = assembleTransactionSummary<TTransactionType>({\n      id: this.id,\n      receipts,\n      transaction: decodedTransaction,\n      transactionBytes: arrayify(transaction.rawPayload),\n      gqlTransactionStatus: transaction.status,\n      gasPerByte,\n      gasPriceFactor,\n      abiMap: contractsAbiMap,\n      maxInputs,\n      gasCosts,\n    });\n\n    return transactionSummary;\n  }\n\n  private async waitForStatusChange() {\n    const status = this.gqlTransaction?.status?.type;\n    if (status && status !== 'SubmittedStatus') {\n      return;\n    }\n\n    const subscription = this.provider.operations.statusChange({\n      transactionId: this.id,\n    });\n\n    for await (const { statusChange } of subscription) {\n      if (statusChange.type === 'SqueezedOutStatus') {\n        throw new FuelError(\n          ErrorCode.TRANSACTION_SQUEEZED_OUT,\n          `Transaction Squeezed Out with reason: ${statusChange.reason}`\n        );\n      }\n      if (statusChange.type !== 'SubmittedStatus') {\n        break;\n      }\n    }\n\n    await this.fetch();\n  }\n\n  /**\n   * Waits for transaction to complete and returns the result.\n   *\n   * @returns The completed transaction result\n   */\n  async waitForResult<TTransactionType = void>(\n    contractsAbiMap?: AbiMap\n  ): Promise<TransactionResult<TTransactionType>> {\n    await this.waitForStatusChange();\n\n    const transactionSummary = await this.getTransactionSummary<TTransactionType>(contractsAbiMap);\n\n    const transactionResult: TransactionResult<TTransactionType> = {\n      gqlTransaction: this.gqlTransaction as GqlTransaction,\n      ...transactionSummary,\n    };\n\n    if (this.abis) {\n      const logs = getDecodedLogs(\n        transactionSummary.receipts,\n        this.abis.main,\n        this.abis.otherContractsAbis\n      );\n\n      transactionResult.logs = logs;\n    }\n\n    return transactionResult;\n  }\n\n  /**\n   * Waits for transaction to complete and returns the result.\n   *\n   * @param contractsAbiMap - The contracts ABI map.\n   */\n  async wait<TTransactionType = void>(\n    contractsAbiMap?: AbiMap\n  ): Promise<TransactionResult<TTransactionType>> {\n    const result = await this.waitForResult<TTransactionType>(contractsAbiMap);\n\n    if (result.isStatusFailure) {\n      throw new FuelError(\n        ErrorCode.TRANSACTION_FAILED,\n        `Transaction failed: ${(<FailureStatus>result.gqlTransaction.status).reason}`\n      );\n    }\n\n    return result;\n  }\n}\n","import type { ProviderOptions } from '../provider';\n\nimport { sleep } from './sleep';\n\ntype Backoff = 'linear' | 'exponential' | 'fixed';\n\n/**\n * Retry options scheme\n */\nexport type RetryOptions = {\n  /**\n   * Amount of attempts to retry before failing the call.\n   */\n  maxRetries: number;\n  /**\n   * Backoff strategy to use when retrying. Default is exponential.\n   */\n  backoff?: Backoff;\n  /**\n   * Starting delay for backoff strategy. Default is 150ms.\n   */\n  baseDelay?: number;\n};\n\n/**\n * Calculate the delay for the next retry attempt\n * @param options - Retry options configuration\n * @param retryAttemptNum - 1-based, tells which retry attempt is this\n * @returns Next wait delay\n */\nexport function getWaitDelay(options: RetryOptions, retryAttemptNum: number) {\n  const duration = options.baseDelay ?? 150;\n\n  switch (options.backoff) {\n    case 'linear':\n      return duration * retryAttemptNum;\n    case 'fixed':\n      return duration;\n    case 'exponential':\n    default:\n      return 2 ** (retryAttemptNum - 1) * duration;\n  }\n}\n\n/**\n * Returns a wrapped fetch function that will auto-execute itself in case of errors, until it succeeds\n * @param fetchFn - Function to be auto-retried\n * @param options - Retry options configuration\n * @param retryAttemptNum - ZERO=first call, ONE=first retry, TWO=second retry, etc.\n * @returns Whatever is the output of the `fetchFn` function\n */\nexport function autoRetryFetch(\n  fetchFn: NonNullable<ProviderOptions['fetch']>,\n  options?: RetryOptions,\n  retryAttemptNum: number = 0\n): NonNullable<ProviderOptions['fetch']> {\n  if (options === undefined) {\n    return fetchFn;\n  }\n\n  return async (...args) => {\n    try {\n      return await fetchFn(...args);\n    } catch (_error: unknown) {\n      const error = _error as Error & { cause?: { code: string } };\n\n      /**\n       * So far, we are auto-retrying only for `ECONNREFUSED` error.\n       * TODO: Investigate if we should consider more errors.\n       */\n      if (error.cause?.code !== 'ECONNREFUSED') {\n        throw error;\n      }\n      const retryNum = retryAttemptNum + 1;\n\n      if (retryNum > options.maxRetries) {\n        throw error;\n      }\n\n      const delay = getWaitDelay(options, retryNum);\n\n      await sleep(delay);\n\n      return autoRetryFetch(fetchFn, options, retryNum)(...args);\n    }\n  };\n}\n","import type { BN } from '@fuel-ts/math';\n\nimport type { CoinQuantity } from '../coin-quantity';\n\nexport const mergeQuantities = (arr1: CoinQuantity[], arr2: CoinQuantity[]): CoinQuantity[] => {\n  const resultMap: { [key: string]: BN } = {};\n\n  function addToMap({ amount, assetId }: CoinQuantity) {\n    if (resultMap[assetId]) {\n      resultMap[assetId] = resultMap[assetId].add(amount);\n    } else {\n      resultMap[assetId] = amount;\n    }\n  }\n\n  // Process both arrays\n  arr1.forEach(addToMap);\n  arr2.forEach(addToMap);\n\n  // Convert the resultMap back to an array\n  return Object.entries(resultMap).map(([assetId, amount]) => ({ assetId, amount }));\n};\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { bn } from '@fuel-ts/math';\nimport { TransactionCoder } from '@fuel-ts/transactions';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport type {\n  GqlGetTransactionsByOwnerQueryVariables,\n  GqlPageInfo,\n} from '../__generated__/operations';\nimport type Provider from '../provider';\nimport type { TransactionRequest } from '../transaction-request';\nimport type { TransactionResult } from '../transaction-response';\n\nimport { assembleTransactionSummary } from './assemble-transaction-summary';\nimport { processGqlReceipt } from './receipt';\nimport type { AbiMap, TransactionSummary } from './types';\n\n/** @hidden */\nexport interface GetTransactionSummaryParams {\n  id: string;\n  provider: Provider;\n  abiMap?: AbiMap;\n}\n\nexport async function getTransactionSummary<TTransactionType = void>(\n  params: GetTransactionSummaryParams\n): Promise<TransactionResult> {\n  const { id, provider, abiMap } = params;\n\n  const { transaction: gqlTransaction } = await provider.operations.getTransactionWithReceipts({\n    transactionId: id,\n  });\n\n  if (!gqlTransaction) {\n    throw new FuelError(\n      ErrorCode.TRANSACTION_NOT_FOUND,\n      `Transaction not found for given id: ${id}.`\n    );\n  }\n\n  const [decodedTransaction] = new TransactionCoder().decode(\n    arrayify(gqlTransaction.rawPayload),\n    0\n  );\n\n  const receipts = gqlTransaction.receipts?.map(processGqlReceipt) || [];\n\n  const {\n    consensusParameters: { gasPerByte, gasPriceFactor, maxInputs, gasCosts },\n  } = provider.getChain();\n\n  const transactionInfo = assembleTransactionSummary<TTransactionType>({\n    id: gqlTransaction.id,\n    receipts,\n    transaction: decodedTransaction,\n    transactionBytes: arrayify(gqlTransaction.rawPayload),\n    gqlTransactionStatus: gqlTransaction.status,\n    gasPerByte: bn(gasPerByte),\n    gasPriceFactor: bn(gasPriceFactor),\n    abiMap,\n    maxInputs,\n    gasCosts,\n  });\n\n  return {\n    gqlTransaction,\n    ...transactionInfo,\n  };\n}\n\nexport interface GetTransactionSummaryFromRequestParams {\n  transactionRequest: TransactionRequest;\n  provider: Provider;\n  abiMap?: AbiMap;\n}\n\n/** @hidden */\nexport async function getTransactionSummaryFromRequest<TTransactionType = void>(\n  params: GetTransactionSummaryFromRequestParams\n): Promise<TransactionSummary<TTransactionType>> {\n  const { provider, transactionRequest, abiMap } = params;\n\n  const { receipts } = await provider.call(transactionRequest);\n\n  const { gasPerByte, gasPriceFactor, gasCosts } = provider.getGasConfig();\n  const maxInputs = provider.getChain().consensusParameters.maxInputs;\n\n  const transaction = transactionRequest.toTransaction();\n  const transactionBytes = transactionRequest.toTransactionBytes();\n\n  const transactionSummary = assembleTransactionSummary<TTransactionType>({\n    receipts,\n    transaction,\n    transactionBytes,\n    abiMap,\n    gasPerByte,\n    gasPriceFactor,\n    maxInputs,\n    gasCosts,\n  });\n\n  return transactionSummary;\n}\n\nexport interface GetTransactionsSummariesParams {\n  provider: Provider;\n  filters: GqlGetTransactionsByOwnerQueryVariables;\n  abiMap?: AbiMap;\n}\n\nexport interface GetTransactionsSummariesReturns {\n  transactions: TransactionResult[];\n  pageInfo: GqlPageInfo;\n}\n\n/** @hidden */\nexport async function getTransactionsSummaries(\n  params: GetTransactionsSummariesParams\n): Promise<GetTransactionsSummariesReturns> {\n  const { filters, provider, abiMap } = params;\n\n  const { transactionsByOwner } = await provider.operations.getTransactionsByOwner(filters);\n\n  const { edges, pageInfo } = transactionsByOwner;\n\n  const {\n    consensusParameters: { gasPerByte, gasPriceFactor, maxInputs, gasCosts },\n  } = provider.getChain();\n\n  const transactions = edges.map((edge) => {\n    const { node: gqlTransaction } = edge;\n\n    const { id, rawPayload, receipts: gqlReceipts, status } = gqlTransaction;\n\n    const [decodedTransaction] = new TransactionCoder().decode(arrayify(rawPayload), 0);\n\n    const receipts = gqlReceipts?.map(processGqlReceipt) || [];\n\n    const transactionSummary = assembleTransactionSummary({\n      id,\n      receipts,\n      transaction: decodedTransaction,\n      transactionBytes: arrayify(rawPayload),\n      gqlTransactionStatus: status,\n      abiMap,\n      gasPerByte,\n      gasPriceFactor,\n      maxInputs,\n      gasCosts,\n    });\n\n    const output: TransactionResult = {\n      gqlTransaction,\n      ...transactionSummary,\n    };\n\n    return output;\n  });\n\n  return {\n    transactions,\n    pageInfo,\n  };\n}\n","export const CHAIN_IDS = {\n  eth: {\n    sepolia: 11155111,\n    foundry: 31337,\n  },\n  fuel: {\n    beta5: 0,\n    devnet: 10,\n  },\n};\n","import { CHAIN_IDS } from '../../chains';\nimport type { Asset, AssetEth, AssetFuel, NetworkEthereum, NetworkFuel } from '../types';\n\ntype Network = NetworkEthereum | NetworkFuel;\nexport type NetworkTypes = NetworkEthereum['type'] | NetworkFuel['type'];\ntype NetworkTypeToNetwork<T> = T extends 'ethereum' ? NetworkEthereum : T extends 'fuel' ? NetworkFuel : Network;\n\n/**\n * Returns the default chainId for the given network\n*/\nexport const getDefaultChainId = (networkType: NetworkTypes): number | undefined => {\n  if (networkType === 'ethereum') {\n    return CHAIN_IDS.eth.sepolia;\n  }\n  if (networkType === 'fuel') {\n    return CHAIN_IDS.fuel.beta5;\n  }\n\n  return undefined;\n};\n\nexport type GetAssetNetworkParams<T extends NetworkTypes | undefined> = {\n  asset: Asset;\n  chainId?: number;\n  networkType: T;\n};\n\n/**\n * Returns the asset's network on the given network\n * eg. getAssetNetwork({ asset, chainId: 1, networkType: 'ethereum' }) will return the asset's details on Ethereum mainnet\n*/\nexport const getAssetNetwork = <T extends NetworkTypes | undefined>({\n  asset,\n  chainId,\n  networkType,\n}: GetAssetNetworkParams<T>): NetworkTypeToNetwork<T> => {\n  const network = asset.networks.find(\n    (item) => item.chainId === chainId && item.type === networkType\n  ) as NetworkTypeToNetwork<T>;\n\n  return network;\n};\n\n/**\n * Returns the asset's details on the given network alongwith the asset itself\n * eg. getAssetWithNetwork({ asset, chainId: 1, networkType: 'ethereum' }) will return the asset's details on Ethereum mainnet and the asset itself\n*/\nexport const getAssetWithNetwork = <T extends NetworkTypes>({\n  asset,\n  chainId,\n  networkType,\n}: GetAssetNetworkParams<T>): AssetEth | AssetFuel | undefined => {\n  const { networks: _, ...assetRest } = asset;\n\n  const chainIdToUse = chainId ?? getDefaultChainId(networkType);\n  // use two equals(==) cuz we wan't to keep 0 as a valid chainId\n  if (chainIdToUse === undefined) {\n    return undefined;\n  }\n\n  const assetNetwork = getAssetNetwork({\n    asset,\n    chainId: chainIdToUse,\n    networkType,\n  });\n\n  if (!assetNetwork) {\n    return undefined;\n  }\n\n  return {\n    ...assetRest,\n    ...assetNetwork,\n  };\n};\n\n/**\n * Returns the asset's details on Ethereum\n*/\nexport const getAssetEth = (asset: Asset, chainId?: number): AssetEth | undefined =>\n  getAssetWithNetwork({\n    asset,\n    networkType: 'ethereum',\n    chainId,\n  }) as AssetEth;\n\n/**\n * Returns the asset's details on Fuel\n*/\nexport const getAssetFuel = (asset: Asset, chainId?: number): AssetFuel | undefined =>\n  getAssetWithNetwork({\n    asset,\n    networkType: 'fuel',\n    chainId,\n  }) as AssetFuel;\n","const DELIMITER_PATH = '/';\nconst trimRegex = /^\\/|\\/$/g;\nconst trimPath = (path = '') => path.replace(trimRegex, '');\n\nexport function urlJoin(baseUrl: string | undefined, ...paths: Array<string>): string {\n  const hasBaseUrl = baseUrl !== null && baseUrl !== undefined;\n  const rootPath = baseUrl?.[0] === '/' && baseUrl.length > 1;\n  const allPaths = [baseUrl, ...paths].filter(Boolean).map(trimPath);\n  if (rootPath && hasBaseUrl) {\n    allPaths.unshift('');\n  }\n  return allPaths.join(DELIMITER_PATH);\n}\n","import type { Assets } from '../types';\n\nimport { urlJoin } from './url';\n\n/**\n * Returns the list of assets with the icon paths 'resolved'. eg. `./eth.svg` -> `https://some-url.com/eth.svg`\n * @param assets - List of assets\n * @param basePath - Base path for the icon URLs (default: './')\n * @returns The assets with the icon paths resolved\n */\nexport function resolveIconPaths(assets: Assets, basePath = './') {\n  return assets.map((asset) => ({\n    ...asset,\n    icon: urlJoin(basePath, asset.icon),\n  }));\n}\n","import { CHAIN_IDS } from '../chains';\n\nimport type { Assets } from './types';\n\nexport const assets: Assets = [\n  {\n    name: 'Ethereum',\n    symbol: 'ETH',\n    icon: 'eth.svg',\n    networks: [\n      {\n        type: 'ethereum',\n        chainId: CHAIN_IDS.eth.sepolia,\n        decimals: 18,\n      },\n      {\n        type: 'ethereum',\n        chainId: CHAIN_IDS.eth.foundry,\n        decimals: 18,\n      },\n      {\n        type: 'fuel',\n        chainId: CHAIN_IDS.fuel.beta5,\n        decimals: 9,\n        assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      },\n      {\n        type: 'fuel',\n        chainId: CHAIN_IDS.fuel.devnet,\n        decimals: 9,\n        assetId: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      },\n    ],\n  },\n];\n\nexport * from './utils';\nexport * from './types';\n","import { BigNumberCoder } from '@fuel-ts/abi-coder';\nimport type { B256Address, BytesLike } from '@fuel-ts/interfaces';\nimport { BN, type BigNumberish } from '@fuel-ts/math';\nimport { arrayify } from '@fuel-ts/utils';\nimport * as asm from '@fuels/vm-asm';\n\ninterface IAssembleTransferToContractScriptParams {\n  hexlifiedContractId: B256Address;\n  amountToTransfer: BigNumberish;\n  assetId: BytesLike;\n}\n\nexport const formatTransferToContractScriptData = (\n  params: IAssembleTransferToContractScriptParams\n) => {\n  const { assetId, amountToTransfer, hexlifiedContractId } = params;\n\n  const numberCoder = new BigNumberCoder('u64');\n\n  const encoded = numberCoder.encode(new BN(amountToTransfer).toNumber());\n\n  const scriptData = Uint8Array.from([\n    ...arrayify(hexlifiedContractId),\n    ...encoded,\n    ...arrayify(assetId),\n  ]);\n\n  return scriptData;\n};\n\nexport const assembleTransferToContractScript = async (\n  params: IAssembleTransferToContractScriptParams\n) => {\n  const scriptData = formatTransferToContractScriptData(params);\n\n  // implementation extracted from Rust SDK at:\n  // https://github.com/FuelLabs/fuels-rs/blob/master/packages/fuels-core/src/types/transaction_builders.rs#L240-L272\n  // This script loads:\n  //  - a pointer to the contract id,\n  //  - the actual amount\n  //  - a pointer to the asset id\n  // into the registers 0x10, 0x12, 0x13\n  // and calls the TR instruction\n\n  // TODO: Remove ts-expect-error\n  // @ts-expect-error method reference missing in DTS\n  await asm.initWasm();\n\n  // const gtf = fuelAsm.gtf(0x10, 0x00, 0xc);\n  const gtf = asm.gtf(0x10, 0x00, asm.GTFArgs.ScriptData);\n  const addi = asm.addi(0x11, 0x10, 0x20);\n  const lw = asm.lw(0x12, 0x11, 0x0);\n  const addi2 = asm.addi(0x13, 0x11, 0x8);\n  const tr = asm.tr(0x10, 0x12, 0x13);\n  const ret = asm.ret(0x1);\n\n  const script = Uint8Array.from([\n    ...gtf.to_bytes(),\n    ...addi.to_bytes(),\n    ...lw.to_bytes(),\n    ...addi2.to_bytes(),\n    ...tr.to_bytes(),\n    ...ret.to_bytes(),\n  ]);\n\n  return { script, scriptData };\n};\n","import { Address } from '@fuel-ts/address';\nimport { BaseAssetId } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { AbstractAccount } from '@fuel-ts/interfaces';\nimport type { AbstractAddress, BytesLike } from '@fuel-ts/interfaces';\nimport type { BigNumberish, BN } from '@fuel-ts/math';\nimport { bn } from '@fuel-ts/math';\nimport { arrayify } from '@fuel-ts/utils';\n\nimport type { FuelConnector } from './connectors';\nimport type {\n  TransactionRequestLike,\n  CallResult,\n  TransactionRequest,\n  Coin,\n  CoinQuantityLike,\n  CoinQuantity,\n  Message,\n  Resource,\n  ExcludeResourcesOption,\n  Provider,\n  ScriptTransactionRequestLike,\n  ProviderSendTxParams,\n  TransactionResponse,\n  EstimateTransactionParams,\n} from './providers';\nimport {\n  withdrawScript,\n  ScriptTransactionRequest,\n  transactionRequestify,\n  addAmountToAsset,\n} from './providers';\nimport { assembleTransferToContractScript } from './utils/formatTransferToContractScriptData';\n\nexport type TxParamsType = Pick<\n  ScriptTransactionRequestLike,\n  'gasLimit' | 'gasPrice' | 'maturity' | 'maxFee' | 'witnessLimit'\n>;\n\n/**\n * `Account` provides an abstraction for interacting with accounts or wallets on the network.\n */\nexport class Account extends AbstractAccount {\n  /**\n   * The address associated with the account.\n   */\n  readonly address: AbstractAddress;\n\n  /**\n   * The provider used to interact with the network.\n   */\n  protected _provider?: Provider;\n\n  protected _connector?: FuelConnector;\n\n  /**\n   * Creates a new Account instance.\n   *\n   * @param address - The address of the account.\n   * @param provider - A Provider instance  (optional).\n   */\n  constructor(address: string | AbstractAddress, provider?: Provider, connector?: FuelConnector) {\n    super();\n    this._provider = provider;\n    this._connector = connector;\n    this.address = Address.fromDynamicInput(address);\n  }\n\n  /**\n   * The provider used to interact with the network.\n   *\n   * @returns A Provider instance.\n   *\n   * @throws `FuelError` if the provider is not set.\n   */\n  get provider(): Provider {\n    if (!this._provider) {\n      throw new FuelError(ErrorCode.MISSING_PROVIDER, 'Provider not set');\n    }\n\n    return this._provider;\n  }\n\n  /**\n   * Sets the provider for the account.\n   *\n   * @param provider - A Provider instance.\n   */\n  set provider(provider: Provider) {\n    this._provider = provider;\n  }\n\n  /**\n   * Changes the provider connection for the account.\n   *\n   * @param provider - A Provider instance.\n   * @returns The updated Provider instance.\n   */\n  connect(provider: Provider): Provider {\n    this._provider = provider;\n    return this.provider;\n  }\n\n  /**\n   * Retrieves resources satisfying the spend query for the account.\n   *\n   * @param quantities - IDs of coins to exclude.\n   * @param excludedIds - IDs of resources to be excluded from the query.\n   * @returns A promise that resolves to an array of Resources.\n   */\n  async getResourcesToSpend(\n    quantities: CoinQuantityLike[] /** IDs of coins to exclude */,\n    excludedIds?: ExcludeResourcesOption\n  ): Promise<Resource[]> {\n    return this.provider.getResourcesToSpend(this.address, quantities, excludedIds);\n  }\n\n  /**\n   * Retrieves coins owned by the account.\n   *\n   * @param assetId - The asset ID of the coins to retrieve.\n   * @returns A promise that resolves to an array of Coins.\n   */\n  async getCoins(assetId?: BytesLike): Promise<Coin[]> {\n    const coins = [];\n\n    const pageSize = 9999;\n    let cursor;\n    // eslint-disable-next-line no-unreachable-loop\n    for (;;) {\n      const pageCoins = await this.provider.getCoins(this.address, assetId, {\n        first: pageSize,\n        after: cursor,\n      });\n\n      coins.push(...pageCoins);\n\n      const hasNextPage = pageCoins.length >= pageSize;\n      if (!hasNextPage) {\n        break;\n      }\n\n      // TODO: implement pagination\n      throw new FuelError(\n        ErrorCode.NOT_SUPPORTED,\n        `Wallets containing more than ${pageSize} coins exceed the current supported limit.`\n      );\n    }\n\n    return coins;\n  }\n\n  /**\n   * Retrieves messages owned by the account.\n   *\n   * @returns A promise that resolves to an array of Messages.\n   */\n  async getMessages(): Promise<Message[]> {\n    const messages = [];\n\n    const pageSize = 9999;\n    let cursor;\n    // eslint-disable-next-line no-unreachable-loop\n    for (;;) {\n      const pageMessages = await this.provider.getMessages(this.address, {\n        first: pageSize,\n        after: cursor,\n      });\n\n      messages.push(...pageMessages);\n\n      const hasNextPage = pageMessages.length >= pageSize;\n      if (!hasNextPage) {\n        break;\n      }\n\n      // TODO: implement pagination\n      throw new FuelError(\n        ErrorCode.NOT_SUPPORTED,\n        `Wallets containing more than ${pageSize} messages exceed the current supported limit.`\n      );\n    }\n\n    return messages;\n  }\n\n  /**\n   * Retrieves the balance of the account for the given asset.\n   *\n   * @param assetId - The asset ID to check the balance for.\n   * @returns A promise that resolves to the balance amount.\n   */\n  async getBalance(assetId: BytesLike = BaseAssetId): Promise<BN> {\n    const amount = await this.provider.getBalance(this.address, assetId);\n    return amount;\n  }\n\n  /**\n   * Retrieves all the balances for the account.\n   *\n   * @returns A promise that resolves to an array of Coins and their quantities.\n   */\n  async getBalances(): Promise<CoinQuantity[]> {\n    const balances = [];\n\n    const pageSize = 9999;\n    let cursor;\n    // eslint-disable-next-line no-unreachable-loop\n    for (;;) {\n      const pageBalances = await this.provider.getBalances(this.address, {\n        first: pageSize,\n        after: cursor,\n      });\n\n      balances.push(...pageBalances);\n\n      const hasNextPage = pageBalances.length >= pageSize;\n      if (!hasNextPage) {\n        break;\n      }\n\n      // TODO: implement pagination\n      throw new FuelError(\n        ErrorCode.NOT_SUPPORTED,\n        `Wallets containing more than ${pageSize} balances exceed the current supported limit.`\n      );\n    }\n\n    return balances;\n  }\n\n  /**\n   * Adds resources to the transaction enough to fund it.\n   *\n   * @param request - The transaction request.\n   * @param coinQuantities - The coin quantities required to execute the transaction.\n   * @param fee - The estimated transaction fee.\n   * @returns A promise that resolves when the resources are added to the transaction.\n   */\n  async fund<T extends TransactionRequest>(\n    request: T,\n    coinQuantities: CoinQuantity[],\n    fee: BN\n  ): Promise<void> {\n    const updatedQuantities = addAmountToAsset({\n      amount: bn(fee),\n      assetId: BaseAssetId,\n      coinQuantities,\n    });\n\n    const quantitiesDict: Record<string, { required: BN; owned: BN }> = {};\n\n    updatedQuantities.forEach(({ amount, assetId }) => {\n      quantitiesDict[assetId] = {\n        required: amount,\n        owned: bn(0),\n      };\n    });\n\n    const cachedUtxos: BytesLike[] = [];\n    const cachedMessages: BytesLike[] = [];\n\n    const owner = this.address.toB256();\n\n    request.inputs.forEach((input) => {\n      const isResource = 'amount' in input;\n\n      if (isResource) {\n        const isCoin = 'owner' in input;\n\n        if (isCoin) {\n          const assetId = String(input.assetId);\n          if (input.owner === owner && quantitiesDict[assetId]) {\n            const amount = bn(input.amount);\n            quantitiesDict[assetId].owned = quantitiesDict[assetId].owned.add(amount);\n\n            // caching this utxo to avoid fetching it again if requests needs to be funded\n            cachedUtxos.push(input.id);\n          }\n        } else if (input.recipient === owner && input.amount && quantitiesDict[BaseAssetId]) {\n          quantitiesDict[BaseAssetId].owned = quantitiesDict[BaseAssetId].owned.add(input.amount);\n\n          // caching this message to avoid fetching it again if requests needs to be funded\n          cachedMessages.push(input.nonce);\n        }\n      }\n    });\n\n    const missingQuantities: CoinQuantity[] = [];\n    Object.entries(quantitiesDict).forEach(([assetId, { owned, required }]) => {\n      if (owned.lt(required)) {\n        missingQuantities.push({\n          assetId,\n          amount: required.sub(owned),\n        });\n      }\n    });\n\n    const needsToBeFunded = missingQuantities.length;\n\n    if (needsToBeFunded) {\n      const resources = await this.getResourcesToSpend(missingQuantities, {\n        messages: cachedMessages,\n        utxos: cachedUtxos,\n      });\n      request.addResources(resources);\n    }\n  }\n\n  /**\n   * A helper that creates a transfer transaction request and returns it.\n   *\n   * @param destination - The address of the destination.\n   * @param amount - The amount of coins to transfer.\n   * @param assetId - The asset ID of the coins to transfer.\n   * @param txParams - The transaction parameters (gasLimit, gasPrice, maturity).\n   * @returns A promise that resolves to the prepared transaction request.\n   */\n  async createTransfer(\n    /** Address of the destination */\n    destination: string | AbstractAddress,\n    /** Amount of coins */\n    amount: BigNumberish,\n    /** Asset ID of coins */\n    assetId: BytesLike = BaseAssetId,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionRequest> {\n    const { minGasPrice } = this.provider.getGasConfig();\n    const params = { gasPrice: minGasPrice, ...txParams };\n    const request = new ScriptTransactionRequest(params);\n    request.addCoinOutput(Address.fromAddressOrString(destination), amount, assetId);\n    const { maxFee, requiredQuantities, gasUsed, estimatedInputs } =\n      await this.provider.getTransactionCost(request, [], {\n        estimateTxDependencies: true,\n        resourcesOwner: this,\n      });\n\n    request.gasPrice = bn(txParams.gasPrice ?? minGasPrice);\n    request.gasLimit = bn(txParams.gasLimit ?? gasUsed);\n\n    this.validateGas({\n      gasUsed,\n      gasPrice: request.gasPrice,\n      gasLimit: request.gasLimit,\n      minGasPrice,\n    });\n\n    await this.fund(request, requiredQuantities, maxFee);\n\n    request.updatePredicateInputs(estimatedInputs);\n\n    return request;\n  }\n\n  /**\n   * Transfers coins to a destination address.\n   *\n   * @param destination - The address of the destination.\n   * @param amount - The amount of coins to transfer.\n   * @param assetId - The asset ID of the coins to transfer.\n   * @param txParams - The transaction parameters (gasLimit, gasPrice, maturity).\n   * @returns A promise that resolves to the transaction response.\n   */\n  async transfer(\n    /** Address of the destination */\n    destination: string | AbstractAddress,\n    /** Amount of coins */\n    amount: BigNumberish,\n    /** Asset ID of coins */\n    assetId: BytesLike = BaseAssetId,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionResponse> {\n    if (bn(amount).lte(0)) {\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSFER_AMOUNT,\n        'Transfer amount must be a positive number.'\n      );\n    }\n    const request = await this.createTransfer(destination, amount, assetId, txParams);\n    return this.sendTransaction(request, { estimateTxDependencies: false });\n  }\n\n  /**\n   * Transfers coins to a contract address.\n   *\n   * @param contractId - The address of the contract.\n   * @param amount - The amount of coins to transfer.\n   * @param assetId - The asset ID of the coins to transfer.\n   * @param txParams - The optional transaction parameters.\n   * @returns A promise that resolves to the transaction response.\n   */\n  async transferToContract(\n    /** Contract address */\n    contractId: string | AbstractAddress,\n    /** Amount of coins */\n    amount: BigNumberish,\n    /** Asset ID of coins */\n    assetId: BytesLike = BaseAssetId,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionResponse> {\n    if (bn(amount).lte(0)) {\n      throw new FuelError(\n        ErrorCode.INVALID_TRANSFER_AMOUNT,\n        'Transfer amount must be a positive number.'\n      );\n    }\n\n    const contractAddress = Address.fromAddressOrString(contractId);\n    const { minGasPrice } = this.provider.getGasConfig();\n    const params = { gasPrice: minGasPrice, ...txParams };\n\n    const { script, scriptData } = await assembleTransferToContractScript({\n      hexlifiedContractId: contractAddress.toB256(),\n      amountToTransfer: bn(amount),\n      assetId,\n    });\n\n    const request = new ScriptTransactionRequest({\n      ...params,\n      script,\n      scriptData,\n    });\n\n    request.addContractInputAndOutput(contractAddress);\n\n    const { maxFee, requiredQuantities, gasUsed } = await this.provider.getTransactionCost(\n      request,\n      [{ amount: bn(amount), assetId: String(assetId) }]\n    );\n\n    request.gasLimit = bn(params.gasLimit ?? gasUsed);\n\n    this.validateGas({\n      gasUsed,\n      gasPrice: request.gasPrice,\n      gasLimit: request.gasLimit,\n      minGasPrice,\n    });\n\n    await this.fund(request, requiredQuantities, maxFee);\n\n    return this.sendTransaction(request);\n  }\n\n  /**\n   * Withdraws an amount of the base asset to the base chain.\n   *\n   * @param recipient - Address of the recipient on the base chain.\n   * @param amount - Amount of base asset.\n   * @param txParams - The optional transaction parameters.\n   * @returns A promise that resolves to the transaction response.\n   */\n  async withdrawToBaseLayer(\n    /** Address of the recipient on the base chain */\n    recipient: string | AbstractAddress,\n    /** Amount of base asset */\n    amount: BigNumberish,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionResponse> {\n    const { minGasPrice } = this.provider.getGasConfig();\n\n    const recipientAddress = Address.fromAddressOrString(recipient);\n    // add recipient and amount to the transaction script code\n    const recipientDataArray = arrayify(\n      '0x'.concat(recipientAddress.toHexString().substring(2).padStart(64, '0'))\n    );\n    const amountDataArray = arrayify(\n      '0x'.concat(bn(amount).toHex().substring(2).padStart(16, '0'))\n    );\n    const script = new Uint8Array([\n      ...arrayify(withdrawScript.bytes),\n      ...recipientDataArray,\n      ...amountDataArray,\n    ]);\n\n    const params: ScriptTransactionRequestLike = { script, gasPrice: minGasPrice, ...txParams };\n\n    const request = new ScriptTransactionRequest(params);\n    const forwardingQuantities = [{ amount: bn(amount), assetId: BaseAssetId }];\n\n    const { requiredQuantities, maxFee, gasUsed } = await this.provider.getTransactionCost(\n      request,\n      forwardingQuantities\n    );\n\n    request.gasLimit = bn(params.gasLimit ?? gasUsed);\n\n    this.validateGas({\n      gasUsed,\n      gasPrice: request.gasPrice,\n      gasLimit: request.gasLimit,\n      minGasPrice,\n    });\n\n    await this.fund(request, requiredQuantities, maxFee);\n\n    return this.sendTransaction(request);\n  }\n\n  async signMessage(message: string): Promise<string> {\n    if (!this._connector) {\n      throw new FuelError(ErrorCode.MISSING_CONNECTOR, 'A connector is required to sign messages.');\n    }\n    return this._connector.signMessage(this.address.toString(), message);\n  }\n\n  /**\n   * Signs a transaction with the wallet's private key.\n   *\n   * @param transactionRequestLike - The transaction request to sign.\n   * @returns A promise that resolves to the signature of the transaction.\n   */\n  async signTransaction(transactionRequestLike: TransactionRequestLike): Promise<string> {\n    if (!this._connector) {\n      throw new FuelError(\n        ErrorCode.MISSING_CONNECTOR,\n        'A connector is required to sign transactions.'\n      );\n    }\n    return this._connector.signTransaction(this.address.toString(), transactionRequestLike);\n  }\n\n  /**\n   * Sends a transaction to the network.\n   *\n   * @param transactionRequestLike - The transaction request to be sent.\n   * @returns A promise that resolves to the transaction response.\n   */\n  async sendTransaction(\n    transactionRequestLike: TransactionRequestLike,\n    { estimateTxDependencies = true, awaitExecution }: ProviderSendTxParams = {}\n  ): Promise<TransactionResponse> {\n    if (this._connector) {\n      return this.provider.getTransactionResponse(\n        await this._connector.sendTransaction(this.address.toString(), transactionRequestLike)\n      );\n    }\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    if (estimateTxDependencies) {\n      await this.provider.estimateTxDependencies(transactionRequest);\n    }\n    return this.provider.sendTransaction(transactionRequest, {\n      awaitExecution,\n      estimateTxDependencies: false,\n    });\n  }\n\n  /**\n   * Simulates a transaction.\n   *\n   * @param transactionRequestLike - The transaction request to be simulated.\n   * @returns A promise that resolves to the call result.\n   */\n  async simulateTransaction(\n    transactionRequestLike: TransactionRequestLike,\n    { estimateTxDependencies = true }: EstimateTransactionParams = {}\n  ): Promise<CallResult> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    if (estimateTxDependencies) {\n      await this.provider.estimateTxDependencies(transactionRequest);\n    }\n    return this.provider.simulate(transactionRequest, { estimateTxDependencies: false });\n  }\n\n  private validateGas({\n    gasUsed,\n    gasPrice,\n    gasLimit,\n    minGasPrice,\n  }: {\n    gasUsed: BN;\n    gasPrice: BN;\n    gasLimit: BN;\n    minGasPrice: BN;\n  }) {\n    if (minGasPrice.gt(gasPrice)) {\n      throw new FuelError(\n        ErrorCode.GAS_PRICE_TOO_LOW,\n        `Gas price '${gasPrice}' is lower than the required: '${minGasPrice}'.`\n      );\n    }\n\n    if (gasUsed.gt(gasLimit)) {\n      throw new FuelError(\n        ErrorCode.GAS_LIMIT_TOO_LOW,\n        `Gas limit '${gasLimit}' is lower than the required: '${gasUsed}'.`\n      );\n    }\n  }\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!ut.isBytes(data)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (ut.isBytes(key)) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(\n      readonly px: T,\n      readonly py: T,\n      readonly pz: T\n    ) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(\n      readonly r: bigint,\n      readonly s: bigint,\n      readonly recovery?: number\n    ) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = ut.isBytes(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || ut.isBytes(sg)) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","import { Address } from '@fuel-ts/address';\nimport { randomBytes } from '@fuel-ts/crypto';\nimport { hash } from '@fuel-ts/hasher';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { toBytes } from '@fuel-ts/math';\nimport { hexlify, concat, arrayify } from '@fuel-ts/utils';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\nexport class Signer {\n  readonly address: Address;\n\n  readonly publicKey: string;\n\n  readonly compressedPublicKey: string;\n\n  readonly privateKey: string;\n\n  /**\n   * Create a Signer instance from a given private key\n   *\n   * @param privateKey - The private key to use for signing\n   * @returns A new Signer instance\n   */\n  constructor(privateKey: BytesLike) {\n    // A lot of common tools do not prefix private keys with a 0x\n    if (typeof privateKey === 'string') {\n      if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n        // eslint-disable-next-line no-param-reassign\n        privateKey = `0x${privateKey}`;\n      }\n    }\n    // Convert to byte array, normalize private key input allowing it to be BytesLike\n    // like remove 0x prefix and accept array of bytes\n    const privateKeyBytes = toBytes(privateKey, 32);\n\n    this.privateKey = hexlify(privateKeyBytes);\n\n    // Slice(1) removes the encoding scheme from the public key\n    this.publicKey = hexlify(secp256k1.getPublicKey(privateKeyBytes, false).slice(1));\n    this.compressedPublicKey = hexlify(secp256k1.getPublicKey(privateKeyBytes, true));\n    this.address = Address.fromPublicKey(this.publicKey);\n  }\n\n  /**\n   * Sign data using the Signer instance\n   *\n   * Signature is a 64 byte array of the concatenated r and s values with the compressed recoveryParam byte.\n   * @ignore\n   * [Read more](FuelLabs/fuel-specs/specs/protocol/cryptographic_primitives.md#public-key-cryptography)\n   *\n   * @param data - The data to be sign\n   * @returns hashed signature\n   */\n  sign(data: BytesLike) {\n    const signature = secp256k1.sign(arrayify(data), arrayify(this.privateKey));\n\n    const r = toBytes(`0x${signature.r.toString(16)}`, 32);\n    const s = toBytes(`0x${signature.s.toString(16)}`, 32);\n\n    // add recoveryParam to first s byte\n    s[0] |= (signature.recovery || 0) << 7;\n\n    return hexlify(concat([r, s]));\n  }\n\n  /**\n   * Add point on the current elliptic curve\n   *\n   * @param point - Point to add on the curve\n   * @returns compressed point on the curve\n   */\n  addPoint(point: BytesLike) {\n    const p0 = secp256k1.ProjectivePoint.fromHex(arrayify(this.compressedPublicKey));\n    const p1 = secp256k1.ProjectivePoint.fromHex(arrayify(point));\n    const result = p0.add(p1);\n    return `0x${result.toHex(true)}`;\n  }\n\n  /**\n   * Recover the public key from a signature performed with [`sign`](#sign).\n   *\n   * @param data - Data\n   * @param signature - hashed signature\n   * @returns public key from signature from the\n   */\n  static recoverPublicKey(data: BytesLike, signature: BytesLike): string {\n    const signedMessageBytes = arrayify(signature);\n    const r = signedMessageBytes.slice(0, 32);\n    const s = signedMessageBytes.slice(32, 64);\n    const recoveryParam = (s[0] & 0x80) >> 7;\n\n    // remove recoveryParam from s first byte\n    s[0] &= 0x7f;\n\n    const sig = new secp256k1.Signature(BigInt(hexlify(r)), BigInt(hexlify(s))).addRecoveryBit(\n      recoveryParam\n    );\n\n    const publicKey = sig.recoverPublicKey(arrayify(data)).toRawBytes(false).slice(1);\n    return hexlify(publicKey);\n  }\n\n  /**\n   * Recover the address from a signature performed with [`sign`](#sign).\n   *\n   * @param data - Data\n   * @param signature - Signature\n   * @returns Address from signature\n   */\n  static recoverAddress(data: BytesLike, signature: BytesLike): Address {\n    return Address.fromPublicKey(Signer.recoverPublicKey(data, signature));\n  }\n\n  /**\n   * Generate a random privateKey\n   *\n   * @param entropy - Adds extra entropy to generate the privateKey\n   * @returns random 32-byte hashed\n   */\n  static generatePrivateKey(entropy?: BytesLike) {\n    return entropy ? hash(concat([randomBytes(32), arrayify(entropy)])) : randomBytes(32);\n  }\n\n  /**\n   * Extended publicKey from a compact publicKey\n   *\n   * @param publicKey - Compact publicKey\n   * @returns extended publicKey\n   */\n  static extendPublicKey(publicKey: BytesLike) {\n    const point = secp256k1.ProjectivePoint.fromHex(arrayify(publicKey));\n    return hexlify(point.toRawBytes(false).slice(1));\n  }\n}\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { Address } from '@fuel-ts/address';\nimport {\n  bufferFromString,\n  keccak256,\n  randomBytes,\n  scrypt,\n  stringFromBuffer,\n  decryptJsonWalletData,\n  encryptJsonWalletData,\n} from '@fuel-ts/crypto';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\nimport { hexlify } from '@fuel-ts/utils';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport type KeystoreWallet = {\n  id: string;\n  version: number;\n  address: string;\n  crypto: KeystoreCrypto;\n};\n\ntype KeystoreCrypto = {\n  cipher: 'aes-128-ctr';\n  cipherparams: { iv: string };\n  ciphertext: string;\n  kdf: 'scrypt';\n  mac: string;\n  kdfparams: KDFParams;\n};\n\ntype KDFParams = {\n  dklen: number;\n  n: number;\n  p: number;\n  r: number;\n  salt: string;\n};\n\n// Same values used in the Rust SDK\nexport const DEFAULT_KDF_PARAMS_LOG_N = 13;\nexport const DEFAULT_KDF_PARAMS_R = 8;\nexport const DEFAULT_KDF_PARAMS_P = 1;\nexport const DEFAULT_KEY_SIZE = 32;\nexport const DEFAULT_IV_SIZE = 16;\n\n/**\n * Removes the '0x' prefix from a hexadecimal string.\n * If the prefix does not exist, it returns the original string.\n */\nexport const removeHexPrefix = (hexString: string) => {\n  if (/^0x/.test(hexString)) {\n    return hexString.slice(2);\n  }\n\n  return hexString;\n};\n\nexport async function encryptKeystoreWallet(\n  privateKey: string,\n  address: string | AbstractAddress,\n  password: string\n): Promise<string> {\n  // Convert the hexlified private key string to a Buffer.\n  const privateKeyBuffer = bufferFromString(removeHexPrefix(privateKey), 'hex');\n  const ownerAddress = Address.fromAddressOrString(address);\n  // Generate a random salt.\n  const salt = randomBytes(DEFAULT_KEY_SIZE);\n\n  const key = scrypt({\n    password: bufferFromString(password),\n    salt,\n    dklen: DEFAULT_KEY_SIZE,\n    n: 2 ** DEFAULT_KDF_PARAMS_LOG_N,\n    r: DEFAULT_KDF_PARAMS_R,\n    p: DEFAULT_KDF_PARAMS_P,\n  });\n\n  // Encrypt the private key using AES-128-CTR.\n  const iv = randomBytes(DEFAULT_IV_SIZE);\n\n  const ciphertext = await encryptJsonWalletData(privateKeyBuffer, key, iv);\n\n  const data = Uint8Array.from([...key.subarray(16, 32), ...ciphertext]);\n\n  // Calculate the MAC.\n  const macHashUint8Array = keccak256(data);\n\n  const mac = stringFromBuffer(macHashUint8Array, 'hex');\n\n  // Construct keystore.\n  const keystore: KeystoreWallet = {\n    id: uuidv4(),\n    version: 3,\n    address: removeHexPrefix(ownerAddress.toHexString()),\n    crypto: {\n      cipher: 'aes-128-ctr',\n      mac,\n      cipherparams: { iv: stringFromBuffer(iv, 'hex') },\n      ciphertext: stringFromBuffer(ciphertext, 'hex'),\n      kdf: 'scrypt',\n      kdfparams: {\n        dklen: DEFAULT_KEY_SIZE,\n        n: 2 ** DEFAULT_KDF_PARAMS_LOG_N,\n        p: DEFAULT_KDF_PARAMS_P,\n        r: DEFAULT_KDF_PARAMS_R,\n        salt: stringFromBuffer(salt, 'hex'),\n      },\n    },\n  };\n\n  return JSON.stringify(keystore);\n}\n\nexport async function decryptKeystoreWallet(jsonWallet: string, password: string): Promise<string> {\n  const keystoreWallet = JSON.parse(jsonWallet) as KeystoreWallet;\n\n  // Extract the parameters needed for decryption.\n  const {\n    crypto: {\n      mac,\n      ciphertext,\n      cipherparams: { iv },\n      kdfparams: { dklen, n, r, p, salt },\n    },\n  } = keystoreWallet;\n\n  const ciphertextBuffer = bufferFromString(ciphertext, 'hex');\n  const ivBuffer = bufferFromString(iv, 'hex');\n  const saltBuffer = bufferFromString(salt, 'hex');\n\n  const passwordBuffer = bufferFromString(password);\n\n  const key = scrypt({\n    password: passwordBuffer,\n    salt: saltBuffer,\n    n,\n    p,\n    r,\n    dklen,\n  });\n\n  // Verify the MAC. It should be the Keccak-256 hash of the concatenation of the second half of the derived key and the ciphertext.\n  const data = Uint8Array.from([...key.subarray(16, 32), ...ciphertextBuffer]);\n\n  const macHashUint8Array = keccak256(data);\n\n  const macHash = stringFromBuffer(macHashUint8Array, 'hex');\n\n  if (mac !== macHash) {\n    throw new FuelError(\n      ErrorCode.INVALID_PASSWORD,\n      'Failed to decrypt the keystore wallet, the provided password is incorrect.'\n    );\n  }\n\n  // Decrypt the private key.\n  const buffer = await decryptJsonWalletData(ciphertextBuffer, key, ivBuffer);\n\n  const privateKey = hexlify(buffer);\n\n  return privateKey;\n}\n","import { hashMessage } from '@fuel-ts/hasher';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { hexlify } from '@fuel-ts/utils';\n\nimport { Account } from '../account';\nimport { transactionRequestify } from '../providers';\nimport type {\n  TransactionResponse,\n  TransactionRequestLike,\n  CallResult,\n  Provider,\n  ProviderSendTxParams,\n  EstimateTransactionParams,\n} from '../providers';\nimport { Signer } from '../signer';\n\nimport { encryptKeystoreWallet } from './keystore-wallet';\n\n/**\n * `BaseWalletUnlocked` provides the base functionalities for an unlocked wallet.\n */\nexport class BaseWalletUnlocked extends Account {\n  /**\n   * Default HDWallet path.\n   */\n  static defaultPath = \"m/44'/1179993420'/0'/0/0\";\n\n  /**\n   * A function that returns the wallet's signer.\n   */\n  signer: () => Signer;\n\n  /**\n   * Creates a new BaseWalletUnlocked instance.\n   *\n   * @param privateKey - The private key of the wallet.\n   * @param provider - A Provider instance (optional).\n   */\n  constructor(privateKey: BytesLike, provider?: Provider) {\n    const signer = new Signer(privateKey);\n    super(signer.address, provider);\n    this.signer = () => signer;\n  }\n\n  /**\n   * Gets the private key of the wallet.\n   *\n   * @returns The private key of the wallet.\n   */\n  get privateKey(): string {\n    return this.signer().privateKey;\n  }\n\n  /**\n   * Gets the public key of the wallet.\n   *\n   * @returns\n   */\n  get publicKey(): string {\n    return this.signer().publicKey;\n  }\n\n  /**\n   * Signs a message with the wallet's private key.\n   *\n   * @param message - The message to sign.\n   * @returns A promise that resolves to the signature as a ECDSA 64 bytes string.\n   */\n  async signMessage(message: string): Promise<string> {\n    const signedMessage = await this.signer().sign(hashMessage(message));\n    return hexlify(signedMessage);\n  }\n\n  /**\n   * Signs a transaction with the wallet's private key.\n   *\n   * @param transactionRequestLike - The transaction request to sign.\n   * @returns A promise that resolves to the signature as a ECDSA 64 bytes string.\n   */\n  async signTransaction(transactionRequestLike: TransactionRequestLike): Promise<string> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    const chainId = this.provider.getChainId();\n    const hashedTransaction = transactionRequest.getTransactionId(chainId);\n    const signature = await this.signer().sign(hashedTransaction);\n    return hexlify(signature);\n  }\n\n  /**\n   * Populates a transaction with the witnesses signature.\n   *\n   * @param transactionRequestLike - The transaction request to populate.\n   * @returns The populated transaction request.\n   */\n  async populateTransactionWitnessesSignature(transactionRequestLike: TransactionRequestLike) {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    const signedTransaction = await this.signTransaction(transactionRequest);\n\n    transactionRequest.updateWitnessByOwner(this.address, signedTransaction);\n\n    return transactionRequest;\n  }\n\n  /**\n   * Populates the witness signature for a transaction and sends it to the network using `provider.sendTransaction`.\n   *\n   * @param transactionRequestLike - The transaction request to send.\n   * @returns A promise that resolves to the TransactionResponse object.\n   */\n  async sendTransaction(\n    transactionRequestLike: TransactionRequestLike,\n    { estimateTxDependencies = true, awaitExecution }: ProviderSendTxParams = {}\n  ): Promise<TransactionResponse> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    if (estimateTxDependencies) {\n      await this.provider.estimateTxDependencies(transactionRequest);\n    }\n    return this.provider.sendTransaction(\n      await this.populateTransactionWitnessesSignature(transactionRequest),\n      { awaitExecution, estimateTxDependencies: false }\n    );\n  }\n\n  /**\n   * Populates the witness signature for a transaction and sends a call to the network using `provider.call`.\n   *\n   * @param transactionRequestLike - The transaction request to simulate.\n   * @returns A promise that resolves to the CallResult object.\n   */\n  async simulateTransaction(\n    transactionRequestLike: TransactionRequestLike,\n    { estimateTxDependencies = true }: EstimateTransactionParams = {}\n  ): Promise<CallResult> {\n    const transactionRequest = transactionRequestify(transactionRequestLike);\n    if (estimateTxDependencies) {\n      await this.provider.estimateTxDependencies(transactionRequest);\n    }\n    return this.provider.call(\n      await this.populateTransactionWitnessesSignature(transactionRequest),\n      {\n        utxoValidation: true,\n        estimateTxDependencies: false,\n      }\n    );\n  }\n\n  async encrypt(password: string): Promise<string> {\n    return encryptKeystoreWallet(this.privateKey, this.address, password);\n  }\n}\n","export const english = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo',\n];\n","export { english } from './words/english';\n\nexport enum Language {\n  'english' = 'english',\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { sha256 } from '@fuel-ts/hasher';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { arrayify } from '@fuel-ts/utils';\n\n/* Mnemonic phrase composed by words from the provided wordlist it can be a text or a array of words */\nexport type MnemonicPhrase = string | Array<string>;\n\nexport function toUtf8Bytes(stri: string): Uint8Array {\n  const str = stri.normalize('NFKD');\n\n  const result = [];\n  for (let i = 0; i < str.length; i += 1) {\n    const c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push((c >> 6) | 0xc0);\n      result.push((c & 0x3f) | 0x80);\n    } else if ((c & 0xfc00) === 0xd800) {\n      i += 1;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new FuelError(\n          ErrorCode.INVALID_INPUT_PARAMETERS,\n          'Invalid UTF-8 in the input string.'\n        );\n      }\n\n      // Surrogate Pair\n      const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push((pair >> 18) | 0xf0);\n      result.push(((pair >> 12) & 0x3f) | 0x80);\n      result.push(((pair >> 6) & 0x3f) | 0x80);\n      result.push((pair & 0x3f) | 0x80);\n    } else {\n      result.push((c >> 12) | 0xe0);\n      result.push(((c >> 6) & 0x3f) | 0x80);\n      result.push((c & 0x3f) | 0x80);\n    }\n  }\n\n  return Uint8Array.from(result);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n  return (1 << bits) - 1;\n}\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n  return ((1 << bits) - 1) << (8 - bits);\n}\n\nexport function getWords(mnemonic: MnemonicPhrase): Array<string> {\n  if (!Array.isArray(mnemonic)) {\n    return mnemonic.split(/\\s+/);\n  }\n  return mnemonic;\n}\n\nexport function getPhrase(mnemonic: MnemonicPhrase): string {\n  if (Array.isArray(mnemonic)) {\n    return mnemonic.join(' ');\n  }\n  return mnemonic;\n}\n\nexport function entropyToMnemonicIndices(entropy: Uint8Array): Array<number> {\n  const indices: Array<number> = [0];\n\n  let remainingBits = 11;\n  for (let i = 0; i < entropy.length; i += 1) {\n    if (remainingBits > 8) {\n      indices[indices.length - 1] <<= 8;\n      indices[indices.length - 1] |= entropy[i];\n\n      remainingBits -= 8;\n      // This byte will complete an 11-bit index\n    } else {\n      indices[indices.length - 1] <<= remainingBits;\n      indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n      // Start the next word\n      indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n      remainingBits += 3;\n    }\n  }\n\n  // Compute the checksum bits\n  const checksumBits = entropy.length / 4;\n  const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n  // Shift the checksum into the word indices\n  indices[indices.length - 1] <<= checksumBits;\n  indices[indices.length - 1] |= checksum >> (8 - checksumBits);\n\n  return indices;\n}\n\nexport function mnemonicWordsToEntropy(words: Array<string>, wordlist: Array<string>): BytesLike {\n  const size = Math.ceil((11 * words.length) / 8);\n  const entropy = arrayify(new Uint8Array(size));\n\n  let offset = 0;\n  for (let i = 0; i < words.length; i += 1) {\n    const index = wordlist.indexOf(words[i].normalize('NFKD'));\n    if (index === -1) {\n      throw new FuelError(\n        ErrorCode.INVALID_MNEMONIC,\n        `Invalid mnemonic: the word '${words[i]}' is not found in the provided wordlist.`\n      );\n    }\n\n    for (let bit = 0; bit < 11; bit += 1) {\n      if (index & (1 << (10 - bit))) {\n        entropy[offset >> 3] |= 1 << (7 - (offset % 8));\n      }\n      offset += 1;\n    }\n  }\n  const entropyBits = (32 * words.length) / 3;\n  const checksumBits = words.length / 3;\n  const checksumMask = getUpperMask(checksumBits);\n  const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n  if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n    throw new FuelError(\n      ErrorCode.INVALID_CHECKSUM,\n      'Checksum validation failed for the provided mnemonic.'\n    );\n  }\n\n  return entropy.slice(0, entropyBits / 8);\n}\n","import { randomBytes } from '@fuel-ts/crypto';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { sha256 } from '@fuel-ts/hasher';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { arrayify, hexlify, concat } from '@fuel-ts/utils';\nimport { dataSlice, pbkdf2, computeHmac, encodeBase58 } from 'ethers';\n\nimport { english } from '../wordlists';\n\nimport type { MnemonicPhrase } from './utils';\nimport {\n  entropyToMnemonicIndices,\n  getWords,\n  getPhrase,\n  mnemonicWordsToEntropy,\n  toUtf8Bytes,\n} from './utils';\n\n//\n// Constants\n//\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes('Bitcoin seed');\n// 4 byte: version bytes (mainnet: 0x0488B21E public, 0x0488ADE4 private; testnet: 0x043587CF public, 0x04358394 private)\nconst MainnetPRV = '0x0488ade4';\nconst TestnetPRV = '0x04358394';\nexport const MNEMONIC_SIZES = [12, 15, 18, 21, 24];\n\nfunction assertWordList(wordlist: Array<string>) {\n  if (wordlist.length !== 2048) {\n    throw new FuelError(\n      ErrorCode.INVALID_WORD_LIST,\n      `Expected word list length of 2048, but got ${wordlist.length}.`\n    );\n  }\n}\n\nfunction assertEntropy(entropy: BytesLike) {\n  if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {\n    throw new FuelError(\n      ErrorCode.INVALID_ENTROPY,\n      `Entropy should be between 16 and 32 bytes and a multiple of 4, but got ${entropy.length} bytes.`\n    );\n  }\n}\n\nfunction assertMnemonic(words: Array<string>) {\n  if (!MNEMONIC_SIZES.includes(words.length)) {\n    const errorMsg = `Invalid mnemonic size. Expected one of [${MNEMONIC_SIZES.join(\n      ', '\n    )}] words, but got ${words.length}.`;\n\n    throw new FuelError(ErrorCode.INVALID_MNEMONIC, errorMsg);\n  }\n}\n\nclass Mnemonic {\n  wordlist: Array<string>;\n\n  /**\n   *\n   * @param wordlist - Provide a wordlist with the list of words used to generate the mnemonic phrase. The default value is the English list.\n   * @returns Mnemonic instance\n   */\n  constructor(wordlist: Array<string> = english) {\n    this.wordlist = wordlist;\n\n    assertWordList(this.wordlist);\n  }\n\n  /**\n   *\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @returns Entropy hash\n   */\n  mnemonicToEntropy(phrase: MnemonicPhrase) {\n    return Mnemonic.mnemonicToEntropy(phrase, this.wordlist);\n  }\n\n  /**\n   *\n   * @param entropy - Entropy source to the mnemonic phrase.\n   * @returns Mnemonic phrase\n   */\n  entropyToMnemonic(entropy: BytesLike) {\n    return Mnemonic.entropyToMnemonic(entropy, this.wordlist);\n  }\n\n  /**\n   *\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @param wordlist - Provide a wordlist with the list of words used to generate the mnemonic phrase. The default value is the English list.\n   * @returns Mnemonic phrase\n   */\n  static mnemonicToEntropy(phrase: MnemonicPhrase, wordlist: Array<string> = english): string {\n    const words = getWords(phrase);\n\n    assertMnemonic(words);\n\n    return hexlify(mnemonicWordsToEntropy(words, wordlist));\n  }\n\n  /**\n   * @param entropy - Entropy source to the mnemonic phrase.\n   * @param testnet - Inform if should use testnet or mainnet prefix, default value is true (`mainnet`).\n   * @returns 64-byte array contains privateKey and chainCode as described on BIP39\n   */\n  static entropyToMnemonic(entropy: BytesLike, wordlist: Array<string> = english): string {\n    const entropyBytes = arrayify(entropy);\n\n    assertWordList(wordlist);\n    assertEntropy(entropyBytes);\n\n    return entropyToMnemonicIndices(entropyBytes)\n      .map((i) => wordlist[i])\n      .join(' ');\n  }\n\n  /**\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @param passphrase - Add additional security to protect the generated seed with a memorized passphrase. `Note: if the owner forgot the passphrase, all wallets and accounts derive from the phrase will be lost.`\n   * @returns 64-byte array contains privateKey and chainCode as described on BIP39\n   */\n  static mnemonicToSeed(phrase: MnemonicPhrase, passphrase: BytesLike = '') {\n    assertMnemonic(getWords(phrase));\n\n    const phraseBytes = toUtf8Bytes(getPhrase(phrase));\n    const salt = toUtf8Bytes(`mnemonic${passphrase}`);\n\n    return pbkdf2(phraseBytes, salt, 2048, 64, 'sha512');\n  }\n\n  /**\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @param passphrase - Add additional security to protect the generated seed with a memorized passphrase. `Note: if the owner forgot the passphrase, all wallets and accounts derive from the phrase will be lost.`\n   * @returns 64-byte array contains privateKey and chainCode as described on BIP39\n   */\n  static mnemonicToMasterKeys(phrase: MnemonicPhrase, passphrase: BytesLike = '') {\n    const seed = Mnemonic.mnemonicToSeed(phrase, passphrase);\n    return Mnemonic.masterKeysFromSeed(seed);\n  }\n\n  /**\n   * Validates if given mnemonic is  valid\n   * @param phrase - Mnemonic phrase composed by words from the provided wordlist\n   * @returns true if phrase is a valid mnemonic\n   */\n  static isMnemonicValid(phrase: string) {\n    const words = getWords(phrase);\n\n    let i: number = 0;\n\n    try {\n      assertMnemonic(words);\n    } catch {\n      return false;\n    }\n\n    while (i < words.length) {\n      if (Mnemonic.binarySearch(words[i]) === false) {\n        return false;\n      }\n      i += 1;\n    }\n\n    return true;\n  }\n\n  static binarySearch(target: string): boolean {\n    const words = english;\n    let left: number = 0;\n    let right: number = words.length - 1;\n\n    while (left <= right) {\n      const mid: number = Math.floor((left + right) / 2);\n\n      if (words[mid] === target) {\n        return true;\n      }\n      if (target < words[mid]) {\n        right = mid - 1;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param seed - BIP39 seed\n   * @param testnet - Inform if should use testnet or mainnet prefix, the default value is true (`mainnet`).\n   * @returns 64-byte array contains privateKey and chainCode as described on BIP39\n   */\n  static masterKeysFromSeed(seed: string): Uint8Array {\n    const seedArray = arrayify(seed);\n\n    if (seedArray.length < 16 || seedArray.length > 64) {\n      throw new FuelError(\n        ErrorCode.INVALID_SEED,\n        `Seed length should be between 16 and 64 bytes, but received ${seedArray.length} bytes.`\n      );\n    }\n\n    return arrayify(computeHmac('sha512', MasterSecret, seedArray));\n  }\n\n  /**\n   * Get the extendKey as defined on BIP-32 from the provided seed\n   *\n   * @param seed - BIP39 seed\n   * @param testnet - Inform if should use testnet or mainnet prefix, default value is true (`mainnet`).\n   * @returns BIP-32 extended private key\n   */\n  static seedToExtendedKey(seed: string, testnet: boolean = false): string {\n    const masterKey = Mnemonic.masterKeysFromSeed(seed);\n    const prefix = arrayify(testnet ? TestnetPRV : MainnetPRV);\n    const depth = '0x00';\n    const fingerprint = '0x00000000';\n    const index = '0x00000000';\n    // last 32 bites from the key\n    const chainCode = masterKey.slice(32);\n    // first 32 bites from the key\n    const privateKey = masterKey.slice(0, 32);\n    const extendedKey = concat([\n      prefix,\n      depth,\n      fingerprint,\n      index,\n      chainCode,\n      concat(['0x00', privateKey]),\n    ]);\n    const checksum = dataSlice(sha256(sha256(extendedKey)), 0, 4);\n\n    return encodeBase58(concat([extendedKey, checksum]));\n  }\n\n  /**\n   *  Create a new mnemonic using a randomly generated number as entropy.\n   *  As defined in BIP39, the entropy must be a multiple of 32 bits, and its size must be between 128 and 256 bits.\n   *  Therefore, the possible values for `strength` are 128, 160, 192, 224, and 256.\n   *  If not provided, the default entropy length will be set to 256 bits.\n   *  The return is a list of words that encodes the generated entropy.\n   *\n   *\n   * @param size - Number of bytes used as an entropy\n   * @param extraEntropy - Optional extra entropy to increase randomness\n   * @returns A randomly generated mnemonic\n   */\n  static generate(size: number = 32, extraEntropy: BytesLike = '') {\n    const entropy = extraEntropy\n      ? sha256(concat([randomBytes(size), arrayify(extraEntropy)]))\n      : randomBytes(size);\n    return Mnemonic.entropyToMnemonic(entropy);\n  }\n}\n\nexport default Mnemonic;\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { sha256 } from '@fuel-ts/hasher';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { bn, toBytes, toHex } from '@fuel-ts/math';\nimport { arrayify, hexlify, concat } from '@fuel-ts/utils';\nimport { toBeHex, dataSlice, encodeBase58, decodeBase58, computeHmac, ripemd160 } from 'ethers';\n\nimport { Mnemonic } from '../mnemonic';\nimport { Signer } from '../signer';\n\n// \"Bitcoin seed\"\nconst HARDENED_INDEX = 0x80000000;\n\n// 4 byte: version bytes (mainnet: 0x0488B21E public, 0x0488ADE4 private; testnet: 0x043587CF public, 0x04358394 private)\nconst MainnetPRV = hexlify('0x0488ade4');\nconst MainnetPUB = hexlify('0x0488b21e');\nconst TestnetPRV = hexlify('0x04358394');\nconst TestnetPUB = hexlify('0x043587cf');\n\nfunction base58check(data: Uint8Array): string {\n  return encodeBase58(concat([data, dataSlice(sha256(sha256(data)), 0, 4)]));\n}\n\nfunction getExtendedKeyPrefix(isPublic: boolean = false, testnet: boolean = false) {\n  if (isPublic) {\n    return testnet ? TestnetPUB : MainnetPUB;\n  }\n  return testnet ? TestnetPRV : MainnetPRV;\n}\n\nfunction isPublicExtendedKey(extendedKey: Uint8Array) {\n  return [MainnetPUB, TestnetPUB].includes(hexlify(extendedKey.slice(0, 4)));\n}\n\nfunction isValidExtendedKey(extendedKey: Uint8Array) {\n  return [MainnetPRV, TestnetPRV, MainnetPUB, TestnetPUB].includes(\n    hexlify(extendedKey.slice(0, 4))\n  );\n}\n\nfunction parsePath(path: string, depth: number = 0) {\n  const components = path.split('/');\n\n  if (components.length === 0 || (components[0] === 'm' && depth !== 0)) {\n    throw new FuelError(ErrorCode.HD_WALLET_ERROR, `invalid path - ${path}`);\n  }\n\n  if (components[0] === 'm') {\n    components.shift();\n  }\n\n  return components.map((p) =>\n    ~p.indexOf(`'`) ? parseInt(p, 10) + HARDENED_INDEX : parseInt(p, 10)\n  );\n}\n\ntype HDWalletConfig = {\n  privateKey?: BytesLike;\n  publicKey?: BytesLike;\n  chainCode: BytesLike;\n  depth?: number;\n  index?: number;\n  parentFingerprint?: string;\n};\n\nclass HDWallet {\n  depth: number = 0;\n  index: number = 0;\n  fingerprint: string = hexlify('0x00000000');\n  parentFingerprint: string = hexlify('0x00000000');\n  privateKey?: string;\n  publicKey: string;\n  chainCode: BytesLike;\n\n  /**\n   * HDWallet is a implementation of the BIP-0044 and BIP-0032, Multi-Account Hierarchy for Deterministic Wallets\n   *\n   * @param config - Wallet configurations\n   */\n  constructor(config: HDWalletConfig) {\n    // TODO: set some asserts here\n\n    if (config.privateKey) {\n      const signer = new Signer(config.privateKey);\n      this.publicKey = hexlify(signer.compressedPublicKey);\n      this.privateKey = hexlify(config.privateKey);\n    } else {\n      if (!config.publicKey) {\n        throw new FuelError(\n          ErrorCode.HD_WALLET_ERROR,\n          'Both public and private Key cannot be missing. At least one should be provided.'\n        );\n      }\n      this.publicKey = hexlify(config.publicKey);\n    }\n\n    this.parentFingerprint = config.parentFingerprint || this.parentFingerprint;\n    this.fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n    this.depth = config.depth || this.depth;\n    this.index = config.index || this.index;\n    this.chainCode = config.chainCode;\n  }\n\n  get extendedKey() {\n    return this.toExtendedKey();\n  }\n\n  /**\n   * Derive the current HDWallet instance navigating only on the index.\n   * `Ex.: m/44'/0 -> Ex.: m/44'/1 -> m/44'/2`. [Learn more](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n   *\n   * @param index - Index of the child HDWallet.\n   * @returns A new instance of HDWallet on the derived index\n   */\n  deriveIndex(index: number) {\n    const privateKey = this.privateKey && arrayify(this.privateKey);\n    const publicKey = arrayify(this.publicKey);\n    const chainCode = arrayify(this.chainCode);\n    const data = new Uint8Array(37);\n\n    if (index & HARDENED_INDEX) {\n      if (!privateKey) {\n        throw new FuelError(\n          ErrorCode.HD_WALLET_ERROR,\n          'Cannot derive a hardened index without a private Key.'\n        );\n      }\n\n      // 33 bytes: 0x00 || private key\n      data.set(privateKey, 1);\n    } else {\n      data.set(arrayify(this.publicKey));\n    }\n\n    // child number: ser32(i)\n    data.set(toBytes(index, 4), 33);\n\n    const bytes = arrayify(computeHmac('sha512', chainCode, data));\n    const IL = bytes.slice(0, 32);\n    const IR = bytes.slice(32);\n\n    if (privateKey) {\n      const N = '0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141';\n      // Child key ki is parse256(IL) + kpar (mod n).\n      const ki = bn(IL).add(privateKey).mod(N).toBytes(32);\n\n      return new HDWallet({\n        privateKey: ki,\n        chainCode: IR,\n        index,\n        depth: this.depth + 1,\n        parentFingerprint: this.fingerprint,\n      });\n    }\n\n    const signer = new Signer(hexlify(IL));\n    const Ki = signer.addPoint(publicKey);\n\n    return new HDWallet({\n      publicKey: Ki,\n      chainCode: IR,\n      index,\n      depth: this.depth + 1,\n      parentFingerprint: this.fingerprint,\n    });\n  }\n\n  /**\n   * Derive the current HDWallet instance to the path. [Learn more](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n   *\n   * @param path - The string representation of the child HDWallet. `Ex.: m/44'/0'/0'/0/0`\n   * @returns A new instance of HDWallet on the derived path\n   */\n  derivePath(path: string) {\n    const paths = parsePath(path, this.depth);\n\n    return paths.reduce((hdwallet, index) => hdwallet.deriveIndex(index), <HDWallet>this);\n  }\n\n  /**\n   * Get the extendKey as defined on BIP-32 from the provided seed\n   *\n   * @param isPublic - enable to export public extendedKey, it not required when HDWallet didn't have the privateKey.\n   * @param testnet - Inform if should use testnet or mainnet prefix, default value is true (`mainnet`).\n   * @returns BIP-32 extended private key\n   */\n  toExtendedKey(isPublic: boolean = false, testnet: boolean = false): string {\n    if (this.depth >= 256) {\n      throw new FuelError(\n        ErrorCode.HD_WALLET_ERROR,\n        `Exceeded max depth of 255. Current depth: ${this.depth}.`\n      );\n    }\n    const prefix = getExtendedKeyPrefix(this.privateKey == null || isPublic, testnet);\n    const depth = hexlify(Uint8Array.from([this.depth]));\n    const parentFingerprint = this.parentFingerprint;\n    const index = toHex(this.index, 4);\n    // last 32 bites from the key\n    const chainCode = this.chainCode;\n    // first 32 bites from the key\n    const key =\n      this.privateKey != null && !isPublic ? concat(['0x00', this.privateKey]) : this.publicKey;\n    const extendedKey = arrayify(concat([prefix, depth, parentFingerprint, index, chainCode, key]));\n\n    return base58check(extendedKey);\n  }\n\n  /**\n   * Create HDWallet instance from seed\n   *\n   * @param seed - Seed\n   * @returns A new instance of HDWallet\n   */\n  static fromSeed(seed: string) {\n    const masterKey = Mnemonic.masterKeysFromSeed(seed);\n\n    return new HDWallet({\n      chainCode: arrayify(masterKey.slice(32)),\n      privateKey: arrayify(masterKey.slice(0, 32)),\n    });\n  }\n\n  static fromExtendedKey(extendedKey: string) {\n    const decoded = toBeHex(decodeBase58(extendedKey));\n    const bytes = arrayify(decoded);\n    const validChecksum = base58check(bytes.slice(0, 78)) === extendedKey;\n\n    if (bytes.length !== 82 || !isValidExtendedKey(bytes)) {\n      throw new FuelError(ErrorCode.HD_WALLET_ERROR, 'Provided key is not a valid extended key.');\n    }\n    if (!validChecksum) {\n      throw new FuelError(ErrorCode.HD_WALLET_ERROR, 'Provided key has an invalid checksum.');\n    }\n\n    const depth = bytes[4];\n    const parentFingerprint = hexlify(bytes.slice(5, 9));\n    const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n    const chainCode = hexlify(bytes.slice(13, 45));\n    const key = bytes.slice(45, 78);\n\n    if ((depth === 0 && parentFingerprint !== '0x00000000') || (depth === 0 && index !== 0)) {\n      throw new FuelError(\n        ErrorCode.HD_WALLET_ERROR,\n        'Inconsistency detected: Depth is zero but fingerprint/index is non-zero.'\n      );\n    }\n\n    if (isPublicExtendedKey(bytes)) {\n      if (key[0] !== 3) {\n        throw new FuelError(ErrorCode.HD_WALLET_ERROR, 'Invalid public extended key.');\n      }\n\n      return new HDWallet({\n        publicKey: key,\n        chainCode,\n        index,\n        depth,\n        parentFingerprint,\n      });\n    }\n\n    if (key[0] !== 0) {\n      throw new FuelError(ErrorCode.HD_WALLET_ERROR, 'Invalid private extended key.');\n    }\n\n    return new HDWallet({\n      privateKey: key.slice(1),\n      chainCode,\n      index,\n      depth,\n      parentFingerprint,\n    });\n  }\n}\n\nexport default HDWallet;\n","//\n// Because WalletLocked and WalletUnlocked has a cycle dependency\n// it's not possible to split the two classes in different files\n//\n/* eslint-disable max-classes-per-file */\nimport type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { Account } from '../account';\nimport { HDWallet } from '../hdwallet';\nimport { Mnemonic } from '../mnemonic';\nimport type { Provider } from '../providers';\nimport { Signer } from '../signer';\n\nimport { BaseWalletUnlocked } from './base-wallet-unlocked';\nimport { decryptKeystoreWallet } from './keystore-wallet';\n\nexport interface GenerateOptions {\n  /** Additional entropy for the random bytes */\n  entropy?: BytesLike;\n  provider?: Provider;\n}\n\n/**\n * `WalletLocked` provides the functionalities for a locked  wallet.\n */\nexport class WalletLocked extends Account {\n  /**\n   * Unlocks the wallet using the provided private key and returns an instance of WalletUnlocked.\n   *\n   * @param privateKey - The private key used to unlock the wallet.\n   * @returns An instance of WalletUnlocked.\n   */\n  unlock(privateKey: BytesLike): WalletUnlocked {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return new WalletUnlocked(privateKey, this._provider);\n  }\n}\n\n/**\n * `WalletUnlocked` provides the functionalities for an unlocked wallet.\n */\nexport class WalletUnlocked extends BaseWalletUnlocked {\n  /**\n   * Locks the wallet and returns an instance of WalletLocked.\n   *\n   * @returns An instance of WalletLocked.\n   */\n  lock(): WalletLocked {\n    this.signer = () => new Signer('0x00');\n    return new WalletLocked(this.address, this._provider);\n  }\n\n  /**\n   * Generate a new Wallet Unlocked with a random key pair.\n   *\n   * @param generateOptions - Options to customize the generation process (optional).\n   * @returns An instance of WalletUnlocked.\n   */\n  static generate(generateOptions?: GenerateOptions): WalletUnlocked {\n    const privateKey = Signer.generatePrivateKey(generateOptions?.entropy);\n\n    return new WalletUnlocked(privateKey, generateOptions?.provider);\n  }\n\n  /**\n   * Create a Wallet Unlocked from a seed.\n   *\n   * @param seed - The seed phrase.\n   * @param provider - A Provider instance (optional).\n   * @param path - The derivation path (optional).\n   * @returns An instance of WalletUnlocked.\n   */\n  static fromSeed(seed: string, path?: string, provider?: Provider): WalletUnlocked {\n    const hdWallet = HDWallet.fromSeed(seed);\n    const childWallet = hdWallet.derivePath(path || WalletUnlocked.defaultPath);\n\n    return new WalletUnlocked(<string>childWallet.privateKey, provider);\n  }\n\n  /**\n   * Create a Wallet Unlocked from a mnemonic phrase.\n   *\n   * @param mnemonic - The mnemonic phrase.\n   * @param provider - A Provider instance (optional).\n   * @param path - The derivation path (optional).\n   * @param passphrase - The passphrase for the mnemonic (optional).\n   * @returns An instance of WalletUnlocked.\n   */\n  static fromMnemonic(\n    mnemonic: string,\n    path?: string,\n    passphrase?: BytesLike,\n    provider?: Provider\n  ): WalletUnlocked {\n    const seed = Mnemonic.mnemonicToSeed(mnemonic, passphrase);\n    const hdWallet = HDWallet.fromSeed(seed);\n    const childWallet = hdWallet.derivePath(path || WalletUnlocked.defaultPath);\n\n    return new WalletUnlocked(<string>childWallet.privateKey, provider);\n  }\n\n  /**\n   * Create a Wallet Unlocked from an extended key.\n   *\n   * @param extendedKey - The extended key.\n   * @param provider - A Provider instance (optional).\n   * @returns An instance of WalletUnlocked.\n   */\n  static fromExtendedKey(extendedKey: string, provider?: Provider): WalletUnlocked {\n    const hdWallet = HDWallet.fromExtendedKey(extendedKey);\n\n    return new WalletUnlocked(<string>hdWallet.privateKey, provider);\n  }\n\n  /**\n   * Create a Wallet Unlocked from an encrypted JSON.\n   *\n   * @param jsonWallet - The encrypted JSON keystore.\n   * @param password - The password to decrypt the JSON.\n   * @param provider - A Provider instance (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static async fromEncryptedJson(\n    jsonWallet: string,\n    password: string,\n    provider?: Provider\n  ): Promise<WalletUnlocked> {\n    const privateKey = await decryptKeystoreWallet(jsonWallet, password);\n\n    return new WalletUnlocked(privateKey, provider);\n  }\n}\n","import type { AbstractAddress, BytesLike } from '@fuel-ts/interfaces';\n\nimport type { Provider } from '../providers';\n\nimport { WalletLocked, WalletUnlocked } from './wallets';\n\n/**\n * `Wallet` provides methods to create locked and unlocked wallet instances.\n */\nexport class Wallet {\n  /**\n   * Creates a locked wallet instance from an address and a provider.\n   *\n   * @param address - The address of the wallet.\n   * @param provider - A Provider instance (optional).\n   * @returns A locked wallet instance.\n   */\n  static fromAddress(address: string | AbstractAddress, provider?: Provider): WalletLocked {\n    return new WalletLocked(address, provider);\n  }\n\n  /**\n   * Creates an unlocked wallet instance from a private key and a provider.\n   *\n   * @param privateKey - The private key of the wallet.\n   * @param provider - A Provider instance (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static fromPrivateKey(privateKey: BytesLike, provider?: Provider) {\n    return new WalletUnlocked(privateKey, provider);\n  }\n\n  /**\n   * Generate a new Wallet Unlocked with a random key pair.\n   *\n   * @param generateOptions - Options to customize the generation process (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static generate = WalletUnlocked.generate;\n\n  /**\n   * Create a Wallet Unlocked from a seed.\n   *\n   * @param seed - The seed phrase.\n   * @param provider - A Provider instance (optional).\n   * @param path - The derivation path (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static fromSeed = WalletUnlocked.fromSeed;\n\n  /**\n   * Create a Wallet Unlocked from a mnemonic phrase.\n   *\n   * @param mnemonic - The mnemonic phrase.\n   * @param provider - A Provider instance (optional).\n   * @param path - The derivation path (optional).\n   * @param passphrase - The passphrase for the mnemonic (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static fromMnemonic = WalletUnlocked.fromMnemonic;\n\n  /**\n   * Create a Wallet Unlocked from an extended key.\n   *\n   * @param extendedKey - The extended key.\n   * @param provider - A Provider instance (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static fromExtendedKey = WalletUnlocked.fromExtendedKey;\n\n  /**\n   * Create a Wallet Unlocked from an encrypted JSON.\n   *\n   * @param jsonWallet - The encrypted JSON keystore.\n   * @param password - The password to decrypt the JSON.\n   * @param provider - A Provider instance (optional).\n   * @returns An unlocked wallet instance.\n   */\n  static fromEncryptedJson = WalletUnlocked.fromEncryptedJson;\n}\n","import { Address } from '@fuel-ts/address';\nimport type { Keystore } from '@fuel-ts/crypto';\nimport { encrypt, decrypt } from '@fuel-ts/crypto';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\nimport { EventEmitter } from 'events';\n\nimport type { WalletUnlocked } from '../wallet';\n\nimport { MemoryStorage } from './storages/memory-storage';\nimport type {\n  StorageAbstract,\n  WalletManagerAccount,\n  VaultConfig,\n  VaultsState,\n  WalletManagerOptions,\n  WalletManagerState,\n  Vault,\n} from './types';\nimport { MnemonicVault } from './vaults/mnemonic-vault';\nimport { PrivateKeyVault } from './vaults/privatekey-vault';\n\nconst ERROR_MESSAGES = {\n  invalid_vault_type: 'The provided Vault type is invalid.',\n  address_not_found: 'No private key found for address the specified wallet address.',\n  vault_not_found: 'The specified vault was not found.',\n  wallet_not_unlocked: 'The wallet is currently locked.',\n  passphrase_not_match: 'The provided passphrase did not match the expected value.',\n};\n\n/**\n * Generic assert function to avoid undesirable errors\n */\nfunction assert(condition: unknown, message: string): asserts condition {\n  if (!condition) {\n    throw new FuelError(ErrorCode.WALLET_MANAGER_ERROR, message);\n  }\n}\n\n/**\n * WalletManager is a upper package to manage multiple vaults like mnemonic and privateKeys.\n *\n * - VaultTypes can be add to `WalletManager.Vaults` enabling to add custom Vault types.\n * - Storage can be instantiate when initializing enabling custom storage types.\n */\nexport class WalletManager extends EventEmitter {\n  /**\n   * Vaults\n   *\n   * Vaults are responsible to store secret keys and return an `Wallet` instance,\n   * to interact with the network.\n   *\n   * Each vault has access to its own state\n   *\n   */\n  static Vaults = [MnemonicVault, PrivateKeyVault];\n  /**\n   * Storage\n   *\n   * Persistent encrypted data. `The default storage works only on memory`.\n   */\n  readonly storage: StorageAbstract = new MemoryStorage();\n  /* Key name passed to the storage */\n  readonly STORAGE_KEY: string = 'WalletManager';\n\n  // `This variables are only accessible from inside the class`\n  #vaults: VaultsState = [];\n  #passphrase = '';\n  #isLocked: boolean = true;\n\n  constructor(options?: WalletManagerOptions) {\n    super();\n    this.storage = options?.storage || this.storage;\n  }\n\n  get isLocked(): boolean {\n    return this.#isLocked;\n  }\n\n  /**\n   * Return the vault serialized object containing all the privateKeys,\n   * the format of the return depends on the Vault type.\n   */\n  exportVault<T extends Vault>(vaultId: number): ReturnType<T['serialize']> {\n    assert(!this.#isLocked, ERROR_MESSAGES.wallet_not_unlocked);\n    const vaultState = this.#vaults.find((_, idx) => idx === vaultId);\n    assert(vaultState, ERROR_MESSAGES.vault_not_found);\n    return vaultState.vault.serialize() as ReturnType<T['serialize']>;\n  }\n\n  /**\n   * List all vaults on the Wallet Manager, this function not return secret's\n   */\n  getVaults(): Array<{ title?: string; type: string; vaultId: number }> {\n    return this.#vaults.map((v, idx) => ({\n      title: v.title,\n      type: v.type,\n      vaultId: idx,\n    }));\n  }\n\n  /**\n   * List all accounts on the Wallet Manager not vault information is revealed\n   */\n  getAccounts(): Array<WalletManagerAccount> {\n    // Return all WalletManagerAccounts from vaults\n    return this.#vaults.flatMap<WalletManagerAccount>((vaultState, vaultId) =>\n      vaultState.vault.getAccounts().map((account) => ({ ...account, vaultId }))\n    );\n  }\n\n  /**\n   * Create a Wallet instance for the specific account\n   */\n  getWallet(address: string | AbstractAddress): WalletUnlocked {\n    const ownerAddress = Address.fromAddressOrString(address);\n    const vaultState = this.#vaults.find((vs) =>\n      vs.vault.getAccounts().find((a) => a.address.equals(ownerAddress))\n    );\n    assert(vaultState, ERROR_MESSAGES.address_not_found);\n\n    return vaultState.vault.getWallet(ownerAddress);\n  }\n\n  /**\n   * Export specific account privateKey\n   */\n  exportPrivateKey(address: string | AbstractAddress) {\n    const ownerAddress = Address.fromAddressOrString(address);\n    assert(!this.#isLocked, ERROR_MESSAGES.wallet_not_unlocked);\n    const vaultState = this.#vaults.find((vs) =>\n      vs.vault.getAccounts().find((a) => a.address.equals(ownerAddress))\n    );\n    assert(vaultState, ERROR_MESSAGES.address_not_found);\n\n    return vaultState.vault.exportAccount(ownerAddress);\n  }\n\n  /**\n   * Add account to a selected vault or on the first vault as default.\n   * If not vaults are adds it will return error\n   */\n  async addAccount(options?: { vaultId: number }) {\n    // Make sure before add new vault state is fully loaded\n    await this.loadState();\n    // Get vault instance\n    const vaultState = this.#vaults[options?.vaultId || 0];\n    await assert(vaultState, ERROR_MESSAGES.vault_not_found);\n    // Add account on vault\n    const account = vaultState.vault.addAccount();\n    // Save the accounts state\n    await this.saveState();\n    // Return account\n    return account;\n  }\n\n  /**\n   * Remove vault by index, by remove the vault you also remove all accounts\n   * created by the vault.\n   */\n  async removeVault(index: number) {\n    this.#vaults.splice(index, 1);\n    await this.saveState();\n  }\n\n  /**\n   * Add Vault, the `vaultConfig.type` will look for the Vaults supported if\n   * didn't found it will throw.\n   */\n  async addVault(vaultConfig: VaultConfig) {\n    // Make sure before add new vault state is fully loaded\n    await this.loadState();\n    // Check if vault is supported\n    const Vault = this.getVaultClass(vaultConfig.type);\n    // create Vault instance\n    const vault = new Vault(vaultConfig);\n    // Push vaults to state\n    this.#vaults = this.#vaults.concat({\n      title: vaultConfig.title,\n      type: vaultConfig.type,\n      vault,\n    });\n    // Persist data on storage\n    await this.saveState();\n  }\n\n  /**\n   * Lock wallet. It removes passphrase from class instance, encrypt and hide all address and\n   * secrets.\n   */\n  lock() {\n    this.#isLocked = true;\n    // Clean state vaults from state\n    this.#vaults = [];\n    // Clean password from state\n    this.#passphrase = '';\n    // Emit event that wallet is locked\n    this.emit('lock');\n  }\n\n  /**\n   * Unlock wallet. It sets passphrase on WalletManger instance load all address from configured vaults.\n   * Vaults with secrets are not unlocked or instantiated on this moment.\n   */\n  async unlock(passphrase: string) {\n    // Set password on state\n    this.#passphrase = passphrase;\n    // Set locked state to false\n    this.#isLocked = false;\n    // Try to load state with passphrase\n    try {\n      // Load state with passphrase\n      await this.loadState();\n      // Emit event that wallet is unlocked\n      this.emit('unlock');\n    } catch (err) {\n      // If passphrase is wrong lock wallet\n      await this.lock();\n      // Forward error\n      throw err;\n    }\n  }\n\n  /**\n   * Update WalletManager encryption passphrase\n   */\n  async updatePassphrase(oldpass: string, newpass: string) {\n    const isLocked = this.#isLocked;\n    // Unlock wallet to decrypt data\n    await this.unlock(oldpass);\n    // Set new password on state\n    this.#passphrase = newpass;\n    // Persist data on storage\n    await this.saveState();\n    // Load state with new password\n    await this.loadState();\n    // If wallet was locked, lock the wallet again\n    if (isLocked) {\n      await this.lock();\n    }\n  }\n\n  /**\n   * Retrieve and decrypt WalletManager state from storage\n   */\n  async loadState() {\n    await assert(!this.#isLocked, ERROR_MESSAGES.wallet_not_unlocked);\n\n    const data = await this.storage.getItem(this.STORAGE_KEY);\n    if (data) {\n      const state = await decrypt<WalletManagerState>(this.#passphrase, <Keystore>JSON.parse(data));\n      this.#vaults = this.#deserializeVaults(state.vaults);\n    }\n  }\n\n  /**\n   * Store encrypted WalletManager state on storage\n   */\n  private async saveState() {\n    await assert(!this.#isLocked, ERROR_MESSAGES.wallet_not_unlocked);\n\n    const encryptedData = await encrypt(this.#passphrase, {\n      vaults: this.#serializeVaults(this.#vaults),\n    });\n    await this.storage.setItem(this.STORAGE_KEY, JSON.stringify(encryptedData));\n    this.emit('update');\n  }\n\n  /**\n   * Serialize all vaults to store\n   *\n   * `This is only accessible from inside the class`\n   */\n  #serializeVaults(vaults: VaultsState) {\n    return vaults.map(({ title, type, vault }) => ({\n      title,\n      type,\n      data: vault.serialize(),\n    }));\n  }\n\n  /**\n   * Deserialize all vaults to state\n   *\n   * `This is only accessible from inside the class`\n   */\n  #deserializeVaults(vaults: VaultsState) {\n    return vaults.map(({ title, type, data: vaultConfig }) => {\n      const VaultClass = this.getVaultClass(type);\n      return {\n        title,\n        type,\n        vault: new VaultClass(<VaultConfig>vaultConfig),\n      };\n    });\n  }\n\n  /**\n   * Return a instantiable Class reference from `WalletManager.Vaults` supported list.\n   */\n  private getVaultClass(type: string) {\n    const VaultClass = WalletManager.Vaults.find((v) => v.type === type);\n\n    assert(VaultClass, ERROR_MESSAGES.invalid_vault_type);\n\n    return VaultClass;\n  }\n}\n","import type { StorageAbstract } from '../types';\n\nexport class MemoryStorage implements StorageAbstract {\n  storage = new Map<string, unknown>();\n\n  async getItem<T>(key: string): Promise<T | null> {\n    const item = await this.storage.get(key);\n    return item as T | null;\n  }\n\n  async setItem(key: string, value: string) {\n    await this.storage.set(key, value);\n  }\n\n  async removeItem(key: string) {\n    await this.storage.delete(key);\n  }\n\n  async clear() {\n    await this.storage.clear();\n  }\n}\n","import { Address } from '@fuel-ts/address';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\n\nimport { Mnemonic } from '../../mnemonic';\nimport type { WalletUnlocked } from '../../wallet';\nimport { Wallet } from '../../wallet';\nimport type { Vault } from '../types';\n\nexport interface MnemonicVaultOptions {\n  secret?: string;\n  rootPath?: string;\n  numberOfAccounts?: number | null;\n}\n\nexport class MnemonicVault implements Vault<MnemonicVaultOptions> {\n  static readonly type = 'mnemonic';\n  readonly #secret: string;\n\n  pathKey = '{}';\n  rootPath: string = `m/44'/1179993420'/${this.pathKey}'/0/0`;\n  numberOfAccounts: number = 0;\n\n  constructor(options: MnemonicVaultOptions) {\n    this.#secret = options.secret || Mnemonic.generate();\n    this.rootPath = options.rootPath || this.rootPath;\n    // On creating the vault also adds one account\n    this.numberOfAccounts = options.numberOfAccounts || 1;\n  }\n\n  getDerivePath(index: number) {\n    if (this.rootPath.includes(this.pathKey)) {\n      return this.rootPath.replace(this.pathKey, String(index));\n    }\n    return `${this.rootPath}/${index}`;\n  }\n\n  serialize(): MnemonicVaultOptions {\n    return {\n      secret: this.#secret,\n      rootPath: this.rootPath,\n      numberOfAccounts: this.numberOfAccounts,\n    };\n  }\n\n  getAccounts() {\n    const accounts = [];\n    let numberOfAccounts = 0;\n\n    // Create all accounts to current vault\n    do {\n      const wallet = Wallet.fromMnemonic(this.#secret, this.getDerivePath(numberOfAccounts));\n      accounts.push({\n        publicKey: wallet.publicKey,\n        address: wallet.address,\n      });\n      numberOfAccounts += 1;\n    } while (numberOfAccounts < this.numberOfAccounts);\n\n    return accounts;\n  }\n\n  addAccount() {\n    this.numberOfAccounts += 1;\n    const wallet = Wallet.fromMnemonic(this.#secret, this.getDerivePath(this.numberOfAccounts - 1));\n\n    return {\n      publicKey: wallet.publicKey,\n      address: wallet.address,\n    };\n  }\n\n  exportAccount(address: string | AbstractAddress): string {\n    let numberOfAccounts = 0;\n    const ownerAddress = Address.fromAddressOrString(address);\n    // Look for the account that has the same address\n    do {\n      const wallet = Wallet.fromMnemonic(this.#secret, this.getDerivePath(numberOfAccounts));\n      if (wallet.address.equals(ownerAddress)) {\n        return wallet.privateKey;\n      }\n      numberOfAccounts += 1;\n    } while (numberOfAccounts < this.numberOfAccounts);\n\n    throw new FuelError(\n      ErrorCode.WALLET_MANAGER_ERROR,\n      `Account with address '${address}' not found in derived wallets.`\n    );\n  }\n\n  getWallet(address: string | AbstractAddress): WalletUnlocked {\n    const privateKey = this.exportAccount(address);\n    return Wallet.fromPrivateKey(privateKey);\n  }\n}\n","import { Address } from '@fuel-ts/address';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\n\nimport type { WalletUnlocked } from '../../wallet';\nimport { Wallet } from '../../wallet';\nimport type { WalletManagerAccount, Vault } from '../types';\n\nexport interface PkVaultOptions {\n  secret?: string;\n  accounts?: Array<string>;\n}\n\nexport class PrivateKeyVault implements Vault<PkVaultOptions> {\n  static readonly type = 'privateKey';\n\n  #privateKeys: Array<string> = [];\n\n  /**\n   * If privateKey vault is initialized with a secretKey, it creates\n   * one account with the fallowing secret\n   */\n  constructor(options: PkVaultOptions = {}) {\n    if (options.secret) {\n      this.#privateKeys = [options.secret];\n    } else {\n      this.#privateKeys = options.accounts || [Wallet.generate().privateKey];\n    }\n  }\n\n  serialize(): PkVaultOptions {\n    return {\n      accounts: this.#privateKeys,\n    };\n  }\n\n  getPublicAccount(privateKey: string) {\n    const wallet = Wallet.fromPrivateKey(privateKey);\n    return {\n      address: wallet.address,\n      publicKey: wallet.publicKey,\n    };\n  }\n\n  getAccounts(): WalletManagerAccount[] {\n    return this.#privateKeys.map((pk) => this.getPublicAccount(pk));\n  }\n\n  addAccount() {\n    const wallet = Wallet.generate();\n\n    this.#privateKeys.push(wallet.privateKey);\n\n    return this.getPublicAccount(wallet.privateKey);\n  }\n\n  exportAccount(address: string | AbstractAddress): string {\n    const ownerAddress = Address.fromAddressOrString(address);\n    const privateKey = this.#privateKeys.find((pk) =>\n      Wallet.fromPrivateKey(pk).address.equals(ownerAddress)\n    );\n\n    if (!privateKey) {\n      throw new FuelError(\n        ErrorCode.WALLET_MANAGER_ERROR,\n        `No private key found for address '${address}'.`\n      );\n    }\n\n    return privateKey;\n  }\n\n  getWallet(address: string | AbstractAddress): WalletUnlocked {\n    const privateKey = this.exportAccount(address);\n    return Wallet.fromPrivateKey(privateKey);\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\n\nimport type { WalletUnlocked } from '../wallet';\n\nexport type WalletManagerAccount = {\n  address: AbstractAddress;\n  publicKey: string;\n  vaultId?: number;\n};\n\nexport type WalletManagerOptions = {\n  storage: StorageAbstract;\n};\n\nexport type VaultConfig = {\n  type: string;\n  title?: string;\n  secret?: string;\n};\n\nexport type VaultsState = Array<{\n  type: string;\n  title?: string;\n  data?: VaultConfig;\n  vault: Vault;\n}>;\n\nexport interface WalletManagerState {\n  vaults: VaultsState;\n}\n\nexport abstract class Vault<TOptions = { secret?: string }> {\n  static readonly type: string;\n\n  constructor(_options: TOptions) {\n    throw new FuelError(ErrorCode.NOT_IMPLEMENTED, 'Not implemented.');\n  }\n\n  serialize(): TOptions {\n    throw new FuelError(ErrorCode.NOT_IMPLEMENTED, 'Not implemented.');\n  }\n\n  getAccounts(): WalletManagerAccount[] {\n    throw new FuelError(ErrorCode.NOT_IMPLEMENTED, 'Not implemented.');\n  }\n\n  addAccount(): WalletManagerAccount {\n    throw new FuelError(ErrorCode.NOT_IMPLEMENTED, 'Not implemented.');\n  }\n\n  exportAccount(_address: AbstractAddress): string {\n    throw new FuelError(ErrorCode.NOT_IMPLEMENTED, 'Not implemented.');\n  }\n\n  getWallet(_address: AbstractAddress): WalletUnlocked {\n    throw new FuelError(ErrorCode.NOT_IMPLEMENTED, 'Not implemented.');\n  }\n}\n\nexport abstract class StorageAbstract {\n  abstract setItem(key: string, value: string): Promise<void>;\n  abstract getItem(key: string): Promise<string | null | undefined>;\n  abstract removeItem(key: string): Promise<void>;\n  abstract clear(): Promise<void>;\n}\n","// A set of useful helper methods for testing binary Merkle trees.\nimport { hash } from '@fuel-ts/hasher';\n\nimport { EMPTY } from '../common';\n\nimport Node from './types/node';\n\n/**\n * Slice off the '0x' on each argument to simulate abi.encodePacked\n */\nexport function hashLeaf(data: string): string {\n  return hash('0x00'.concat(data.slice(2)));\n}\n\n/**\n * Slice off the '0x' on each argument to simulate abi.encodePacked\n * hash(prefix +  left + right)\n */\nexport function hashNode(left: string, right: string): string {\n  return hash('0x01'.concat(left.slice(2)).concat(right.slice(2)));\n}\n\n/**\n * Construct tree\n */\nexport function constructTree(data: string[]): Node[] {\n  const nodes = [];\n  for (let i = 0; i < data.length; i += 1) {\n    const hashed = hashLeaf(data[i]);\n    const leaf = new Node(-1, -1, -1, hashed, data[i]);\n    leaf.index = i;\n    nodes.push(leaf);\n  }\n\n  const nodesList = [...nodes];\n  let pNodes = [...nodes];\n\n  let size = (nodes.length + 1) >> 1;\n  let odd = nodes.length & 1;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let i = 0;\n    for (; i < size - odd; i += 1) {\n      const j = i << 1;\n      const hashed = hashNode(pNodes[j].hash, pNodes[j + 1].hash);\n      nodes[i] = new Node(pNodes[j].index, pNodes[j + 1].index, -1, hashed, '');\n      const nextIndex = nodesList.length;\n      nodes[i].index = nextIndex;\n\n      nodesList[pNodes[j].index].parent = nextIndex;\n      nodesList[pNodes[j + 1].index].parent = nextIndex;\n      nodesList.push(nodes[i]);\n    }\n\n    if (size === 1) {\n      break;\n    }\n\n    if (odd === 1) {\n      nodes[i] = pNodes[i << 1];\n    }\n\n    odd = size & 1;\n    size = (size + 1) >> 1;\n    pNodes = [...nodes];\n  }\n  return nodesList;\n}\n\n/**\n * Compute the merkle root\n */\nexport function calcRoot(data: string[]): string {\n  if (!data.length) {\n    return EMPTY;\n  }\n  const nodes = [];\n  for (let i = 0; i < data.length; i += 1) {\n    const hashed = hashLeaf(data[i]);\n    nodes.push(new Node(-1, -1, -1, hashed, data[i]));\n  }\n  let pNodes = nodes;\n  let size = (nodes.length + 1) >> 1;\n  let odd = nodes.length & 1;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let i = 0;\n    for (; i < size - odd; i += 1) {\n      const j = i << 1;\n      const hashed = hashNode(pNodes[j].hash, pNodes[j + 1].hash);\n      nodes[i] = new Node(pNodes[j].index, pNodes[j + 1].index, -1, hashed, '');\n    }\n    if (odd === 1) {\n      nodes[i] = pNodes[i << 1];\n    }\n    if (size === 1) {\n      break;\n    }\n    odd = size & 1;\n    size = (size + 1) >> 1;\n    pNodes = nodes;\n  }\n  return nodes[0].hash;\n}\n\n/**\n * Get proof for the leaf\n */\nexport function getProof(nodes: Node[], id: number): string[] {\n  const proof: string[] = [];\n  for (let prev = id, cur = nodes[id].parent; cur !== -1; prev = cur, cur = nodes[cur].parent) {\n    if (nodes[cur].left === prev) {\n      proof.push(nodes[nodes[cur].right].hash);\n    } else {\n      proof.push(nodes[nodes[cur].left].hash);\n    }\n  }\n  return proof;\n}\n","/// @dev The Fuel testing Merkle trees.\n/// A set of useful helper methods for testing and deploying Merkle trees.\n\nexport const EMPTY = '0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nexport const ZERO = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexport const MAX_HEIGHT = 256;\n","class Node {\n  left: number;\n  right: number;\n  parent: number;\n  hash: string;\n  data: string;\n  index: number;\n\n  constructor(\n    left: number,\n    right: number,\n    parent: number,\n    hash: string,\n    data: string,\n    index: number = 0\n  ) {\n    this.left = left;\n    this.right = right;\n    this.parent = parent;\n    this.hash = hash;\n    this.data = data;\n    this.index = index;\n  }\n}\n\nexport default Node;\n","/// @dev The Fuel testing Merkle trees.\n/// A set of useful helper methods for testing and deploying Merkle trees.\nimport { hash } from '@fuel-ts/hasher';\n\nimport { compactProof } from './proofs';\nimport { isLeaf, hashLeaf, hashNode, parseLeaf, parseNode } from './treeHasher';\nimport type SparseCompactMerkleProof from './types/sparseCompactMerkleProof';\nimport SparseMerkleProof from './types/sparseMerkleProof';\nimport type { MapStore } from './utils';\nimport { ZERO, MAX_HEIGHT, getBitAtFromMSB, reverseSideNodes, countCommonPrefix } from './utils';\n\nexport class SparseMerkleTree {\n  ms: MapStore;\n\n  root: string;\n\n  constructor() {\n    const ms: MapStore = {};\n    this.ms = ms;\n    this.root = ZERO;\n    this.ms[this.root] = ZERO;\n  }\n\n  get(key: string): string {\n    return this.ms[key];\n  }\n\n  set(key: string, value: string): void {\n    this.ms[key] = value;\n  }\n\n  setRoot(root: string): void {\n    this.root = root;\n  }\n\n  sideNodesForRoot(key: string, root: string): [string[], string, string, string] {\n    const sideNodes: string[] = [];\n\n    // If the root is a placeholder, there are no sidenodes to return.\n    // The data is nil, and the sibling is nil\n    if (root === ZERO) {\n      return [sideNodes, ZERO, '', ''];\n    }\n\n    let currentData = this.get(root);\n\n    // If the root is a leaf, there are also no sidenodes to return.\n    // The data is the leaf data, and the sibling is nil\n    if (isLeaf(currentData)) {\n      return [sideNodes, root, currentData, ''];\n    }\n\n    let leftNode;\n    let rightNode;\n    let nodeHash = '';\n    let sideNode = '';\n\n    for (let i = 0; i < MAX_HEIGHT; i += 1) {\n      [leftNode, rightNode] = parseNode(currentData);\n\n      if (getBitAtFromMSB(key, i) === 1) {\n        sideNode = leftNode;\n        nodeHash = rightNode;\n      } else {\n        sideNode = rightNode;\n        nodeHash = leftNode;\n      }\n\n      sideNodes.push(sideNode);\n\n      // If the node is a placeholder, we've reached the end.\n      if (nodeHash === ZERO) {\n        currentData = '';\n        break;\n      }\n\n      currentData = this.get(nodeHash);\n\n      // If the node is a leaf, we've reached the end.\n      if (isLeaf(currentData)) {\n        break;\n      }\n    }\n\n    const siblingData = this.get(sideNode);\n\n    return [reverseSideNodes(sideNodes), nodeHash, currentData, siblingData];\n  }\n\n  deleteWithSideNodes(\n    key: string,\n    sideNodes: string[],\n    oldLeafHash: string,\n    oldLeafData: string\n  ): string {\n    // If value already zero, deletion changes nothing. Just return current root\n\n    if (oldLeafHash === ZERO) {\n      return this.root;\n    }\n\n    // If key is already empty (different key found in its place), deletion changed nothing. Just return current root\n    const [actualPath] = parseLeaf(oldLeafData);\n\n    if (actualPath !== key) {\n      return this.root;\n    }\n\n    let currentHash = '';\n    let currentData = '';\n    let sideNode = '';\n    let sideNodeValue = '';\n    let nonPlaceholderReached = false;\n\n    for (let i = 0; i < sideNodes.length; i += 1) {\n      if (sideNodes[i] === '') {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      sideNode = sideNodes[i];\n\n      if (currentData === '') {\n        sideNodeValue = this.get(sideNode);\n\n        if (isLeaf(sideNodeValue)) {\n          // This is the leaf sibling that needs to be percolated up the tree.\n          currentHash = sideNode;\n          currentData = sideNode;\n          // eslint-disable-next-line no-continue\n          continue;\n        } else {\n          // This is the node sibling that needs to be left in its place.\n          currentData = ZERO;\n          nonPlaceholderReached = true;\n        }\n      }\n\n      if (!nonPlaceholderReached && sideNode === ZERO) {\n        // We found another placeholder sibling node, keep going up the\n        // tree until we find the first sibling that is not a placeholder.\n        // eslint-disable-next-line no-continue\n        continue;\n      } else if (!nonPlaceholderReached) {\n        // We found the first sibling node that is not a placeholder, it is\n        // time to insert our leaf sibling node here.\n        nonPlaceholderReached = true;\n      }\n\n      if (getBitAtFromMSB(key, sideNodes.length - 1 - i) === 1) {\n        [currentHash, currentData] = hashNode(sideNode, currentData);\n      } else {\n        [currentHash, currentData] = hashNode(currentData, sideNode);\n      }\n      this.set(currentHash, currentData);\n      currentData = currentHash;\n    }\n\n    // The tree is empty; return placeholder value as root.\n    // How can currentHash be '' / nil if it's a hash ?\n    if (currentHash === '') {\n      currentHash = ZERO;\n    }\n\n    return currentHash;\n  }\n\n  updateWithSideNodes(\n    key: string,\n    value: string,\n    sideNodes: string[],\n    oldLeafHash: string,\n    oldLeafData: string\n  ): string {\n    let currentHash;\n    let currentData;\n\n    this.set(hash(value), value);\n\n    [currentHash, currentData] = hashLeaf(key, value);\n    this.set(currentHash, currentData);\n\n    currentData = currentHash;\n\n    // If the leaf node that sibling nodes lead to has a different actual path\n    // than the leaf node being updated, we need to create an intermediate node\n    // with this leaf node and the new leaf node as children.\n    //\n    // First, get the number of bits that the paths of the two leaf nodes share\n    // in common as a prefix.\n\n    let commonPrefixCount;\n\n    if (oldLeafHash === ZERO) {\n      commonPrefixCount = MAX_HEIGHT;\n    } else {\n      const [actualPath] = parseLeaf(oldLeafData);\n      commonPrefixCount = countCommonPrefix(key, actualPath);\n    }\n\n    if (commonPrefixCount !== MAX_HEIGHT) {\n      if (getBitAtFromMSB(key, commonPrefixCount) === 1) {\n        [currentHash, currentData] = hashNode(oldLeafHash, currentData);\n      } else {\n        [currentHash, currentData] = hashNode(currentData, oldLeafHash);\n      }\n      this.set(currentHash, currentData);\n      currentData = currentHash;\n    }\n\n    for (let i = 0; i < MAX_HEIGHT; i += 1) {\n      let sideNode;\n      const offsetOfSideNodes = MAX_HEIGHT - sideNodes.length;\n\n      // If there are no sidenodes at this height, but the number of\n      // bits that the paths of the two leaf nodes share in common is\n      // greater than this height, then we need to build up the tree\n      // to this height with placeholder values at siblings.\n\n      if (i - offsetOfSideNodes < 0 || sideNodes[i - offsetOfSideNodes] === '') {\n        if (commonPrefixCount !== MAX_HEIGHT && commonPrefixCount > MAX_HEIGHT - 1 - i) {\n          sideNode = ZERO;\n        } else {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n      } else {\n        sideNode = sideNodes[i - offsetOfSideNodes];\n      }\n\n      if (getBitAtFromMSB(key, MAX_HEIGHT - 1 - i) === 1) {\n        [currentHash, currentData] = hashNode(sideNode, currentData);\n      } else {\n        [currentHash, currentData] = hashNode(currentData, sideNode);\n      }\n\n      this.set(currentHash, currentData);\n      currentData = currentHash;\n    }\n\n    return currentHash;\n  }\n\n  update(key: string, value: string): void {\n    const [sideNodes, oldLeafHash, oldLeafData] = this.sideNodesForRoot(key, this.root);\n    const newRoot = this.updateWithSideNodes(key, value, sideNodes, oldLeafHash, oldLeafData);\n    this.setRoot(newRoot);\n  }\n\n  delete(key: string): void {\n    const [sideNodes, oldLeafHash, oldLeafData] = this.sideNodesForRoot(key, this.root);\n    const newRoot = this.deleteWithSideNodes(key, sideNodes, oldLeafHash, oldLeafData);\n    this.setRoot(newRoot);\n  }\n\n  prove(key: string): SparseMerkleProof {\n    const [sideNodes, leafHash, leafData, siblingData] = this.sideNodesForRoot(key, this.root);\n\n    const nonEmptySideNodes: string[] = [];\n\n    for (let i = 0; i < sideNodes.length; i += 1) {\n      if (sideNodes[i] !== '') {\n        nonEmptySideNodes.push(sideNodes[i]);\n      }\n    }\n\n    // Deal with non-membership proofs. If the leaf hash is the placeholder\n    // value, we do not need to add anything else to the proof.\n    let nonMembershipLeafData = '';\n    if (leafHash !== ZERO) {\n      const [actualPath] = parseLeaf(leafData);\n      if (actualPath !== key) {\n        // This is a non-membership proof that involves showing a different leaf.\n        // Add the leaf data to the proof.\n        nonMembershipLeafData = leafData;\n      }\n    }\n\n    const proof = new SparseMerkleProof(nonEmptySideNodes, nonMembershipLeafData, siblingData);\n    return proof;\n  }\n\n  proveCompacted(key: string): SparseCompactMerkleProof {\n    const proof = this.prove(key);\n    const compactedProof = compactProof(proof);\n    return compactedProof;\n  }\n}\n","import { hash } from '@fuel-ts/hasher';\n\nimport { hashLeaf, hashNode, parseLeaf } from './treeHasher';\nimport SparseCompactMerkleProof from './types/sparseCompactMerkleProof';\nimport SparseMerkleProof from './types/sparseMerkleProof';\nimport { getBitAtFromMSB, ZERO } from './utils';\n\n/**\n * Verify a merkle proof\n */\nexport function verifyProof(\n  proof: SparseMerkleProof,\n  root: string,\n  key: string,\n  value: string\n): [boolean, string[][]] {\n  const updates: string[][] = [[]];\n\n  // Detemine what the leaf hash should be\n  let currentHash;\n  let currentData;\n  let actualPath;\n  let valueHash;\n\n  if (value === ZERO) {\n    // Non-membership proof\n    if (proof.NonMembershipLeafData === '') {\n      currentHash = ZERO;\n    } else {\n      // leaf is an unrelated leaf\n      [actualPath, valueHash] = parseLeaf(proof.NonMembershipLeafData);\n      if (actualPath === key) {\n        // Leaf does exist : non-membership proof failed\n        return [false, []];\n      }\n      [currentHash, currentData] = hashLeaf(actualPath, valueHash);\n      updates.push([currentHash, currentData]);\n    }\n  } else {\n    // Membership proof\n    valueHash = hash(value);\n    updates.push([valueHash, value]);\n\n    [currentHash, currentData] = hashLeaf(key, value);\n    updates.push([currentHash, currentData]);\n  }\n\n  // Recompute root\n  for (let i = 0; i < proof.SideNodes.length; i += 1) {\n    const node = proof.SideNodes[i];\n\n    if (getBitAtFromMSB(key, proof.SideNodes.length - 1 - i) === 1) {\n      [currentHash, currentData] = hashNode(node, currentHash);\n    } else {\n      [currentHash, currentData] = hashNode(currentHash, node);\n    }\n\n    updates.push([currentHash, currentData]);\n  }\n\n  return [currentHash === root, updates];\n}\n\n/**\n * Compact a Sparse Merkle Proof using a bitmask\n */\nexport function compactProof(proof: SparseMerkleProof): SparseCompactMerkleProof {\n  const bitMask: number[] = [];\n  const compactedSideNodes: string[] = [];\n  let node;\n\n  for (let i = 0; i < proof.SideNodes.length; i += 1) {\n    node = proof.SideNodes[i];\n    if (node === ZERO) {\n      bitMask.push(0);\n    } else {\n      compactedSideNodes.push(node);\n      bitMask.push(1);\n    }\n  }\n  const compactedProof = new SparseCompactMerkleProof(\n    compactedSideNodes,\n    proof.NonMembershipLeafData,\n    bitMask,\n    proof.SideNodes.length,\n    proof.SiblingData\n  );\n  return compactedProof;\n}\n\n/**\n * Decompact a Sparse Merkle Proof\n */\nexport function decompactProof(proof: SparseCompactMerkleProof): SparseMerkleProof {\n  const decompactedSideNodes: string[] = [];\n  let position = 0;\n\n  for (let i = 0; i < proof.NumSideNodes; i += 1) {\n    if (proof.BitMask[i] === 0) {\n      decompactedSideNodes[i] = ZERO;\n    } else {\n      decompactedSideNodes[i] = proof.SideNodes[position];\n      position += 1;\n    }\n  }\n  const decompactedProof = new SparseMerkleProof(\n    decompactedSideNodes,\n    proof.NonMembershipLeafData,\n    proof.SiblingData\n  );\n\n  return decompactedProof;\n}\n","import { hash } from '@fuel-ts/hasher';\n\nexport const leafPrefix = '0x00';\nexport const nodePrefix = '0x01';\n\n/**\n * Slice off the '0x' on each argument to simulate abi.encode\n * prefix + key + hash(data)\n */\nexport function hashLeaf(key: string, data: string): [string, string] {\n  const value = '0x00'.concat(key.slice(2)).concat(hash(data).slice(2));\n  return [hash(value), value];\n}\n\n/**\n * Slice off the '0x' on each argument to simulate abi.encodePacked\n * prefix + key + hash(data)\n */\nexport function hashNode(left: string, right: string): [string, string] {\n  const value = '0x01'.concat(left.slice(2)).concat(right.slice(2));\n  return [hash(value), value];\n}\n\n/**\n * Parse a leaf\n */\nexport function parseLeaf(data: string): [string, string] {\n  const len = nodePrefix.length;\n  return ['0x'.concat(data.slice(len, len + 64)), '0x'.concat(data.slice(len + 64))];\n}\n\n/**\n * Parse a nodes\n */\nexport function parseNode(data: string): [string, string] {\n  const len = nodePrefix.length;\n  return ['0x'.concat(data.slice(len, len + 64)), '0x'.concat(data.slice(len + 64))];\n}\n\n/**\n * Check if data is a leaf by checking prefix\n */\nexport function isLeaf(data: string): boolean {\n  return data.slice(0, 4) === leafPrefix;\n}\n","class SparseCompactMerkleProof {\n  SideNodes: string[];\n  NonMembershipLeafData: string;\n  BitMask: number[];\n  NumSideNodes: number;\n  SiblingData: string;\n\n  constructor(\n    SideNodes: string[],\n    NonMembershipLeafData: string,\n    Bitmask: number[],\n    NumSideNodes: number,\n    SiblingData: string\n  ) {\n    this.SideNodes = SideNodes;\n    this.NonMembershipLeafData = NonMembershipLeafData;\n    this.BitMask = Bitmask;\n    this.NumSideNodes = NumSideNodes;\n    this.SiblingData = SiblingData;\n  }\n}\n\nexport default SparseCompactMerkleProof;\n","// Sparse Merkle proof\nclass SparseMerkleProof {\n  SideNodes: string[];\n  NonMembershipLeafData: string;\n  SiblingData: string;\n\n  constructor(sideNodes: string[], NonMembershipLeafData: string, SiblingData: string) {\n    this.SideNodes = sideNodes;\n    this.NonMembershipLeafData = NonMembershipLeafData;\n    this.SiblingData = SiblingData;\n  }\n}\n\nexport default SparseMerkleProof;\n","export const ZERO = '0x0000000000000000000000000000000000000000000000000000000000000000';\nexport const EMPTY = '0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nexport const MAX_HEIGHT = 256;\n\nexport interface MapStore {\n  [key: string]: string;\n}\n\n/**\n * Gets the bit at an offset from the most significant bit\n */\nexport function getBitAtFromMSB(data: string, position: number): number {\n  // if int(data[position / 8]) & (1 << (8 - 1 - uint(position) % 8)) > 0\n\n  // Slice off '0x'\n  const slicedData = data.slice(2);\n  // Get byte that contains the specified position\n  const byte = '0x'.concat(\n    slicedData.slice(Math.floor(position / 8) * 2, Math.floor(position / 8) * 2 + 2)\n  );\n  // Get bits from specified position within that byte\n  const bits = Number(byte) & (1 << (8 - 1 - (position % 8)));\n\n  // Bit at position = 0 IFF bits > 0.\n  if (bits > 0) {\n    return 1;\n  }\n  return 0;\n}\n/**\n * Reverse the nodes position\n */\nexport function reverseSideNodes(sideNodes: string[]): string[] {\n  let left = 0;\n  let right = sideNodes.length - 1;\n  const reversedSideNodes: string[] = sideNodes;\n\n  while (left < right) {\n    [reversedSideNodes[left], reversedSideNodes[right]] = [\n      reversedSideNodes[right],\n      reversedSideNodes[left],\n    ];\n    left += 1;\n    right -= 1;\n  }\n\n  return reversedSideNodes;\n}\n\n/**\n * Counts the common bit at at an offset from the most significant bit\n * between two inputs\n */\nexport function countCommonPrefix(data1: string, data2: string): number {\n  let count = 0;\n  for (let i = 0; i < MAX_HEIGHT; i += 1) {\n    if (getBitAtFromMSB(data1, i) === getBitAtFromMSB(data2, i)) {\n      count += 1;\n    } else {\n      break;\n    }\n  }\n  return count;\n}\n","import { hash } from '@fuel-ts/hasher';\nimport type { BytesLike } from '@fuel-ts/interfaces';\nimport { calcRoot } from '@fuel-ts/merkle';\nimport { chunkAndPadBytes, hexlify, concat, arrayify } from '@fuel-ts/utils';\n\n/**\n * @hidden\n *\n * Calculates the predicate root for a given bytecode and chain ID.\n *\n * @param bytecode - The bytecode represented as a BytesLike object.\n * @param chainId - The ID of the chain associated with the bytecode.\n * @returns The predicate root as a string.\n */\nexport const getPredicateRoot = (bytecode: BytesLike): string => {\n  const chunkSize = 16 * 1024;\n  const bytes = arrayify(bytecode);\n  const chunks = chunkAndPadBytes(bytes, chunkSize);\n  const codeRoot = calcRoot(chunks.map((c) => hexlify(c)));\n\n  const predicateRoot = hash(concat(['0x4655454C', codeRoot]));\n  return predicateRoot;\n};\n","import type { JsonAbi, InputValue } from '@fuel-ts/abi-coder';\nimport {\n  Interface,\n  INPUT_COIN_FIXED_SIZE,\n  WORD_SIZE,\n  calculateVmTxMemory,\n  SCRIPT_FIXED_SIZE,\n} from '@fuel-ts/abi-coder';\nimport { Address } from '@fuel-ts/address';\nimport { BaseAssetId } from '@fuel-ts/address/configs';\nimport { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress, BytesLike } from '@fuel-ts/interfaces';\nimport type { BigNumberish } from '@fuel-ts/math';\nimport { ByteArrayCoder, InputType } from '@fuel-ts/transactions';\nimport { arrayify, hexlify } from '@fuel-ts/utils';\n\nimport { Account } from '../account';\nimport type { TxParamsType } from '../account';\nimport { transactionRequestify, BaseTransactionRequest } from '../providers';\nimport type {\n  CallResult,\n  Provider,\n  ProviderSendTxParams,\n  TransactionRequest,\n  TransactionRequestLike,\n  TransactionResponse,\n} from '../providers';\n\nimport { getPredicateRoot } from './utils';\n\nexport type PredicateParams<T = InputValue[]> = {\n  bytecode: BytesLike;\n  provider: Provider;\n  abi?: JsonAbi;\n  inputData?: T;\n  configurableConstants?: { [name: string]: unknown };\n};\n\n/**\n * `Predicate` provides methods to populate transaction data with predicate information and sending transactions with them.\n */\nexport class Predicate<TInputData extends InputValue[]> extends Account {\n  bytes: Uint8Array;\n  predicateDataBytes: Uint8Array = Uint8Array.from([]);\n  predicateData: TInputData = [] as unknown as TInputData;\n  interface?: Interface;\n\n  /**\n   * Creates an instance of the Predicate class.\n   *\n   * @param bytecode - The bytecode of the predicate.\n   * @param abi - The JSON ABI of the predicate.\n   * @param provider - The provider used to interact with the blockchain.\n   * @param inputData - The predicate input data (optional).\n   * @param configurableConstants - Optional configurable constants for the predicate.\n   */\n  constructor({\n    bytecode,\n    abi,\n    provider,\n    inputData,\n    configurableConstants,\n  }: PredicateParams<TInputData>) {\n    const { predicateBytes, predicateInterface } = Predicate.processPredicateData(\n      bytecode,\n      abi,\n      configurableConstants\n    );\n    const address = Address.fromB256(getPredicateRoot(predicateBytes));\n    super(address, provider);\n\n    this.bytes = predicateBytes;\n    this.interface = predicateInterface;\n    if (inputData !== undefined && inputData.length > 0) {\n      this.predicateData = inputData;\n    }\n  }\n\n  /**\n   * Populates the transaction data with predicate data.\n   *\n   * @param transactionRequestLike - The transaction request-like object.\n   * @returns The transaction request with predicate data.\n   */\n  populateTransactionPredicateData(transactionRequestLike: TransactionRequestLike) {\n    const request = transactionRequestify(transactionRequestLike);\n\n    const { policies } = BaseTransactionRequest.getPolicyMeta(request);\n\n    request.inputs?.forEach((input) => {\n      if (input.type === InputType.Coin && hexlify(input.owner) === this.address.toB256()) {\n        // eslint-disable-next-line no-param-reassign\n        input.predicate = this.bytes;\n        // eslint-disable-next-line no-param-reassign\n        input.predicateData = this.getPredicateData(policies.length);\n      }\n    });\n\n    return request;\n  }\n\n  /**\n   * A helper that creates a transfer transaction request and returns it.\n   *\n   * @param destination - The address of the destination.\n   * @param amount - The amount of coins to transfer.\n   * @param assetId - The asset ID of the coins to transfer.\n   * @param txParams - The transaction parameters (gasLimit, gasPrice, maturity).\n   * @returns A promise that resolves to the prepared transaction request.\n   */\n  async createTransfer(\n    /** Address of the destination */\n    destination: AbstractAddress,\n    /** Amount of coins */\n    amount: BigNumberish,\n    /** Asset ID of coins */\n    assetId: BytesLike = BaseAssetId,\n    /** Tx Params */\n    txParams: TxParamsType = {}\n  ): Promise<TransactionRequest> {\n    const request = await super.createTransfer(destination, amount, assetId, txParams);\n    return this.populateTransactionPredicateData(request);\n  }\n\n  /**\n   * Sends a transaction with the populated predicate data.\n   *\n   * @param transactionRequestLike - The transaction request-like object.\n   * @returns A promise that resolves to the transaction response.\n   */\n  sendTransaction(\n    transactionRequestLike: TransactionRequestLike,\n    options?: Pick<ProviderSendTxParams, 'awaitExecution'>\n  ): Promise<TransactionResponse> {\n    const transactionRequest = this.populateTransactionPredicateData(transactionRequestLike);\n    return super.sendTransaction(transactionRequest, options);\n  }\n\n  /**\n   * Simulates a transaction with the populated predicate data.\n   *\n   * @param transactionRequestLike - The transaction request-like object.\n   * @returns A promise that resolves to the call result.\n   */\n  simulateTransaction(transactionRequestLike: TransactionRequestLike): Promise<CallResult> {\n    const transactionRequest = this.populateTransactionPredicateData(transactionRequestLike);\n    return super.simulateTransaction(transactionRequest);\n  }\n\n  private getPredicateData(policiesLength: number): Uint8Array {\n    if (!this.predicateData.length) {\n      return new Uint8Array();\n    }\n\n    const mainFn = this.interface?.functions.main;\n    const paddedCode = new ByteArrayCoder(this.bytes.length).encode(this.bytes);\n\n    const VM_TX_MEMORY = calculateVmTxMemory({\n      maxInputs: this.provider.getChain().consensusParameters.maxInputs.toNumber(),\n    });\n    const OFFSET =\n      VM_TX_MEMORY +\n      SCRIPT_FIXED_SIZE +\n      INPUT_COIN_FIXED_SIZE +\n      WORD_SIZE +\n      paddedCode.byteLength +\n      policiesLength * WORD_SIZE;\n\n    return mainFn?.encodeArguments(this.predicateData, OFFSET) || new Uint8Array();\n  }\n\n  /**\n   * Processes the predicate data and returns the altered bytecode and interface.\n   *\n   * @param bytes - The bytes of the predicate.\n   * @param jsonAbi - The JSON ABI of the predicate.\n   * @param configurableConstants - Optional configurable constants for the predicate.\n   * @returns An object containing the new predicate bytes and interface.\n   */\n  private static processPredicateData(\n    bytes: BytesLike,\n    jsonAbi?: JsonAbi,\n    configurableConstants?: { [name: string]: unknown }\n  ) {\n    let predicateBytes = arrayify(bytes);\n    let abiInterface: Interface | undefined;\n\n    if (jsonAbi) {\n      abiInterface = new Interface(jsonAbi);\n      if (abiInterface.functions.main === undefined) {\n        throw new FuelError(\n          ErrorCode.ABI_MAIN_METHOD_MISSING,\n          'Cannot use ABI without \"main\" function.'\n        );\n      }\n    }\n\n    if (configurableConstants && Object.keys(configurableConstants).length) {\n      predicateBytes = Predicate.setConfigurableConstants(\n        predicateBytes,\n        configurableConstants,\n        abiInterface\n      );\n    }\n\n    return {\n      predicateBytes,\n      predicateInterface: abiInterface,\n    };\n  }\n\n  /**\n   * Sets the configurable constants for the predicate.\n   *\n   * @param bytes - The bytes of the predicate.\n   * @param configurableConstants - Configurable constants to be set.\n   * @param abiInterface - The ABI interface of the predicate.\n   * @returns The mutated bytes with the configurable constants set.\n   */\n  private static setConfigurableConstants(\n    bytes: Uint8Array,\n    configurableConstants: { [name: string]: unknown },\n    abiInterface?: Interface\n  ) {\n    const mutatedBytes = bytes;\n\n    try {\n      if (!abiInterface) {\n        throw new Error(\n          'Cannot validate configurable constants because the Predicate was instantiated without a JSON ABI'\n        );\n      }\n\n      if (Object.keys(abiInterface.configurables).length === 0) {\n        throw new Error('Predicate has no configurable constants to be set');\n      }\n\n      Object.entries(configurableConstants).forEach(([key, value]) => {\n        if (!abiInterface?.configurables[key]) {\n          throw new Error(`No configurable constant named '${key}' found in the Predicate`);\n        }\n\n        const { offset } = abiInterface.configurables[key];\n\n        const encoded = abiInterface.encodeConfigurable(key, value as InputValue);\n\n        mutatedBytes.set(encoded, offset);\n      });\n    } catch (err) {\n      throw new FuelError(\n        ErrorCode.INVALID_CONFIGURABLE_CONSTANTS,\n        `Error setting configurable constants: ${(<Error>err).message}.`\n      );\n    }\n\n    return mutatedBytes;\n  }\n}\n","/* eslint-disable @typescript-eslint/require-await */\nimport { EventEmitter } from 'events';\n\nimport type { TransactionRequestLike } from '../providers';\nimport type { Asset } from '../providers/assets/types';\n\nimport { FuelConnectorEventTypes } from './types';\nimport type {\n  FuelConnectorEvents,\n  ConnectorMetadata,\n  FuelABI,\n  Network,\n  FuelEventArg,\n  Version,\n} from './types';\n\n/**\n * @name FuelConnector\n *\n * Wallet Connector is a interface that represents a Wallet Connector and all the methods\n * that should be implemented to be compatible with the Fuel SDK.\n */\nexport abstract class FuelConnector extends EventEmitter {\n  name: string = '';\n  metadata: ConnectorMetadata = {} as ConnectorMetadata;\n  connected: boolean = false;\n  installed: boolean = false;\n  events = FuelConnectorEventTypes;\n\n  /**\n   * Should return true if the connector is loaded\n   * in less then one second.\n   *\n   * @returns Always true.\n   */\n  async ping(): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return the current version of the connector\n   * and the network version that is compatible.\n   *\n   * @returns boolean - connection status.\n   */\n  async version(): Promise<Version> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return true if the connector is connected\n   * to any of the accounts available.\n   *\n   * @returns The connection status.\n   */\n  async isConnected(): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return all the accounts authorized for the\n   * current connection.\n   *\n   * @returns The accounts addresses strings\n   */\n  async accounts(): Promise<Array<string>> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should start the connection process and return\n   * true if the account authorize the connection.\n   *\n   * and return false if the user reject the connection.\n   *\n   * @emits accounts\n   * @returns boolean - connection status.\n   */\n  async connect(): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should disconnect the current connection and\n   * return false if the disconnection was successful.\n   *\n   * @emits assets connection\n   * @returns The connection status.\n   */\n  async disconnect(): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should start the sign message process and return\n   * the signed message.\n   *\n   * @param address - The address to sign the message\n   * @param message - The message to sign all text will be treated as text utf-8\n   *\n   * @returns Message signature\n   */\n  async signMessage(_address: string, _message: string): Promise<string> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should start the sign transaction process and return\n   * the signed transaction.\n   *\n   * @param address - The address to sign the transaction\n   * @param transaction - The transaction to sign\n   *\n   * @returns Transaction signature\n   */\n  async signTransaction(_address: string, _transaction: TransactionRequestLike): Promise<string> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should start the send transaction process and return\n   * the transaction id submitted to the network.\n   *\n   * If the network is not available for the connection\n   * it should throw an error to avoid the transaction\n   * to be sent to the wrong network and lost.\n   *\n   * @param address - The address to sign the transaction\n   * @param transaction - The transaction to send\n   *\n   * @returns The transaction id\n   */\n  async sendTransaction(_address: string, _transaction: TransactionRequestLike): Promise<string> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return the current account selected inside the connector, if the account\n   * is authorized for the connection.\n   *\n   * If the account is not authorized it should return null.\n   *\n   * @returns The current account selected otherwise null.\n   */\n  async currentAccount(): Promise<string | null> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should add the the assets metadata to the connector and return true if the asset\n   * was added successfully.\n   *\n   * If the asset already exists it should throw an error.\n   *\n   * @emits assets\n   * @param assets - The assets to add the metadata to the connection.\n   * @throws Error if the asset already exists\n   * @returns True if the asset was added successfully\n   */\n  async addAssets(_assets: Array<Asset>): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should add the the asset metadata to the connector and return true if the asset\n   * was added successfully.\n   *\n   * If the asset already exists it should throw an error.\n   *\n   * @emits assets\n   * @param asset - The asset to add the metadata to the connection.\n   * @throws Error if the asset already exists\n   * @returns True if the asset was added successfully\n   */\n  async addAsset(_asset: Asset): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return all the assets added to the connector. If a connection is already established.\n   *\n   * @returns Array of assets metadata from the connector vinculated to the all accounts from a specific Wallet.\n   */\n  async assets(): Promise<Array<Asset>> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should start the add network process and return true if the network was added successfully.\n   *\n   * @emits networks\n   * @throws Error if the network already exists\n   * @param networkUrl - The URL of the network to be added.\n   * @returns Return true if the network was added successfully\n   */\n  async addNetwork(_networkUrl: string): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should start the select network process and return true if the network has change successfully.\n   *\n   * @emits networks\n   * @throws Error if the network already exists\n   * @param network - The network to be selected.\n   * @returns Return true if the network was added successfully\n   */\n  async selectNetwork(_network: Network): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return all the networks available from the connector. If the connection is already established.\n   *\n   * @returns Return all the networks added to the connector.\n   */\n  async networks(): Promise<Array<Network>> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return the current network selected inside the connector. Even if the connection is not established.\n   *\n   * @returns Return the current network selected inside the connector.\n   */\n  async currentNetwork(): Promise<Network> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should add the ABI to the connector and return true if the ABI was added successfully.\n   *\n   * @param contractId - The contract id to add the ABI.\n   * @param abi - The JSON ABI that represents a contract.\n   * @returns Return true if the ABI was added successfully.\n   */\n  async addABI(_contractId: string, _abi: FuelABI): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return the ABI from the connector vinculated to the all accounts from a specific Wallet.\n   *\n   * @param id - The contract id to get the ABI.\n   * @returns The ABI if it exists, otherwise return null.\n   */\n  async getABI(_id: string): Promise<FuelABI | null> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Should return true if the abi exists in the connector vinculated to the all accounts from a specific Wallet.\n   *\n   * @param id - The contract id to get the abi\n   * @returns Returns true if the abi exists or false if not.\n   */\n  async hasABI(_id: string): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Event listener for the connector.\n   *\n   * @param eventName - The event name to listen\n   * @param listener - The listener function\n   */\n  on<E extends FuelConnectorEvents['type'], D extends FuelEventArg<E>>(\n    eventName: E,\n    listener: (data: D) => void\n  ): this {\n    super.on(eventName, listener);\n    return this;\n  }\n}\n","export enum FuelConnectorMethods {\n  // General methods\n  ping = 'ping',\n  version = 'version',\n  // Connection methods\n  connect = 'connect',\n  disconnect = 'disconnect',\n  isConnected = 'isConnected',\n  // Account methods\n  accounts = 'accounts',\n  currentAccount = 'currentAccount',\n  // Signature methods\n  signMessage = 'signMessage',\n  sendTransaction = 'sendTransaction',\n  // Assets metadata methods\n  assets = 'assets',\n  addAsset = 'addAsset',\n  addAssets = 'addAssets',\n  // Network methods\n  networks = 'networks',\n  currentNetwork = 'currentNetwork',\n  addNetwork = 'addNetwork',\n  selectNetwork = 'selectNetwork',\n  // ABI methods\n  addABI = 'addABI',\n  getABI = 'getABI',\n  hasABI = 'hasABI',\n}\n\nexport enum FuelConnectorEventTypes {\n  connectors = 'connectors',\n  currentConnector = 'currentConnector',\n  connection = 'connection',\n  accounts = 'accounts',\n  currentAccount = 'currentAccount',\n  networks = 'networks',\n  currentNetwork = 'currentNetwork',\n  assets = 'assets',\n  abis = 'abis',\n}\n\nexport const FuelConnectorEventType = 'FuelConnector';\n","/* eslint-disable @typescript-eslint/require-await */\nimport type { StorageAbstract } from '../../wallet-manager';\n\nexport class LocalStorage implements StorageAbstract {\n  private storage: Storage;\n\n  constructor(localStorage: Storage) {\n    this.storage = localStorage;\n  }\n\n  async setItem(key: string, value: string): Promise<void> {\n    this.storage.setItem(key, value);\n  }\n\n  async getItem(key: string): Promise<string | null | undefined> {\n    return this.storage.getItem(key);\n  }\n\n  async removeItem(key: string): Promise<void> {\n    this.storage.removeItem(key);\n  }\n\n  async clear(): Promise<void> {\n    this.storage.clear();\n  }\n}\n","/* eslint-disable no-param-reassign */\n\nexport type CacheFor = {\n  [key: string]: {\n    timeout: number;\n    value: unknown;\n  } | null;\n};\n\ntype CacheForOptions = {\n  key: string;\n  cache: CacheFor;\n  cacheTime: number;\n};\n\nexport function cacheFor<F extends (...args: unknown[]) => Promise<unknown>>(\n  fn: F,\n  { cache, cacheTime, key }: CacheForOptions\n): F {\n  return (async (...args: unknown[]) => {\n    if (cache[key] && cache[key]?.value) {\n      return cache[key]?.value as ReturnType<F>;\n    }\n    clearTimeout(cache[key]?.timeout);\n    const result = await fn(...args);\n\n    // Create cache auto clean\n\n    cache[key] = {\n      timeout: Number(\n        setTimeout(() => {\n          cache[key] = null;\n        }, cacheTime)\n      ),\n      value: result,\n    };\n\n    return result;\n  }) as F;\n}\n","import type { FuelConnector } from '../fuel-connector';\nimport { FuelConnectorEventType } from '../types';\n\n/**\n * Fuel Connector Event is a custom event that can be used by the connector to\n * inform the Fuel Connector Manager that a new connector is available.\n */\nexport function dispatchFuelConnectorEvent(connector: FuelConnector) {\n  window.dispatchEvent(\n    new CustomEvent(FuelConnectorEventType, {\n      detail: connector,\n    })\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type DeferPromise<R = unknown> = {\n  promise: Promise<R>;\n  resolve: (value: R) => void;\n  reject: (error: unknown) => void;\n};\n\nexport function deferPromise<R = unknown>() {\n  const defer: DeferPromise<R> = {} as any;\n\n  defer.promise = new Promise((resolve, reject) => {\n    defer.reject = reject;\n    defer.resolve = resolve;\n  });\n\n  return defer;\n}\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport async function withTimeout<F extends Promise<unknown>, RT = Awaited<F>>(\n  promise: F,\n  timeout: number = 1050\n): Promise<RT> {\n  const timeoutPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new Error('Promise timed out'));\n    }, timeout);\n  });\n  return Promise.race([timeoutPromise, promise]) as any;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\n\nimport { Account } from '../account';\nimport { Provider } from '../providers';\nimport type { StorageAbstract } from '../wallet-manager';\n\nimport { FuelConnector } from './fuel-connector';\nimport {\n  FuelConnectorMethods,\n  FuelConnectorEventTypes,\n  FuelConnectorEventType,\n  LocalStorage,\n} from './types';\nimport type { Network, FuelConnectorEventsType, TargetObject } from './types';\nimport type { CacheFor } from './utils';\nimport { cacheFor, deferPromise, withTimeout } from './utils';\n\n// This is the time to wait for the connector\n// to be available before returning false for hasConnector.\nconst HAS_CONNECTOR_TIMEOUT = 2_000;\n// The time to cache the ping result, as is not\n// expected to change the availability of the connector to\n// change too often we can safely cache the result for 5 seconds\n// at minimum.\nconst PING_CACHE_TIME = 5_000;\n\nconst { warn } = console;\n\nexport type FuelConfig = {\n  connectors?: Array<FuelConnector>;\n  storage?: StorageAbstract | null;\n  targetObject?: TargetObject;\n};\n\nexport type FuelConnectorSelectOptions = {\n  emitEvents?: boolean;\n};\n\nexport type Status = {\n  installed: boolean;\n  connected: boolean;\n};\n\nexport class Fuel extends FuelConnector {\n  static STORAGE_KEY = 'fuel-current-connector';\n  static defaultConfig: FuelConfig = {};\n  private _storage?: StorageAbstract | null = null;\n  private _connectors: Array<FuelConnector> = [];\n  private _targetObject: TargetObject | null = null;\n  private _unsubscribes: Array<() => void> = [];\n  private _targetUnsubscribe: () => void;\n  private _pingCache: CacheFor = {};\n  private _currentConnector?: FuelConnector | null;\n\n  constructor(config: FuelConfig = Fuel.defaultConfig) {\n    super();\n    // Increase the limit of listeners\n    this.setMaxListeners(1_000);\n    // Set all connectors\n    this._connectors = config.connectors ?? [];\n    // Set the target object to listen for global events\n    this._targetObject = this.getTargetObject(config.targetObject);\n    // Set default storage\n    this._storage = config.storage === undefined ? this.getStorage() : config.storage;\n    // Setup all methods\n    this.setupMethods();\n    // Get the current connector from the storage\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.setDefaultConnector();\n    // Setup new connector listener for global events\n    this._targetUnsubscribe = this.setupConnectorListener();\n  }\n\n  /**\n   * Return the target object to listen for global events.\n   */\n  private getTargetObject(targetObject?: TargetObject): TargetObject | null {\n    if (targetObject) {\n      return targetObject;\n    }\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n    if (typeof document !== 'undefined') {\n      return document;\n    }\n    return null;\n  }\n\n  /**\n   * Return the storage used.\n   */\n  private getStorage(): StorageAbstract | undefined {\n    if (typeof window !== 'undefined') {\n      return new LocalStorage(window.localStorage);\n    }\n    return undefined;\n  }\n\n  /**\n   * Setup the default connector from the storage.\n   */\n  private async setDefaultConnector(): Promise<boolean | undefined> {\n    const connectorName =\n      (await this._storage?.getItem(Fuel.STORAGE_KEY)) || this._connectors[0]?.name;\n    if (connectorName) {\n      // Setup all events for the current connector\n      return this.selectConnector(connectorName, {\n        emitEvents: false,\n      });\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Start listener for all the events of the current\n   * connector and emit them to the Fuel instance\n   */\n  private setupConnectorEvents(events: string[]): void {\n    if (!this._currentConnector) {\n      return;\n    }\n    const currentConnector = this._currentConnector;\n    this._unsubscribes.map((unSub) => unSub());\n    this._unsubscribes = events.map((event) => {\n      const handler = (...args: unknown[]) => this.emit(event, ...args);\n      currentConnector.on(event as FuelConnectorEventsType, handler);\n      return () => currentConnector.off(event, handler);\n    });\n  }\n\n  /**\n   * Call method from the current connector.\n   */\n  private async callMethod(method: string, ...args: unknown[]) {\n    const hasConnector = await this.hasConnector();\n    await this.pingConnector();\n    if (!this._currentConnector || !hasConnector) {\n      throw new Error(\n        `No connector selected for calling ${method}. Use hasConnector before executing other methods.`\n      );\n    }\n    if (typeof this._currentConnector[method as keyof FuelConnector] === 'function') {\n      return (this._currentConnector[method as keyof FuelConnector] as CallableFunction)(...args);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Create a method for each method proxy that is available on the Common interface\n   * and call the method from the current connector.\n   */\n  private setupMethods(): void {\n    Object.values(FuelConnectorMethods).forEach((method) => {\n      this[method] = async (...args: unknown[]) => this.callMethod(method, ...args);\n    });\n  }\n\n  /**\n   * Fetch the status of a connector and set the installed and connected\n   * status.\n   */\n  private async fetchConnectorStatus(\n    connector: FuelConnector & { _latestUpdate?: number }\n  ): Promise<Status> {\n    // Control fetch status to avoid rewriting the status\n    // on late responses in this way even if a response is\n    // late we can avoid rewriting the status of the connector\n    const requestTimestamp = Date.now();\n    const [isConnected, ping] = await Promise.allSettled([\n      withTimeout(connector.isConnected()),\n      withTimeout(this.pingConnector(connector)),\n    ]);\n    // If the requestTimestamp is greater than the latest update\n    // we can ignore the response as is treated as stale.\n    const isStale = requestTimestamp < (connector._latestUpdate || 0);\n    if (!isStale) {\n      // eslint-disable-next-line no-param-reassign\n      connector._latestUpdate = Date.now();\n      // eslint-disable-next-line no-param-reassign\n      connector.installed = ping.status === 'fulfilled' && ping.value;\n      // eslint-disable-next-line no-param-reassign\n      connector.connected = isConnected.status === 'fulfilled' && isConnected.value;\n    }\n    return {\n      installed: connector.installed,\n      connected: connector.connected,\n    };\n  }\n\n  /**\n   * Fetch the status of all connectors and set the installed and connected\n   * status.\n   */\n  private async fetchConnectorsStatus(): Promise<Status[]> {\n    return Promise.all(\n      this._connectors.map(async (connector) => this.fetchConnectorStatus(connector))\n    );\n  }\n\n  /**\n   * Fetch the status of a connector and set the installed and connected\n   * status. If no connector is provided it will ping the current connector.\n   */\n  private async pingConnector(connector?: FuelConnector) {\n    const curConnector = connector || this._currentConnector;\n    if (!curConnector) {\n      return false;\n    }\n    // If finds a ping in the cache and the value is true\n    // return from cache\n    try {\n      return await cacheFor(async () => withTimeout(curConnector.ping()), {\n        key: curConnector.name,\n        cache: this._pingCache,\n        cacheTime: PING_CACHE_TIME,\n      })();\n    } catch {\n      throw new Error('Current connector is not available.');\n    }\n  }\n\n  /**\n   * Setup a listener for the FuelConnector event and add the connector\n   * to the list of new connectors.\n   */\n  private setupConnectorListener = () => {\n    const { _targetObject: targetObject } = this;\n    const eventName = FuelConnectorEventType;\n    if (targetObject?.on) {\n      targetObject.on(eventName, this.addConnector);\n      return () => {\n        targetObject.off?.(eventName, this.addConnector);\n      };\n    }\n    if (targetObject?.addEventListener) {\n      const handler = (e: CustomEvent<FuelConnector>) => {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.addConnector(e.detail);\n      };\n      targetObject.addEventListener(eventName, handler);\n      return () => {\n        targetObject.removeEventListener?.(eventName, handler);\n      };\n    }\n    return () => {};\n  };\n\n  /**\n   * Add a new connector to the list of connectors.\n   */\n  private addConnector = async (connector: FuelConnector): Promise<void> => {\n    if (!this.getConnector(connector)) {\n      this._connectors.push(connector);\n    }\n    // Fetch the status of the new connector\n    await this.fetchConnectorStatus(connector);\n    // Emit connectors events once the connector list changes\n    this.emit(this.events.connectors, this._connectors);\n    // If the current connector is not set\n    if (!this._currentConnector) {\n      // set the new connector as currentConnector\n      await this.selectConnector(connector.name, {\n        emitEvents: false,\n      });\n    }\n  };\n\n  private triggerConnectorEvents = async () => {\n    const [isConnected, networks, currentNetwork] = await Promise.all([\n      this.isConnected(),\n      this.networks(),\n      this.currentNetwork(),\n    ]);\n    this.emit(this.events.connection, isConnected);\n    this.emit(this.events.networks, networks);\n    this.emit(this.events.currentNetwork, currentNetwork);\n    if (isConnected) {\n      const [accounts, currentAccount] = await Promise.all([\n        this.accounts(),\n        this.currentAccount(),\n      ]);\n      this.emit(this.events.accounts, accounts);\n      this.emit(this.events.currentAccount, currentAccount);\n    }\n  };\n\n  /**\n   * Get a connector from the list of connectors.\n   */\n  getConnector = (connector: FuelConnector | string): FuelConnector | null =>\n    this._connectors.find((c) => {\n      const connectorName = typeof connector === 'string' ? connector : connector.name;\n      return c.name === connectorName || c === connector;\n    }) || null;\n\n  /**\n   * Return the list of connectors with the status of installed and connected.\n   */\n  async connectors(): Promise<Array<FuelConnector>> {\n    await this.fetchConnectorsStatus();\n    return this._connectors;\n  }\n\n  /**\n   * Set the current connector to be used.\n   */\n  async selectConnector(\n    connectorName: string,\n    options: FuelConnectorSelectOptions = {\n      emitEvents: true,\n    }\n  ): Promise<boolean> {\n    const connector = this.getConnector(connectorName);\n    if (!connector) {\n      return false;\n    }\n    if (this._currentConnector?.name === connectorName) {\n      return true;\n    }\n    const { installed } = await this.fetchConnectorStatus(connector);\n    if (installed) {\n      this._currentConnector = connector;\n      this.emit(this.events.currentConnector, connector);\n      this.setupConnectorEvents(Object.values(FuelConnectorEventTypes));\n      await this._storage?.setItem(Fuel.STORAGE_KEY, connector.name);\n      // If emitEvents is true we query all the data from the connector\n      // and emit the events to the Fuel instance allowing the application to\n      // react to changes in the connector state.\n      if (options.emitEvents) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.triggerConnectorEvents();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Return the current selected connector.\n   */\n  currentConnector(): FuelConnector | null | undefined {\n    return this._currentConnector;\n  }\n\n  /**\n   * Return true if any connector is available.\n   */\n  async hasConnector(): Promise<boolean> {\n    // If there is a current connector return true\n    // as the connector is ready\n    if (this._currentConnector) {\n      return true;\n    }\n    // If there is no current connector\n    // wait for the current connector to be set\n    // for 1 second and return false if is not set\n    const defer = deferPromise<boolean>();\n    this.once(this.events.currentConnector, () => {\n      defer.resolve(true);\n    });\n    // As the max ping time is 1 second we wait for 2 seconds\n    // to allow applications to react to the current connector\n    return withTimeout(defer.promise, HAS_CONNECTOR_TIMEOUT)\n      .then(() => true)\n      .catch(() => false);\n  }\n\n  async hasWallet(): Promise<boolean> {\n    return this.hasConnector();\n  }\n\n  /**\n   * Return a Fuel Provider instance with extends features to work with\n   * connectors.\n   *\n   * @deprecated getProvider is deprecated and is going to be removed in the future, use getWallet instead.\n   */\n  async getProvider(providerOrNetwork?: Provider | Network): Promise<Provider> {\n    warn(\n      'getProvider is deprecated and is going to be removed in the future, use getWallet instead.'\n    );\n    return this._getProvider(providerOrNetwork);\n  }\n\n  /**\n   * Return a Fuel Provider instance with extends features to work with\n   * connectors.\n   */\n  private async _getProvider(providerOrNetwork?: Provider | Network): Promise<Provider> {\n    // Decide which provider to use based on the providerOrNetwork\n    let provider: Provider;\n    // If provider is a valid instance of a Provider use it\n    if (providerOrNetwork && 'getTransactionResponse' in providerOrNetwork) {\n      provider = providerOrNetwork;\n      // If the provided param is a valid network use it\n    } else if (providerOrNetwork && 'chainId' in providerOrNetwork && 'url' in providerOrNetwork) {\n      provider = await Provider.create(providerOrNetwork.url);\n      // If nor provider or network is provided use the current network\n    } else if (!providerOrNetwork) {\n      const currentNetwork = await this.currentNetwork();\n      provider = await Provider.create(currentNetwork.url);\n      // If a provider or network was informed but is not valid\n      // throw an error\n    } else {\n      throw new FuelError(ErrorCode.INVALID_PROVIDER, 'Provider is not valid.');\n    }\n    return provider;\n  }\n\n  /**\n   * Return a Fuel Wallet Locked instance with extends features to work with\n   * connectors.\n   */\n  async getWallet(\n    address: string | AbstractAddress,\n    providerOrNetwork?: Provider | Network\n  ): Promise<Account> {\n    const provider = await this._getProvider(providerOrNetwork);\n    return new Account(address, provider, this);\n  }\n\n  /**\n   * Remove all open listeners this is useful when you want to\n   * remove the Fuel instance and avoid memory leaks.\n   */\n  unsubscribe(): void {\n    // Unsubscribe from all events\n    this._unsubscribes.map((unSub) => unSub());\n    this._targetUnsubscribe();\n    // Remove all listeners from fuel instance\n    this.removeAllListeners();\n  }\n\n  /**\n   * Clean all the data from the storage.\n   */\n  async clean(): Promise<void> {\n    await this._storage?.removeItem(Fuel.STORAGE_KEY);\n  }\n\n  /**\n   * Removes all listeners and cleans the storage.\n   */\n  async destroy(): Promise<void> {\n    this.unsubscribe();\n    await this.clean();\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA,aAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,cAAQ,UAAU,QAAQ,SAAS;AACnC,UAAM,WAAW;AACjB,UAAM,eAAe,CAAC;AACtB,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,cAAM,IAAI,SAAS,OAAO,CAAC;AAC3B,qBAAa,CAAC,IAAI;AAAA,MACtB;AACA,eAAS,YAAY,KAAK;AACtB,cAAM,IAAI,OAAO;AACjB,gBAAU,MAAM,aAAc,IACzB,EAAG,KAAK,IAAK,KAAK,YAClB,EAAG,KAAK,IAAK,KAAK,YAClB,EAAG,KAAK,IAAK,KAAK,YAClB,EAAG,KAAK,IAAK,KAAK,aAClB,EAAG,KAAK,IAAK,KAAK;AAAA,MAC3B;AACA,eAAS,UAAU,QAAQ;AACvB,YAAI,MAAM;AACV,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACpC,gBAAM,IAAI,OAAO,WAAW,CAAC;AAC7B,cAAI,IAAI,MAAM,IAAI;AACd,mBAAO,qBAAqB,SAAS;AACzC,gBAAM,YAAY,GAAG,IAAK,KAAK;AAAA,QACnC;AACA,cAAM,YAAY,GAAG;AACrB,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACpC,gBAAM,IAAI,OAAO,WAAW,CAAC;AAC7B,gBAAM,YAAY,GAAG,IAAK,IAAI;AAAA,QAClC;AACA,eAAO;AAAA,MACX;AACA,eAASA,SAAQ,MAAM,QAAQ,SAASC,MAAK;AACzC,YAAI,QAAQ;AACZ,YAAI,OAAO;AACX,cAAM,QAAQ,KAAK,WAAW;AAC9B,cAAM,SAAS,CAAC;AAChB,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAClC,kBAAS,SAAS,SAAU,KAAK,CAAC;AAClC,kBAAQ;AACR,iBAAO,QAAQ,SAAS;AACpB,oBAAQ;AACR,mBAAO,KAAM,SAAS,OAAQ,IAAI;AAAA,UACtC;AAAA,QACJ;AACA,YAAIA,MAAK;AACL,cAAI,OAAO,GAAG;AACV,mBAAO,KAAM,SAAU,UAAU,OAAS,IAAI;AAAA,UAClD;AAAA,QACJ,OACK;AACD,cAAI,QAAQ;AACR,mBAAO;AACX,cAAK,SAAU,UAAU,OAAS;AAC9B,mBAAO;AAAA,QACf;AACA,eAAO;AAAA,MACX;AACA,eAAS,QAAQC,QAAO;AACpB,eAAOF,SAAQE,QAAO,GAAG,GAAG,IAAI;AAAA,MACpC;AACA,eAAS,gBAAgB,OAAO;AAC5B,cAAM,MAAMF,SAAQ,OAAO,GAAG,GAAG,KAAK;AACtC,YAAI,MAAM,QAAQ,GAAG;AACjB,iBAAO;AAAA,MACf;AACA,eAAS,UAAU,OAAO;AACtB,cAAM,MAAMA,SAAQ,OAAO,GAAG,GAAG,KAAK;AACtC,YAAI,MAAM,QAAQ,GAAG;AACjB,iBAAO;AACX,cAAM,IAAI,MAAM,GAAG;AAAA,MACvB;AACA,eAAS,uBAAuB,UAAU;AACtC,YAAI;AACJ,YAAI,aAAa,UAAU;AACvB,2BAAiB;AAAA,QACrB,OACK;AACD,2BAAiB;AAAA,QACrB;AACA,iBAAS,OAAO,QAAQ,OAAO,OAAO;AAClC,kBAAQ,SAAS;AACjB,cAAI,OAAO,SAAS,IAAI,MAAM,SAAS;AACnC,kBAAM,IAAI,UAAU,sBAAsB;AAC9C,mBAAS,OAAO,YAAY;AAE5B,cAAI,MAAM,UAAU,MAAM;AAC1B,cAAI,OAAO,QAAQ;AACf,kBAAM,IAAI,MAAM,GAAG;AACvB,cAAI,SAAS,SAAS;AACtB,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACnC,kBAAM,IAAI,MAAM,CAAC;AACjB,gBAAI,KAAK,MAAM;AACX,oBAAM,IAAI,MAAM,gBAAgB;AACpC,kBAAM,YAAY,GAAG,IAAI;AACzB,sBAAU,SAAS,OAAO,CAAC;AAAA,UAC/B;AACA,mBAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,kBAAM,YAAY,GAAG;AAAA,UACzB;AACA,iBAAO;AACP,mBAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,kBAAM,IAAK,QAAS,IAAI,KAAK,IAAM;AACnC,sBAAU,SAAS,OAAO,CAAC;AAAA,UAC/B;AACA,iBAAO;AAAA,QACX;AACA,iBAAS,SAAS,KAAK,OAAO;AAC1B,kBAAQ,SAAS;AACjB,cAAI,IAAI,SAAS;AACb,mBAAO,MAAM;AACjB,cAAI,IAAI,SAAS;AACb,mBAAO;AAEX,gBAAM,UAAU,IAAI,YAAY;AAChC,gBAAM,UAAU,IAAI,YAAY;AAChC,cAAI,QAAQ,WAAW,QAAQ;AAC3B,mBAAO,uBAAuB;AAClC,gBAAM;AACN,gBAAMG,SAAQ,IAAI,YAAY,GAAG;AACjC,cAAIA,WAAU;AACV,mBAAO,gCAAgC;AAC3C,cAAIA,WAAU;AACV,mBAAO,wBAAwB;AACnC,gBAAM,SAAS,IAAI,MAAM,GAAGA,MAAK;AACjC,gBAAM,YAAY,IAAI,MAAMA,SAAQ,CAAC;AACrC,cAAI,UAAU,SAAS;AACnB,mBAAO;AACX,cAAI,MAAM,UAAU,MAAM;AAC1B,cAAI,OAAO,QAAQ;AACf,mBAAO;AACX,gBAAM,QAAQ,CAAC;AACf,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,EAAE,GAAG;AACvC,kBAAM,IAAI,UAAU,OAAO,CAAC;AAC5B,kBAAM,IAAI,aAAa,CAAC;AACxB,gBAAI,MAAM;AACN,qBAAO,uBAAuB;AAClC,kBAAM,YAAY,GAAG,IAAI;AAEzB,gBAAI,IAAI,KAAK,UAAU;AACnB;AACJ,kBAAM,KAAK,CAAC;AAAA,UAChB;AACA,cAAI,QAAQ;AACR,mBAAO,0BAA0B;AACrC,iBAAO,EAAE,QAAQ,MAAM;AAAA,QAC3B;AACA,iBAAS,aAAa,KAAK,OAAO;AAC9B,gBAAM,MAAM,SAAS,KAAK,KAAK;AAC/B,cAAI,OAAO,QAAQ;AACf,mBAAO;AAAA,QACf;AACA,iBAAS,OAAO,KAAK,OAAO;AACxB,gBAAM,MAAM,SAAS,KAAK,KAAK;AAC/B,cAAI,OAAO,QAAQ;AACf,mBAAO;AACX,gBAAM,IAAI,MAAM,GAAG;AAAA,QACvB;AACA,eAAO;AAAA,UACH;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AACA,cAAQ,SAAS,uBAAuB,QAAQ;AAChD,cAAQ,UAAU,uBAAuB,SAAS;AAAA;AAAA;;;ACzKlD;AAAA;AAAA,OAAC,SAAUC,SAAQC,UAAS;AAC1B;AAGA,iBAASC,QAAQ,KAAK,KAAK;AACzB,cAAI,CAAC;AAAK,kBAAM,IAAI,MAAM,OAAO,kBAAkB;AAAA,QACrD;AAIA,iBAAS,SAAU,MAAM,WAAW;AAClC,eAAK,SAAS;AACd,cAAI,WAAW,WAAY;AAAA,UAAC;AAC5B,mBAAS,YAAY,UAAU;AAC/B,eAAK,YAAY,IAAI,SAAS;AAC9B,eAAK,UAAU,cAAc;AAAA,QAC/B;AAIA,iBAASC,IAAIC,SAAQ,MAAM,QAAQ;AACjC,cAAID,IAAG,KAAKC,OAAM,GAAG;AACnB,mBAAOA;AAAA,UACT;AAEA,eAAK,WAAW;AAChB,eAAK,QAAQ;AACb,eAAK,SAAS;AAGd,eAAK,MAAM;AAEX,cAAIA,YAAW,MAAM;AACnB,gBAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,uBAAS;AACT,qBAAO;AAAA,YACT;AAEA,iBAAK,MAAMA,WAAU,GAAG,QAAQ,IAAI,UAAU,IAAI;AAAA,UACpD;AAAA,QACF;AACA,YAAI,OAAOJ,YAAW,UAAU;AAC9B,UAAAA,QAAO,UAAUG;AAAA,QACnB,OAAO;AACL,UAAAF,SAAQ,KAAKE;AAAA,QACf;AAEA,QAAAA,IAAG,KAAKA;AACR,QAAAA,IAAG,WAAW;AAEd,YAAIE;AACJ,YAAI;AACF,cAAI,OAAO,WAAW,eAAe,OAAO,OAAO,WAAW,aAAa;AACzE,YAAAA,UAAS,OAAO;AAAA,UAClB,OAAO;AACL,YAAAA,UAAS,UAAQ,QAAQ,EAAE;AAAA,UAC7B;AAAA,QACF,SAAS,GAAP;AAAA,QACF;AAEA,QAAAF,IAAG,OAAO,SAAS,KAAM,KAAK;AAC5B,cAAI,eAAeA,KAAI;AACrB,mBAAO;AAAA,UACT;AAEA,iBAAO,QAAQ,QAAQ,OAAO,QAAQ,YACpC,IAAI,YAAY,aAAaA,IAAG,YAAY,MAAM,QAAQ,IAAI,KAAK;AAAA,QACvE;AAEA,QAAAA,IAAG,MAAM,SAASG,KAAK,MAAM,OAAO;AAClC,cAAI,KAAK,IAAI,KAAK,IAAI;AAAG,mBAAO;AAChC,iBAAO;AAAA,QACT;AAEA,QAAAH,IAAG,MAAM,SAAS,IAAK,MAAM,OAAO;AAClC,cAAI,KAAK,IAAI,KAAK,IAAI;AAAG,mBAAO;AAChC,iBAAO;AAAA,QACT;AAEA,QAAAA,IAAG,UAAU,QAAQ,SAAS,KAAMC,SAAQ,MAAM,QAAQ;AACxD,cAAI,OAAOA,YAAW,UAAU;AAC9B,mBAAO,KAAK,YAAYA,SAAQ,MAAM,MAAM;AAAA,UAC9C;AAEA,cAAI,OAAOA,YAAW,UAAU;AAC9B,mBAAO,KAAK,WAAWA,SAAQ,MAAM,MAAM;AAAA,UAC7C;AAEA,cAAI,SAAS,OAAO;AAClB,mBAAO;AAAA,UACT;AACA,UAAAF,QAAO,UAAU,OAAO,MAAM,QAAQ,KAAK,QAAQ,EAAE;AAErD,UAAAE,UAASA,QAAO,SAAS,EAAE,QAAQ,QAAQ,EAAE;AAC7C,cAAI,QAAQ;AACZ,cAAIA,QAAO,CAAC,MAAM,KAAK;AACrB;AACA,iBAAK,WAAW;AAAA,UAClB;AAEA,cAAI,QAAQA,QAAO,QAAQ;AACzB,gBAAI,SAAS,IAAI;AACf,mBAAK,UAAUA,SAAQ,OAAO,MAAM;AAAA,YACtC,OAAO;AACL,mBAAK,WAAWA,SAAQ,MAAM,KAAK;AACnC,kBAAI,WAAW,MAAM;AACnB,qBAAK,WAAW,KAAK,QAAQ,GAAG,MAAM,MAAM;AAAA,cAC9C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,QAAAD,IAAG,UAAU,cAAc,SAAS,YAAaC,SAAQ,MAAM,QAAQ;AACrE,cAAIA,UAAS,GAAG;AACd,iBAAK,WAAW;AAChB,YAAAA,UAAS,CAACA;AAAA,UACZ;AACA,cAAIA,UAAS,UAAW;AACtB,iBAAK,QAAQ,CAACA,UAAS,QAAS;AAChC,iBAAK,SAAS;AAAA,UAChB,WAAWA,UAAS,kBAAkB;AACpC,iBAAK,QAAQ;AAAA,cACXA,UAAS;AAAA,cACRA,UAAS,WAAa;AAAA,YACzB;AACA,iBAAK,SAAS;AAAA,UAChB,OAAO;AACL,YAAAF,QAAOE,UAAS,gBAAgB;AAChC,iBAAK,QAAQ;AAAA,cACXA,UAAS;AAAA,cACRA,UAAS,WAAa;AAAA,cACvB;AAAA,YACF;AACA,iBAAK,SAAS;AAAA,UAChB;AAEA,cAAI,WAAW;AAAM;AAGrB,eAAK,WAAW,KAAK,QAAQ,GAAG,MAAM,MAAM;AAAA,QAC9C;AAEA,QAAAD,IAAG,UAAU,aAAa,SAAS,WAAYC,SAAQ,MAAM,QAAQ;AAEnE,UAAAF,QAAO,OAAOE,QAAO,WAAW,QAAQ;AACxC,cAAIA,QAAO,UAAU,GAAG;AACtB,iBAAK,QAAQ,CAAC,CAAC;AACf,iBAAK,SAAS;AACd,mBAAO;AAAA,UACT;AAEA,eAAK,SAAS,KAAK,KAAKA,QAAO,SAAS,CAAC;AACzC,eAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,iBAAK,MAAM,CAAC,IAAI;AAAA,UAClB;AAEA,cAAI,GAAG;AACP,cAAI,MAAM;AACV,cAAI,WAAW,MAAM;AACnB,iBAAK,IAAIA,QAAO,SAAS,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG;AACjD,kBAAIA,QAAO,CAAC,IAAKA,QAAO,IAAI,CAAC,KAAK,IAAMA,QAAO,IAAI,CAAC,KAAK;AACzD,mBAAK,MAAM,CAAC,KAAM,KAAK,MAAO;AAC9B,mBAAK,MAAM,IAAI,CAAC,IAAK,MAAO,KAAK,MAAQ;AACzC,qBAAO;AACP,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP;AAAA,cACF;AAAA,YACF;AAAA,UACF,WAAW,WAAW,MAAM;AAC1B,iBAAK,IAAI,GAAG,IAAI,GAAG,IAAIA,QAAO,QAAQ,KAAK,GAAG;AAC5C,kBAAIA,QAAO,CAAC,IAAKA,QAAO,IAAI,CAAC,KAAK,IAAMA,QAAO,IAAI,CAAC,KAAK;AACzD,mBAAK,MAAM,CAAC,KAAM,KAAK,MAAO;AAC9B,mBAAK,MAAM,IAAI,CAAC,IAAK,MAAO,KAAK,MAAQ;AACzC,qBAAO;AACP,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP;AAAA,cACF;AAAA,YACF;AAAA,UACF;AACA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,iBAAS,cAAe,QAAQ,OAAO;AACrC,cAAI,IAAI,OAAO,WAAW,KAAK;AAE/B,cAAI,KAAK,MAAM,KAAK,IAAI;AACtB,mBAAO,IAAI;AAAA,UAEb,WAAW,KAAK,MAAM,KAAK,IAAI;AAC7B,mBAAO,IAAI;AAAA,UAEb,WAAW,KAAK,MAAM,KAAK,KAAK;AAC9B,mBAAO,IAAI;AAAA,UACb,OAAO;AACL,YAAAF,QAAO,OAAO,0BAA0B,MAAM;AAAA,UAChD;AAAA,QACF;AAEA,iBAAS,aAAc,QAAQ,YAAY,OAAO;AAChD,cAAI,IAAI,cAAc,QAAQ,KAAK;AACnC,cAAI,QAAQ,KAAK,YAAY;AAC3B,iBAAK,cAAc,QAAQ,QAAQ,CAAC,KAAK;AAAA,UAC3C;AACA,iBAAO;AAAA,QACT;AAEA,QAAAC,IAAG,UAAU,YAAY,SAAS,UAAWC,SAAQ,OAAO,QAAQ;AAElE,eAAK,SAAS,KAAK,MAAMA,QAAO,SAAS,SAAS,CAAC;AACnD,eAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,iBAAK,MAAM,CAAC,IAAI;AAAA,UAClB;AAGA,cAAI,MAAM;AACV,cAAI,IAAI;AAER,cAAI;AACJ,cAAI,WAAW,MAAM;AACnB,iBAAK,IAAIA,QAAO,SAAS,GAAG,KAAK,OAAO,KAAK,GAAG;AAC9C,kBAAI,aAAaA,SAAQ,OAAO,CAAC,KAAK;AACtC,mBAAK,MAAM,CAAC,KAAK,IAAI;AACrB,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP,qBAAK;AACL,qBAAK,MAAM,CAAC,KAAK,MAAM;AAAA,cACzB,OAAO;AACL,uBAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF,OAAO;AACL,gBAAI,cAAcA,QAAO,SAAS;AAClC,iBAAK,IAAI,cAAc,MAAM,IAAI,QAAQ,IAAI,OAAO,IAAIA,QAAO,QAAQ,KAAK,GAAG;AAC7E,kBAAI,aAAaA,SAAQ,OAAO,CAAC,KAAK;AACtC,mBAAK,MAAM,CAAC,KAAK,IAAI;AACrB,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP,qBAAK;AACL,qBAAK,MAAM,CAAC,KAAK,MAAM;AAAA,cACzB,OAAO;AACL,uBAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAEA,eAAK,OAAO;AAAA,QACd;AAEA,iBAAS,UAAW,KAAK,OAAO,KAAK,KAAK;AACxC,cAAI,IAAI;AACR,cAAI,IAAI;AACR,cAAI,MAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAClC,mBAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAChC,gBAAI,IAAI,IAAI,WAAW,CAAC,IAAI;AAE5B,iBAAK;AAGL,gBAAI,KAAK,IAAI;AACX,kBAAI,IAAI,KAAK;AAAA,YAGf,WAAW,KAAK,IAAI;AAClB,kBAAI,IAAI,KAAK;AAAA,YAGf,OAAO;AACL,kBAAI;AAAA,YACN;AACA,YAAAF,QAAO,KAAK,KAAK,IAAI,KAAK,mBAAmB;AAC7C,iBAAK;AAAA,UACP;AACA,iBAAO;AAAA,QACT;AAEA,QAAAC,IAAG,UAAU,aAAa,SAAS,WAAYC,SAAQ,MAAM,OAAO;AAElE,eAAK,QAAQ,CAAC,CAAC;AACf,eAAK,SAAS;AAGd,mBAAS,UAAU,GAAG,UAAU,GAAG,WAAW,UAAW,WAAW,MAAM;AACxE;AAAA,UACF;AACA;AACA,oBAAW,UAAU,OAAQ;AAE7B,cAAI,QAAQA,QAAO,SAAS;AAC5B,cAAIG,OAAM,QAAQ;AAClB,cAAI,MAAM,KAAK,IAAI,OAAO,QAAQA,IAAG,IAAI;AAEzC,cAAI,OAAO;AACX,mBAAS,IAAI,OAAO,IAAI,KAAK,KAAK,SAAS;AACzC,mBAAO,UAAUH,SAAQ,GAAG,IAAI,SAAS,IAAI;AAE7C,iBAAK,MAAM,OAAO;AAClB,gBAAI,KAAK,MAAM,CAAC,IAAI,OAAO,UAAW;AACpC,mBAAK,MAAM,CAAC,KAAK;AAAA,YACnB,OAAO;AACL,mBAAK,OAAO,IAAI;AAAA,YAClB;AAAA,UACF;AAEA,cAAIG,SAAQ,GAAG;AACb,gBAAIC,OAAM;AACV,mBAAO,UAAUJ,SAAQ,GAAGA,QAAO,QAAQ,IAAI;AAE/C,iBAAK,IAAI,GAAG,IAAIG,MAAK,KAAK;AACxB,cAAAC,QAAO;AAAA,YACT;AAEA,iBAAK,MAAMA,IAAG;AACd,gBAAI,KAAK,MAAM,CAAC,IAAI,OAAO,UAAW;AACpC,mBAAK,MAAM,CAAC,KAAK;AAAA,YACnB,OAAO;AACL,mBAAK,OAAO,IAAI;AAAA,YAClB;AAAA,UACF;AAEA,eAAK,OAAO;AAAA,QACd;AAEA,QAAAL,IAAG,UAAU,OAAO,SAAS,KAAM,MAAM;AACvC,eAAK,QAAQ,IAAI,MAAM,KAAK,MAAM;AAClC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,iBAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC;AAAA,UAC9B;AACA,eAAK,SAAS,KAAK;AACnB,eAAK,WAAW,KAAK;AACrB,eAAK,MAAM,KAAK;AAAA,QAClB;AAEA,iBAAS,KAAM,MAAM,KAAK;AACxB,eAAK,QAAQ,IAAI;AACjB,eAAK,SAAS,IAAI;AAClB,eAAK,WAAW,IAAI;AACpB,eAAK,MAAM,IAAI;AAAA,QACjB;AAEA,QAAAA,IAAG,UAAU,QAAQ,SAAS,MAAO,MAAM;AACzC,eAAK,MAAM,IAAI;AAAA,QACjB;AAEA,QAAAA,IAAG,UAAU,QAAQ,SAASM,SAAS;AACrC,cAAI,IAAI,IAAIN,IAAG,IAAI;AACnB,eAAK,KAAK,CAAC;AACX,iBAAO;AAAA,QACT;AAEA,QAAAA,IAAG,UAAU,UAAU,SAAS,QAAS,MAAM;AAC7C,iBAAO,KAAK,SAAS,MAAM;AACzB,iBAAK,MAAM,KAAK,QAAQ,IAAI;AAAA,UAC9B;AACA,iBAAO;AAAA,QACT;AAGA,QAAAA,IAAG,UAAU,SAAS,SAAS,QAAS;AACtC,iBAAO,KAAK,SAAS,KAAK,KAAK,MAAM,KAAK,SAAS,CAAC,MAAM,GAAG;AAC3D,iBAAK;AAAA,UACP;AACA,iBAAO,KAAK,UAAU;AAAA,QACxB;AAEA,QAAAA,IAAG,UAAU,YAAY,SAAS,YAAa;AAE7C,cAAI,KAAK,WAAW,KAAK,KAAK,MAAM,CAAC,MAAM,GAAG;AAC5C,iBAAK,WAAW;AAAA,UAClB;AACA,iBAAO;AAAA,QACT;AAIA,YAAI,OAAO,WAAW,eAAe,OAAO,OAAO,QAAQ,YAAY;AACrE,cAAI;AACF,YAAAA,IAAG,UAAU,OAAO,IAAI,4BAA4B,CAAC,IAAIO;AAAA,UAC3D,SAAS,GAAP;AACA,YAAAP,IAAG,UAAU,UAAUO;AAAA,UACzB;AAAA,QACF,OAAO;AACL,UAAAP,IAAG,UAAU,UAAUO;AAAA,QACzB;AAEA,iBAASA,WAAW;AAClB,kBAAQ,KAAK,MAAM,YAAY,WAAW,KAAK,SAAS,EAAE,IAAI;AAAA,QAChE;AAgCA,YAAI,QAAQ;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,YAAI,aAAa;AAAA,UACf;AAAA,UAAG;AAAA,UACH;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAI;AAAA,UAAG;AAAA,UACvB;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAClB;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAClB;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAClB;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,UAAG;AAAA,QACpB;AAEA,YAAI,aAAa;AAAA,UACf;AAAA,UAAG;AAAA,UACH;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAC5D;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAS;AAAA,UAC3D;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAS;AAAA,UAC3D;AAAA,UAAS;AAAA,UAAS;AAAA,UAAS;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UACzD;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,UAAU;AAAA,QAC9D;AAEA,QAAAP,IAAG,UAAU,WAAW,SAAS,SAAU,MAAM,SAAS;AACxD,iBAAO,QAAQ;AACf,oBAAU,UAAU,KAAK;AAEzB,cAAI;AACJ,cAAI,SAAS,MAAM,SAAS,OAAO;AACjC,kBAAM;AACN,gBAAI,MAAM;AACV,gBAAI,QAAQ;AACZ,qBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,kBAAI,IAAI,KAAK,MAAM,CAAC;AACpB,kBAAI,SAAU,KAAK,MAAO,SAAS,UAAU,SAAS,EAAE;AACxD,sBAAS,MAAO,KAAK,MAAQ;AAC7B,qBAAO;AACP,kBAAI,OAAO,IAAI;AACb,uBAAO;AACP;AAAA,cACF;AACA,kBAAI,UAAU,KAAK,MAAM,KAAK,SAAS,GAAG;AACxC,sBAAM,MAAM,IAAI,KAAK,MAAM,IAAI,OAAO;AAAA,cACxC,OAAO;AACL,sBAAM,OAAO;AAAA,cACf;AAAA,YACF;AACA,gBAAI,UAAU,GAAG;AACf,oBAAM,MAAM,SAAS,EAAE,IAAI;AAAA,YAC7B;AACA,mBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,oBAAM,MAAM;AAAA,YACd;AACA,gBAAI,KAAK,aAAa,GAAG;AACvB,oBAAM,MAAM;AAAA,YACd;AACA,mBAAO;AAAA,UACT;AAEA,cAAI,UAAU,OAAO,MAAM,QAAQ,KAAK,QAAQ,IAAI;AAElD,gBAAI,YAAY,WAAW,IAAI;AAE/B,gBAAI,YAAY,WAAW,IAAI;AAC/B,kBAAM;AACN,gBAAI,IAAI,KAAK,MAAM;AACnB,cAAE,WAAW;AACb,mBAAO,CAAC,EAAE,OAAO,GAAG;AAClB,kBAAI,IAAI,EAAE,MAAM,SAAS,EAAE,SAAS,IAAI;AACxC,kBAAI,EAAE,MAAM,SAAS;AAErB,kBAAI,CAAC,EAAE,OAAO,GAAG;AACf,sBAAM,MAAM,YAAY,EAAE,MAAM,IAAI,IAAI;AAAA,cAC1C,OAAO;AACL,sBAAM,IAAI;AAAA,cACZ;AAAA,YACF;AACA,gBAAI,KAAK,OAAO,GAAG;AACjB,oBAAM,MAAM;AAAA,YACd;AACA,mBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,oBAAM,MAAM;AAAA,YACd;AACA,gBAAI,KAAK,aAAa,GAAG;AACvB,oBAAM,MAAM;AAAA,YACd;AACA,mBAAO;AAAA,UACT;AAEA,UAAAD,QAAO,OAAO,iCAAiC;AAAA,QACjD;AAEA,QAAAC,IAAG,UAAU,WAAW,SAASQ,YAAY;AAC3C,cAAIC,OAAM,KAAK,MAAM,CAAC;AACtB,cAAI,KAAK,WAAW,GAAG;AACrB,YAAAA,QAAO,KAAK,MAAM,CAAC,IAAI;AAAA,UACzB,WAAW,KAAK,WAAW,KAAK,KAAK,MAAM,CAAC,MAAM,GAAM;AAEtD,YAAAA,QAAO,mBAAoB,KAAK,MAAM,CAAC,IAAI;AAAA,UAC7C,WAAW,KAAK,SAAS,GAAG;AAC1B,YAAAV,QAAO,OAAO,4CAA4C;AAAA,UAC5D;AACA,iBAAQ,KAAK,aAAa,IAAK,CAACU,OAAMA;AAAA,QACxC;AAEA,QAAAT,IAAG,UAAU,SAAS,SAAS,SAAU;AACvC,iBAAO,KAAK,SAAS,IAAI,CAAC;AAAA,QAC5B;AAEA,YAAIE,SAAQ;AACV,UAAAF,IAAG,UAAU,WAAW,SAAS,SAAU,QAAQ,QAAQ;AACzD,mBAAO,KAAK,YAAYE,SAAQ,QAAQ,MAAM;AAAA,UAChD;AAAA,QACF;AAEA,QAAAF,IAAG,UAAU,UAAU,SAAS,QAAS,QAAQ,QAAQ;AACvD,iBAAO,KAAK,YAAY,OAAO,QAAQ,MAAM;AAAA,QAC/C;AAEA,YAAI,WAAW,SAASU,UAAU,WAAW,MAAM;AACjD,cAAI,UAAU,aAAa;AACzB,mBAAO,UAAU,YAAY,IAAI;AAAA,UACnC;AACA,iBAAO,IAAI,UAAU,IAAI;AAAA,QAC3B;AAEA,QAAAV,IAAG,UAAU,cAAc,SAAS,YAAa,WAAW,QAAQ,QAAQ;AAC1E,eAAK,OAAO;AAEZ,cAAI,aAAa,KAAK,WAAW;AACjC,cAAI,YAAY,UAAU,KAAK,IAAI,GAAG,UAAU;AAChD,UAAAD,QAAO,cAAc,WAAW,uCAAuC;AACvE,UAAAA,QAAO,YAAY,GAAG,6BAA6B;AAEnD,cAAI,MAAM,SAAS,WAAW,SAAS;AACvC,cAAI,UAAU,WAAW,OAAO,OAAO;AACvC,eAAK,iBAAiB,OAAO,EAAE,KAAK,UAAU;AAC9C,iBAAO;AAAA,QACT;AAEA,QAAAC,IAAG,UAAU,iBAAiB,SAAS,eAAgB,KAAK,YAAY;AACtE,cAAI,WAAW;AACf,cAAI,QAAQ;AAEZ,mBAAS,IAAI,GAAG,QAAQ,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/C,gBAAI,OAAQ,KAAK,MAAM,CAAC,KAAK,QAAS;AAEtC,gBAAI,UAAU,IAAI,OAAO;AACzB,gBAAI,WAAW,IAAI,QAAQ;AACzB,kBAAI,UAAU,IAAK,QAAQ,IAAK;AAAA,YAClC;AACA,gBAAI,WAAW,IAAI,QAAQ;AACzB,kBAAI,UAAU,IAAK,QAAQ,KAAM;AAAA,YACnC;AAEA,gBAAI,UAAU,GAAG;AACf,kBAAI,WAAW,IAAI,QAAQ;AACzB,oBAAI,UAAU,IAAK,QAAQ,KAAM;AAAA,cACnC;AACA,sBAAQ;AACR,sBAAQ;AAAA,YACV,OAAO;AACL,sBAAQ,SAAS;AACjB,uBAAS;AAAA,YACX;AAAA,UACF;AAEA,cAAI,WAAW,IAAI,QAAQ;AACzB,gBAAI,UAAU,IAAI;AAElB,mBAAO,WAAW,IAAI,QAAQ;AAC5B,kBAAI,UAAU,IAAI;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAEA,QAAAA,IAAG,UAAU,iBAAiB,SAAS,eAAgB,KAAK,YAAY;AACtE,cAAI,WAAW,IAAI,SAAS;AAC5B,cAAI,QAAQ;AAEZ,mBAAS,IAAI,GAAG,QAAQ,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC/C,gBAAI,OAAQ,KAAK,MAAM,CAAC,KAAK,QAAS;AAEtC,gBAAI,UAAU,IAAI,OAAO;AACzB,gBAAI,YAAY,GAAG;AACjB,kBAAI,UAAU,IAAK,QAAQ,IAAK;AAAA,YAClC;AACA,gBAAI,YAAY,GAAG;AACjB,kBAAI,UAAU,IAAK,QAAQ,KAAM;AAAA,YACnC;AAEA,gBAAI,UAAU,GAAG;AACf,kBAAI,YAAY,GAAG;AACjB,oBAAI,UAAU,IAAK,QAAQ,KAAM;AAAA,cACnC;AACA,sBAAQ;AACR,sBAAQ;AAAA,YACV,OAAO;AACL,sBAAQ,SAAS;AACjB,uBAAS;AAAA,YACX;AAAA,UACF;AAEA,cAAI,YAAY,GAAG;AACjB,gBAAI,UAAU,IAAI;AAElB,mBAAO,YAAY,GAAG;AACpB,kBAAI,UAAU,IAAI;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAEA,YAAI,KAAK,OAAO;AACd,UAAAA,IAAG,UAAU,aAAa,SAAS,WAAY,GAAG;AAChD,mBAAO,KAAK,KAAK,MAAM,CAAC;AAAA,UAC1B;AAAA,QACF,OAAO;AACL,UAAAA,IAAG,UAAU,aAAa,SAAS,WAAY,GAAG;AAChD,gBAAI,IAAI;AACR,gBAAI,IAAI;AACR,gBAAI,KAAK,MAAQ;AACf,mBAAK;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK,IAAM;AACb,mBAAK;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK,GAAK;AACZ,mBAAK;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK,GAAM;AACb,mBAAK;AACL,qBAAO;AAAA,YACT;AACA,mBAAO,IAAI;AAAA,UACb;AAAA,QACF;AAEA,QAAAA,IAAG,UAAU,YAAY,SAAS,UAAW,GAAG;AAE9C,cAAI,MAAM;AAAG,mBAAO;AAEpB,cAAI,IAAI;AACR,cAAI,IAAI;AACR,eAAK,IAAI,UAAY,GAAG;AACtB,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,eAAK,IAAI,SAAU,GAAG;AACpB,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,eAAK,IAAI,QAAS,GAAG;AACnB,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,eAAK,IAAI,OAAS,GAAG;AACnB,iBAAK;AACL,mBAAO;AAAA,UACT;AACA,eAAK,IAAI,OAAS,GAAG;AACnB;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAGA,QAAAA,IAAG,UAAU,YAAY,SAAS,YAAa;AAC7C,cAAI,IAAI,KAAK,MAAM,KAAK,SAAS,CAAC;AAClC,cAAI,KAAK,KAAK,WAAW,CAAC;AAC1B,kBAAQ,KAAK,SAAS,KAAK,KAAK;AAAA,QAClC;AAEA,iBAAS,WAAY,KAAK;AACxB,cAAI,IAAI,IAAI,MAAM,IAAI,UAAU,CAAC;AAEjC,mBAAS,MAAM,GAAG,MAAM,EAAE,QAAQ,OAAO;AACvC,gBAAI,MAAO,MAAM,KAAM;AACvB,gBAAI,OAAO,MAAM;AAEjB,cAAE,GAAG,IAAK,IAAI,MAAM,GAAG,MAAM,OAAQ;AAAA,UACvC;AAEA,iBAAO;AAAA,QACT;AAGA,QAAAA,IAAG,UAAU,WAAW,SAAS,WAAY;AAC3C,cAAI,KAAK,OAAO;AAAG,mBAAO;AAE1B,cAAI,IAAI;AACR,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAI,IAAI,KAAK,UAAU,KAAK,MAAM,CAAC,CAAC;AACpC,iBAAK;AACL,gBAAI,MAAM;AAAI;AAAA,UAChB;AACA,iBAAO;AAAA,QACT;AAEA,QAAAA,IAAG,UAAU,aAAa,SAAS,aAAc;AAC/C,iBAAO,KAAK,KAAK,KAAK,UAAU,IAAI,CAAC;AAAA,QACvC;AAEA,QAAAA,IAAG,UAAU,SAAS,SAASW,QAAQ,OAAO;AAC5C,cAAI,KAAK,aAAa,GAAG;AACvB,mBAAO,KAAK,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,CAAC;AAAA,UACxC;AACA,iBAAO,KAAK,MAAM;AAAA,QACpB;AAEA,QAAAX,IAAG,UAAU,WAAW,SAASY,UAAU,OAAO;AAChD,cAAI,KAAK,MAAM,QAAQ,CAAC,GAAG;AACzB,mBAAO,KAAK,KAAK,KAAK,EAAE,MAAM,CAAC,EAAE,KAAK;AAAA,UACxC;AACA,iBAAO,KAAK,MAAM;AAAA,QACpB;AAEA,QAAAZ,IAAG,UAAU,QAAQ,SAAS,QAAS;AACrC,iBAAO,KAAK,aAAa;AAAA,QAC3B;AAGA,QAAAA,IAAG,UAAU,MAAM,SAAS,MAAO;AACjC,iBAAO,KAAK,MAAM,EAAE,KAAK;AAAA,QAC3B;AAEA,QAAAA,IAAG,UAAU,OAAO,SAAS,OAAQ;AACnC,cAAI,CAAC,KAAK,OAAO,GAAG;AAClB,iBAAK,YAAY;AAAA,UACnB;AAEA,iBAAO;AAAA,QACT;AAGA,QAAAA,IAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,iBAAO,KAAK,SAAS,IAAI,QAAQ;AAC/B,iBAAK,MAAM,KAAK,QAAQ,IAAI;AAAA,UAC9B;AAEA,mBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,iBAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC;AAAA,UAC7C;AAEA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,QAAAA,IAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,UAAAD,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,iBAAO,KAAK,KAAK,GAAG;AAAA,QACtB;AAGA,QAAAC,IAAG,UAAU,KAAK,SAAS,GAAI,KAAK;AAClC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,IAAI,GAAG;AACzD,iBAAO,IAAI,MAAM,EAAE,IAAI,IAAI;AAAA,QAC7B;AAEA,QAAAA,IAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,iBAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,QAC9B;AAGA,QAAAA,IAAG,UAAU,QAAQ,SAAS,MAAO,KAAK;AAExC,cAAI;AACJ,cAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,gBAAI;AAAA,UACN,OAAO;AACL,gBAAI;AAAA,UACN;AAEA,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC;AAAA,UAC7C;AAEA,eAAK,SAAS,EAAE;AAEhB,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,QAAAA,IAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,UAAAD,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,iBAAO,KAAK,MAAM,GAAG;AAAA,QACvB;AAGA,QAAAC,IAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,iBAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,QAC9B;AAEA,QAAAA,IAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAC3D,iBAAO,IAAI,MAAM,EAAE,MAAM,IAAI;AAAA,QAC/B;AAGA,QAAAA,IAAG,UAAU,QAAQ,SAAS,MAAO,KAAK;AAExC,cAAI;AACJ,cAAI;AACJ,cAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,gBAAI;AACJ,gBAAI;AAAA,UACN,OAAO;AACL,gBAAI;AACJ,gBAAI;AAAA,UACN;AAEA,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,UACxC;AAEA,cAAI,SAAS,GAAG;AACd,mBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,mBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,YAC3B;AAAA,UACF;AAEA,eAAK,SAAS,EAAE;AAEhB,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,QAAAA,IAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,UAAAD,SAAQ,KAAK,WAAW,IAAI,cAAc,CAAC;AAC3C,iBAAO,KAAK,MAAM,GAAG;AAAA,QACvB;AAGA,QAAAC,IAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC1D,iBAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,QAC9B;AAEA,QAAAA,IAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,MAAM,GAAG;AAC3D,iBAAO,IAAI,MAAM,EAAE,MAAM,IAAI;AAAA,QAC/B;AAGA,QAAAA,IAAG,UAAU,QAAQ,SAAS,MAAO,OAAO;AAC1C,UAAAD,QAAO,OAAO,UAAU,YAAY,SAAS,CAAC;AAE9C,cAAI,cAAc,KAAK,KAAK,QAAQ,EAAE,IAAI;AAC1C,cAAI,WAAW,QAAQ;AAGvB,eAAK,QAAQ,WAAW;AAExB,cAAI,WAAW,GAAG;AAChB;AAAA,UACF;AAGA,mBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,iBAAK,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAI;AAAA,UACnC;AAGA,cAAI,WAAW,GAAG;AAChB,iBAAK,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,IAAK,YAAc,KAAK;AAAA,UACvD;AAGA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAEA,QAAAC,IAAG,UAAU,OAAO,SAAS,KAAM,OAAO;AACxC,iBAAO,KAAK,MAAM,EAAE,MAAM,KAAK;AAAA,QACjC;AAGA,QAAAA,IAAG,UAAU,OAAO,SAAS,KAAM,KAAK,KAAK;AAC3C,UAAAD,QAAO,OAAO,QAAQ,YAAY,OAAO,CAAC;AAE1C,cAAI,MAAO,MAAM,KAAM;AACvB,cAAI,OAAO,MAAM;AAEjB,eAAK,QAAQ,MAAM,CAAC;AAEpB,cAAI,KAAK;AACP,iBAAK,MAAM,GAAG,IAAI,KAAK,MAAM,GAAG,IAAK,KAAK;AAAA,UAC5C,OAAO;AACL,iBAAK,MAAM,GAAG,IAAI,KAAK,MAAM,GAAG,IAAI,EAAE,KAAK;AAAA,UAC7C;AAEA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAGA,QAAAC,IAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AACtC,cAAI;AAGJ,cAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,iBAAK,WAAW;AAChB,gBAAI,KAAK,KAAK,GAAG;AACjB,iBAAK,YAAY;AACjB,mBAAO,KAAK,UAAU;AAAA,UAGxB,WAAW,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AACpD,gBAAI,WAAW;AACf,gBAAI,KAAK,KAAK,GAAG;AACjB,gBAAI,WAAW;AACf,mBAAO,EAAE,UAAU;AAAA,UACrB;AAGA,cAAI,GAAG;AACP,cAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,gBAAI;AACJ,gBAAI;AAAA,UACN,OAAO;AACL,gBAAI;AACJ,gBAAI;AAAA,UACN;AAEA,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAK,EAAE,MAAM,CAAC,IAAI,MAAM,EAAE,MAAM,CAAC,IAAI,KAAK;AAC1C,iBAAK,MAAM,CAAC,IAAI,IAAI;AACpB,oBAAQ,MAAM;AAAA,UAChB;AACA,iBAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,iBAAK,EAAE,MAAM,CAAC,IAAI,KAAK;AACvB,iBAAK,MAAM,CAAC,IAAI,IAAI;AACpB,oBAAQ,MAAM;AAAA,UAChB;AAEA,eAAK,SAAS,EAAE;AAChB,cAAI,UAAU,GAAG;AACf,iBAAK,MAAM,KAAK,MAAM,IAAI;AAC1B,iBAAK;AAAA,UAEP,WAAW,MAAM,MAAM;AACrB,mBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,mBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,YAC3B;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAGA,QAAAA,IAAG,UAAU,MAAM,SAASa,KAAK,KAAK;AACpC,cAAI;AACJ,cAAI,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AAC7C,gBAAI,WAAW;AACf,kBAAM,KAAK,IAAI,GAAG;AAClB,gBAAI,YAAY;AAChB,mBAAO;AAAA,UACT,WAAW,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AACpD,iBAAK,WAAW;AAChB,kBAAM,IAAI,IAAI,IAAI;AAClB,iBAAK,WAAW;AAChB,mBAAO;AAAA,UACT;AAEA,cAAI,KAAK,SAAS,IAAI;AAAQ,mBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAE1D,iBAAO,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,QAC9B;AAGA,QAAAb,IAAG,UAAU,OAAO,SAAS,KAAM,KAAK;AAEtC,cAAI,IAAI,aAAa,GAAG;AACtB,gBAAI,WAAW;AACf,gBAAI,IAAI,KAAK,KAAK,GAAG;AACrB,gBAAI,WAAW;AACf,mBAAO,EAAE,UAAU;AAAA,UAGrB,WAAW,KAAK,aAAa,GAAG;AAC9B,iBAAK,WAAW;AAChB,iBAAK,KAAK,GAAG;AACb,iBAAK,WAAW;AAChB,mBAAO,KAAK,UAAU;AAAA,UACxB;AAGA,cAAI,MAAM,KAAK,IAAI,GAAG;AAGtB,cAAI,QAAQ,GAAG;AACb,iBAAK,WAAW;AAChB,iBAAK,SAAS;AACd,iBAAK,MAAM,CAAC,IAAI;AAChB,mBAAO;AAAA,UACT;AAGA,cAAI,GAAG;AACP,cAAI,MAAM,GAAG;AACX,gBAAI;AACJ,gBAAI;AAAA,UACN,OAAO;AACL,gBAAI;AACJ,gBAAI;AAAA,UACN;AAEA,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,iBAAK,EAAE,MAAM,CAAC,IAAI,MAAM,EAAE,MAAM,CAAC,IAAI,KAAK;AAC1C,oBAAQ,KAAK;AACb,iBAAK,MAAM,CAAC,IAAI,IAAI;AAAA,UACtB;AACA,iBAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,iBAAK,EAAE,MAAM,CAAC,IAAI,KAAK;AACvB,oBAAQ,KAAK;AACb,iBAAK,MAAM,CAAC,IAAI,IAAI;AAAA,UACtB;AAGA,cAAI,UAAU,KAAK,IAAI,EAAE,UAAU,MAAM,MAAM;AAC7C,mBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,mBAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,YAC3B;AAAA,UACF;AAEA,eAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,CAAC;AAErC,cAAI,MAAM,MAAM;AACd,iBAAK,WAAW;AAAA,UAClB;AAEA,iBAAO,KAAK,OAAO;AAAA,QACrB;AAGA,QAAAA,IAAG,UAAU,MAAM,SAAS,IAAK,KAAK;AACpC,iBAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAAA,QAC9B;AAEA,iBAAS,WAAY,MAAM,KAAK,KAAK;AACnC,cAAI,WAAW,IAAI,WAAW,KAAK;AACnC,cAAI,MAAO,KAAK,SAAS,IAAI,SAAU;AACvC,cAAI,SAAS;AACb,gBAAO,MAAM,IAAK;AAGlB,cAAI,IAAI,KAAK,MAAM,CAAC,IAAI;AACxB,cAAI,IAAI,IAAI,MAAM,CAAC,IAAI;AACvB,cAAI,IAAI,IAAI;AAEZ,cAAI,KAAK,IAAI;AACb,cAAI,QAAS,IAAI,WAAa;AAC9B,cAAI,MAAM,CAAC,IAAI;AAEf,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAG5B,gBAAI,SAAS,UAAU;AACvB,gBAAI,QAAQ,QAAQ;AACpB,gBAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS,CAAC;AACrC,qBAAS,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,SAAS,CAAC,GAAG,KAAK,MAAM,KAAK;AAC7D,kBAAI,IAAK,IAAI,IAAK;AAClB,kBAAI,KAAK,MAAM,CAAC,IAAI;AACpB,kBAAI,IAAI,MAAM,CAAC,IAAI;AACnB,kBAAI,IAAI,IAAI;AACZ,wBAAW,IAAI,WAAa;AAC5B,sBAAQ,IAAI;AAAA,YACd;AACA,gBAAI,MAAM,CAAC,IAAI,QAAQ;AACvB,oBAAQ,SAAS;AAAA,UACnB;AACA,cAAI,UAAU,GAAG;AACf,gBAAI,MAAM,CAAC,IAAI,QAAQ;AAAA,UACzB,OAAO;AACL,gBAAI;AAAA,UACN;AAEA,iBAAO,IAAI,OAAO;AAAA,QACpB;AAKA,YAAI,cAAc,SAASc,aAAa,MAAM,KAAK,KAAK;AACtD,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,IAAI;AACZ,cAAI,IAAI,IAAI;AACZ,cAAI,IAAI;AACR,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AACjB,cAAI,KAAK,EAAE,CAAC,IAAI;AAChB,cAAI,MAAM,KAAK;AACf,cAAI,MAAM,OAAO;AAEjB,cAAI,WAAW,KAAK,WAAW,IAAI;AACnC,cAAI,SAAS;AAEb,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAI,MAAQ,IAAI,KAAM,OAAO,MAAM,SAAW,MAAO;AACrD,eAAO,MAAM,QAAQ,MAAO,MAAM,OAAO,MAAO;AAChD,gBAAM;AAEN,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,gBAAM,KAAK,KAAK,KAAK,GAAG;AACxB,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAK,KAAK,KAAK,KAAK,GAAG;AACvB,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,eAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,gBAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,gBAAO,MAAM,KAAK,KAAK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,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyyB,CAAC,IA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,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,YAAY,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KA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AAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,OAAM,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CA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,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,MAAK,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,MAAK,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,MAAK,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,MAAK,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAS,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyyB,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyyB,CAAC,IAAG,GAAG,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,MAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,OAAO,GAAE,CAAC,CAAC,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GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAO,IAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,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GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,YAAY,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,0BAAyh97P;AAAA;AAAA;AAEA,UAAI,WAAW,UAAQ,UAAU;AACjC,UAAI,eAAe;AAEnB,UAAI,qBAAqB;AAAA,QACvB,cAAc;AAAA,QACd,iBAAiB;AAAA,MACnB;AAEA,eAASmB,WAAU,KAAK;AACtB,eAAO,IAAI,MAAM,IAAQ,EAAE,IAAI,SAAU,GAAG;AAAE,iBAAO,EAAE,UAAU,KAAK;AAAA,QAAG,CAAC,EAAE,KAAK,IAAQ;AAAA,MAC3F;AAEA,eAAS,WAAW,KAAK;AACvB,YAAI,QAAQ;AACZ,YAAI,MAAM,aAAa,SAAS;AAEhC,eAAO,SAAS,KAAK;AACnB,cAAI,MAAM,KAAK,OAAO,QAAQ,OAAO,CAAC;AAEtC,cAAI,SAAS,aAAa,GAAG;AAC7B,cAAI,OAAO,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,CAAC,EAAE,CAAC,KAAK,KAAK;AAC9C,mBAAO;AAAA,UACT,WAAW,OAAO,CAAC,EAAE,CAAC,IAAI,KAAK;AAC7B,kBAAM,MAAM;AAAA,UACd,OAAO;AACL,oBAAQ,MAAM;AAAA,UAChB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,qBAAqB;AAEzB,eAAS,aAAa,QAAQ;AAC5B,eAAO,OAEJ,QAAQ,oBAAoB,GAAG,EAE/B;AAAA,MACL;AAEA,eAAS,SAAS,aAAa,SAAS,mBAAmB;AACzD,YAAI,WAAW;AACf,YAAI,YAAY;AAEhB,YAAI,MAAM,aAAa,WAAW;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,cAAI,YAAY,YAAY,YAAY,CAAC;AACzC,cAAI,SAAS,WAAW,SAAS;AAEjC,kBAAQ,OAAO,CAAC,GAAG;AAAA,YACjB,KAAK;AACH,yBAAW;AACX,2BAAa,OAAO,cAAc,SAAS;AAC3C;AAAA,YACF,KAAK;AACH;AAAA,YACF,KAAK;AACH,2BAAa,OAAO,cAAc,MAAM,QAAQ,OAAO,CAAC,CAAC;AACzD;AAAA,YACF,KAAK;AACH,kBAAI,sBAAsB,mBAAmB,cAAc;AACzD,6BAAa,OAAO,cAAc,MAAM,QAAQ,OAAO,CAAC,CAAC;AAAA,cAC3D,OAAO;AACL,6BAAa,OAAO,cAAc,SAAS;AAAA,cAC7C;AACA;AAAA,YACF,KAAK;AACH,2BAAa,OAAO,cAAc,SAAS;AAC3C;AAAA,YACF,KAAK;AACH,kBAAI,SAAS;AACX,2BAAW;AACX,6BAAa,OAAO,cAAc,SAAS;AAAA,cAC7C,OAAO;AACL,6BAAa,OAAO,cAAc,MAAM,QAAQ,OAAO,CAAC,CAAC;AAAA,cAC3D;AACA;AAAA,YACF,KAAK;AACH,kBAAI,SAAS;AACX,2BAAW;AAAA,cACb;AAEA,2BAAa,OAAO,cAAc,SAAS;AAC3C;AAAA,UACJ;AAAA,QACF;AAEA,eAAO;AAAA,UACL,QAAQ;AAAA,UACR,OAAO;AAAA,QACT;AAAA,MACF;AAEA,UAAI,sBAAsB;AAE1B,eAAS,cAAc,OAAO,mBAAmB;AAC/C,YAAI,MAAM,OAAO,GAAG,CAAC,MAAM,QAAQ;AACjC,kBAAQ,SAAS,UAAU,KAAK;AAChC,8BAAoB,mBAAmB;AAAA,QACzC;AAEA,YAAI,QAAQ;AAEZ,YAAIA,WAAU,KAAK,MAAM,SACpB,MAAM,CAAC,MAAM,OAAO,MAAM,CAAC,MAAM,OAClC,MAAM,CAAC,MAAM,OAAO,MAAM,MAAM,SAAS,CAAC,MAAM,OAChD,MAAM,QAAQ,GAAG,MAAM,MACvB,MAAM,OAAO,mBAAmB,MAAM,GAAG;AAC3C,kBAAQ;AAAA,QACV;AAEA,YAAI,MAAM,aAAa,KAAK;AAC5B,iBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,cAAI,SAAS,WAAW,MAAM,YAAY,CAAC,CAAC;AAC5C,cAAK,eAAe,mBAAmB,gBAAgB,OAAO,CAAC,MAAM,WAChE,eAAe,mBAAmB,mBAClC,OAAO,CAAC,MAAM,WAAW,OAAO,CAAC,MAAM,aAAc;AACxD,oBAAQ;AACR;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,UACL;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,eAAS,WAAW,aAAa,SAAS,mBAAmB;AAC3D,YAAI,SAAS,SAAS,aAAa,SAAS,iBAAiB;AAC7D,eAAO,SAASA,WAAU,OAAO,MAAM;AAEvC,YAAI,SAAS,OAAO,OAAO,MAAM,GAAG;AACpC,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,cAAI;AACF,gBAAI,aAAa,cAAc,OAAO,CAAC,CAAC;AACxC,mBAAO,CAAC,IAAI,WAAW;AACvB,mBAAO,QAAQ,OAAO,SAAS,WAAW;AAAA,UAC5C,SAAQ,GAAN;AACA,mBAAO,QAAQ;AAAA,UACjB;AAAA,QACF;AAEA,eAAO;AAAA,UACL,QAAQ,OAAO,KAAK,GAAG;AAAA,UACvB,OAAO,OAAO;AAAA,QAChB;AAAA,MACF;AAEA,aAAO,QAAQ,UAAU,SAAS,aAAa,SAAS,mBAAmB,iBAAiB;AAC1F,YAAI,SAAS,WAAW,aAAa,SAAS,iBAAiB;AAC/D,YAAI,SAAS,OAAO,OAAO,MAAM,GAAG;AACpC,iBAAS,OAAO,IAAI,SAAS,GAAG;AAC9B,cAAI;AACF,mBAAO,SAAS,QAAQ,CAAC;AAAA,UAC3B,SAAQ,GAAN;AACA,mBAAO,QAAQ;AACf,mBAAO;AAAA,UACT;AAAA,QACF,CAAC;AAED,YAAI,iBAAiB;AACnB,cAAI,QAAQ,OAAO,MAAM,GAAG,OAAO,SAAS,CAAC,EAAE,KAAK,GAAG,EAAE;AACzD,cAAI,MAAM,SAAS,OAAO,MAAM,WAAW,GAAG;AAC5C,mBAAO,QAAQ;AAAA,UACjB;AAEA,mBAAS,IAAE,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACpC,gBAAI,OAAO,SAAS,MAAM,OAAO,WAAW,GAAG;AAC7C,qBAAO,QAAQ;AACf;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,YAAI,OAAO;AAAO,iBAAO;AACzB,eAAO,OAAO,KAAK,GAAG;AAAA,MACxB;AAEA,aAAO,QAAQ,YAAY,SAAS,aAAa,SAAS;AACxD,YAAI,SAAS,WAAW,aAAa,SAAS,mBAAmB,eAAe;AAEhF,eAAO;AAAA,UACL,QAAQ,OAAO;AAAA,UACf,OAAO,OAAO;AAAA,QAChB;AAAA,MACF;AAEA,aAAO,QAAQ,qBAAqB;AAAA;AAAA;;;AChMpC;AAAA;AAAA;AACA,UAAM,WAAW,UAAQ,UAAU;AACnC,UAAM,OAAO;AAEb,UAAM,iBAAiB;AAAA,QACrB,KAAK;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA,QACP,IAAI;AAAA,QACJ,KAAK;AAAA,MACP;AAEA,UAAM,UAAU,OAAO,SAAS;AAEhC,eAAS,aAAa,KAAK;AACzB,eAAO,SAAS,KAAK,OAAO,GAAG,EAAE;AAAA,MACnC;AAEA,eAAS,GAAG,OAAO,KAAK;AACtB,cAAM,IAAI,MAAM,GAAG;AACnB,eAAO,MAAM,CAAC,IAAI,SAAY,OAAO,cAAc,CAAC;AAAA,MACtD;AAEA,eAAS,aAAa,GAAG;AACvB,eAAO,KAAK,MAAQ,KAAK;AAAA,MAC3B;AAEA,eAAS,aAAa,GAAG;AACvB,eAAQ,KAAK,MAAQ,KAAK,MAAU,KAAK,MAAQ,KAAK;AAAA,MACxD;AAEA,eAAS,oBAAoB,GAAG;AAC9B,eAAO,aAAa,CAAC,KAAK,aAAa,CAAC;AAAA,MAC1C;AAEA,eAAS,WAAW,GAAG;AACrB,eAAO,aAAa,CAAC,KAAM,KAAK,MAAQ,KAAK,MAAU,KAAK,MAAQ,KAAK;AAAA,MAC3E;AAEA,eAAS,YAAY,QAAQ;AAC3B,eAAO,WAAW,OAAO,OAAO,YAAY,MAAM;AAAA,MACpD;AAEA,eAAS,YAAY,QAAQ;AAC3B,iBAAS,OAAO,YAAY;AAC5B,eAAO,WAAW,QAAQ,WAAW,UAAU,WAAW,UAAU,WAAW;AAAA,MACjF;AAEA,eAAS,+BAA+B,KAAK,KAAK;AAChD,eAAO,aAAa,GAAG,MAAM,QAAQ,MAAM,QAAQ;AAAA,MACrD;AAEA,eAAS,2BAA2B,QAAQ;AAC1C,eAAO,OAAO,WAAW,KAAK,aAAa,OAAO,YAAY,CAAC,CAAC,MAAM,OAAO,CAAC,MAAM,OAAO,OAAO,CAAC,MAAM;AAAA,MAC3G;AAEA,eAAS,qCAAqC,QAAQ;AACpD,eAAO,OAAO,WAAW,KAAK,aAAa,OAAO,YAAY,CAAC,CAAC,KAAK,OAAO,CAAC,MAAM;AAAA,MACrF;AAEA,eAAS,+BAA+B,QAAQ;AAC9C,eAAO,OAAO,OAAO,2DAA2D,MAAM;AAAA,MACxF;AAEA,eAAS,+CAA+C,QAAQ;AAC9D,eAAO,OAAO,OAAO,yDAAyD,MAAM;AAAA,MACtF;AAEA,eAAS,gBAAgB,QAAQ;AAC/B,eAAO,eAAe,MAAM,MAAM;AAAA,MACpC;AAEA,eAAS,UAAU,KAAK;AACtB,eAAO,gBAAgB,IAAI,MAAM;AAAA,MACnC;AAEA,eAAS,YAAY,QAAQ;AAC3B,eAAO,eAAe,MAAM;AAAA,MAC9B;AAEA,eAAS,cAAc,GAAG;AACxB,YAAI,MAAM,EAAE,SAAS,EAAE,EAAE,YAAY;AACrC,YAAI,IAAI,WAAW,GAAG;AACpB,gBAAM,MAAM;AAAA,QACd;AAEA,eAAO,MAAM;AAAA,MACf;AAEA,eAAS,kBAAkB,GAAG;AAC5B,cAAM,MAAM,IAAI,OAAO,CAAC;AAExB,YAAI,MAAM;AAEV,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,iBAAO,cAAc,IAAI,CAAC,CAAC;AAAA,QAC7B;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,kBAAkB,KAAK;AAC9B,cAAM,QAAQ,IAAI,OAAO,GAAG;AAC5B,cAAMC,UAAS,CAAC;AAChB,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,cAAI,MAAM,CAAC,MAAM,IAAI;AACnB,YAAAA,QAAO,KAAK,MAAM,CAAC,CAAC;AAAA,UACtB,WAAW,MAAM,CAAC,MAAM,MAAM,WAAW,MAAM,IAAI,CAAC,CAAC,KAAK,WAAW,MAAM,IAAI,CAAC,CAAC,GAAG;AAClF,YAAAA,QAAO,KAAK,SAAS,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,SAAS,GAAG,EAAE,CAAC;AAC9D,iBAAK;AAAA,UACP,OAAO;AACL,YAAAA,QAAO,KAAK,MAAM,CAAC,CAAC;AAAA,UACtB;AAAA,QACF;AACA,eAAO,IAAI,OAAOA,OAAM,EAAE,SAAS;AAAA,MACrC;AAEA,eAAS,yBAAyB,GAAG;AACnC,eAAO,KAAK,MAAQ,IAAI;AAAA,MAC1B;AAEA,UAAM,4BAA4B,oBAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,CAAC;AAChF,eAAS,oBAAoB,GAAG;AAC9B,eAAO,yBAAyB,CAAC,KAAK,0BAA0B,IAAI,CAAC;AAAA,MACvE;AAEA,UAAM,gCACJ,oBAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC;AACnD,eAAS,wBAAwB,GAAG;AAClC,eAAO,oBAAoB,CAAC,KAAK,8BAA8B,IAAI,CAAC;AAAA,MACtE;AAEA,eAAS,kBAAkB,GAAG,oBAAoB;AAChD,cAAM,OAAO,OAAO,cAAc,CAAC;AAEnC,YAAI,mBAAmB,CAAC,GAAG;AACzB,iBAAO,kBAAkB,IAAI;AAAA,QAC/B;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,gBAAgB,OAAO;AAC9B,YAAI,IAAI;AAER,YAAI,MAAM,UAAU,KAAK,MAAM,OAAO,CAAC,MAAM,OAAO,MAAM,OAAO,CAAC,EAAE,YAAY,MAAM,KAAK;AACzF,kBAAQ,MAAM,UAAU,CAAC;AACzB,cAAI;AAAA,QACN,WAAW,MAAM,UAAU,KAAK,MAAM,OAAO,CAAC,MAAM,KAAK;AACvD,kBAAQ,MAAM,UAAU,CAAC;AACzB,cAAI;AAAA,QACN;AAEA,YAAI,UAAU,IAAI;AAChB,iBAAO;AAAA,QACT;AAEA,cAAM,QAAQ,MAAM,KAAK,WAAY,MAAM,KAAK,iBAAiB;AACjE,YAAI,MAAM,KAAK,KAAK,GAAG;AACrB,iBAAO;AAAA,QACT;AAEA,eAAO,SAAS,OAAO,CAAC;AAAA,MAC1B;AAEA,eAAS,UAAU,OAAO;AACxB,cAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,YAAI,MAAM,MAAM,SAAS,CAAC,MAAM,IAAI;AAClC,cAAI,MAAM,SAAS,GAAG;AACpB,kBAAM,IAAI;AAAA,UACZ;AAAA,QACF;AAEA,YAAI,MAAM,SAAS,GAAG;AACpB,iBAAO;AAAA,QACT;AAEA,cAAM,UAAU,CAAC;AACjB,mBAAW,QAAQ,OAAO;AACxB,cAAI,SAAS,IAAI;AACf,mBAAO;AAAA,UACT;AACA,gBAAM,IAAI,gBAAgB,IAAI;AAC9B,cAAI,MAAM,SAAS;AACjB,mBAAO;AAAA,UACT;AAEA,kBAAQ,KAAK,CAAC;AAAA,QAChB;AAEA,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,GAAG,EAAE,GAAG;AAC3C,cAAI,QAAQ,CAAC,IAAI,KAAK;AACpB,mBAAO;AAAA,UACT;AAAA,QACF;AACA,YAAI,QAAQ,QAAQ,SAAS,CAAC,KAAK,KAAK,IAAI,KAAK,IAAI,QAAQ,MAAM,GAAG;AACpE,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,QAAQ,IAAI;AACvB,YAAI,UAAU;AAEd,mBAAW,KAAK,SAAS;AACvB,kBAAQ,IAAI,KAAK,IAAI,KAAK,IAAI,OAAO;AACrC,YAAE;AAAA,QACJ;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,cAAc,SAAS;AAC9B,YAAIA,UAAS;AACb,YAAI,IAAI;AAER,iBAAS,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3B,UAAAA,UAAS,OAAO,IAAI,GAAG,IAAIA;AAC3B,cAAI,MAAM,GAAG;AACX,YAAAA,UAAS,MAAMA;AAAA,UACjB;AACA,cAAI,KAAK,MAAM,IAAI,GAAG;AAAA,QACxB;AAEA,eAAOA;AAAA,MACT;AAEA,eAAS,UAAU,OAAO;AACxB,cAAM,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACvC,YAAI,aAAa;AACjB,YAAI,WAAW;AACf,YAAI,UAAU;AAEd,gBAAQ,SAAS,KAAK,OAAO,KAAK;AAElC,YAAI,MAAM,OAAO,MAAM,IAAI;AACzB,cAAI,MAAM,UAAU,CAAC,MAAM,IAAI;AAC7B,mBAAO;AAAA,UACT;AAEA,qBAAW;AACX,YAAE;AACF,qBAAW;AAAA,QACb;AAEA,eAAO,UAAU,MAAM,QAAQ;AAC7B,cAAI,eAAe,GAAG;AACpB,mBAAO;AAAA,UACT;AAEA,cAAI,MAAM,OAAO,MAAM,IAAI;AACzB,gBAAI,aAAa,MAAM;AACrB,qBAAO;AAAA,YACT;AACA,cAAE;AACF,cAAE;AACF,uBAAW;AACX;AAAA,UACF;AAEA,cAAI,QAAQ;AACZ,cAAI,SAAS;AAEb,iBAAO,SAAS,KAAK,WAAW,MAAM,OAAO,CAAC,GAAG;AAC/C,oBAAQ,QAAQ,KAAO,SAAS,GAAG,OAAO,OAAO,GAAG,EAAE;AACtD,cAAE;AACF,cAAE;AAAA,UACJ;AAEA,cAAI,MAAM,OAAO,MAAM,IAAI;AACzB,gBAAI,WAAW,GAAG;AAChB,qBAAO;AAAA,YACT;AAEA,uBAAW;AAEX,gBAAI,aAAa,GAAG;AAClB,qBAAO;AAAA,YACT;AAEA,gBAAI,cAAc;AAElB,mBAAO,MAAM,OAAO,MAAM,QAAW;AACnC,kBAAI,YAAY;AAEhB,kBAAI,cAAc,GAAG;AACnB,oBAAI,MAAM,OAAO,MAAM,MAAM,cAAc,GAAG;AAC5C,oBAAE;AAAA,gBACJ,OAAO;AACL,yBAAO;AAAA,gBACT;AAAA,cACF;AAEA,kBAAI,CAAC,aAAa,MAAM,OAAO,CAAC,GAAG;AACjC,uBAAO;AAAA,cACT;AAEA,qBAAO,aAAa,MAAM,OAAO,CAAC,GAAG;AACnC,sBAAMC,UAAS,SAAS,GAAG,OAAO,OAAO,CAAC;AAC1C,oBAAI,cAAc,MAAM;AACtB,8BAAYA;AAAA,gBACd,WAAW,cAAc,GAAG;AAC1B,yBAAO;AAAA,gBACT,OAAO;AACL,8BAAY,YAAY,KAAKA;AAAA,gBAC/B;AACA,oBAAI,YAAY,KAAK;AACnB,yBAAO;AAAA,gBACT;AACA,kBAAE;AAAA,cACJ;AAEA,sBAAQ,UAAU,IAAI,QAAQ,UAAU,IAAI,MAAQ;AAEpD,gBAAE;AAEF,kBAAI,gBAAgB,KAAK,gBAAgB,GAAG;AAC1C,kBAAE;AAAA,cACJ;AAAA,YACF;AAEA,gBAAI,gBAAgB,GAAG;AACrB,qBAAO;AAAA,YACT;AAEA;AAAA,UACF,WAAW,MAAM,OAAO,MAAM,IAAI;AAChC,cAAE;AACF,gBAAI,MAAM,OAAO,MAAM,QAAW;AAChC,qBAAO;AAAA,YACT;AAAA,UACF,WAAW,MAAM,OAAO,MAAM,QAAW;AACvC,mBAAO;AAAA,UACT;AAEA,kBAAQ,UAAU,IAAI;AACtB,YAAE;AAAA,QACJ;AAEA,YAAI,aAAa,MAAM;AACrB,cAAI,QAAQ,aAAa;AACzB,uBAAa;AACb,iBAAO,eAAe,KAAK,QAAQ,GAAG;AACpC,kBAAM,OAAO,QAAQ,WAAW,QAAQ,CAAC;AACzC,oBAAQ,WAAW,QAAQ,CAAC,IAAI,QAAQ,UAAU;AAClD,oBAAQ,UAAU,IAAI;AACtB,cAAE;AACF,cAAE;AAAA,UACJ;AAAA,QACF,WAAW,aAAa,QAAQ,eAAe,GAAG;AAChD,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,cAAc,SAAS;AAC9B,YAAID,UAAS;AACb,cAAM,YAAY,wBAAwB,OAAO;AACjD,cAAM,WAAW,UAAU;AAC3B,YAAI,UAAU;AAEd,iBAAS,aAAa,GAAG,cAAc,GAAG,EAAE,YAAY;AACtD,cAAI,WAAW,QAAQ,UAAU,MAAM,GAAG;AACxC;AAAA,UACF,WAAW,SAAS;AAClB,sBAAU;AAAA,UACZ;AAEA,cAAI,aAAa,YAAY;AAC3B,kBAAM,YAAY,eAAe,IAAI,OAAO;AAC5C,YAAAA,WAAU;AACV,sBAAU;AACV;AAAA,UACF;AAEA,UAAAA,WAAU,QAAQ,UAAU,EAAE,SAAS,EAAE;AAEzC,cAAI,eAAe,GAAG;AACpB,YAAAA,WAAU;AAAA,UACZ;AAAA,QACF;AAEA,eAAOA;AAAA,MACT;AAEA,eAAS,UAAU,OAAO,cAAc;AACtC,YAAI,MAAM,CAAC,MAAM,KAAK;AACpB,cAAI,MAAM,MAAM,SAAS,CAAC,MAAM,KAAK;AACnC,mBAAO;AAAA,UACT;AAEA,iBAAO,UAAU,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC,CAAC;AAAA,QACvD;AAEA,YAAI,CAAC,cAAc;AACjB,iBAAO,gBAAgB,KAAK;AAAA,QAC9B;AAEA,cAAM,SAAS,kBAAkB,KAAK;AACtC,cAAM,cAAc,KAAK,QAAQ,QAAQ,OAAO,KAAK,mBAAmB,iBAAiB,KAAK;AAC9F,YAAI,gBAAgB,MAAM;AACxB,iBAAO;AAAA,QACT;AAEA,YAAI,+BAA+B,WAAW,GAAG;AAC/C,iBAAO;AAAA,QACT;AAEA,cAAM,WAAW,UAAU,WAAW;AACtC,YAAI,OAAO,aAAa,YAAY,aAAa,SAAS;AACxD,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,gBAAgB,OAAO;AAC9B,YAAI,+CAA+C,KAAK,GAAG;AACzD,iBAAO;AAAA,QACT;AAEA,YAAIA,UAAS;AACb,cAAM,UAAU,SAAS,KAAK,OAAO,KAAK;AAC1C,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACvC,UAAAA,WAAU,kBAAkB,QAAQ,CAAC,GAAG,wBAAwB;AAAA,QAClE;AACA,eAAOA;AAAA,MACT;AAEA,eAAS,wBAAwB,KAAK;AACpC,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,YAAY;AAChB,YAAI,UAAU;AAEd,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,cAAI,IAAI,CAAC,MAAM,GAAG;AAChB,gBAAI,UAAU,QAAQ;AACpB,uBAAS;AACT,uBAAS;AAAA,YACX;AAEA,wBAAY;AACZ,sBAAU;AAAA,UACZ,OAAO;AACL,gBAAI,cAAc,MAAM;AACtB,0BAAY;AAAA,YACd;AACA,cAAE;AAAA,UACJ;AAAA,QACF;AAGA,YAAI,UAAU,QAAQ;AACpB,mBAAS;AACT,mBAAS;AAAA,QACX;AAEA,eAAO;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,QACP;AAAA,MACF;AAEA,eAAS,cAAc,MAAM;AAC3B,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO,cAAc,IAAI;AAAA,QAC3B;AAGA,YAAI,gBAAgB,OAAO;AACzB,iBAAO,MAAM,cAAc,IAAI,IAAI;AAAA,QACrC;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,iBAAiB,KAAK;AAC7B,eAAO,IAAI,QAAQ,oDAAoD,EAAE;AAAA,MAC3E;AAEA,eAAS,kBAAkB,KAAK;AAC9B,eAAO,IAAI,QAAQ,yBAAyB,EAAE;AAAA,MAChD;AAEA,eAAS,YAAY,KAAK;AACxB,cAAM,OAAO,IAAI;AACjB,YAAI,KAAK,WAAW,GAAG;AACrB;AAAA,QACF;AACA,YAAI,IAAI,WAAW,UAAU,KAAK,WAAW,KAAK,+BAA+B,KAAK,CAAC,CAAC,GAAG;AACzF;AAAA,QACF;AAEA,aAAK,IAAI;AAAA,MACX;AAEA,eAAS,oBAAoB,KAAK;AAChC,eAAO,IAAI,aAAa,MAAM,IAAI,aAAa;AAAA,MACjD;AAEA,eAAS,gCAAgC,KAAK;AAC5C,eAAO,IAAI,SAAS,QAAQ,IAAI,SAAS,MAAM,IAAI,oBAAoB,IAAI,WAAW;AAAA,MACxF;AAEA,eAAS,+BAA+B,QAAQ;AAC9C,eAAO,cAAc,KAAK,MAAM;AAAA,MAClC;AAEA,eAAS,gBAAgB,OAAO,MAAM,kBAAkB,KAAK,eAAe;AAC1E,aAAK,UAAU;AACf,aAAK,QAAQ;AACb,aAAK,OAAO,QAAQ;AACpB,aAAK,mBAAmB,oBAAoB;AAC5C,aAAK,gBAAgB;AACrB,aAAK,MAAM;AACX,aAAK,UAAU;AACf,aAAK,aAAa;AAElB,YAAI,CAAC,KAAK,KAAK;AACb,eAAK,MAAM;AAAA,YACT,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,UAAU;AAAA,YACV,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM,CAAC;AAAA,YACP,OAAO;AAAA,YACP,UAAU;AAAA,YAEV,kBAAkB;AAAA,UACpB;AAEA,gBAAME,OAAM,iBAAiB,KAAK,KAAK;AACvC,cAAIA,SAAQ,KAAK,OAAO;AACtB,iBAAK,aAAa;AAAA,UACpB;AACA,eAAK,QAAQA;AAAA,QACf;AAEA,cAAM,MAAM,kBAAkB,KAAK,KAAK;AACxC,YAAI,QAAQ,KAAK,OAAO;AACtB,eAAK,aAAa;AAAA,QACpB;AACA,aAAK,QAAQ;AAEb,aAAK,QAAQ,iBAAiB;AAE9B,aAAK,SAAS;AACd,aAAK,SAAS;AACd,aAAK,UAAU;AACf,aAAK,wBAAwB;AAE7B,aAAK,QAAQ,SAAS,KAAK,OAAO,KAAK,KAAK;AAE5C,eAAO,KAAK,WAAW,KAAK,MAAM,QAAQ,EAAE,KAAK,SAAS;AACxD,gBAAM,IAAI,KAAK,MAAM,KAAK,OAAO;AACjC,gBAAM,OAAO,MAAM,CAAC,IAAI,SAAY,OAAO,cAAc,CAAC;AAG1D,gBAAMC,OAAM,KAAK,WAAW,KAAK,KAAK,EAAE,GAAG,IAAI;AAC/C,cAAI,CAACA,MAAK;AACR;AAAA,UACF,WAAWA,SAAQ,SAAS;AAC1B,iBAAK,UAAU;AACf;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,sBAAgB,UAAU,oBAAoB,IAAI,SAAS,iBAAiB,GAAG,MAAM;AACnF,YAAI,aAAa,CAAC,GAAG;AACnB,eAAK,UAAU,KAAK,YAAY;AAChC,eAAK,QAAQ;AAAA,QACf,WAAW,CAAC,KAAK,eAAe;AAC9B,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT,OAAO;AACL,eAAK,aAAa;AAClB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,cAAc,IAAI,SAAS,YAAY,GAAG,MAAM;AACxE,YAAI,oBAAoB,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAC9D,eAAK,UAAU,KAAK,YAAY;AAAA,QAClC,WAAW,MAAM,IAAI;AACnB,cAAI,KAAK,eAAe;AACtB,gBAAI,UAAU,KAAK,GAAG,KAAK,CAAC,gBAAgB,KAAK,MAAM,GAAG;AACxD,qBAAO;AAAA,YACT;AAEA,gBAAI,CAAC,UAAU,KAAK,GAAG,KAAK,gBAAgB,KAAK,MAAM,GAAG;AACxD,qBAAO;AAAA,YACT;AAEA,iBAAK,oBAAoB,KAAK,GAAG,KAAK,KAAK,IAAI,SAAS,SAAS,KAAK,WAAW,QAAQ;AACvF,qBAAO;AAAA,YACT;AAEA,gBAAI,KAAK,IAAI,WAAW,WAAW,KAAK,IAAI,SAAS,MAAM,KAAK,IAAI,SAAS,OAAO;AAClF,qBAAO;AAAA,YACT;AAAA,UACF;AACA,eAAK,IAAI,SAAS,KAAK;AACvB,eAAK,SAAS;AACd,cAAI,KAAK,eAAe;AACtB,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,IAAI,WAAW,QAAQ;AAC9B,gBAAI,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,MAAM,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI;AAC9E,mBAAK,aAAa;AAAA,YACpB;AACA,iBAAK,QAAQ;AAAA,UACf,WAAW,UAAU,KAAK,GAAG,KAAK,KAAK,SAAS,QAAQ,KAAK,KAAK,WAAW,KAAK,IAAI,QAAQ;AAC5F,iBAAK,QAAQ;AAAA,UACf,WAAW,UAAU,KAAK,GAAG,GAAG;AAC9B,iBAAK,QAAQ;AAAA,UACf,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI;AAC9C,iBAAK,QAAQ;AACb,cAAE,KAAK;AAAA,UACT,OAAO;AACL,iBAAK,IAAI,mBAAmB;AAC5B,iBAAK,IAAI,KAAK,KAAK,EAAE;AACrB,iBAAK,QAAQ;AAAA,UACf;AAAA,QACF,WAAW,CAAC,KAAK,eAAe;AAC9B,eAAK,SAAS;AACd,eAAK,QAAQ;AACb,eAAK,UAAU;AAAA,QACjB,OAAO;AACL,eAAK,aAAa;AAClB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,iBAAiB,IAAI,SAAS,cAAc,GAAG;AACvE,YAAI,KAAK,SAAS,QAAS,KAAK,KAAK,oBAAoB,MAAM,IAAK;AAClE,iBAAO;AAAA,QACT,WAAW,KAAK,KAAK,oBAAoB,MAAM,IAAI;AACjD,eAAK,IAAI,SAAS,KAAK,KAAK;AAC5B,eAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM;AACrC,eAAK,IAAI,QAAQ,KAAK,KAAK;AAC3B,eAAK,IAAI,WAAW;AACpB,eAAK,IAAI,mBAAmB;AAC5B,eAAK,QAAQ;AAAA,QACf,WAAW,KAAK,KAAK,WAAW,QAAQ;AACtC,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT,OAAO;AACL,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,qCAAqC,IAAI,SAAS,gCAAgC,GAAG;AAC7G,YAAI,MAAM,MAAM,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI;AACnD,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT,OAAO;AACL,eAAK,aAAa;AAClB,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,yBAAyB,IAAI,SAAS,qBAAqB,GAAG;AACtF,YAAI,MAAM,IAAI;AACZ,eAAK,QAAQ;AAAA,QACf,OAAO;AACL,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,gBAAgB,IAAI,SAAS,cAAc,GAAG;AACtE,aAAK,IAAI,SAAS,KAAK,KAAK;AAC5B,YAAI,MAAM,CAAC,GAAG;AACZ,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM;AACrC,eAAK,IAAI,QAAQ,KAAK,KAAK;AAAA,QAC7B,WAAW,MAAM,IAAI;AACnB,eAAK,QAAQ;AAAA,QACf,WAAW,MAAM,IAAI;AACnB,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM;AACrC,eAAK,IAAI,QAAQ;AACjB,eAAK,QAAQ;AAAA,QACf,WAAW,MAAM,IAAI;AACnB,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM;AACrC,eAAK,IAAI,QAAQ,KAAK,KAAK;AAC3B,eAAK,IAAI,WAAW;AACpB,eAAK,QAAQ;AAAA,QACf,WAAW,UAAU,KAAK,GAAG,KAAK,MAAM,IAAI;AAC1C,eAAK,aAAa;AAClB,eAAK,QAAQ;AAAA,QACf,OAAO;AACL,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM,GAAG,KAAK,KAAK,KAAK,SAAS,CAAC;AAEjE,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,sBAAsB,IAAI,SAAS,mBAAmB,GAAG;AACjF,YAAI,UAAU,KAAK,GAAG,MAAM,MAAM,MAAM,MAAM,KAAK;AACjD,cAAI,MAAM,IAAI;AACZ,iBAAK,aAAa;AAAA,UACpB;AACA,eAAK,QAAQ;AAAA,QACf,WAAW,MAAM,IAAI;AACnB,eAAK,QAAQ;AAAA,QACf,OAAO;AACL,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,WAAW,KAAK,KAAK;AAC9B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,iCAAiC,IAAI,SAAS,6BAA6B,GAAG;AACtG,YAAI,MAAM,MAAM,KAAK,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI;AACnD,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT,OAAO;AACL,eAAK,aAAa;AAClB,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,wCAAwC,IAAI,SAAS,mCAAmC,GAAG;AACnH,YAAI,MAAM,MAAM,MAAM,IAAI;AACxB,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT,OAAO;AACL,eAAK,aAAa;AAAA,QACpB;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,iBAAiB,IAAI,SAAS,eAAe,GAAG,MAAM;AAC9E,YAAI,MAAM,IAAI;AACZ,eAAK,aAAa;AAClB,cAAI,KAAK,QAAQ;AACf,iBAAK,SAAS,QAAQ,KAAK;AAAA,UAC7B;AACA,eAAK,SAAS;AAGd,gBAAM,MAAM,aAAa,KAAK,MAAM;AACpC,mBAAS,UAAU,GAAG,UAAU,KAAK,EAAE,SAAS;AAC9C,kBAAM,YAAY,KAAK,OAAO,YAAY,OAAO;AAEjD,gBAAI,cAAc,MAAM,CAAC,KAAK,uBAAuB;AACnD,mBAAK,wBAAwB;AAC7B;AAAA,YACF;AACA,kBAAM,oBAAoB,kBAAkB,WAAW,uBAAuB;AAC9E,gBAAI,KAAK,uBAAuB;AAC9B,mBAAK,IAAI,YAAY;AAAA,YACvB,OAAO;AACL,mBAAK,IAAI,YAAY;AAAA,YACvB;AAAA,UACF;AACA,eAAK,SAAS;AAAA,QAChB,WAAW,MAAM,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MACzC,UAAU,KAAK,GAAG,KAAK,MAAM,IAAK;AAC5C,cAAI,KAAK,UAAU,KAAK,WAAW,IAAI;AACrC,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACT;AACA,eAAK,WAAW,aAAa,KAAK,MAAM,IAAI;AAC5C,eAAK,SAAS;AACd,eAAK,QAAQ;AAAA,QACf,OAAO;AACL,eAAK,UAAU;AAAA,QACjB;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,gBAAgB,IAC1C,gBAAgB,UAAU,YAAY,IAAI,SAAS,cAAc,GAAG,MAAM;AACxE,YAAI,KAAK,iBAAiB,KAAK,IAAI,WAAW,QAAQ;AACpD,YAAE,KAAK;AACP,eAAK,QAAQ;AAAA,QACf,WAAW,MAAM,MAAM,CAAC,KAAK,SAAS;AACpC,cAAI,KAAK,WAAW,IAAI;AACtB,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACT;AAEA,gBAAM,OAAO,UAAU,KAAK,QAAQ,UAAU,KAAK,GAAG,CAAC;AACvD,cAAI,SAAS,SAAS;AACpB,mBAAO;AAAA,UACT;AAEA,eAAK,IAAI,OAAO;AAChB,eAAK,SAAS;AACd,eAAK,QAAQ;AACb,cAAI,KAAK,kBAAkB,YAAY;AACrC,mBAAO;AAAA,UACT;AAAA,QACF,WAAW,MAAM,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MACzC,UAAU,KAAK,GAAG,KAAK,MAAM,IAAK;AAC5C,YAAE,KAAK;AACP,cAAI,UAAU,KAAK,GAAG,KAAK,KAAK,WAAW,IAAI;AAC7C,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACT,WAAW,KAAK,iBAAiB,KAAK,WAAW,OACrC,oBAAoB,KAAK,GAAG,KAAK,KAAK,IAAI,SAAS,OAAO;AACpE,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACT;AAEA,gBAAM,OAAO,UAAU,KAAK,QAAQ,UAAU,KAAK,GAAG,CAAC;AACvD,cAAI,SAAS,SAAS;AACpB,mBAAO;AAAA,UACT;AAEA,eAAK,IAAI,OAAO;AAChB,eAAK,SAAS;AACd,eAAK,QAAQ;AACb,cAAI,KAAK,eAAe;AACtB,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,cAAI,MAAM,IAAI;AACZ,iBAAK,UAAU;AAAA,UACjB,WAAW,MAAM,IAAI;AACnB,iBAAK,UAAU;AAAA,UACjB;AACA,eAAK,UAAU;AAAA,QACjB;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,YAAY,IAAI,SAAS,UAAU,GAAG,MAAM;AACpE,YAAI,aAAa,CAAC,GAAG;AACnB,eAAK,UAAU;AAAA,QACjB,WAAW,MAAM,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MACzC,UAAU,KAAK,GAAG,KAAK,MAAM,MAC9B,KAAK,eAAe;AAC7B,cAAI,KAAK,WAAW,IAAI;AACtB,kBAAM,OAAO,SAAS,KAAK,MAAM;AACjC,gBAAI,OAAO,KAAK,IAAI,GAAG,EAAE,IAAI,GAAG;AAC9B,mBAAK,aAAa;AAClB,qBAAO;AAAA,YACT;AACA,iBAAK,IAAI,OAAO,SAAS,YAAY,KAAK,IAAI,MAAM,IAAI,OAAO;AAC/D,iBAAK,SAAS;AAAA,UAChB;AACA,cAAI,KAAK,eAAe;AACtB,mBAAO;AAAA,UACT;AACA,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT,OAAO;AACL,eAAK,aAAa;AAClB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,UAAM,0BAA0B,oBAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;AAExD,sBAAgB,UAAU,YAAY,IAAI,SAAS,UAAU,GAAG;AAC9D,aAAK,IAAI,SAAS;AAElB,YAAI,MAAM,MAAM,MAAM,IAAI;AACxB,cAAI,MAAM,IAAI;AACZ,iBAAK,aAAa;AAAA,UACpB;AACA,eAAK,QAAQ;AAAA,QACf,WAAW,KAAK,SAAS,QAAQ,KAAK,KAAK,WAAW,QAAQ;AAC5D,cAAI,MAAM,CAAC,GAAG;AACZ,iBAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,iBAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM;AACrC,iBAAK,IAAI,QAAQ,KAAK,KAAK;AAAA,UAC7B,WAAW,MAAM,IAAI;AACnB,iBAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,iBAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM;AACrC,iBAAK,IAAI,QAAQ;AACjB,iBAAK,QAAQ;AAAA,UACf,WAAW,MAAM,IAAI;AACnB,iBAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,iBAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM;AACrC,iBAAK,IAAI,QAAQ,KAAK,KAAK;AAC3B,iBAAK,IAAI,WAAW;AACpB,iBAAK,QAAQ;AAAA,UACf,OAAO;AACL,gBAAI,KAAK,MAAM,SAAS,KAAK,UAAU,MAAM;AAAA,YACzC,CAAC,+BAA+B,GAAG,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KAC9D,KAAK,MAAM,SAAS,KAAK,UAAU,KAAK;AAAA,YACxC,CAAC,wBAAwB,IAAI,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,GAAI;AAChE,mBAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,mBAAK,IAAI,OAAO,KAAK,KAAK,KAAK,MAAM;AACrC,0BAAY,KAAK,GAAG;AAAA,YACtB,OAAO;AACL,mBAAK,aAAa;AAAA,YACpB;AAEA,iBAAK,QAAQ;AACb,cAAE,KAAK;AAAA,UACT;AAAA,QACF,OAAO;AACL,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,kBAAkB,IAAI,SAAS,eAAe,GAAG;AACzE,YAAI,MAAM,MAAM,MAAM,IAAI;AACxB,cAAI,MAAM,IAAI;AACZ,iBAAK,aAAa;AAAA,UACpB;AACA,eAAK,QAAQ;AAAA,QACf,OAAO;AACL,cAAI,KAAK,SAAS,QAAQ,KAAK,KAAK,WAAW,QAAQ;AACrD,gBAAI,qCAAqC,KAAK,KAAK,KAAK,CAAC,CAAC,GAAG;AAC3D,mBAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,CAAC,CAAC;AAAA,YACtC,OAAO;AACL,mBAAK,IAAI,OAAO,KAAK,KAAK;AAAA,YAC5B;AAAA,UACF;AACA,eAAK,QAAQ;AACb,YAAE,KAAK;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,iBAAiB,IAAI,SAAS,cAAc,GAAG,MAAM;AAC7E,YAAI,MAAM,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAC5D,YAAE,KAAK;AACP,cAAI,CAAC,KAAK,iBAAiB,2BAA2B,KAAK,MAAM,GAAG;AAClE,iBAAK,aAAa;AAClB,iBAAK,QAAQ;AAAA,UACf,WAAW,KAAK,WAAW,IAAI;AAC7B,iBAAK,IAAI,OAAO;AAChB,gBAAI,KAAK,eAAe;AACtB,qBAAO;AAAA,YACT;AACA,iBAAK,QAAQ;AAAA,UACf,OAAO;AACL,gBAAI,OAAO,UAAU,KAAK,QAAQ,UAAU,KAAK,GAAG,CAAC;AACrD,gBAAI,SAAS,SAAS;AACpB,qBAAO;AAAA,YACT;AACA,gBAAI,SAAS,aAAa;AACxB,qBAAO;AAAA,YACT;AACA,iBAAK,IAAI,OAAO;AAEhB,gBAAI,KAAK,eAAe;AACtB,qBAAO;AAAA,YACT;AAEA,iBAAK,SAAS;AACd,iBAAK,QAAQ;AAAA,UACf;AAAA,QACF,OAAO;AACL,eAAK,UAAU;AAAA,QACjB;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,kBAAkB,IAAI,SAAS,eAAe,GAAG;AACzE,YAAI,UAAU,KAAK,GAAG,GAAG;AACvB,cAAI,MAAM,IAAI;AACZ,iBAAK,aAAa;AAAA,UACpB;AACA,eAAK,QAAQ;AAEb,cAAI,MAAM,MAAM,MAAM,IAAI;AACxB,cAAE,KAAK;AAAA,UACT;AAAA,QACF,WAAW,CAAC,KAAK,iBAAiB,MAAM,IAAI;AAC1C,eAAK,IAAI,QAAQ;AACjB,eAAK,QAAQ;AAAA,QACf,WAAW,CAAC,KAAK,iBAAiB,MAAM,IAAI;AAC1C,eAAK,IAAI,WAAW;AACpB,eAAK,QAAQ;AAAA,QACf,WAAW,MAAM,QAAW;AAC1B,eAAK,QAAQ;AACb,cAAI,MAAM,IAAI;AACZ,cAAE,KAAK;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,YAAY,IAAI,SAASC,WAAU,GAAG;AAC9D,YAAI,MAAM,CAAC,KAAK,MAAM,MAAO,UAAU,KAAK,GAAG,KAAK,MAAM,MACrD,CAAC,KAAK,kBAAkB,MAAM,MAAM,MAAM,KAAM;AACnD,cAAI,UAAU,KAAK,GAAG,KAAK,MAAM,IAAI;AACnC,iBAAK,aAAa;AAAA,UACpB;AAEA,cAAI,YAAY,KAAK,MAAM,GAAG;AAC5B,wBAAY,KAAK,GAAG;AACpB,gBAAI,MAAM,MAAM,EAAE,UAAU,KAAK,GAAG,KAAK,MAAM,KAAK;AAClD,mBAAK,IAAI,KAAK,KAAK,EAAE;AAAA,YACvB;AAAA,UACF,WAAW,YAAY,KAAK,MAAM,KAAK,MAAM,MAClC,EAAE,UAAU,KAAK,GAAG,KAAK,MAAM,KAAK;AAC7C,iBAAK,IAAI,KAAK,KAAK,EAAE;AAAA,UACvB,WAAW,CAAC,YAAY,KAAK,MAAM,GAAG;AACpC,gBAAI,KAAK,IAAI,WAAW,UAAU,KAAK,IAAI,KAAK,WAAW,KAAK,2BAA2B,KAAK,MAAM,GAAG;AACvG,kBAAI,KAAK,IAAI,SAAS,MAAM,KAAK,IAAI,SAAS,MAAM;AAClD,qBAAK,aAAa;AAClB,qBAAK,IAAI,OAAO;AAAA,cAClB;AACA,mBAAK,SAAS,KAAK,OAAO,CAAC,IAAI;AAAA,YACjC;AACA,iBAAK,IAAI,KAAK,KAAK,KAAK,MAAM;AAAA,UAChC;AACA,eAAK,SAAS;AACd,cAAI,KAAK,IAAI,WAAW,WAAW,MAAM,UAAa,MAAM,MAAM,MAAM,KAAK;AAC3E,mBAAO,KAAK,IAAI,KAAK,SAAS,KAAK,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI;AAC1D,mBAAK,aAAa;AAClB,mBAAK,IAAI,KAAK,MAAM;AAAA,YACtB;AAAA,UACF;AACA,cAAI,MAAM,IAAI;AACZ,iBAAK,IAAI,QAAQ;AACjB,iBAAK,QAAQ;AAAA,UACf;AACA,cAAI,MAAM,IAAI;AACZ,iBAAK,IAAI,WAAW;AACpB,iBAAK,QAAQ;AAAA,UACf;AAAA,QACF,OAAO;AAGL,cAAI,MAAM,OACP,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KACvC,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI;AAC9C,iBAAK,aAAa;AAAA,UACpB;AAEA,eAAK,UAAU,kBAAkB,GAAG,mBAAmB;AAAA,QACzD;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,iCAAiC,IAAI,SAAS,0BAA0B,GAAG;AACnG,YAAI,MAAM,IAAI;AACZ,eAAK,IAAI,QAAQ;AACjB,eAAK,QAAQ;AAAA,QACf,WAAW,MAAM,IAAI;AACnB,eAAK,IAAI,WAAW;AACpB,eAAK,QAAQ;AAAA,QACf,OAAO;AAEL,cAAI,CAAC,MAAM,CAAC,KAAK,MAAM,IAAI;AACzB,iBAAK,aAAa;AAAA,UACpB;AAEA,cAAI,MAAM,OACL,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KACxC,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI;AAC/C,iBAAK,aAAa;AAAA,UACpB;AAEA,cAAI,CAAC,MAAM,CAAC,GAAG;AACb,iBAAK,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,kBAAkB,GAAG,wBAAwB;AAAA,UACrF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,aAAa,IAAI,SAAS,WAAW,GAAG,MAAM;AACtE,YAAI,MAAM,CAAC,KAAM,CAAC,KAAK,iBAAiB,MAAM,IAAK;AACjD,cAAI,CAAC,UAAU,KAAK,GAAG,KAAK,KAAK,IAAI,WAAW,QAAQ,KAAK,IAAI,WAAW,OAAO;AACjF,iBAAK,mBAAmB;AAAA,UAC1B;AAEA,gBAAM,SAAS,IAAI,OAAO,KAAK,MAAM;AACrC,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,gBAAI,OAAO,CAAC,IAAI,MAAQ,OAAO,CAAC,IAAI,OAAQ,OAAO,CAAC,MAAM,MAAQ,OAAO,CAAC,MAAM,MAC5E,OAAO,CAAC,MAAM,MAAQ,OAAO,CAAC,MAAM,IAAM;AAC5C,mBAAK,IAAI,SAAS,cAAc,OAAO,CAAC,CAAC;AAAA,YAC3C,OAAO;AACL,mBAAK,IAAI,SAAS,OAAO,cAAc,OAAO,CAAC,CAAC;AAAA,YAClD;AAAA,UACF;AAEA,eAAK,SAAS;AACd,cAAI,MAAM,IAAI;AACZ,iBAAK,IAAI,WAAW;AACpB,iBAAK,QAAQ;AAAA,UACf;AAAA,QACF,OAAO;AAEL,cAAI,MAAM,OACP,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KACvC,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI;AAC9C,iBAAK,aAAa;AAAA,UACpB;AAEA,eAAK,UAAU;AAAA,QACjB;AAEA,eAAO;AAAA,MACT;AAEA,sBAAgB,UAAU,gBAAgB,IAAI,SAAS,cAAc,GAAG;AACtE,YAAI,MAAM,CAAC,GAAG;AAAA,QACd,WAAW,MAAM,GAAK;AACpB,eAAK,aAAa;AAAA,QACpB,OAAO;AAEL,cAAI,MAAM,OACP,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,KACvC,CAAC,WAAW,KAAK,MAAM,KAAK,UAAU,CAAC,CAAC,IAAI;AAC9C,iBAAK,aAAa;AAAA,UACpB;AAEA,eAAK,IAAI,YAAY,kBAAkB,GAAG,wBAAwB;AAAA,QACpE;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,aAAa,KAAK,iBAAiB;AAC1C,YAAIJ,UAAS,IAAI,SAAS;AAC1B,YAAI,IAAI,SAAS,MAAM;AACrB,UAAAA,WAAU;AAEV,cAAI,IAAI,aAAa,MAAM,IAAI,aAAa,IAAI;AAC9C,YAAAA,WAAU,IAAI;AACd,gBAAI,IAAI,aAAa,IAAI;AACvB,cAAAA,WAAU,MAAM,IAAI;AAAA,YACtB;AACA,YAAAA,WAAU;AAAA,UACZ;AAEA,UAAAA,WAAU,cAAc,IAAI,IAAI;AAEhC,cAAI,IAAI,SAAS,MAAM;AACrB,YAAAA,WAAU,MAAM,IAAI;AAAA,UACtB;AAAA,QACF,WAAW,IAAI,SAAS,QAAQ,IAAI,WAAW,QAAQ;AACrD,UAAAA,WAAU;AAAA,QACZ;AAEA,YAAI,IAAI,kBAAkB;AACxB,UAAAA,WAAU,IAAI,KAAK,CAAC;AAAA,QACtB,OAAO;AACL,qBAAW,UAAU,IAAI,MAAM;AAC7B,YAAAA,WAAU,MAAM;AAAA,UAClB;AAAA,QACF;AAEA,YAAI,IAAI,UAAU,MAAM;AACtB,UAAAA,WAAU,MAAM,IAAI;AAAA,QACtB;AAEA,YAAI,CAAC,mBAAmB,IAAI,aAAa,MAAM;AAC7C,UAAAA,WAAU,MAAM,IAAI;AAAA,QACtB;AAEA,eAAOA;AAAA,MACT;AAEA,eAAS,gBAAgB,OAAO;AAC9B,YAAI,SAAS,MAAM,SAAS;AAC5B,kBAAU,cAAc,MAAM,IAAI;AAElC,YAAI,MAAM,SAAS,MAAM;AACvB,oBAAU,MAAM,MAAM;AAAA,QACxB;AAEA,eAAO;AAAA,MACT;AAEA,aAAO,QAAQ,eAAe;AAE9B,aAAO,QAAQ,qBAAqB,SAAU,KAAK;AAEjD,gBAAQ,IAAI,QAAQ;AAAA,UAClB,KAAK;AACH,gBAAI;AACF,qBAAO,OAAO,QAAQ,mBAAmB,OAAO,QAAQ,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC;AAAA,YAC/E,SAAS,GAAP;AAEA,qBAAO;AAAA,YACT;AAAA,UACF,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,gBAAgB;AAAA,cACrB,QAAQ,IAAI;AAAA,cACZ,MAAM,IAAI;AAAA,cACV,MAAM,IAAI;AAAA,YACZ,CAAC;AAAA,UACH,KAAK;AAEH,mBAAO;AAAA,UACT;AAEE,mBAAO;AAAA,QACX;AAAA,MACF;AAEA,aAAO,QAAQ,gBAAgB,SAAU,OAAO,SAAS;AACvD,YAAI,YAAY,QAAW;AACzB,oBAAU,CAAC;AAAA,QACb;AAEA,cAAM,MAAM,IAAI,gBAAgB,OAAO,QAAQ,SAAS,QAAQ,kBAAkB,QAAQ,KAAK,QAAQ,aAAa;AACpH,YAAI,IAAI,SAAS;AACf,iBAAO;AAAA,QACT;AAEA,eAAO,IAAI;AAAA,MACb;AAEA,aAAO,QAAQ,iBAAiB,SAAU,KAAK,UAAU;AACvD,YAAI,WAAW;AACf,cAAM,UAAU,SAAS,KAAK,OAAO,QAAQ;AAC7C,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACvC,cAAI,YAAY,kBAAkB,QAAQ,CAAC,GAAG,uBAAuB;AAAA,QACvE;AAAA,MACF;AAEA,aAAO,QAAQ,iBAAiB,SAAU,KAAK,UAAU;AACvD,YAAI,WAAW;AACf,cAAM,UAAU,SAAS,KAAK,OAAO,QAAQ;AAC7C,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACvC,cAAI,YAAY,kBAAkB,QAAQ,CAAC,GAAG,uBAAuB;AAAA,QACvE;AAAA,MACF;AAEA,aAAO,QAAQ,gBAAgB;AAE/B,aAAO,QAAQ,kCAAkC;AAEjD,aAAO,QAAQ,mBAAmB,SAAU,SAAS;AACnD,eAAO,OAAO,OAAO;AAAA,MACvB;AAEA,aAAO,QAAQ,WAAW,SAAU,OAAO,SAAS;AAClD,YAAI,YAAY,QAAW;AACzB,oBAAU,CAAC;AAAA,QACb;AAGA,eAAO,OAAO,QAAQ,cAAc,OAAO,EAAE,SAAS,QAAQ,SAAS,kBAAkB,QAAQ,iBAAiB,CAAC;AAAA,MACrH;AAAA;AAAA;;;AChxCA;AAAA;AAAA;AACA,UAAM,MAAM;AAEZ,cAAQ,iBAAiB,MAAM,QAAQ;AAAA,QACrC,YAAY,iBAAiB;AAC3B,gBAAM,MAAM,gBAAgB,CAAC;AAC7B,gBAAM,OAAO,gBAAgB,CAAC;AAE9B,cAAI,aAAa;AACjB,cAAI,SAAS,QAAW;AACtB,yBAAa,IAAI,cAAc,IAAI;AACnC,gBAAI,eAAe,WAAW;AAC5B,oBAAM,IAAI,UAAU,kBAAkB;AAAA,YACxC;AAAA,UACF;AAEA,gBAAM,YAAY,IAAI,cAAc,KAAK,EAAE,SAAS,WAAW,CAAC;AAChE,cAAI,cAAc,WAAW;AAC3B,kBAAM,IAAI,UAAU,aAAa;AAAA,UACnC;AAEA,eAAK,OAAO;AAAA,QAGd;AAAA,QAEA,IAAI,OAAO;AACT,iBAAO,IAAI,aAAa,KAAK,IAAI;AAAA,QACnC;AAAA,QAEA,IAAI,KAAK,GAAG;AACV,gBAAM,YAAY,IAAI,cAAc,CAAC;AACrC,cAAI,cAAc,WAAW;AAC3B,kBAAM,IAAI,UAAU,aAAa;AAAA,UACnC;AAEA,eAAK,OAAO;AAAA,QACd;AAAA,QAEA,IAAI,SAAS;AACX,iBAAO,IAAI,mBAAmB,KAAK,IAAI;AAAA,QACzC;AAAA,QAEA,IAAI,WAAW;AACb,iBAAO,KAAK,KAAK,SAAS;AAAA,QAC5B;AAAA,QAEA,IAAI,SAAS,GAAG;AACd,cAAI,cAAc,IAAI,KAAK,EAAE,KAAK,KAAK,MAAM,eAAe,eAAe,CAAC;AAAA,QAC9E;AAAA,QAEA,IAAI,WAAW;AACb,iBAAO,KAAK,KAAK;AAAA,QACnB;AAAA,QAEA,IAAI,SAAS,GAAG;AACd,cAAI,IAAI,gCAAgC,KAAK,IAAI,GAAG;AAClD;AAAA,UACF;AAEA,cAAI,eAAe,KAAK,MAAM,CAAC;AAAA,QACjC;AAAA,QAEA,IAAI,WAAW;AACb,iBAAO,KAAK,KAAK;AAAA,QACnB;AAAA,QAEA,IAAI,SAAS,GAAG;AACd,cAAI,IAAI,gCAAgC,KAAK,IAAI,GAAG;AAClD;AAAA,UACF;AAEA,cAAI,eAAe,KAAK,MAAM,CAAC;AAAA,QACjC;AAAA,QAEA,IAAI,OAAO;AACT,gBAAM,MAAM,KAAK;AAEjB,cAAI,IAAI,SAAS,MAAM;AACrB,mBAAO;AAAA,UACT;AAEA,cAAI,IAAI,SAAS,MAAM;AACrB,mBAAO,IAAI,cAAc,IAAI,IAAI;AAAA,UACnC;AAEA,iBAAO,IAAI,cAAc,IAAI,IAAI,IAAI,MAAM,IAAI,iBAAiB,IAAI,IAAI;AAAA,QAC1E;AAAA,QAEA,IAAI,KAAK,GAAG;AACV,cAAI,KAAK,KAAK,kBAAkB;AAC9B;AAAA,UACF;AAEA,cAAI,cAAc,GAAG,EAAE,KAAK,KAAK,MAAM,eAAe,OAAO,CAAC;AAAA,QAChE;AAAA,QAEA,IAAI,WAAW;AACb,cAAI,KAAK,KAAK,SAAS,MAAM;AAC3B,mBAAO;AAAA,UACT;AAEA,iBAAO,IAAI,cAAc,KAAK,KAAK,IAAI;AAAA,QACzC;AAAA,QAEA,IAAI,SAAS,GAAG;AACd,cAAI,KAAK,KAAK,kBAAkB;AAC9B;AAAA,UACF;AAEA,cAAI,cAAc,GAAG,EAAE,KAAK,KAAK,MAAM,eAAe,WAAW,CAAC;AAAA,QACpE;AAAA,QAEA,IAAI,OAAO;AACT,cAAI,KAAK,KAAK,SAAS,MAAM;AAC3B,mBAAO;AAAA,UACT;AAEA,iBAAO,IAAI,iBAAiB,KAAK,KAAK,IAAI;AAAA,QAC5C;AAAA,QAEA,IAAI,KAAK,GAAG;AACV,cAAI,IAAI,gCAAgC,KAAK,IAAI,GAAG;AAClD;AAAA,UACF;AAEA,cAAI,MAAM,IAAI;AACZ,iBAAK,KAAK,OAAO;AAAA,UACnB,OAAO;AACL,gBAAI,cAAc,GAAG,EAAE,KAAK,KAAK,MAAM,eAAe,OAAO,CAAC;AAAA,UAChE;AAAA,QACF;AAAA,QAEA,IAAI,WAAW;AACb,cAAI,KAAK,KAAK,kBAAkB;AAC9B,mBAAO,KAAK,KAAK,KAAK,CAAC;AAAA,UACzB;AAEA,cAAI,KAAK,KAAK,KAAK,WAAW,GAAG;AAC/B,mBAAO;AAAA,UACT;AAEA,iBAAO,MAAM,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA,QACtC;AAAA,QAEA,IAAI,SAAS,GAAG;AACd,cAAI,KAAK,KAAK,kBAAkB;AAC9B;AAAA,UACF;AAEA,eAAK,KAAK,OAAO,CAAC;AAClB,cAAI,cAAc,GAAG,EAAE,KAAK,KAAK,MAAM,eAAe,aAAa,CAAC;AAAA,QACtE;AAAA,QAEA,IAAI,SAAS;AACX,cAAI,KAAK,KAAK,UAAU,QAAQ,KAAK,KAAK,UAAU,IAAI;AACtD,mBAAO;AAAA,UACT;AAEA,iBAAO,MAAM,KAAK,KAAK;AAAA,QACzB;AAAA,QAEA,IAAI,OAAO,GAAG;AAGZ,gBAAM,MAAM,KAAK;AAEjB,cAAI,MAAM,IAAI;AACZ,gBAAI,QAAQ;AACZ;AAAA,UACF;AAEA,gBAAM,QAAQ,EAAE,CAAC,MAAM,MAAM,EAAE,UAAU,CAAC,IAAI;AAC9C,cAAI,QAAQ;AACZ,cAAI,cAAc,OAAO,EAAE,KAAK,eAAe,QAAQ,CAAC;AAAA,QAC1D;AAAA,QAEA,IAAI,OAAO;AACT,cAAI,KAAK,KAAK,aAAa,QAAQ,KAAK,KAAK,aAAa,IAAI;AAC5D,mBAAO;AAAA,UACT;AAEA,iBAAO,MAAM,KAAK,KAAK;AAAA,QACzB;AAAA,QAEA,IAAI,KAAK,GAAG;AACV,cAAI,MAAM,IAAI;AACZ,iBAAK,KAAK,WAAW;AACrB;AAAA,UACF;AAEA,gBAAM,QAAQ,EAAE,CAAC,MAAM,MAAM,EAAE,UAAU,CAAC,IAAI;AAC9C,eAAK,KAAK,WAAW;AACrB,cAAI,cAAc,OAAO,EAAE,KAAK,KAAK,MAAM,eAAe,WAAW,CAAC;AAAA,QACxE;AAAA,QAEA,SAAS;AACP,iBAAO,KAAK;AAAA,QACd;AAAA,MACF;AAAA;AAAA;;;ACvMA;AAAA;AAAA;AAEA,UAAM,cAAc;AACpB,UAAM,QAAQ;AACd,UAAM,OAAO;AAEb,UAAM,OAAO,MAAM;AAEnB,eAASK,KAAI,KAAK;AAChB,YAAI,CAAC,QAAQ,KAAK,IAAI,KAAK,EAAE,gBAAgBA,OAAM;AACjD,gBAAM,IAAI,UAAU,uHAAuH;AAAA,QAC7I;AACA,YAAI,UAAU,SAAS,GAAG;AACxB,gBAAM,IAAI,UAAU,8DAA8D,UAAU,SAAS,WAAW;AAAA,QAClH;AACA,cAAM,OAAO,CAAC;AACd,iBAAS,IAAI,GAAG,IAAI,UAAU,UAAU,IAAI,GAAG,EAAE,GAAG;AAClD,eAAK,CAAC,IAAI,UAAU,CAAC;AAAA,QACvB;AACA,aAAK,CAAC,IAAI,YAAY,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1C,YAAI,KAAK,CAAC,MAAM,QAAW;AAC3B,eAAK,CAAC,IAAI,YAAY,WAAW,EAAE,KAAK,CAAC,CAAC;AAAA,QAC1C;AAEA,eAAO,QAAQ,MAAM,MAAM,IAAI;AAAA,MACjC;AAEA,MAAAA,KAAI,UAAU,SAAS,SAAS,SAAS;AACvC,YAAI,CAAC,QAAQ,CAAC,OAAO,QAAQ,GAAG,IAAI,GAAG;AACrC,gBAAM,IAAI,UAAU,oBAAoB;AAAA,QAC1C;AACA,cAAM,OAAO,CAAC;AACd,iBAAS,IAAI,GAAG,IAAI,UAAU,UAAU,IAAI,GAAG,EAAE,GAAG;AAClD,eAAK,CAAC,IAAI,UAAU,CAAC;AAAA,QACvB;AACA,eAAO,KAAK,IAAI,EAAE,OAAO,MAAM,KAAK,IAAI,GAAG,IAAI;AAAA,MACjD;AACA,aAAO,eAAeA,KAAI,WAAW,QAAQ;AAAA,QAC3C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,OAAO;AAAA,QACpB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,MAAAA,KAAI,UAAU,WAAW,WAAY;AACnC,YAAI,CAAC,QAAQ,CAAC,OAAO,QAAQ,GAAG,IAAI,GAAG;AACrC,gBAAM,IAAI,UAAU,oBAAoB;AAAA,QAC1C;AACA,eAAO,KAAK;AAAA,MACd;AAEA,aAAO,eAAeA,KAAI,WAAW,UAAU;AAAA,QAC7C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,YAAY;AAAA,QAC/C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,WAAW;AAAA,QACxB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,YAAY;AAAA,QAC/C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,WAAW;AAAA,QACxB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,YAAY;AAAA,QAC/C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,WAAW;AAAA,QACxB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,QAAQ;AAAA,QAC3C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,OAAO;AAAA,QACpB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,YAAY;AAAA,QAC/C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,WAAW;AAAA,QACxB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,QAAQ;AAAA,QAC3C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,OAAO;AAAA,QACpB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,YAAY;AAAA,QAC/C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,WAAW;AAAA,QACxB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,UAAU;AAAA,QAC7C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,SAAS;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAeA,KAAI,WAAW,QAAQ;AAAA,QAC3C,MAAM;AACJ,iBAAO,KAAK,IAAI,EAAE;AAAA,QACpB;AAAA,QACA,IAAI,GAAG;AACL,cAAI,YAAY,WAAW,EAAE,CAAC;AAC9B,eAAK,IAAI,EAAE,OAAO;AAAA,QACpB;AAAA,QACA,YAAY;AAAA,QACZ,cAAc;AAAA,MAChB,CAAC;AAGD,aAAO,UAAU;AAAA,QACf,GAAG,KAAK;AACN,iBAAO,CAAC,CAAC,OAAO,IAAI,IAAI,aAAa,KAAK;AAAA,QAC5C;AAAA,QACA,OAAO,iBAAiB,aAAa;AACnC,cAAI,MAAM,OAAO,OAAOA,KAAI,SAAS;AACrC,eAAK,MAAM,KAAK,iBAAiB,WAAW;AAC5C,iBAAO;AAAA,QACT;AAAA,QACA,MAAM,KAAK,iBAAiB,aAAa;AACvC,cAAI,CAAC;AAAa,0BAAc,CAAC;AACjC,sBAAY,UAAU;AAEtB,cAAI,IAAI,IAAI,IAAI,KAAK,eAAe,iBAAiB,WAAW;AAChE,cAAI,IAAI,EAAE,MAAM,aAAa,IAAI;AAAA,QACnC;AAAA,QACA,WAAWA;AAAA,QACX,QAAQ;AAAA,UACN,QAAQ,EAAE,KAAKA,KAAI;AAAA,UACnB,QAAQ,EAAE,KAAKA,KAAI;AAAA,QACrB;AAAA,MACF;AAAA;AAAA;;;AClMA;AAAA;AAAA;AAEA,cAAQ,MAAM,cAAiB;AAC/B,cAAQ,eAAe,4BAA+B;AACtD,cAAQ,qBAAqB,4BAA+B;AAC5D,cAAQ,gBAAgB,4BAA+B;AACvD,cAAQ,iBAAiB,4BAA+B;AACxD,cAAQ,iBAAiB,4BAA+B;AACxD,cAAQ,gBAAgB,4BAA+B;AACvD,cAAQ,mBAAmB,4BAA+B;AAC1D,cAAQ,WAAW,4BAA+B;AAAA;AAAA;;;ACVlD;AAAA;AAAA;AAAA;AAAA,mBAAAC;AAAA,IAAA;AAAA,oBAAAC;AAAA,IAAA;AAAA;AAuIA,WAAS,WAAW,SAASC,OAAM,aAAa;AAC9C,UAAM,KAAK,MAAM,OAAO;AAExB,SAAK,UAAU;AACf,SAAK,OAAOA;AAGZ,QAAI,aAAa;AACf,WAAK,OAAO,KAAK,QAAQ,YAAY;AAAA,IACvC;AAGA,UAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,EAChD;AAyBA,WAAS,KAAK,MAAM;AACnB,QAAI,QAAQ;AAEZ,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC,GAC5E,YAAY,KAAK;AAErB,QAAI,OAAO,cAAc,SAAY,IAAI;AACzC,QAAI,eAAe,KAAK;AACxB,QAAI,UAAU,iBAAiB,SAAY,IAAI;AAE/C,QAAI,QAAQ,MAAM;AAEjB,aAAO;AAAA,IACR,WAAW,kBAAkB,IAAI,GAAG;AAEnC,aAAO,OAAO,KAAK,KAAK,SAAS,CAAC;AAAA,IACnC,WAAW,OAAO,IAAI;AAAG;AAAA,aAAW,OAAO,SAAS,IAAI;AAAG;AAAA,aAAW,OAAO,UAAU,SAAS,KAAK,IAAI,MAAM,wBAAwB;AAEtI,aAAO,OAAO,KAAK,IAAI;AAAA,IACxB,WAAW,YAAY,OAAO,IAAI,GAAG;AAEpC,aAAO,OAAO,KAAK,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAAA,IACjE,WAAW,gBAAgB,cAAAC;AAAQ;AAAA,SAAO;AAGzC,aAAO,OAAO,KAAK,OAAO,IAAI,CAAC;AAAA,IAChC;AACA,SAAK,SAAS,IAAI;AAAA,MACjB;AAAA,MACA,WAAW;AAAA,MACX,OAAO;AAAA,IACR;AACA,SAAK,OAAO;AACZ,SAAK,UAAU;AAEf,QAAI,gBAAgB,cAAAA,SAAQ;AAC3B,WAAK,GAAG,SAAS,SAAU,KAAK;AAC/B,cAAM,QAAQ,IAAI,SAAS,eAAe,MAAM,IAAI,WAAW,+CAA+C,MAAM,QAAQ,IAAI,WAAW,UAAU,GAAG;AACxJ,cAAM,SAAS,EAAE,QAAQ;AAAA,MAC1B,CAAC;AAAA,IACF;AAAA,EACD;AAuHA,WAAS,cAAc;AACtB,QAAI,SAAS;AAEb,QAAI,KAAK,SAAS,EAAE,WAAW;AAC9B,aAAO,KAAK,QAAQ,OAAO,IAAI,UAAU,0BAA0B,KAAK,KAAK,CAAC;AAAA,IAC/E;AAEA,SAAK,SAAS,EAAE,YAAY;AAE5B,QAAI,KAAK,SAAS,EAAE,OAAO;AAC1B,aAAO,KAAK,QAAQ,OAAO,KAAK,SAAS,EAAE,KAAK;AAAA,IACjD;AAEA,QAAI,OAAO,KAAK;AAGhB,QAAI,SAAS,MAAM;AAClB,aAAO,KAAK,QAAQ,QAAQ,OAAO,MAAM,CAAC,CAAC;AAAA,IAC5C;AAGA,QAAI,OAAO,IAAI,GAAG;AACjB,aAAO,KAAK,OAAO;AAAA,IACpB;AAGA,QAAI,OAAO,SAAS,IAAI,GAAG;AAC1B,aAAO,KAAK,QAAQ,QAAQ,IAAI;AAAA,IACjC;AAGA,QAAI,EAAE,gBAAgB,cAAAA,UAAS;AAC9B,aAAO,KAAK,QAAQ,QAAQ,OAAO,MAAM,CAAC,CAAC;AAAA,IAC5C;AAIA,QAAI,QAAQ,CAAC;AACb,QAAI,aAAa;AACjB,QAAI,QAAQ;AAEZ,WAAO,IAAI,KAAK,QAAQ,SAAU,SAAS,QAAQ;AAClD,UAAI;AAGJ,UAAI,OAAO,SAAS;AACnB,qBAAa,WAAW,WAAY;AACnC,kBAAQ;AACR,iBAAO,IAAI,WAAW,0CAA0C,OAAO,aAAa,OAAO,cAAc,cAAc,CAAC;AAAA,QACzH,GAAG,OAAO,OAAO;AAAA,MAClB;AAGA,WAAK,GAAG,SAAS,SAAU,KAAK;AAC/B,YAAI,IAAI,SAAS,cAAc;AAE9B,kBAAQ;AACR,iBAAO,GAAG;AAAA,QACX,OAAO;AAEN,iBAAO,IAAI,WAAW,+CAA+C,OAAO,QAAQ,IAAI,WAAW,UAAU,GAAG,CAAC;AAAA,QAClH;AAAA,MACD,CAAC;AAED,WAAK,GAAG,QAAQ,SAAU,OAAO;AAChC,YAAI,SAAS,UAAU,MAAM;AAC5B;AAAA,QACD;AAEA,YAAI,OAAO,QAAQ,aAAa,MAAM,SAAS,OAAO,MAAM;AAC3D,kBAAQ;AACR,iBAAO,IAAI,WAAW,mBAAmB,OAAO,mBAAmB,OAAO,QAAQ,UAAU,CAAC;AAC7F;AAAA,QACD;AAEA,sBAAc,MAAM;AACpB,cAAM,KAAK,KAAK;AAAA,MACjB,CAAC;AAED,WAAK,GAAG,OAAO,WAAY;AAC1B,YAAI,OAAO;AACV;AAAA,QACD;AAEA,qBAAa,UAAU;AAEvB,YAAI;AACH,kBAAQ,OAAO,OAAO,OAAO,UAAU,CAAC;AAAA,QACzC,SAAS,KAAP;AAED,iBAAO,IAAI,WAAW,kDAAkD,OAAO,QAAQ,IAAI,WAAW,UAAU,GAAG,CAAC;AAAA,QACrH;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AAUA,WAAS,YAAY,QAAQ,SAAS;AACrC,QAAI,OAAO,YAAY,YAAY;AAClC,YAAM,IAAI,MAAM,8EAA8E;AAAA,IAC/F;AAEA,UAAM,KAAK,QAAQ,IAAI,cAAc;AACrC,QAAI,UAAU;AACd,QAAI,KAAK;AAGT,QAAI,IAAI;AACP,YAAM,mBAAmB,KAAK,EAAE;AAAA,IACjC;AAGA,UAAM,OAAO,MAAM,GAAG,IAAI,EAAE,SAAS;AAGrC,QAAI,CAAC,OAAO,KAAK;AAChB,YAAM,iCAAiC,KAAK,GAAG;AAAA,IAChD;AAGA,QAAI,CAAC,OAAO,KAAK;AAChB,YAAM,yEAAyE,KAAK,GAAG;AACvF,UAAI,CAAC,KAAK;AACT,cAAM,yEAAyE,KAAK,GAAG;AACvF,YAAI,KAAK;AACR,cAAI,IAAI;AAAA,QACT;AAAA,MACD;AAEA,UAAI,KAAK;AACR,cAAM,gBAAgB,KAAK,IAAI,IAAI,CAAC;AAAA,MACrC;AAAA,IACD;AAGA,QAAI,CAAC,OAAO,KAAK;AAChB,YAAM,mCAAmC,KAAK,GAAG;AAAA,IAClD;AAGA,QAAI,KAAK;AACR,gBAAU,IAAI,IAAI;AAIlB,UAAI,YAAY,YAAY,YAAY,OAAO;AAC9C,kBAAU;AAAA,MACX;AAAA,IACD;AAGA,WAAO,QAAQ,QAAQ,SAAS,OAAO,EAAE,SAAS;AAAA,EACnD;AASA,WAAS,kBAAkB,KAAK;AAE/B,QAAI,OAAO,QAAQ,YAAY,OAAO,IAAI,WAAW,cAAc,OAAO,IAAI,WAAW,cAAc,OAAO,IAAI,QAAQ,cAAc,OAAO,IAAI,WAAW,cAAc,OAAO,IAAI,QAAQ,cAAc,OAAO,IAAI,QAAQ,YAAY;AAC3O,aAAO;AAAA,IACR;AAGA,WAAO,IAAI,YAAY,SAAS,qBAAqB,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,8BAA8B,OAAO,IAAI,SAAS;AAAA,EAChJ;AAOA,WAAS,OAAO,KAAK;AACpB,WAAO,OAAO,QAAQ,YAAY,OAAO,IAAI,gBAAgB,cAAc,OAAO,IAAI,SAAS,YAAY,OAAO,IAAI,WAAW,cAAc,OAAO,IAAI,gBAAgB,cAAc,OAAO,IAAI,YAAY,SAAS,YAAY,gBAAgB,KAAK,IAAI,YAAY,IAAI,KAAK,gBAAgB,KAAK,IAAI,OAAO,WAAW,CAAC;AAAA,EAC/T;AAQA,WAAS,MAAM,UAAU;AACxB,QAAI,IAAI;AACR,QAAI,OAAO,SAAS;AAGpB,QAAI,SAAS,UAAU;AACtB,YAAM,IAAI,MAAM,oCAAoC;AAAA,IACrD;AAIA,QAAI,gBAAgB,cAAAA,WAAU,OAAO,KAAK,gBAAgB,YAAY;AAErE,WAAK,IAAI,YAAY;AACrB,WAAK,IAAI,YAAY;AACrB,WAAK,KAAK,EAAE;AACZ,WAAK,KAAK,EAAE;AAEZ,eAAS,SAAS,EAAE,OAAO;AAC3B,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAWA,WAAS,mBAAmB,MAAM;AACjC,QAAI,SAAS,MAAM;AAElB,aAAO;AAAA,IACR,WAAW,OAAO,SAAS,UAAU;AAEpC,aAAO;AAAA,IACR,WAAW,kBAAkB,IAAI,GAAG;AAEnC,aAAO;AAAA,IACR,WAAW,OAAO,IAAI,GAAG;AAExB,aAAO,KAAK,QAAQ;AAAA,IACrB,WAAW,OAAO,SAAS,IAAI,GAAG;AAEjC,aAAO;AAAA,IACR,WAAW,OAAO,UAAU,SAAS,KAAK,IAAI,MAAM,wBAAwB;AAE3E,aAAO;AAAA,IACR,WAAW,YAAY,OAAO,IAAI,GAAG;AAEpC,aAAO;AAAA,IACR,WAAW,OAAO,KAAK,gBAAgB,YAAY;AAElD,aAAO,gCAAgC,KAAK,YAAY;AAAA,IACzD,WAAW,gBAAgB,cAAAA,SAAQ;AAGlC,aAAO;AAAA,IACR,OAAO;AAEN,aAAO;AAAA,IACR;AAAA,EACD;AAWA,WAAS,cAAc,UAAU;AAChC,UAAM,OAAO,SAAS;AAGtB,QAAI,SAAS,MAAM;AAElB,aAAO;AAAA,IACR,WAAW,OAAO,IAAI,GAAG;AACxB,aAAO,KAAK;AAAA,IACb,WAAW,OAAO,SAAS,IAAI,GAAG;AAEjC,aAAO,KAAK;AAAA,IACb,WAAW,QAAQ,OAAO,KAAK,kBAAkB,YAAY;AAE5D,UAAI,KAAK,qBAAqB,KAAK,kBAAkB,UAAU;AAAA,MAC/D,KAAK,kBAAkB,KAAK,eAAe,GAAG;AAE7C,eAAO,KAAK,cAAc;AAAA,MAC3B;AACA,aAAO;AAAA,IACR,OAAO;AAEN,aAAO;AAAA,IACR;AAAA,EACD;AAQA,WAAS,cAAc,MAAM,UAAU;AACtC,UAAM,OAAO,SAAS;AAGtB,QAAI,SAAS,MAAM;AAElB,WAAK,IAAI;AAAA,IACV,WAAW,OAAO,IAAI,GAAG;AACxB,WAAK,OAAO,EAAE,KAAK,IAAI;AAAA,IACxB,WAAW,OAAO,SAAS,IAAI,GAAG;AAEjC,WAAK,MAAM,IAAI;AACf,WAAK,IAAI;AAAA,IACV,OAAO;AAEN,WAAK,KAAK,IAAI;AAAA,IACf;AAAA,EACD;AAcA,WAAS,aAAa,MAAM;AAC3B,WAAO,GAAG;AACV,QAAI,kBAAkB,KAAK,IAAI,KAAK,SAAS,IAAI;AAChD,YAAM,IAAI,UAAU,GAAG,sCAAsC;AAAA,IAC9D;AAAA,EACD;AAEA,WAAS,cAAc,OAAO;AAC7B,YAAQ,GAAG;AACX,QAAI,uBAAuB,KAAK,KAAK,GAAG;AACvC,YAAM,IAAI,UAAU,GAAG,wCAAwC;AAAA,IAChE;AAAA,EACD;AAUA,WAAS,KAAK,KAAK,MAAM;AACxB,WAAO,KAAK,YAAY;AACxB,eAAW,OAAO,KAAK;AACtB,UAAI,IAAI,YAAY,MAAM,MAAM;AAC/B,eAAO;AAAA,MACR;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAmOA,WAAS,WAAW,SAAS;AAC5B,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAE/E,UAAM,OAAO,OAAO,KAAK,QAAQ,GAAG,CAAC,EAAE,KAAK;AAC5C,WAAO,KAAK,IAAI,SAAS,QAAQ,SAAU,GAAG;AAC7C,aAAO,EAAE,YAAY;AAAA,IACtB,IAAI,SAAS,UAAU,SAAU,GAAG;AACnC,aAAO,QAAQ,GAAG,EAAE,CAAC,EAAE,KAAK,IAAI;AAAA,IACjC,IAAI,SAAU,GAAG;AAChB,aAAO,CAAC,EAAE,YAAY,GAAG,QAAQ,GAAG,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,IACpD,CAAC;AAAA,EACF;AAIA,WAAS,sBAAsB,QAAQ,MAAM;AAC5C,UAAM,WAAW,OAAO,OAAO,wBAAwB;AACvD,aAAS,QAAQ,IAAI;AAAA,MACpB;AAAA,MACA;AAAA,MACA,OAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AA6CA,WAAS,4BAA4B,SAAS;AAC7C,UAAM,MAAM,OAAO,OAAO,EAAE,WAAW,KAAK,GAAG,QAAQ,GAAG,CAAC;AAI3D,UAAM,gBAAgB,KAAK,QAAQ,GAAG,GAAG,MAAM;AAC/C,QAAI,kBAAkB,QAAW;AAChC,UAAI,aAAa,IAAI,IAAI,aAAa,EAAE,CAAC;AAAA,IAC1C;AAEA,WAAO;AAAA,EACR;AASA,WAAS,qBAAqB,KAAK;AAClC,UAAM,UAAU,IAAIH,SAAQ;AAC5B,eAAW,QAAQ,OAAO,KAAK,GAAG,GAAG;AACpC,UAAI,kBAAkB,KAAK,IAAI,GAAG;AACjC;AAAA,MACD;AACA,UAAI,MAAM,QAAQ,IAAI,IAAI,CAAC,GAAG;AAC7B,mBAAW,OAAO,IAAI,IAAI,GAAG;AAC5B,cAAI,uBAAuB,KAAK,GAAG,GAAG;AACrC;AAAA,UACD;AACA,cAAI,QAAQ,GAAG,EAAE,IAAI,MAAM,QAAW;AACrC,oBAAQ,GAAG,EAAE,IAAI,IAAI,CAAC,GAAG;AAAA,UAC1B,OAAO;AACN,oBAAQ,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG;AAAA,UAC5B;AAAA,QACD;AAAA,MACD,WAAW,CAAC,uBAAuB,KAAK,IAAI,IAAI,CAAC,GAAG;AACnD,gBAAQ,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAAA,MAChC;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAoHA,WAAS,SAAS,QAAQ;AAMzB,QAAI,4BAA4B,KAAK,MAAM,GAAG;AAC7C,eAAS,IAAI,IAAI,MAAM,EAAE,SAAS;AAAA,IACnC;AAGA,WAAO,UAAU,MAAM;AAAA,EACxB;AAUA,WAAS,UAAU,OAAO;AACzB,WAAO,OAAO,UAAU,YAAY,OAAO,MAAM,WAAW,MAAM;AAAA,EACnE;AAEA,WAAS,cAAc,QAAQ;AAC9B,UAAM,QAAQ,UAAU,OAAO,WAAW,YAAY,OAAO,eAAe,MAAM;AAClF,WAAO,CAAC,EAAE,SAAS,MAAM,YAAY,SAAS;AAAA,EAC/C;AAkIA,WAAS,sBAAsB,SAAS;AACvC,UAAM,YAAY,QAAQ,WAAW,EAAE;AACvC,UAAM,UAAU,IAAIA,SAAQ,QAAQ,WAAW,EAAE,OAAO;AAGxD,QAAI,CAAC,QAAQ,IAAI,QAAQ,GAAG;AAC3B,cAAQ,IAAI,UAAU,KAAK;AAAA,IAC5B;AAGA,QAAI,CAAC,UAAU,YAAY,CAAC,UAAU,UAAU;AAC/C,YAAM,IAAI,UAAU,kCAAkC;AAAA,IACvD;AAEA,QAAI,CAAC,YAAY,KAAK,UAAU,QAAQ,GAAG;AAC1C,YAAM,IAAI,UAAU,sCAAsC;AAAA,IAC3D;AAEA,QAAI,QAAQ,UAAU,QAAQ,gBAAgB,cAAAG,QAAO,YAAY,CAAC,4BAA4B;AAC7F,YAAM,IAAI,MAAM,iFAAiF;AAAA,IAClG;AAGA,QAAI,qBAAqB;AACzB,QAAI,QAAQ,QAAQ,QAAQ,gBAAgB,KAAK,QAAQ,MAAM,GAAG;AACjE,2BAAqB;AAAA,IACtB;AACA,QAAI,QAAQ,QAAQ,MAAM;AACzB,YAAM,aAAa,cAAc,OAAO;AACxC,UAAI,OAAO,eAAe,UAAU;AACnC,6BAAqB,OAAO,UAAU;AAAA,MACvC;AAAA,IACD;AACA,QAAI,oBAAoB;AACvB,cAAQ,IAAI,kBAAkB,kBAAkB;AAAA,IACjD;AAGA,QAAI,CAAC,QAAQ,IAAI,YAAY,GAAG;AAC/B,cAAQ,IAAI,cAAc,wDAAwD;AAAA,IACnF;AAGA,QAAI,QAAQ,YAAY,CAAC,QAAQ,IAAI,iBAAiB,GAAG;AACxD,cAAQ,IAAI,mBAAmB,cAAc;AAAA,IAC9C;AAEA,QAAI,QAAQ,QAAQ;AACpB,QAAI,OAAO,UAAU,YAAY;AAChC,cAAQ,MAAM,SAAS;AAAA,IACxB;AAKA,WAAO,OAAO,OAAO,CAAC,GAAG,WAAW;AAAA,MACnC,QAAQ,QAAQ;AAAA,MAChB,SAAS,4BAA4B,OAAO;AAAA,MAC5C;AAAA,IACD,CAAC;AAAA,EACF;AAcA,WAAS,WAAW,SAAS;AAC3B,UAAM,KAAK,MAAM,OAAO;AAExB,SAAK,OAAO;AACZ,SAAK,UAAU;AAGf,UAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,EAChD;AAuCA,WAASC,OAAM,KAAK,MAAM;AAGzB,QAAI,CAACA,OAAM,SAAS;AACnB,YAAM,IAAI,MAAM,wEAAwE;AAAA,IACzF;AAEA,SAAK,UAAUA,OAAM;AAGrB,WAAO,IAAIA,OAAM,QAAQ,SAAU,SAAS,QAAQ;AAEnD,YAAM,UAAU,IAAI,QAAQ,KAAK,IAAI;AACrC,YAAM,UAAU,sBAAsB,OAAO;AAE7C,YAAM,QAAQ,QAAQ,aAAa,WAAW,aAAAC,UAAQ,YAAAC,SAAM;AAC5D,YAAM,SAAS,QAAQ;AAEvB,UAAI,WAAW;AAEf,YAAM,QAAQ,SAASC,SAAQ;AAC9B,YAAI,QAAQ,IAAI,WAAW,6BAA6B;AACxD,eAAO,KAAK;AACZ,YAAI,QAAQ,QAAQ,QAAQ,gBAAgB,cAAAJ,QAAO,UAAU;AAC5D,wBAAc,QAAQ,MAAM,KAAK;AAAA,QAClC;AACA,YAAI,CAAC,YAAY,CAAC,SAAS;AAAM;AACjC,iBAAS,KAAK,KAAK,SAAS,KAAK;AAAA,MAClC;AAEA,UAAI,UAAU,OAAO,SAAS;AAC7B,cAAM;AACN;AAAA,MACD;AAEA,YAAM,mBAAmB,SAASK,oBAAmB;AACpD,cAAM;AACN,iBAAS;AAAA,MACV;AAGA,YAAM,MAAM,KAAK,OAAO;AACxB,UAAI;AAEJ,UAAI,QAAQ;AACX,eAAO,iBAAiB,SAAS,gBAAgB;AAAA,MAClD;AAEA,eAAS,WAAW;AACnB,YAAI,MAAM;AACV,YAAI;AAAQ,iBAAO,oBAAoB,SAAS,gBAAgB;AAChE,qBAAa,UAAU;AAAA,MACxB;AAEA,UAAI,QAAQ,SAAS;AACpB,YAAI,KAAK,UAAU,SAAU,QAAQ;AACpC,uBAAa,WAAW,WAAY;AACnC,mBAAO,IAAI,WAAW,uBAAuB,QAAQ,OAAO,iBAAiB,CAAC;AAC9E,qBAAS;AAAA,UACV,GAAG,QAAQ,OAAO;AAAA,QACnB,CAAC;AAAA,MACF;AAEA,UAAI,GAAG,SAAS,SAAU,KAAK;AAC9B,eAAO,IAAI,WAAW,cAAc,QAAQ,uBAAuB,IAAI,WAAW,UAAU,GAAG,CAAC;AAEhG,YAAI,YAAY,SAAS,MAAM;AAC9B,wBAAc,SAAS,MAAM,GAAG;AAAA,QACjC;AAEA,iBAAS;AAAA,MACV,CAAC;AAED,0CAAoC,KAAK,SAAU,KAAK;AACvD,YAAI,UAAU,OAAO,SAAS;AAC7B;AAAA,QACD;AAEA,YAAI,YAAY,SAAS,MAAM;AAC9B,wBAAc,SAAS,MAAM,GAAG;AAAA,QACjC;AAAA,MACD,CAAC;AAGD,UAAI,SAAS,QAAQ,QAAQ,UAAU,CAAC,CAAC,IAAI,IAAI;AAGhD,YAAI,GAAG,UAAU,SAAU,GAAG;AAC7B,YAAE,YAAY,SAAS,SAAU,UAAU;AAE1C,kBAAM,kBAAkB,EAAE,cAAc,MAAM,IAAI;AAGlD,gBAAI,YAAY,mBAAmB,CAAC,YAAY,EAAE,UAAU,OAAO,UAAU;AAC5E,oBAAM,MAAM,IAAI,MAAM,iBAAiB;AACvC,kBAAI,OAAO;AACX,uBAAS,KAAK,KAAK,SAAS,GAAG;AAAA,YAChC;AAAA,UACD,CAAC;AAAA,QACF,CAAC;AAAA,MACF;AAEA,UAAI,GAAG,YAAY,SAAU,KAAK;AACjC,qBAAa,UAAU;AAEvB,cAAM,UAAU,qBAAqB,IAAI,OAAO;AAGhD,YAAIJ,OAAM,WAAW,IAAI,UAAU,GAAG;AAErC,gBAAM,WAAW,QAAQ,IAAI,UAAU;AAGvC,cAAI,cAAc;AAClB,cAAI;AACH,0BAAc,aAAa,OAAO,OAAO,IAAI,MAAM,UAAU,QAAQ,GAAG,EAAE,SAAS;AAAA,UACpF,SAAS,KAAP;AAID,gBAAI,QAAQ,aAAa,UAAU;AAClC,qBAAO,IAAI,WAAW,wDAAwD,YAAY,kBAAkB,CAAC;AAC7G,uBAAS;AACT;AAAA,YACD;AAAA,UACD;AAGA,kBAAQ,QAAQ,UAAU;AAAA,YACzB,KAAK;AACJ,qBAAO,IAAI,WAAW,0EAA0E,QAAQ,OAAO,aAAa,CAAC;AAC7H,uBAAS;AACT;AAAA,YACD,KAAK;AAEJ,kBAAI,gBAAgB,MAAM;AAEzB,oBAAI;AACH,0BAAQ,IAAI,YAAY,WAAW;AAAA,gBACpC,SAAS,KAAP;AAED,yBAAO,GAAG;AAAA,gBACX;AAAA,cACD;AACA;AAAA,YACD,KAAK;AAEJ,kBAAI,gBAAgB,MAAM;AACzB;AAAA,cACD;AAGA,kBAAI,QAAQ,WAAW,QAAQ,QAAQ;AACtC,uBAAO,IAAI,WAAW,gCAAgC,QAAQ,OAAO,cAAc,CAAC;AACpF,yBAAS;AACT;AAAA,cACD;AAIA,oBAAM,cAAc;AAAA,gBACnB,SAAS,IAAIJ,SAAQ,QAAQ,OAAO;AAAA,gBACpC,QAAQ,QAAQ;AAAA,gBAChB,SAAS,QAAQ,UAAU;AAAA,gBAC3B,OAAO,QAAQ;AAAA,gBACf,UAAU,QAAQ;AAAA,gBAClB,QAAQ,QAAQ;AAAA,gBAChB,MAAM,QAAQ;AAAA,gBACd,QAAQ,QAAQ;AAAA,gBAChB,SAAS,QAAQ;AAAA,gBACjB,MAAM,QAAQ;AAAA,cACf;AAEA,kBAAI,CAAC,oBAAoB,QAAQ,KAAK,WAAW,KAAK,CAAC,eAAe,QAAQ,KAAK,WAAW,GAAG;AAChG,2BAAW,QAAQ,CAAC,iBAAiB,oBAAoB,UAAU,SAAS,GAAG;AAC9E,8BAAY,QAAQ,OAAO,IAAI;AAAA,gBAChC;AAAA,cACD;AAGA,kBAAI,IAAI,eAAe,OAAO,QAAQ,QAAQ,cAAc,OAAO,MAAM,MAAM;AAC9E,uBAAO,IAAI,WAAW,4DAA4D,sBAAsB,CAAC;AACzG,yBAAS;AACT;AAAA,cACD;AAGA,kBAAI,IAAI,eAAe,QAAQ,IAAI,eAAe,OAAO,IAAI,eAAe,QAAQ,QAAQ,WAAW,QAAQ;AAC9G,4BAAY,SAAS;AACrB,4BAAY,OAAO;AACnB,4BAAY,QAAQ,OAAO,gBAAgB;AAAA,cAC5C;AAGA,sBAAQI,OAAM,IAAI,QAAQ,aAAa,WAAW,CAAC,CAAC;AACpD,uBAAS;AACT;AAAA,UACF;AAAA,QACD;AAGA,YAAI,KAAK,OAAO,WAAY;AAC3B,cAAI;AAAQ,mBAAO,oBAAoB,SAAS,gBAAgB;AAAA,QACjE,CAAC;AACD,YAAI,OAAO,IAAI,KAAK,IAAI,cAAc,CAAC;AAEvC,cAAM,mBAAmB;AAAA,UACxB,KAAK,QAAQ;AAAA,UACb,QAAQ,IAAI;AAAA,UACZ,YAAY,IAAI;AAAA,UAChB;AAAA,UACA,MAAM,QAAQ;AAAA,UACd,SAAS,QAAQ;AAAA,UACjB,SAAS,QAAQ;AAAA,QAClB;AAGA,cAAM,UAAU,QAAQ,IAAI,kBAAkB;AAU9C,YAAI,CAAC,QAAQ,YAAY,QAAQ,WAAW,UAAU,YAAY,QAAQ,IAAI,eAAe,OAAO,IAAI,eAAe,KAAK;AAC3H,qBAAW,IAAIH,UAAS,MAAM,gBAAgB;AAC9C,kBAAQ,QAAQ;AAChB;AAAA,QACD;AAOA,cAAM,cAAc;AAAA,UACnB,OAAO,YAAAQ,QAAK;AAAA,UACZ,aAAa,YAAAA,QAAK;AAAA,QACnB;AAGA,YAAI,WAAW,UAAU,WAAW,UAAU;AAC7C,iBAAO,KAAK,KAAK,YAAAA,QAAK,aAAa,WAAW,CAAC;AAC/C,qBAAW,IAAIR,UAAS,MAAM,gBAAgB;AAC9C,kBAAQ,QAAQ;AAChB;AAAA,QACD;AAGA,YAAI,WAAW,aAAa,WAAW,aAAa;AAGnD,gBAAM,MAAM,IAAI,KAAK,IAAI,cAAc,CAAC;AACxC,cAAI,KAAK,QAAQ,SAAU,OAAO;AAEjC,iBAAK,MAAM,CAAC,IAAI,QAAU,GAAM;AAC/B,qBAAO,KAAK,KAAK,YAAAQ,QAAK,cAAc,CAAC;AAAA,YACtC,OAAO;AACN,qBAAO,KAAK,KAAK,YAAAA,QAAK,iBAAiB,CAAC;AAAA,YACzC;AACA,uBAAW,IAAIR,UAAS,MAAM,gBAAgB;AAC9C,oBAAQ,QAAQ;AAAA,UACjB,CAAC;AACD,cAAI,GAAG,OAAO,WAAY;AAEzB,gBAAI,CAAC,UAAU;AACd,yBAAW,IAAIA,UAAS,MAAM,gBAAgB;AAC9C,sBAAQ,QAAQ;AAAA,YACjB;AAAA,UACD,CAAC;AACD;AAAA,QACD;AAGA,YAAI,WAAW,QAAQ,OAAO,YAAAQ,QAAK,2BAA2B,YAAY;AACzE,iBAAO,KAAK,KAAK,YAAAA,QAAK,uBAAuB,CAAC;AAC9C,qBAAW,IAAIR,UAAS,MAAM,gBAAgB;AAC9C,kBAAQ,QAAQ;AAChB;AAAA,QACD;AAGA,mBAAW,IAAIA,UAAS,MAAM,gBAAgB;AAC9C,gBAAQ,QAAQ;AAAA,MACjB,CAAC;AAED,oBAAc,KAAK,OAAO;AAAA,IAC3B,CAAC;AAAA,EACF;AACA,WAAS,oCAAoC,SAAS,eAAe;AACpE,QAAI;AAEJ,YAAQ,GAAG,UAAU,SAAU,GAAG;AACjC,eAAS;AAAA,IACV,CAAC;AAED,YAAQ,GAAG,YAAY,SAAU,UAAU;AAC1C,YAAM,UAAU,SAAS;AAEzB,UAAI,QAAQ,mBAAmB,MAAM,aAAa,CAAC,QAAQ,gBAAgB,GAAG;AAC7E,iBAAS,KAAK,SAAS,SAAU,UAAU;AAK1C,gBAAM,kBAAkB,UAAU,OAAO,cAAc,MAAM,IAAI;AAEjE,cAAI,mBAAmB,CAAC,UAAU;AACjC,kBAAM,MAAM,IAAI,MAAM,iBAAiB;AACvC,gBAAI,OAAO;AACX,0BAAc,GAAG;AAAA,UAClB;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AAAA,EACF;AAEA,WAAS,cAAc,QAAQ,KAAK;AACnC,QAAI,OAAO,SAAS;AACnB,aAAO,QAAQ,GAAG;AAAA,IACnB,OAAO;AAEN,aAAO,KAAK,SAAS,GAAG;AACxB,aAAO,IAAI;AAAA,IACZ;AAAA,EACD;AA9tDA,qBACA,aACA,YACA,mBACA,cACA,aAKM,UAEA,QACA,MAEAS,OA2IF,SAKE,WAGA,aAsfA,mBACA,wBAkCA,KACAV,UA6OA,UAYA,0BAuFA,aAGA,cASAC,WAyFA,aACA,KAGA,WACA,YAsBA,4BAwBA,SAiNA,OAGA,eAEA,qBAcA,gBAqWC;AA7uDP;AAAA;AAAA,sBAAmB;AACnB,oBAAiB;AACjB,mBAAgB;AAChB,0BAAsB;AACtB,qBAAkB;AAClB,oBAAiB;AAKjB,MAAM,WAAW,cAAAE,QAAO;AAExB,MAAM,SAAS,OAAO,QAAQ;AAC9B,MAAM,OAAO,OAAO,MAAM;AAE1B,MAAMO,QAAN,MAAW;AAAA,QACV,cAAc;AACb,eAAK,IAAI,IAAI;AAEb,gBAAM,YAAY,UAAU,CAAC;AAC7B,gBAAM,UAAU,UAAU,CAAC;AAE3B,gBAAM,UAAU,CAAC;AACjB,cAAI,OAAO;AAEX,cAAI,WAAW;AACd,kBAAM,IAAI;AACV,kBAAM,SAAS,OAAO,EAAE,MAAM;AAC9B,qBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,oBAAM,UAAU,EAAE,CAAC;AACnB,kBAAI;AACJ,kBAAI,mBAAmB,QAAQ;AAC9B,yBAAS;AAAA,cACV,WAAW,YAAY,OAAO,OAAO,GAAG;AACvC,yBAAS,OAAO,KAAK,QAAQ,QAAQ,QAAQ,YAAY,QAAQ,UAAU;AAAA,cAC5E,WAAW,mBAAmB,aAAa;AAC1C,yBAAS,OAAO,KAAK,OAAO;AAAA,cAC7B,WAAW,mBAAmBA,OAAM;AACnC,yBAAS,QAAQ,MAAM;AAAA,cACxB,OAAO;AACN,yBAAS,OAAO,KAAK,OAAO,YAAY,WAAW,UAAU,OAAO,OAAO,CAAC;AAAA,cAC7E;AACA,sBAAQ,OAAO;AACf,sBAAQ,KAAK,MAAM;AAAA,YACpB;AAAA,UACD;AAEA,eAAK,MAAM,IAAI,OAAO,OAAO,OAAO;AAEpC,cAAIR,QAAO,WAAW,QAAQ,SAAS,UAAa,OAAO,QAAQ,IAAI,EAAE,YAAY;AACrF,cAAIA,SAAQ,CAAC,mBAAmB,KAAKA,KAAI,GAAG;AAC3C,iBAAK,IAAI,IAAIA;AAAA,UACd;AAAA,QACD;AAAA,QACA,IAAI,OAAO;AACV,iBAAO,KAAK,MAAM,EAAE;AAAA,QACrB;AAAA,QACA,IAAI,OAAO;AACV,iBAAO,KAAK,IAAI;AAAA,QACjB;AAAA,QACA,OAAO;AACN,iBAAO,QAAQ,QAAQ,KAAK,MAAM,EAAE,SAAS,CAAC;AAAA,QAC/C;AAAA,QACA,cAAc;AACb,gBAAM,MAAM,KAAK,MAAM;AACvB,gBAAM,KAAK,IAAI,OAAO,MAAM,IAAI,YAAY,IAAI,aAAa,IAAI,UAAU;AAC3E,iBAAO,QAAQ,QAAQ,EAAE;AAAA,QAC1B;AAAA,QACA,SAAS;AACR,gBAAM,WAAW,IAAI,SAAS;AAC9B,mBAAS,QAAQ,WAAY;AAAA,UAAC;AAC9B,mBAAS,KAAK,KAAK,MAAM,CAAC;AAC1B,mBAAS,KAAK,IAAI;AAClB,iBAAO;AAAA,QACR;AAAA,QACA,WAAW;AACV,iBAAO;AAAA,QACR;AAAA,QACA,QAAQ;AACP,gBAAM,OAAO,KAAK;AAElB,gBAAM,QAAQ,UAAU,CAAC;AACzB,gBAAM,MAAM,UAAU,CAAC;AACvB,cAAI,eAAe;AACnB,cAAI,UAAU,QAAW;AACxB,4BAAgB;AAAA,UACjB,WAAW,QAAQ,GAAG;AACrB,4BAAgB,KAAK,IAAI,OAAO,OAAO,CAAC;AAAA,UACzC,OAAO;AACN,4BAAgB,KAAK,IAAI,OAAO,IAAI;AAAA,UACrC;AACA,cAAI,QAAQ,QAAW;AACtB,0BAAc;AAAA,UACf,WAAW,MAAM,GAAG;AACnB,0BAAc,KAAK,IAAI,OAAO,KAAK,CAAC;AAAA,UACrC,OAAO;AACN,0BAAc,KAAK,IAAI,KAAK,IAAI;AAAA,UACjC;AACA,gBAAM,OAAO,KAAK,IAAI,cAAc,eAAe,CAAC;AAEpD,gBAAM,SAAS,KAAK,MAAM;AAC1B,gBAAM,eAAe,OAAO,MAAM,eAAe,gBAAgB,IAAI;AACrE,gBAAM,OAAO,IAAIQ,MAAK,CAAC,GAAG,EAAE,MAAM,UAAU,CAAC,EAAE,CAAC;AAChD,eAAK,MAAM,IAAI;AACf,iBAAO;AAAA,QACR;AAAA,MACD;AAEA,aAAO,iBAAiBA,MAAK,WAAW;AAAA,QACvC,MAAM,EAAE,YAAY,KAAK;AAAA,QACzB,MAAM,EAAE,YAAY,KAAK;AAAA,QACzB,OAAO,EAAE,YAAY,KAAK;AAAA,MAC3B,CAAC;AAED,aAAO,eAAeA,MAAK,WAAW,OAAO,aAAa;AAAA,QACzD,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,MACf,CAAC;AA+BD,iBAAW,YAAY,OAAO,OAAO,MAAM,SAAS;AACpD,iBAAW,UAAU,cAAc;AACnC,iBAAW,UAAU,OAAO;AAG5B,UAAI;AACH,kBAAU,UAAQ,UAAU,EAAE;AAAA,MAC/B,SAAS,GAAP;AAAA,MAAW;AAEb,MAAM,YAAY,OAAO,gBAAgB;AAGzC,MAAM,cAAc,cAAAP,QAAO;AAsD3B,WAAK,YAAY;AAAA,QAChB,IAAI,OAAO;AACV,iBAAO,KAAK,SAAS,EAAE;AAAA,QACxB;AAAA,QAEA,IAAI,WAAW;AACd,iBAAO,KAAK,SAAS,EAAE;AAAA,QACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,cAAc;AACb,iBAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,KAAK;AACjD,mBAAO,IAAI,OAAO,MAAM,IAAI,YAAY,IAAI,aAAa,IAAI,UAAU;AAAA,UACxE,CAAC;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,OAAO;AACN,cAAI,KAAK,KAAK,WAAW,KAAK,QAAQ,IAAI,cAAc,KAAK;AAC7D,iBAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,KAAK;AACjD,mBAAO,OAAO;AAAA;AAAA,cAEd,IAAIO,MAAK,CAAC,GAAG;AAAA,gBACZ,MAAM,GAAG,YAAY;AAAA,cACtB,CAAC;AAAA,cAAG;AAAA,gBACH,CAAC,MAAM,GAAG;AAAA,cACX;AAAA,YAAC;AAAA,UACF,CAAC;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,OAAO;AACN,cAAI,SAAS;AAEb,iBAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,QAAQ;AACpD,gBAAI;AACH,qBAAO,KAAK,MAAM,OAAO,SAAS,CAAC;AAAA,YACpC,SAAS,KAAP;AACD,qBAAO,KAAK,QAAQ,OAAO,IAAI,WAAW,iCAAiC,OAAO,eAAe,IAAI,WAAW,cAAc,CAAC;AAAA,YAChI;AAAA,UACD,CAAC;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,OAAO;AACN,iBAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,QAAQ;AACpD,mBAAO,OAAO,SAAS;AAAA,UACxB,CAAC;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,SAAS;AACR,iBAAO,YAAY,KAAK,IAAI;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,gBAAgB;AACf,cAAI,SAAS;AAEb,iBAAO,YAAY,KAAK,IAAI,EAAE,KAAK,SAAU,QAAQ;AACpD,mBAAO,YAAY,QAAQ,OAAO,OAAO;AAAA,UAC1C,CAAC;AAAA,QACF;AAAA,MACD;AAGA,aAAO,iBAAiB,KAAK,WAAW;AAAA,QACvC,MAAM,EAAE,YAAY,KAAK;AAAA,QACzB,UAAU,EAAE,YAAY,KAAK;AAAA,QAC7B,aAAa,EAAE,YAAY,KAAK;AAAA,QAChC,MAAM,EAAE,YAAY,KAAK;AAAA,QACzB,MAAM,EAAE,YAAY,KAAK;AAAA,QACzB,MAAM,EAAE,YAAY,KAAK;AAAA,MAC1B,CAAC;AAED,WAAK,QAAQ,SAAU,OAAO;AAC7B,mBAAW,QAAQ,OAAO,oBAAoB,KAAK,SAAS,GAAG;AAE9D,cAAI,EAAE,QAAQ,QAAQ;AACrB,kBAAM,OAAO,OAAO,yBAAyB,KAAK,WAAW,IAAI;AACjE,mBAAO,eAAe,OAAO,MAAM,IAAI;AAAA,UACxC;AAAA,QACD;AAAA,MACD;AA4UA,WAAK,UAAU,OAAO;AAQtB,MAAM,oBAAoB;AAC1B,MAAM,yBAAyB;AAkC/B,MAAM,MAAM,OAAO,KAAK;AACxB,MAAMV,WAAN,MAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOb,cAAc;AACb,cAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAE/E,eAAK,GAAG,IAAI,uBAAO,OAAO,IAAI;AAE9B,cAAI,gBAAgBA,UAAS;AAC5B,kBAAM,aAAa,KAAK,IAAI;AAC5B,kBAAM,cAAc,OAAO,KAAK,UAAU;AAE1C,uBAAW,cAAc,aAAa;AACrC,yBAAW,SAAS,WAAW,UAAU,GAAG;AAC3C,qBAAK,OAAO,YAAY,KAAK;AAAA,cAC9B;AAAA,YACD;AAEA;AAAA,UACD;AAIA,cAAI,QAAQ;AAAM;AAAA,mBAAW,OAAO,SAAS,UAAU;AACtD,kBAAM,SAAS,KAAK,OAAO,QAAQ;AACnC,gBAAI,UAAU,MAAM;AACnB,kBAAI,OAAO,WAAW,YAAY;AACjC,sBAAM,IAAI,UAAU,+BAA+B;AAAA,cACpD;AAIA,oBAAM,QAAQ,CAAC;AACf,yBAAW,QAAQ,MAAM;AACxB,oBAAI,OAAO,SAAS,YAAY,OAAO,KAAK,OAAO,QAAQ,MAAM,YAAY;AAC5E,wBAAM,IAAI,UAAU,mCAAmC;AAAA,gBACxD;AACA,sBAAM,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,cAC5B;AAEA,yBAAW,QAAQ,OAAO;AACzB,oBAAI,KAAK,WAAW,GAAG;AACtB,wBAAM,IAAI,UAAU,6CAA6C;AAAA,gBAClE;AACA,qBAAK,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,cAC7B;AAAA,YACD,OAAO;AAEN,yBAAW,OAAO,OAAO,KAAK,IAAI,GAAG;AACpC,sBAAM,QAAQ,KAAK,GAAG;AACtB,qBAAK,OAAO,KAAK,KAAK;AAAA,cACvB;AAAA,YACD;AAAA,UACD,OAAO;AACN,kBAAM,IAAI,UAAU,wCAAwC;AAAA,UAC7D;AAAA,QACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,IAAI,MAAM;AACT,iBAAO,GAAG;AACV,uBAAa,IAAI;AACjB,gBAAM,MAAM,KAAK,KAAK,GAAG,GAAG,IAAI;AAChC,cAAI,QAAQ,QAAW;AACtB,mBAAO;AAAA,UACR;AAEA,iBAAO,KAAK,GAAG,EAAE,GAAG,EAAE,KAAK,IAAI;AAAA,QAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,QAAQ,UAAU;AACjB,cAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAElF,cAAI,QAAQ,WAAW,IAAI;AAC3B,cAAI,IAAI;AACR,iBAAO,IAAI,MAAM,QAAQ;AACxB,gBAAI,WAAW,MAAM,CAAC;AACtB,kBAAM,OAAO,SAAS,CAAC,GACjB,QAAQ,SAAS,CAAC;AAExB,qBAAS,KAAK,SAAS,OAAO,MAAM,IAAI;AACxC,oBAAQ,WAAW,IAAI;AACvB;AAAA,UACD;AAAA,QACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,IAAI,MAAM,OAAO;AAChB,iBAAO,GAAG;AACV,kBAAQ,GAAG;AACX,uBAAa,IAAI;AACjB,wBAAc,KAAK;AACnB,gBAAM,MAAM,KAAK,KAAK,GAAG,GAAG,IAAI;AAChC,eAAK,GAAG,EAAE,QAAQ,SAAY,MAAM,IAAI,IAAI,CAAC,KAAK;AAAA,QACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,MAAM,OAAO;AACnB,iBAAO,GAAG;AACV,kBAAQ,GAAG;AACX,uBAAa,IAAI;AACjB,wBAAc,KAAK;AACnB,gBAAM,MAAM,KAAK,KAAK,GAAG,GAAG,IAAI;AAChC,cAAI,QAAQ,QAAW;AACtB,iBAAK,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK;AAAA,UAC1B,OAAO;AACN,iBAAK,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK;AAAA,UACzB;AAAA,QACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,IAAI,MAAM;AACT,iBAAO,GAAG;AACV,uBAAa,IAAI;AACjB,iBAAO,KAAK,KAAK,GAAG,GAAG,IAAI,MAAM;AAAA,QAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,OAAO,MAAM;AACZ,iBAAO,GAAG;AACV,uBAAa,IAAI;AACjB,gBAAM,MAAM,KAAK,KAAK,GAAG,GAAG,IAAI;AAChC,cAAI,QAAQ,QAAW;AACtB,mBAAO,KAAK,GAAG,EAAE,GAAG;AAAA,UACrB;AAAA,QACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,MAAM;AACL,iBAAO,KAAK,GAAG;AAAA,QAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,OAAO;AACN,iBAAO,sBAAsB,MAAM,KAAK;AAAA,QACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,SAAS;AACR,iBAAO,sBAAsB,MAAM,OAAO;AAAA,QAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,CAAC,OAAO,QAAQ,IAAI;AACnB,iBAAO,sBAAsB,MAAM,WAAW;AAAA,QAC/C;AAAA,MACD;AACA,MAAAA,SAAQ,UAAU,UAAUA,SAAQ,UAAU,OAAO,QAAQ;AAE7D,aAAO,eAAeA,SAAQ,WAAW,OAAO,aAAa;AAAA,QAC5D,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,MACf,CAAC;AAED,aAAO,iBAAiBA,SAAQ,WAAW;AAAA,QAC1C,KAAK,EAAE,YAAY,KAAK;AAAA,QACxB,SAAS,EAAE,YAAY,KAAK;AAAA,QAC5B,KAAK,EAAE,YAAY,KAAK;AAAA,QACxB,QAAQ,EAAE,YAAY,KAAK;AAAA,QAC3B,KAAK,EAAE,YAAY,KAAK;AAAA,QACxB,QAAQ,EAAE,YAAY,KAAK;AAAA,QAC3B,MAAM,EAAE,YAAY,KAAK;AAAA,QACzB,QAAQ,EAAE,YAAY,KAAK;AAAA,QAC3B,SAAS,EAAE,YAAY,KAAK;AAAA,MAC7B,CAAC;AAeD,MAAM,WAAW,OAAO,UAAU;AAYlC,MAAM,2BAA2B,OAAO,eAAe;AAAA,QACtD,OAAO;AAEN,cAAI,CAAC,QAAQ,OAAO,eAAe,IAAI,MAAM,0BAA0B;AACtE,kBAAM,IAAI,UAAU,0CAA0C;AAAA,UAC/D;AAEA,cAAI,YAAY,KAAK,QAAQ;AAC7B,gBAAM,SAAS,UAAU,QACnB,OAAO,UAAU,MACjB,QAAQ,UAAU;AAExB,gBAAM,SAAS,WAAW,QAAQ,IAAI;AACtC,gBAAM,MAAM,OAAO;AACnB,cAAI,SAAS,KAAK;AACjB,mBAAO;AAAA,cACN,OAAO;AAAA,cACP,MAAM;AAAA,YACP;AAAA,UACD;AAEA,eAAK,QAAQ,EAAE,QAAQ,QAAQ;AAE/B,iBAAO;AAAA,YACN,OAAO,OAAO,KAAK;AAAA,YACnB,MAAM;AAAA,UACP;AAAA,QACD;AAAA,MACD,GAAG,OAAO,eAAe,OAAO,eAAe,CAAC,EAAE,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC;AAEtE,aAAO,eAAe,0BAA0B,OAAO,aAAa;AAAA,QACnE,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,MACf,CAAC;AAoDD,MAAM,cAAc,OAAO,oBAAoB;AAG/C,MAAM,eAAe,YAAAM,QAAK;AAS1B,MAAML,YAAN,MAAe;AAAA,QACd,cAAc;AACb,cAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI;AAC/E,cAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AAEhF,eAAK,KAAK,MAAM,MAAM,IAAI;AAE1B,gBAAM,SAAS,KAAK,UAAU;AAC9B,gBAAM,UAAU,IAAID,SAAQ,KAAK,OAAO;AAExC,cAAI,QAAQ,QAAQ,CAAC,QAAQ,IAAI,cAAc,GAAG;AACjD,kBAAM,cAAc,mBAAmB,IAAI;AAC3C,gBAAI,aAAa;AAChB,sBAAQ,OAAO,gBAAgB,WAAW;AAAA,YAC3C;AAAA,UACD;AAEA,eAAK,WAAW,IAAI;AAAA,YACnB,KAAK,KAAK;AAAA,YACV;AAAA,YACA,YAAY,KAAK,cAAc,aAAa,MAAM;AAAA,YAClD;AAAA,YACA,SAAS,KAAK;AAAA,UACf;AAAA,QACD;AAAA,QAEA,IAAI,MAAM;AACT,iBAAO,KAAK,WAAW,EAAE,OAAO;AAAA,QACjC;AAAA,QAEA,IAAI,SAAS;AACZ,iBAAO,KAAK,WAAW,EAAE;AAAA,QAC1B;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,KAAK;AACR,iBAAO,KAAK,WAAW,EAAE,UAAU,OAAO,KAAK,WAAW,EAAE,SAAS;AAAA,QACtE;AAAA,QAEA,IAAI,aAAa;AAChB,iBAAO,KAAK,WAAW,EAAE,UAAU;AAAA,QACpC;AAAA,QAEA,IAAI,aAAa;AAChB,iBAAO,KAAK,WAAW,EAAE;AAAA,QAC1B;AAAA,QAEA,IAAI,UAAU;AACb,iBAAO,KAAK,WAAW,EAAE;AAAA,QAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,QAAQ;AACP,iBAAO,IAAIC,UAAS,MAAM,IAAI,GAAG;AAAA,YAChC,KAAK,KAAK;AAAA,YACV,QAAQ,KAAK;AAAA,YACb,YAAY,KAAK;AAAA,YACjB,SAAS,KAAK;AAAA,YACd,IAAI,KAAK;AAAA,YACT,YAAY,KAAK;AAAA,UAClB,CAAC;AAAA,QACF;AAAA,MACD;AAEA,WAAK,MAAMA,UAAS,SAAS;AAE7B,aAAO,iBAAiBA,UAAS,WAAW;AAAA,QAC3C,KAAK,EAAE,YAAY,KAAK;AAAA,QACxB,QAAQ,EAAE,YAAY,KAAK;AAAA,QAC3B,IAAI,EAAE,YAAY,KAAK;AAAA,QACvB,YAAY,EAAE,YAAY,KAAK;AAAA,QAC/B,YAAY,EAAE,YAAY,KAAK;AAAA,QAC/B,SAAS,EAAE,YAAY,KAAK;AAAA,QAC5B,OAAO,EAAE,YAAY,KAAK;AAAA,MAC3B,CAAC;AAED,aAAO,eAAeA,UAAS,WAAW,OAAO,aAAa;AAAA,QAC7D,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,MACf,CAAC;AAED,MAAM,cAAc,OAAO,mBAAmB;AAC9C,MAAM,MAAM,WAAAU,QAAI,OAAO,kBAAAC,QAAU;AAGjC,MAAM,YAAY,WAAAD,QAAI;AACtB,MAAM,aAAa,WAAAA,QAAI;AAsBvB,MAAM,6BAA6B,aAAa,cAAAR,QAAO,SAAS;AAwBhE,MAAM,UAAN,MAAc;AAAA,QACb,YAAY,OAAO;AAClB,cAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AAEhF,cAAI;AAGJ,cAAI,CAAC,UAAU,KAAK,GAAG;AACtB,gBAAI,SAAS,MAAM,MAAM;AAIxB,0BAAY,SAAS,MAAM,IAAI;AAAA,YAChC,OAAO;AAEN,0BAAY,SAAS,GAAG,OAAO;AAAA,YAChC;AACA,oBAAQ,CAAC;AAAA,UACV,OAAO;AACN,wBAAY,SAAS,MAAM,GAAG;AAAA,UAC/B;AAEA,cAAI,SAAS,KAAK,UAAU,MAAM,UAAU;AAC5C,mBAAS,OAAO,YAAY;AAE5B,eAAK,KAAK,QAAQ,QAAQ,UAAU,KAAK,KAAK,MAAM,SAAS,UAAU,WAAW,SAAS,WAAW,SAAS;AAC9G,kBAAM,IAAI,UAAU,+CAA+C;AAAA,UACpE;AAEA,cAAI,YAAY,KAAK,QAAQ,OAAO,KAAK,OAAO,UAAU,KAAK,KAAK,MAAM,SAAS,OAAO,MAAM,KAAK,IAAI;AAEzG,eAAK,KAAK,MAAM,WAAW;AAAA,YAC1B,SAAS,KAAK,WAAW,MAAM,WAAW;AAAA,YAC1C,MAAM,KAAK,QAAQ,MAAM,QAAQ;AAAA,UAClC,CAAC;AAED,gBAAM,UAAU,IAAIH,SAAQ,KAAK,WAAW,MAAM,WAAW,CAAC,CAAC;AAE/D,cAAI,aAAa,QAAQ,CAAC,QAAQ,IAAI,cAAc,GAAG;AACtD,kBAAM,cAAc,mBAAmB,SAAS;AAChD,gBAAI,aAAa;AAChB,sBAAQ,OAAO,gBAAgB,WAAW;AAAA,YAC3C;AAAA,UACD;AAEA,cAAI,SAAS,UAAU,KAAK,IAAI,MAAM,SAAS;AAC/C,cAAI,YAAY;AAAM,qBAAS,KAAK;AAEpC,cAAI,UAAU,QAAQ,CAAC,cAAc,MAAM,GAAG;AAC7C,kBAAM,IAAI,UAAU,iDAAiD;AAAA,UACtE;AAEA,eAAK,WAAW,IAAI;AAAA,YACnB;AAAA,YACA,UAAU,KAAK,YAAY,MAAM,YAAY;AAAA,YAC7C;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAGA,eAAK,SAAS,KAAK,WAAW,SAAY,KAAK,SAAS,MAAM,WAAW,SAAY,MAAM,SAAS;AACpG,eAAK,WAAW,KAAK,aAAa,SAAY,KAAK,WAAW,MAAM,aAAa,SAAY,MAAM,WAAW;AAC9G,eAAK,UAAU,KAAK,WAAW,MAAM,WAAW;AAChD,eAAK,QAAQ,KAAK,SAAS,MAAM;AAAA,QAClC;AAAA,QAEA,IAAI,SAAS;AACZ,iBAAO,KAAK,WAAW,EAAE;AAAA,QAC1B;AAAA,QAEA,IAAI,MAAM;AACT,iBAAO,WAAW,KAAK,WAAW,EAAE,SAAS;AAAA,QAC9C;AAAA,QAEA,IAAI,UAAU;AACb,iBAAO,KAAK,WAAW,EAAE;AAAA,QAC1B;AAAA,QAEA,IAAI,WAAW;AACd,iBAAO,KAAK,WAAW,EAAE;AAAA,QAC1B;AAAA,QAEA,IAAI,SAAS;AACZ,iBAAO,KAAK,WAAW,EAAE;AAAA,QAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,QAAQ;AACP,iBAAO,IAAI,QAAQ,IAAI;AAAA,QACxB;AAAA,MACD;AAEA,WAAK,MAAM,QAAQ,SAAS;AAE5B,aAAO,eAAe,QAAQ,WAAW,OAAO,aAAa;AAAA,QAC5D,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,MACf,CAAC;AAED,aAAO,iBAAiB,QAAQ,WAAW;AAAA,QAC1C,QAAQ,EAAE,YAAY,KAAK;AAAA,QAC3B,KAAK,EAAE,YAAY,KAAK;AAAA,QACxB,SAAS,EAAE,YAAY,KAAK;AAAA,QAC5B,UAAU,EAAE,YAAY,KAAK;AAAA,QAC7B,OAAO,EAAE,YAAY,KAAK;AAAA,QAC1B,QAAQ,EAAE,YAAY,KAAK;AAAA,MAC5B,CAAC;AA4FD,iBAAW,YAAY,OAAO,OAAO,MAAM,SAAS;AACpD,iBAAW,UAAU,cAAc;AACnC,iBAAW,UAAU,OAAO;AAE5B,MAAM,QAAQ,WAAAW,QAAI,OAAO,kBAAAC,QAAU;AAGnC,MAAM,gBAAgB,cAAAT,QAAO;AAE7B,MAAM,sBAAsB,SAASU,qBAAoB,aAAa,UAAU;AAC/E,cAAM,OAAO,IAAI,MAAM,QAAQ,EAAE;AACjC,cAAM,OAAO,IAAI,MAAM,WAAW,EAAE;AAEpC,eAAO,SAAS,QAAQ,KAAK,KAAK,SAAS,KAAK,SAAS,CAAC,MAAM,OAAO,KAAK,SAAS,IAAI;AAAA,MAC1F;AASA,MAAM,iBAAiB,SAASC,gBAAe,aAAa,UAAU;AACrE,cAAM,OAAO,IAAI,MAAM,QAAQ,EAAE;AACjC,cAAM,OAAO,IAAI,MAAM,WAAW,EAAE;AAEpC,eAAO,SAAS;AAAA,MACjB;AAyVA,MAAAV,OAAM,aAAa,SAAU,MAAM;AAClC,eAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS;AAAA,MACjF;AAGA,MAAAA,OAAM,UAAU,OAAO;AAEvB,MAAO,cAAQA;AAAA;AAAA;;;AC7uDf;AAAA;AAAA,UAAM,YAAY;AAClB,UAAM,YAAY,UAAU,WAAW;AAEvC,UAAMW,SAAQ,SAAU,KAAK,SAAS;AAGpC,YAAI,QAAQ,KAAK,GAAG,GAAG;AACrB,gBAAM,WAAW;AAAA,QACnB;AACA,eAAO,UAAU,KAAK,MAAM,KAAK,OAAO;AAAA,MAC1C;AAEA,MAAAA,OAAM,WAAW;AAEjB,aAAO,UAAU,UAAUA;AAC3B,cAAQ,QAAQA;AAChB,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,WAAW,UAAU;AAG7B,cAAQ,UAAUA;AAAA;AAAA;;;ACrBlB;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,eAAeC;AAMvB,eAASA,cAAa,OAAO;AAC3B,eAAO,OAAO,SAAS,YAAY,UAAU;AAAA,MAC/C;AAAA;AAAA;;;ACbA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,YAAYC;AAEpB,eAASA,WAAU,WAAW,SAAS;AACrC,cAAM,mBAAmB,QAAQ,SAAS;AAE1C,YAAI,CAAC,kBAAkB;AACrB,gBAAM,IAAI;AAAA,YACR,WAAW,OAAO,UAAU;AAAA,UAC9B;AAAA,QACF;AAAA,MACF;AAAA;AAAA;;;ACfA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,cAAcC;AAEtB,UAAI,aAAa;AAEjB,UAAMC,cAAa;AASnB,eAASD,aAAY,QAAQ,UAAU;AACrC,YAAI,gBAAgB;AACpB,YAAI,OAAO;AAEX,mBAAW,SAAS,OAAO,KAAK,SAASC,WAAU,GAAG;AACpD,iBAAO,MAAM,UAAU,aAAa,GAAG,WAAW,WAAW,KAAK;AAElE,cAAI,MAAM,SAAS,UAAU;AAC3B;AAAA,UACF;AAEA,0BAAgB,MAAM,QAAQ,MAAM,CAAC,EAAE;AACvC,kBAAQ;AAAA,QACV;AAEA,eAAO;AAAA,UACL;AAAA,UACA,QAAQ,WAAW,IAAI;AAAA,QACzB;AAAA,MACF;AAAA;AAAA;;;ACrCA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,gBAAgBC;AACxB,cAAQ,sBAAsBC;AAE9B,UAAI,YAAY;AAKhB,eAASD,eAAc,UAAU;AAC/B,eAAOC;AAAA,UACL,SAAS;AAAA,WACR,GAAG,UAAU,aAAa,SAAS,QAAQ,SAAS,KAAK;AAAA,QAC5D;AAAA,MACF;AAKA,eAASA,qBAAoB,QAAQ,gBAAgB;AACnD,cAAM,wBAAwB,OAAO,eAAe,SAAS;AAC7D,cAAM,OAAO,GAAG,SAAS,qBAAqB,IAAI,OAAO;AACzD,cAAM,YAAY,eAAe,OAAO;AACxC,cAAM,aAAa,OAAO,eAAe,OAAO;AAChD,cAAM,UAAU,eAAe,OAAO;AACtC,cAAM,eAAe,eAAe,SAAS,IAAI,wBAAwB;AACzE,cAAM,YAAY,eAAe,SAAS;AAC1C,cAAM,cAAc,GAAG,OAAO,QAAQ,WAAW;AAAA;AACjD,cAAM,QAAQ,KAAK,MAAM,cAAc;AACvC,cAAM,eAAe,MAAM,SAAS;AAEpC,YAAI,aAAa,SAAS,KAAK;AAC7B,gBAAM,eAAe,KAAK,MAAM,YAAY,EAAE;AAC9C,gBAAM,mBAAmB,YAAY;AACrC,gBAAM,WAAW,CAAC;AAElB,mBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK,IAAI;AAChD,qBAAS,KAAK,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;AAAA,UAC7C;AAEA,iBACE,cACAC,oBAAmB;AAAA,YACjB,CAAC,GAAG,aAAa,SAAS,CAAC,CAAC;AAAA,YAC5B,GAAG,SAAS,MAAM,GAAG,eAAe,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,OAAO,CAAC;AAAA,YACtE,CAAC,KAAK,IAAI,SAAS,gBAAgB,CAAC;AAAA,YACpC,CAAC,KAAK,SAAS,eAAe,CAAC,CAAC;AAAA,UAClC,CAAC;AAAA,QAEL;AAEA,eACE,cACAA,oBAAmB;AAAA;AAAA,UAEjB,CAAC,GAAG,UAAU,OAAO,MAAM,YAAY,CAAC,CAAC;AAAA,UACzC,CAAC,GAAG,aAAa,YAAY;AAAA,UAC7B,CAAC,KAAK,IAAI,SAAS,SAAS,CAAC;AAAA,UAC7B,CAAC,GAAG,UAAU,OAAO,MAAM,YAAY,CAAC,CAAC;AAAA,QAC3C,CAAC;AAAA,MAEL;AAEA,eAASA,oBAAmB,OAAO;AACjC,cAAM,gBAAgB,MAAM,OAAO,CAAC,CAAC,GAAG,IAAI,MAAM,SAAS,MAAS;AACpE,cAAM,SAAS,KAAK,IAAI,GAAG,cAAc,IAAI,CAAC,CAAC,MAAM,MAAM,OAAO,MAAM,CAAC;AACzE,eAAO,cACJ,IAAI,CAAC,CAAC,QAAQ,IAAI,MAAM,OAAO,SAAS,MAAM,KAAK,OAAO,MAAM,OAAO,GAAG,EAC1E,KAAK,IAAI;AAAA,MACd;AAAA;AAAA;;;ACzEA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,eAAe;AACvB,cAAQ,cAAc;AACtB,cAAQ,aAAa;AAErB,UAAI,gBAAgB;AAEpB,UAAI,YAAY;AAEhB,UAAI,iBAAiB;AAErB,eAASC,qBAAoB,MAAM;AACjC,cAAM,WAAW,KAAK,CAAC;AAEvB,YAAI,YAAY,QAAQ,UAAU,YAAY,YAAY,UAAU;AAClE,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,QAAQ,KAAK,CAAC;AAAA,YACd,WAAW,KAAK,CAAC;AAAA,YACjB,MAAM,KAAK,CAAC;AAAA,YACZ,eAAe,KAAK,CAAC;AAAA,YACrB,YAAY,KAAK,CAAC;AAAA,UACpB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAQA,UAAMC,gBAAN,cAA2B,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA8C/B,YAAY,YAAY,SAAS;AAC/B,cAAI,aAAa,iBAAiB;AAElC,gBAAM,EAAE,OAAO,QAAQ,WAAW,MAAM,eAAe,WAAW,IAChED,qBAAoB,OAAO;AAC7B,gBAAM,OAAO;AACb,eAAK,OAAO;AACZ,eAAK,OAAO,SAAS,QAAQ,SAAS,SAAS,OAAO;AACtD,eAAK,gBACH,kBAAkB,QAAQ,kBAAkB,SACxC,gBACA;AAEN,eAAK,QAAQE;AAAA,YACX,MAAM,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,KAAK,IAAI;AAAA,UACnD;AACA,gBAAM,gBAAgBA;AAAA,aACnB,cAAc,KAAK,WAAW,QAAQ,gBAAgB,SACnD,SACA,YAAY,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE,OAAO,CAAC,QAAQ,OAAO,IAAI;AAAA,UACrE;AAEA,eAAK,SACH,WAAW,QAAQ,WAAW,SAC1B,SACA,kBAAkB,QAAQ,kBAAkB,SAC5C,UACC,kBAAkB,cAAc,CAAC,OAAO,QACzC,oBAAoB,SACpB,SACA,gBAAgB;AACtB,eAAK,YACH,cAAc,QAAQ,cAAc,SAChC,YACA,kBAAkB,QAAQ,kBAAkB,SAC5C,SACA,cAAc,IAAI,CAAC,QAAQ,IAAI,KAAK;AAC1C,eAAK,YACH,aAAa,SACT,UAAU,IAAI,CAAC,SAAS,GAAG,UAAU,aAAa,QAAQ,GAAG,CAAC,IAC9D,kBAAkB,QAAQ,kBAAkB,SAC5C,SACA,cAAc;AAAA,YAAI,CAAC,SAChB,GAAG,UAAU,aAAa,IAAI,QAAQ,IAAI,KAAK;AAAA,UAClD;AACN,gBAAM,sBAAsB,GAAG,cAAc;AAAA,YAC3C,kBAAkB,QAAQ,kBAAkB,SACxC,SACA,cAAc;AAAA,UACpB,IACI,kBAAkB,QAAQ,kBAAkB,SAC1C,SACA,cAAc,aAChB;AACJ,eAAK,cACF,OACC,eAAe,QAAQ,eAAe,SAClC,aACA,wBAAwB,QAAQ,SAAS,SAC3C,OACA,uBAAO,OAAO,IAAI;AAGxB,iBAAO,iBAAiB,MAAM;AAAA,YAC5B,SAAS;AAAA,cACP,UAAU;AAAA,cACV,YAAY;AAAA,YACd;AAAA,YACA,MAAM;AAAA,cACJ,YAAY;AAAA,YACd;AAAA,YACA,OAAO;AAAA,cACL,YAAY;AAAA,YACd;AAAA,YACA,QAAQ;AAAA,cACN,YAAY;AAAA,YACd;AAAA,YACA,WAAW;AAAA,cACT,YAAY;AAAA,YACd;AAAA,YACA,eAAe;AAAA,cACb,YAAY;AAAA,YACd;AAAA,UACF,CAAC;AAKD,cACE,kBAAkB,QAClB,kBAAkB,UAClB,cAAc,OACd;AACA,mBAAO,eAAe,MAAM,SAAS;AAAA,cACnC,OAAO,cAAc;AAAA,cACrB,UAAU;AAAA,cACV,cAAc;AAAA,YAChB,CAAC;AAAA,UACH,WAAW,MAAM,mBAAmB;AAClC,kBAAM,kBAAkB,MAAMD,aAAY;AAAA,UAC5C,OAAO;AACL,mBAAO,eAAe,MAAM,SAAS;AAAA,cACnC,OAAO,MAAM,EAAE;AAAA,cACf,UAAU;AAAA,cACV,cAAc;AAAA,YAChB,CAAC;AAAA,UACH;AAAA,QAEF;AAAA,QAEA,KAAK,OAAO,WAAW,IAAI;AACzB,iBAAO;AAAA,QACT;AAAA,QAEA,WAAW;AACT,cAAIE,UAAS,KAAK;AAElB,cAAI,KAAK,OAAO;AACd,uBAAW,QAAQ,KAAK,OAAO;AAC7B,kBAAI,KAAK,KAAK;AACZ,gBAAAA,WAAU,UAAU,GAAG,eAAe,eAAe,KAAK,GAAG;AAAA,cAC/D;AAAA,YACF;AAAA,UACF,WAAW,KAAK,UAAU,KAAK,WAAW;AACxC,uBAAW,YAAY,KAAK,WAAW;AACrC,cAAAA,WACE,UACC,GAAG,eAAe,qBAAqB,KAAK,QAAQ,QAAQ;AAAA,YACjE;AAAA,UACF;AAEA,iBAAOA;AAAA,QACT;AAAA,QAEA,SAAS;AACP,gBAAM,iBAAiB;AAAA,YACrB,SAAS,KAAK;AAAA,UAChB;AAEA,cAAI,KAAK,aAAa,MAAM;AAC1B,2BAAe,YAAY,KAAK;AAAA,UAClC;AAEA,cAAI,KAAK,QAAQ,MAAM;AACrB,2BAAe,OAAO,KAAK;AAAA,UAC7B;AAEA,cAAI,KAAK,cAAc,QAAQ,OAAO,KAAK,KAAK,UAAU,EAAE,SAAS,GAAG;AACtE,2BAAe,aAAa,KAAK;AAAA,UACnC;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,cAAQ,eAAeF;AAEvB,eAASC,kBAAiB,OAAO;AAC/B,eAAO,UAAU,UAAa,MAAM,WAAW,IAAI,SAAY;AAAA,MACjE;AAWA,eAAS,WAAW,OAAO;AACzB,eAAO,MAAM,SAAS;AAAA,MACxB;AAQA,eAAS,YAAY,OAAO;AAC1B,eAAO,MAAM,OAAO;AAAA,MACtB;AAAA;AAAA;;;AC1QA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,cAAcE;AAEtB,UAAI,gBAAgB;AAMpB,eAASA,aAAY,QAAQ,UAAU,aAAa;AAClD,eAAO,IAAI,cAAc,aAAa,iBAAiB,eAAe;AAAA,UACpE;AAAA,UACA,WAAW,CAAC,QAAQ;AAAA,QACtB,CAAC;AAAA,MACH;AAAA;AAAA;;;AClBA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,QACN,QAAQ,oBACR,QAAQ,oBACR,QAAQ,WACN;AACJ,cAAQ,SAASC;AAMjB,UAAMC,YAAN,MAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoBb,YAAY,YAAY,UAAU,QAAQ;AACxC,eAAK,QAAQ,WAAW;AACxB,eAAK,MAAM,SAAS;AACpB,eAAK,aAAa;AAClB,eAAK,WAAW;AAChB,eAAK,SAAS;AAAA,QAChB;AAAA,QAEA,KAAK,OAAO,WAAW,IAAI;AACzB,iBAAO;AAAA,QACT;AAAA,QAEA,SAAS;AACP,iBAAO;AAAA,YACL,OAAO,KAAK;AAAA,YACZ,KAAK,KAAK;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAMA,cAAQ,WAAWA;AAEnB,UAAMC,SAAN,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiCV,YAAY,MAAM,OAAO,KAAK,MAAM,QAAQ,OAAO;AACjD,eAAK,OAAO;AACZ,eAAK,QAAQ;AACb,eAAK,MAAM;AACX,eAAK,OAAO;AACZ,eAAK,SAAS;AAEd,eAAK,QAAQ;AACb,eAAK,OAAO;AACZ,eAAK,OAAO;AAAA,QACd;AAAA,QAEA,KAAK,OAAO,WAAW,IAAI;AACzB,iBAAO;AAAA,QACT;AAAA,QAEA,SAAS;AACP,iBAAO;AAAA,YACL,MAAM,KAAK;AAAA,YACX,OAAO,KAAK;AAAA,YACZ,MAAM,KAAK;AAAA,YACX,QAAQ,KAAK;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAKA,cAAQ,QAAQA;AAKhB,UAAMC,qBAAoB;AAAA,QACxB,MAAM,CAAC;AAAA,QACP,UAAU,CAAC,aAAa;AAAA,QACxB,qBAAqB;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,oBAAoB,CAAC,YAAY,QAAQ,gBAAgB,YAAY;AAAA,QACrE,UAAU,CAAC,MAAM;AAAA,QACjB,cAAc,CAAC,YAAY;AAAA,QAC3B,OAAO,CAAC,SAAS,QAAQ,aAAa,cAAc,cAAc;AAAA,QAClE,UAAU,CAAC,QAAQ,OAAO;AAAA,QAC1B,gBAAgB,CAAC,QAAQ,YAAY;AAAA,QACrC,gBAAgB,CAAC,iBAAiB,cAAc,cAAc;AAAA,QAC9D,oBAAoB;AAAA,UAClB;AAAA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,UAAU,CAAC;AAAA,QACX,YAAY,CAAC;AAAA,QACb,aAAa,CAAC;AAAA,QACd,cAAc,CAAC;AAAA,QACf,WAAW,CAAC;AAAA,QACZ,WAAW,CAAC;AAAA,QACZ,WAAW,CAAC,QAAQ;AAAA,QACpB,aAAa,CAAC,QAAQ;AAAA,QACtB,aAAa,CAAC,QAAQ,OAAO;AAAA,QAC7B,WAAW,CAAC,QAAQ,WAAW;AAAA,QAC/B,WAAW,CAAC,MAAM;AAAA,QAClB,UAAU,CAAC,MAAM;AAAA,QACjB,aAAa,CAAC,MAAM;AAAA,QACpB,kBAAkB,CAAC,eAAe,cAAc,gBAAgB;AAAA,QAChE,yBAAyB,CAAC,MAAM;AAAA,QAChC,sBAAsB,CAAC,eAAe,QAAQ,YAAY;AAAA,QAC1D,sBAAsB;AAAA,UACpB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,iBAAiB,CAAC,eAAe,QAAQ,aAAa,QAAQ,YAAY;AAAA,QAC1E,sBAAsB;AAAA,UACpB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,qBAAqB,CAAC,eAAe,QAAQ,cAAc,OAAO;AAAA,QAClE,oBAAoB,CAAC,eAAe,QAAQ,cAAc,QAAQ;AAAA,QAClE,qBAAqB,CAAC,eAAe,QAAQ,YAAY;AAAA,QACzD,2BAA2B,CAAC,eAAe,QAAQ,cAAc,QAAQ;AAAA,QACzE,qBAAqB,CAAC,eAAe,QAAQ,aAAa,WAAW;AAAA,QACrE,iBAAiB,CAAC,cAAc,gBAAgB;AAAA,QAChD,qBAAqB,CAAC,QAAQ,YAAY;AAAA,QAC1C,qBAAqB,CAAC,QAAQ,cAAc,cAAc,QAAQ;AAAA,QAClE,wBAAwB,CAAC,QAAQ,cAAc,cAAc,QAAQ;AAAA,QACrE,oBAAoB,CAAC,QAAQ,cAAc,OAAO;AAAA,QAClD,mBAAmB,CAAC,QAAQ,cAAc,QAAQ;AAAA,QAClD,0BAA0B,CAAC,QAAQ,cAAc,QAAQ;AAAA,MAC3D;AACA,cAAQ,oBAAoBA;AAC5B,UAAMC,cAAa,IAAI,IAAI,OAAO,KAAKD,kBAAiB,CAAC;AAKzD,eAASH,QAAO,WAAW;AACzB,cAAM,YACJ,cAAc,QAAQ,cAAc,SAAS,SAAS,UAAU;AAClE,eAAO,OAAO,cAAc,YAAYI,YAAW,IAAI,SAAS;AAAA,MAClE;AAGA,UAAIC;AACJ,cAAQ,oBAAoBA;AAE5B,OAAC,SAAUA,oBAAmB;AAC5B,QAAAA,mBAAkB,OAAO,IAAI;AAC7B,QAAAA,mBAAkB,UAAU,IAAI;AAChC,QAAAA,mBAAkB,cAAc,IAAI;AAAA,MACtC,GAAGA,uBAAsB,QAAQ,oBAAoBA,qBAAoB,CAAC,EAAE;AAAA;AAAA;;;AC/N5E;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,oBAAoB;AAK5B,UAAIC;AACJ,cAAQ,oBAAoBA;AAE5B,OAAC,SAAUA,oBAAmB;AAC5B,QAAAA,mBAAkB,OAAO,IAAI;AAC7B,QAAAA,mBAAkB,UAAU,IAAI;AAChC,QAAAA,mBAAkB,cAAc,IAAI;AACpC,QAAAA,mBAAkB,OAAO,IAAI;AAC7B,QAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,QAAAA,mBAAkB,iBAAiB,IAAI;AACvC,QAAAA,mBAAkB,iBAAiB,IAAI;AACvC,QAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,QAAAA,mBAAkB,QAAQ,IAAI;AAC9B,QAAAA,mBAAkB,QAAQ,IAAI;AAC9B,QAAAA,mBAAkB,QAAQ,IAAI;AAC9B,QAAAA,mBAAkB,kBAAkB,IAAI;AACxC,QAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,QAAAA,mBAAkB,WAAW,IAAI;AACjC,QAAAA,mBAAkB,OAAO,IAAI;AAC7B,QAAAA,mBAAkB,MAAM,IAAI;AAC5B,QAAAA,mBAAkB,YAAY,IAAI;AAClC,QAAAA,mBAAkB,cAAc,IAAI;AACpC,QAAAA,mBAAkB,wBAAwB,IAAI;AAAA,MAChD,GAAGA,uBAAsB,QAAQ,oBAAoBA,qBAAoB,CAAC,EAAE;AAAA;AAAA;;;ACjC5E;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,OAAO;AAKf,UAAIC;AACJ,cAAQ,OAAOA;AAEf,OAAC,SAAUA,OAAM;AACf,QAAAA,MAAK,MAAM,IAAI;AACf,QAAAA,MAAK,UAAU,IAAI;AACnB,QAAAA,MAAK,sBAAsB,IAAI;AAC/B,QAAAA,MAAK,qBAAqB,IAAI;AAC9B,QAAAA,MAAK,eAAe,IAAI;AACxB,QAAAA,MAAK,OAAO,IAAI;AAChB,QAAAA,MAAK,UAAU,IAAI;AACnB,QAAAA,MAAK,iBAAiB,IAAI;AAC1B,QAAAA,MAAK,iBAAiB,IAAI;AAC1B,QAAAA,MAAK,qBAAqB,IAAI;AAC9B,QAAAA,MAAK,UAAU,IAAI;AACnB,QAAAA,MAAK,KAAK,IAAI;AACd,QAAAA,MAAK,OAAO,IAAI;AAChB,QAAAA,MAAK,QAAQ,IAAI;AACjB,QAAAA,MAAK,SAAS,IAAI;AAClB,QAAAA,MAAK,MAAM,IAAI;AACf,QAAAA,MAAK,MAAM,IAAI;AACf,QAAAA,MAAK,MAAM,IAAI;AACf,QAAAA,MAAK,QAAQ,IAAI;AACjB,QAAAA,MAAK,cAAc,IAAI;AACvB,QAAAA,MAAK,WAAW,IAAI;AACpB,QAAAA,MAAK,YAAY,IAAI;AACrB,QAAAA,MAAK,WAAW,IAAI;AACpB,QAAAA,MAAK,eAAe,IAAI;AACxB,QAAAA,MAAK,mBAAmB,IAAI;AAC5B,QAAAA,MAAK,2BAA2B,IAAI;AACpC,QAAAA,MAAK,wBAAwB,IAAI;AACjC,QAAAA,MAAK,wBAAwB,IAAI;AACjC,QAAAA,MAAK,kBAAkB,IAAI;AAC3B,QAAAA,MAAK,wBAAwB,IAAI;AACjC,QAAAA,MAAK,2BAA2B,IAAI;AACpC,QAAAA,MAAK,uBAAuB,IAAI;AAChC,QAAAA,MAAK,sBAAsB,IAAI;AAC/B,QAAAA,MAAK,uBAAuB,IAAI;AAChC,QAAAA,MAAK,8BAA8B,IAAI;AACvC,QAAAA,MAAK,sBAAsB,IAAI;AAC/B,QAAAA,MAAK,kBAAkB,IAAI;AAC3B,QAAAA,MAAK,uBAAuB,IAAI;AAChC,QAAAA,MAAK,uBAAuB,IAAI;AAChC,QAAAA,MAAK,0BAA0B,IAAI;AACnC,QAAAA,MAAK,sBAAsB,IAAI;AAC/B,QAAAA,MAAK,qBAAqB,IAAI;AAC9B,QAAAA,MAAK,6BAA6B,IAAI;AAAA,MACxC,GAAGA,UAAS,QAAQ,OAAOA,QAAO,CAAC,EAAE;AAAA;AAAA;;;ACzDrC;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,UAAUC;AAClB,cAAQ,WAAWC;AACnB,cAAQ,iBAAiBC;AACzB,cAAQ,cAAcC;AACtB,cAAQ,eAAeC;AAUvB,eAASA,cAAa,MAAM;AAC1B,eAAO,SAAS,KAAU,SAAS;AAAA,MACrC;AASA,eAASJ,SAAQ,MAAM;AACrB,eAAO,QAAQ,MAAU,QAAQ;AAAA,MACnC;AAYA,eAASC,UAAS,MAAM;AACtB,eACG,QAAQ,MAAU,QAAQ;AAAA,QAC1B,QAAQ,MAAU,QAAQ;AAAA,MAE/B;AAUA,eAASE,aAAY,MAAM;AACzB,eAAOF,UAAS,IAAI,KAAK,SAAS;AAAA,MACpC;AAWA,eAASC,gBAAe,MAAM;AAC5B,eAAOD,UAAS,IAAI,KAAKD,SAAQ,IAAI,KAAK,SAAS;AAAA,MACrD;AAAA;AAAA;;;AC1EA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,yBAAyBK;AACjC,cAAQ,2BAA2B;AACnC,cAAQ,mBAAmBC;AAE3B,UAAI,oBAAoB;AAUxB,eAASD,wBAAuB,OAAO;AACrC,YAAI;AAEJ,YAAI,eAAe,OAAO;AAC1B,YAAI,oBAAoB;AACxB,YAAI,mBAAmB;AAEvB,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,cAAI;AAEJ,gBAAM,OAAO,MAAM,CAAC;AACpB,gBAAME,UAASC,mBAAkB,IAAI;AAErC,cAAID,YAAW,KAAK,QAAQ;AAC1B;AAAA,UACF;AAEA,+BACG,qBAAqB,uBAAuB,QAC7C,uBAAuB,SACnB,qBACA;AACN,6BAAmB;AAEnB,cAAI,MAAM,KAAKA,UAAS,cAAc;AACpC,2BAAeA;AAAA,UACjB;AAAA,QACF;AAEA,eAAO,MACJ,IAAI,CAAC,MAAM,MAAO,MAAM,IAAI,OAAO,KAAK,MAAM,YAAY,CAAE,EAC5D;AAAA,WACE,sBAAsB,uBAAuB,QAC5C,wBAAwB,SACtB,sBACA;AAAA,UACJ,mBAAmB;AAAA,QACrB;AAAA,MACJ;AAEA,eAASC,mBAAkB,KAAK;AAC9B,YAAI,IAAI;AAER,eACE,IAAI,IAAI,WACP,GAAG,kBAAkB,cAAc,IAAI,WAAW,CAAC,CAAC,GACrD;AACA,YAAE;AAAA,QACJ;AAEA,eAAO;AAAA,MACT;AAKA,eAAS,yBAAyB,OAAO;AACvC,YAAI,UAAU,IAAI;AAChB,iBAAO;AAAA,QACT;AAEA,YAAI,cAAc;AAClB,YAAI,YAAY;AAChB,YAAI,kBAAkB;AACtB,YAAI,mBAAmB;AAEvB,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,kBAAQ,MAAM,YAAY,CAAC,GAAG;AAAA,YAC5B,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACH,qBAAO;AAAA,YAGT,KAAK;AAEH,qBAAO;AAAA,YAGT,KAAK;AAEH,kBAAI,eAAe,CAAC,kBAAkB;AACpC,uBAAO;AAAA,cACT;AAEA,iCAAmB;AACnB,4BAAc;AACd,0BAAY;AACZ;AAAA,YAEF,KAAK;AAAA,YAEL,KAAK;AAEH,4BAAc,YAAY;AAC1B;AAAA,YAEF;AACE,kCAAoB,kBAAkB;AACtC,4BAAc;AAAA,UAClB;AAAA,QACF;AAEA,YAAI,aAAa;AACf,iBAAO;AAAA,QACT;AAEA,YAAI,mBAAmB,kBAAkB;AACvC,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AASA,eAASF,kBAAiB,OAAO,SAAS;AACxC,cAAM,eAAe,MAAM,QAAQ,QAAQ,OAAO;AAElD,cAAM,QAAQ,aAAa,MAAM,cAAc;AAC/C,cAAM,eAAe,MAAM,WAAW;AAEtC,cAAM,sBACJ,MAAM,SAAS,KACf,MACG,MAAM,CAAC,EACP;AAAA,UACC,CAAC,SACC,KAAK,WAAW,MACf,GAAG,kBAAkB,cAAc,KAAK,WAAW,CAAC,CAAC;AAAA,QAC1D;AAEJ,cAAM,0BAA0B,aAAa,SAAS,OAAO;AAE7D,cAAM,mBAAmB,MAAM,SAAS,GAAG,KAAK,CAAC;AACjD,cAAM,mBAAmB,MAAM,SAAS,IAAI;AAC5C,cAAM,uBAAuB,oBAAoB;AACjD,cAAM,uBACJ,EAAE,YAAY,QAAQ,YAAY,UAAU,QAAQ;AAAA,SACnD,CAAC,gBACA,MAAM,SAAS,MACf,wBACA,uBACA;AACJ,YAAI,SAAS;AAEb,cAAM,qBACJ,iBAAiB,GAAG,kBAAkB,cAAc,MAAM,WAAW,CAAC,CAAC;AAEzE,YAAK,wBAAwB,CAAC,sBAAuB,qBAAqB;AACxE,oBAAU;AAAA,QACZ;AAEA,kBAAU;AAEV,YAAI,wBAAwB,sBAAsB;AAChD,oBAAU;AAAA,QACZ;AAEA,eAAO,QAAQ,SAAS;AAAA,MAC1B;AAAA;AAAA;;;AClMA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,YAAY;AAMpB,UAAIG;AACJ,cAAQ,YAAYA;AAEpB,OAAC,SAAUA,YAAW;AACpB,QAAAA,WAAU,KAAK,IAAI;AACnB,QAAAA,WAAU,KAAK,IAAI;AACnB,QAAAA,WAAU,MAAM,IAAI;AACpB,QAAAA,WAAU,QAAQ,IAAI;AACtB,QAAAA,WAAU,KAAK,IAAI;AACnB,QAAAA,WAAU,SAAS,IAAI;AACvB,QAAAA,WAAU,SAAS,IAAI;AACvB,QAAAA,WAAU,QAAQ,IAAI;AACtB,QAAAA,WAAU,OAAO,IAAI;AACrB,QAAAA,WAAU,QAAQ,IAAI;AACtB,QAAAA,WAAU,IAAI,IAAI;AAClB,QAAAA,WAAU,WAAW,IAAI;AACzB,QAAAA,WAAU,WAAW,IAAI;AACzB,QAAAA,WAAU,SAAS,IAAI;AACvB,QAAAA,WAAU,MAAM,IAAI;AACpB,QAAAA,WAAU,SAAS,IAAI;AACvB,QAAAA,WAAU,MAAM,IAAI;AACpB,QAAAA,WAAU,KAAK,IAAI;AACnB,QAAAA,WAAU,OAAO,IAAI;AACrB,QAAAA,WAAU,QAAQ,IAAI;AACtB,QAAAA,WAAU,cAAc,IAAI;AAC5B,QAAAA,WAAU,SAAS,IAAI;AAAA,MACzB,GAAGA,eAAc,QAAQ,YAAYA,aAAY,CAAC,EAAE;AAAA;AAAA;;;ACrCpD;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,QAAQ;AAChB,cAAQ,wBAAwBC;AAEhC,UAAI,eAAe;AAEnB,UAAI,OAAO;AAEX,UAAI,eAAe;AAEnB,UAAI,oBAAoB;AAExB,UAAI,aAAa;AAUjB,UAAMC,SAAN,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBV,YAAY,QAAQ;AAClB,gBAAM,mBAAmB,IAAI,KAAK;AAAA,YAChC,WAAW,UAAU;AAAA,YACrB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AACA,eAAK,SAAS;AACd,eAAK,YAAY;AACjB,eAAK,QAAQ;AACb,eAAK,OAAO;AACZ,eAAK,YAAY;AAAA,QACnB;AAAA,QAEA,KAAK,OAAO,WAAW,IAAI;AACzB,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA,QAKA,UAAU;AACR,eAAK,YAAY,KAAK;AACtB,gBAAM,QAAS,KAAK,QAAQ,KAAK,UAAU;AAC3C,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY;AACV,cAAI,QAAQ,KAAK;AAEjB,cAAI,MAAM,SAAS,WAAW,UAAU,KAAK;AAC3C,eAAG;AACD,kBAAI,MAAM,MAAM;AACd,wBAAQ,MAAM;AAAA,cAChB,OAAO;AAEL,sBAAM,YAAYC,eAAc,MAAM,MAAM,GAAG;AAE/C,sBAAM,OAAO;AAEb,0BAAU,OAAO;AACjB,wBAAQ;AAAA,cACV;AAAA,YACF,SAAS,MAAM,SAAS,WAAW,UAAU;AAAA,UAC/C;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAKA,cAAQ,QAAQD;AAEhB,eAASD,uBAAsB,MAAM;AACnC,eACE,SAAS,WAAW,UAAU,QAC9B,SAAS,WAAW,UAAU,UAC9B,SAAS,WAAW,UAAU,OAC9B,SAAS,WAAW,UAAU,WAC9B,SAAS,WAAW,UAAU,WAC9B,SAAS,WAAW,UAAU,UAC9B,SAAS,WAAW,UAAU,SAC9B,SAAS,WAAW,UAAU,UAC9B,SAAS,WAAW,UAAU,MAC9B,SAAS,WAAW,UAAU,aAC9B,SAAS,WAAW,UAAU,aAC9B,SAAS,WAAW,UAAU,WAC9B,SAAS,WAAW,UAAU,QAC9B,SAAS,WAAW,UAAU;AAAA,MAElC;AAUA,eAASG,sBAAqB,MAAM;AAClC,eACG,QAAQ,KAAU,QAAQ,SAAY,QAAQ,SAAU,QAAQ;AAAA,MAErE;AAUA,eAASC,0BAAyB,MAAM,UAAU;AAChD,eACEC,oBAAmB,KAAK,WAAW,QAAQ,CAAC,KAC5CC,qBAAoB,KAAK,WAAW,WAAW,CAAC,CAAC;AAAA,MAErD;AAEA,eAASD,oBAAmB,MAAM;AAChC,eAAO,QAAQ,SAAU,QAAQ;AAAA,MACnC;AAEA,eAASC,qBAAoB,MAAM;AACjC,eAAO,QAAQ,SAAU,QAAQ;AAAA,MACnC;AASA,eAASC,kBAAiB,OAAO,UAAU;AACzC,cAAM,OAAO,MAAM,OAAO,KAAK,YAAY,QAAQ;AAEnD,YAAI,SAAS,QAAW;AACtB,iBAAO,WAAW,UAAU;AAAA,QAC9B,WAAW,QAAQ,MAAU,QAAQ,KAAQ;AAE3C,gBAAM,OAAO,OAAO,cAAc,IAAI;AACtC,iBAAO,SAAS,MAAM,QAAS,IAAI;AAAA,QACrC;AAEA,eAAO,OAAO,KAAK,SAAS,EAAE,EAAE,YAAY,EAAE,SAAS,GAAG,GAAG;AAAA,MAC/D;AAKA,eAASC,aAAY,OAAO,MAAM,OAAO,KAAK,OAAO;AACnD,cAAM,OAAO,MAAM;AACnB,cAAM,MAAM,IAAI,QAAQ,MAAM;AAC9B,eAAO,IAAI,KAAK,MAAM,MAAM,OAAO,KAAK,MAAM,KAAK,KAAK;AAAA,MAC1D;AASA,eAASN,eAAc,OAAO,OAAO;AACnC,cAAM,OAAO,MAAM,OAAO;AAC1B,cAAM,aAAa,KAAK;AACxB,YAAI,WAAW;AAEf,eAAO,WAAW,YAAY;AAC5B,gBAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,kBAAQ,MAAM;AAAA,YAeZ,KAAK;AAAA,YAEL,KAAK;AAAA,YAEL,KAAK;AAAA,YAEL,KAAK;AAEH,gBAAE;AACF;AAAA,YAMF,KAAK;AAEH,gBAAE;AACF,gBAAE,MAAM;AACR,oBAAM,YAAY;AAClB;AAAA,YAEF,KAAK;AAEH,kBAAI,KAAK,WAAW,WAAW,CAAC,MAAM,IAAQ;AAC5C,4BAAY;AAAA,cACd,OAAO;AACL,kBAAE;AAAA,cACJ;AAEA,gBAAE,MAAM;AACR,oBAAM,YAAY;AAClB;AAAA,YAGF,KAAK;AAEH,qBAAOO,aAAY,OAAO,QAAQ;AAAA,YAUpC,KAAK;AAEH,qBAAOD;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,kBACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,uBAAOA;AAAA,kBACL;AAAA,kBACA,WAAW,UAAU;AAAA,kBACrB;AAAA,kBACA,WAAW;AAAA,gBACb;AAAA,cACF;AAEA;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAEF,KAAK;AAEH,qBAAOA;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YAGF,KAAK;AAEH,kBACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,uBAAOE,iBAAgB,OAAO,QAAQ;AAAA,cACxC;AAEA,qBAAOC,YAAW,OAAO,QAAQ;AAAA,UACrC;AAEA,eAAK,GAAG,kBAAkB,SAAS,IAAI,KAAK,SAAS,IAAQ;AAC3D,mBAAOC,YAAW,OAAO,UAAU,IAAI;AAAA,UACzC;AAEA,eAAK,GAAG,kBAAkB,aAAa,IAAI,GAAG;AAC5C,mBAAOC,UAAS,OAAO,QAAQ;AAAA,UACjC;AAEA,iBAAO,GAAG,aAAa;AAAA,YACrB,MAAM;AAAA,YACN;AAAA,YACA,SAAS,KACL,mFACAV,sBAAqB,IAAI,KAAKC,0BAAyB,MAAM,QAAQ,IACrE,yBAAyBG,kBAAiB,OAAO,QAAQ,OACzD,sBAAsBA,kBAAiB,OAAO,QAAQ;AAAA,UAC5D;AAAA,QACF;AAEA,eAAOC,aAAY,OAAO,WAAW,UAAU,KAAK,YAAY,UAAU;AAAA,MAC5E;AAWA,eAASC,aAAY,OAAO,OAAO;AACjC,cAAM,OAAO,MAAM,OAAO;AAC1B,cAAM,aAAa,KAAK;AACxB,YAAI,WAAW,QAAQ;AAEvB,eAAO,WAAW,YAAY;AAC5B,gBAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,cAAI,SAAS,MAAU,SAAS,IAAQ;AACtC;AAAA,UACF;AAEA,cAAIN,sBAAqB,IAAI,GAAG;AAC9B,cAAE;AAAA,UACJ,WAAWC,0BAAyB,MAAM,QAAQ,GAAG;AACnD,wBAAY;AAAA,UACd,OAAO;AACL;AAAA,UACF;AAAA,QACF;AAEA,eAAOI;AAAA,UACL;AAAA,UACA,WAAW,UAAU;AAAA,UACrB;AAAA,UACA;AAAA,UACA,KAAK,MAAM,QAAQ,GAAG,QAAQ;AAAA,QAChC;AAAA,MACF;AA+BA,eAASI,YAAW,OAAO,OAAO,WAAW;AAC3C,cAAM,OAAO,MAAM,OAAO;AAC1B,YAAI,WAAW;AACf,YAAI,OAAO;AACX,YAAI,UAAU;AAEd,YAAI,SAAS,IAAQ;AACnB,iBAAO,KAAK,WAAW,EAAE,QAAQ;AAAA,QACnC;AAEA,YAAI,SAAS,IAAQ;AACnB,iBAAO,KAAK,WAAW,EAAE,QAAQ;AAEjC,eAAK,GAAG,kBAAkB,SAAS,IAAI,GAAG;AACxC,mBAAO,GAAG,aAAa;AAAA,cACrB,MAAM;AAAA,cACN;AAAA,cACA,6CAA6CL;AAAA,gBAC3C;AAAA,gBACA;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF,OAAO;AACL,qBAAWO,YAAW,OAAO,UAAU,IAAI;AAC3C,iBAAO,KAAK,WAAW,QAAQ;AAAA,QACjC;AAEA,YAAI,SAAS,IAAQ;AACnB,oBAAU;AACV,iBAAO,KAAK,WAAW,EAAE,QAAQ;AACjC,qBAAWA,YAAW,OAAO,UAAU,IAAI;AAC3C,iBAAO,KAAK,WAAW,QAAQ;AAAA,QACjC;AAEA,YAAI,SAAS,MAAU,SAAS,KAAQ;AACtC,oBAAU;AACV,iBAAO,KAAK,WAAW,EAAE,QAAQ;AAEjC,cAAI,SAAS,MAAU,SAAS,IAAQ;AACtC,mBAAO,KAAK,WAAW,EAAE,QAAQ;AAAA,UACnC;AAEA,qBAAWA,YAAW,OAAO,UAAU,IAAI;AAC3C,iBAAO,KAAK,WAAW,QAAQ;AAAA,QACjC;AAEA,YAAI,SAAS,OAAW,GAAG,kBAAkB,aAAa,IAAI,GAAG;AAC/D,iBAAO,GAAG,aAAa;AAAA,YACrB,MAAM;AAAA,YACN;AAAA,YACA,2CAA2CP;AAAA,cACzC;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAOC;AAAA,UACL;AAAA,UACA,UAAU,WAAW,UAAU,QAAQ,WAAW,UAAU;AAAA,UAC5D;AAAA,UACA;AAAA,UACA,KAAK,MAAM,OAAO,QAAQ;AAAA,QAC5B;AAAA,MACF;AAKA,eAASM,YAAW,OAAO,OAAO,WAAW;AAC3C,YAAI,EAAE,GAAG,kBAAkB,SAAS,SAAS,GAAG;AAC9C,iBAAO,GAAG,aAAa;AAAA,YACrB,MAAM;AAAA,YACN;AAAA,YACA,2CAA2CP;AAAA,cACzC;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,cAAM,OAAO,MAAM,OAAO;AAC1B,YAAI,WAAW,QAAQ;AAEvB,gBAAQ,GAAG,kBAAkB,SAAS,KAAK,WAAW,QAAQ,CAAC,GAAG;AAChE,YAAE;AAAA,QACJ;AAEA,eAAO;AAAA,MACT;AAsBA,eAASI,YAAW,OAAO,OAAO;AAChC,cAAM,OAAO,MAAM,OAAO;AAC1B,cAAM,aAAa,KAAK;AACxB,YAAI,WAAW,QAAQ;AACvB,YAAI,aAAa;AACjB,YAAI,QAAQ;AAEZ,eAAO,WAAW,YAAY;AAC5B,gBAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,cAAI,SAAS,IAAQ;AACnB,qBAAS,KAAK,MAAM,YAAY,QAAQ;AACxC,mBAAOH;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,cACX;AAAA,YACF;AAAA,UACF;AAEA,cAAI,SAAS,IAAQ;AACnB,qBAAS,KAAK,MAAM,YAAY,QAAQ;AACxC,kBAAM,SACJ,KAAK,WAAW,WAAW,CAAC,MAAM,MAC9B,KAAK,WAAW,WAAW,CAAC,MAAM,MAChCO,iCAAgC,OAAO,QAAQ,IAC/CC,8BAA6B,OAAO,QAAQ,IAC9CC,sBAAqB,OAAO,QAAQ;AAC1C,qBAAS,OAAO;AAChB,wBAAY,OAAO;AACnB,yBAAa;AACb;AAAA,UACF;AAEA,cAAI,SAAS,MAAU,SAAS,IAAQ;AACtC;AAAA,UACF;AAEA,cAAId,sBAAqB,IAAI,GAAG;AAC9B,cAAE;AAAA,UACJ,WAAWC,0BAAyB,MAAM,QAAQ,GAAG;AACnD,wBAAY;AAAA,UACd,OAAO;AACL,mBAAO,GAAG,aAAa;AAAA,cACrB,MAAM;AAAA,cACN;AAAA,cACA,oCAAoCG;AAAA,gBAClC;AAAA,gBACA;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO,GAAG,aAAa;AAAA,UACrB,MAAM;AAAA,UACN;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,eAASQ,iCAAgC,OAAO,UAAU;AACxD,cAAM,OAAO,MAAM,OAAO;AAC1B,YAAI,QAAQ;AACZ,YAAI,OAAO;AAEX,eAAO,OAAO,IAAI;AAChB,gBAAM,OAAO,KAAK,WAAW,WAAW,MAAM;AAE9C,cAAI,SAAS,KAAQ;AAEnB,gBAAI,OAAO,KAAK,CAACZ,sBAAqB,KAAK,GAAG;AAC5C;AAAA,YACF;AAEA,mBAAO;AAAA,cACL,OAAO,OAAO,cAAc,KAAK;AAAA,cACjC;AAAA,YACF;AAAA,UACF;AAEA,kBAAS,SAAS,IAAKe,cAAa,IAAI;AAExC,cAAI,QAAQ,GAAG;AACb;AAAA,UACF;AAAA,QACF;AAEA,eAAO,GAAG,aAAa;AAAA,UACrB,MAAM;AAAA,UACN;AAAA,UACA,qCAAqC,KAAK;AAAA,YACxC;AAAA,YACA,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAEA,eAASF,8BAA6B,OAAO,UAAU;AACrD,cAAM,OAAO,MAAM,OAAO;AAC1B,cAAM,OAAOG,kBAAiB,MAAM,WAAW,CAAC;AAEhD,YAAIhB,sBAAqB,IAAI,GAAG;AAC9B,iBAAO;AAAA,YACL,OAAO,OAAO,cAAc,IAAI;AAAA,YAChC,MAAM;AAAA,UACR;AAAA,QACF;AAGA,YAAIE,oBAAmB,IAAI,GAAG;AAE5B,cACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,KAClC;AACA,kBAAM,eAAec,kBAAiB,MAAM,WAAW,CAAC;AAExD,gBAAIb,qBAAoB,YAAY,GAAG;AAOrC,qBAAO;AAAA,gBACL,OAAO,OAAO,cAAc,MAAM,YAAY;AAAA,gBAC9C,MAAM;AAAA,cACR;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO,GAAG,aAAa;AAAA,UACrB,MAAM;AAAA,UACN;AAAA,UACA,qCAAqC,KAAK,MAAM,UAAU,WAAW,CAAC;AAAA,QACxE;AAAA,MACF;AASA,eAASa,kBAAiB,MAAM,UAAU;AAGxC,eACGD,cAAa,KAAK,WAAW,QAAQ,CAAC,KAAK,KAC3CA,cAAa,KAAK,WAAW,WAAW,CAAC,CAAC,KAAK,IAC/CA,cAAa,KAAK,WAAW,WAAW,CAAC,CAAC,KAAK,IAChDA,cAAa,KAAK,WAAW,WAAW,CAAC,CAAC;AAAA,MAE9C;AAgBA,eAASA,cAAa,MAAM;AAC1B,eAAO,QAAQ,MAAU,QAAQ,KAC7B,OAAO,KACP,QAAQ,MAAU,QAAQ,KAC1B,OAAO,KACP,QAAQ,MAAU,QAAQ,MAC1B,OAAO,KACP;AAAA,MACN;AAcA,eAASD,sBAAqB,OAAO,UAAU;AAC7C,cAAM,OAAO,MAAM,OAAO;AAC1B,cAAM,OAAO,KAAK,WAAW,WAAW,CAAC;AAEzC,gBAAQ,MAAM;AAAA,UACZ,KAAK;AAEH,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,QACJ;AAEA,eAAO,GAAG,aAAa;AAAA,UACrB,MAAM;AAAA,UACN;AAAA,UACA,uCAAuC,KAAK;AAAA,YAC1C;AAAA,YACA,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAcA,eAASP,iBAAgB,OAAO,OAAO;AACrC,cAAM,OAAO,MAAM,OAAO;AAC1B,cAAM,aAAa,KAAK;AACxB,YAAI,YAAY,MAAM;AACtB,YAAI,WAAW,QAAQ;AACvB,YAAI,aAAa;AACjB,YAAI,cAAc;AAClB,cAAM,aAAa,CAAC;AAEpB,eAAO,WAAW,YAAY;AAC5B,gBAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,cACE,SAAS,MACT,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,2BAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,uBAAW,KAAK,WAAW;AAC3B,kBAAM,QAAQF;AAAA,cACZ;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA;AAAA,eACV,GAAG,aAAa,wBAAwB,UAAU,EAAE,KAAK,IAAI;AAAA,YAChE;AACA,kBAAM,QAAQ,WAAW,SAAS;AAClC,kBAAM,YAAY;AAClB,mBAAO;AAAA,UACT;AAEA,cACE,SAAS,MACT,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,2BAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,yBAAa,WAAW;AAExB,wBAAY;AACZ;AAAA,UACF;AAEA,cAAI,SAAS,MAAU,SAAS,IAAQ;AACtC,2BAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,uBAAW,KAAK,WAAW;AAE3B,gBAAI,SAAS,MAAU,KAAK,WAAW,WAAW,CAAC,MAAM,IAAQ;AAC/D,0BAAY;AAAA,YACd,OAAO;AACL,gBAAE;AAAA,YACJ;AAEA,0BAAc;AACd,yBAAa;AACb,wBAAY;AACZ;AAAA,UACF;AAEA,cAAIL,sBAAqB,IAAI,GAAG;AAC9B,cAAE;AAAA,UACJ,WAAWC,0BAAyB,MAAM,QAAQ,GAAG;AACnD,wBAAY;AAAA,UACd,OAAO;AACL,mBAAO,GAAG,aAAa;AAAA,cACrB,MAAM;AAAA,cACN;AAAA,cACA,oCAAoCG;AAAA,gBAClC;AAAA,gBACA;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO,GAAG,aAAa;AAAA,UACrB,MAAM;AAAA,UACN;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAUA,eAASM,UAAS,OAAO,OAAO;AAC9B,cAAM,OAAO,MAAM,OAAO;AAC1B,cAAM,aAAa,KAAK;AACxB,YAAI,WAAW,QAAQ;AAEvB,eAAO,WAAW,YAAY;AAC5B,gBAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,eAAK,GAAG,kBAAkB,gBAAgB,IAAI,GAAG;AAC/C,cAAE;AAAA,UACJ,OAAO;AACL;AAAA,UACF;AAAA,QACF;AAEA,eAAOL;AAAA,UACL;AAAA,UACA,WAAW,UAAU;AAAA,UACrB;AAAA,UACA;AAAA,UACA,KAAK,MAAM,OAAO,QAAQ;AAAA,QAC5B;AAAA,MACF;AAAA;AAAA;;;AC7+BA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,YAAYY;AAEpB,eAASA,WAAU,WAAW,SAAS;AACrC,cAAM,mBAAmB,QAAQ,SAAS;AAE1C,YAAI,CAAC,kBAAkB;AACrB,gBAAM,IAAI,MAAM,OAAO;AAAA,QACzB;AAAA,MACF;AAAA;AAAA;;;ACbA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,UAAUC;AAClB,UAAMC,oBAAmB;AACzB,UAAMC,uBAAsB;AAK5B,eAASF,SAAQ,OAAO;AACtB,eAAOG,aAAY,OAAO,CAAC,CAAC;AAAA,MAC9B;AAEA,eAASA,aAAY,OAAO,YAAY;AACtC,gBAAQ,OAAO,OAAO;AAAA,UACpB,KAAK;AACH,mBAAO,KAAK,UAAU,KAAK;AAAA,UAE7B,KAAK;AACH,mBAAO,MAAM,OAAO,aAAa,MAAM,UAAU;AAAA,UAEnD,KAAK;AACH,mBAAOC,mBAAkB,OAAO,UAAU;AAAA,UAE5C;AACE,mBAAO,OAAO,KAAK;AAAA,QACvB;AAAA,MACF;AAEA,eAASA,mBAAkB,OAAO,sBAAsB;AACtD,YAAI,UAAU,MAAM;AAClB,iBAAO;AAAA,QACT;AAEA,YAAI,qBAAqB,SAAS,KAAK,GAAG;AACxC,iBAAO;AAAA,QACT;AAEA,cAAM,aAAa,CAAC,GAAG,sBAAsB,KAAK;AAElD,YAAIC,YAAW,KAAK,GAAG;AACrB,gBAAM,YAAY,MAAM,OAAO;AAE/B,cAAI,cAAc,OAAO;AACvB,mBAAO,OAAO,cAAc,WACxB,YACAF,aAAY,WAAW,UAAU;AAAA,UACvC;AAAA,QACF,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,iBAAOG,aAAY,OAAO,UAAU;AAAA,QACtC;AAEA,eAAOC,cAAa,OAAO,UAAU;AAAA,MACvC;AAEA,eAASF,YAAW,OAAO;AACzB,eAAO,OAAO,MAAM,WAAW;AAAA,MACjC;AAEA,eAASE,cAAa,QAAQ,YAAY;AACxC,cAAM,UAAU,OAAO,QAAQ,MAAM;AAErC,YAAI,QAAQ,WAAW,GAAG;AACxB,iBAAO;AAAA,QACT;AAEA,YAAI,WAAW,SAASL,sBAAqB;AAC3C,iBAAO,MAAMM,cAAa,MAAM,IAAI;AAAA,QACtC;AAEA,cAAM,aAAa,QAAQ;AAAA,UACzB,CAAC,CAAC,KAAK,KAAK,MAAM,MAAM,OAAOL,aAAY,OAAO,UAAU;AAAA,QAC9D;AACA,eAAO,OAAO,WAAW,KAAK,IAAI,IAAI;AAAA,MACxC;AAEA,eAASG,aAAY,OAAO,YAAY;AACtC,YAAI,MAAM,WAAW,GAAG;AACtB,iBAAO;AAAA,QACT;AAEA,YAAI,WAAW,SAASJ,sBAAqB;AAC3C,iBAAO;AAAA,QACT;AAEA,cAAM,MAAM,KAAK,IAAID,mBAAkB,MAAM,MAAM;AACnD,cAAM,YAAY,MAAM,SAAS;AACjC,cAAM,QAAQ,CAAC;AAEf,iBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,gBAAM,KAAKE,aAAY,MAAM,CAAC,GAAG,UAAU,CAAC;AAAA,QAC9C;AAEA,YAAI,cAAc,GAAG;AACnB,gBAAM,KAAK,iBAAiB;AAAA,QAC9B,WAAW,YAAY,GAAG;AACxB,gBAAM,KAAK,OAAO,sBAAsB;AAAA,QAC1C;AAEA,eAAO,MAAM,MAAM,KAAK,IAAI,IAAI;AAAA,MAClC;AAEA,eAASK,cAAa,QAAQ;AAC5B,cAAM,MAAM,OAAO,UAAU,SAC1B,KAAK,MAAM,EACX,QAAQ,cAAc,EAAE,EACxB,QAAQ,MAAM,EAAE;AAEnB,YAAI,QAAQ,YAAY,OAAO,OAAO,gBAAgB,YAAY;AAChE,gBAAM,OAAO,OAAO,YAAY;AAEhC,cAAI,OAAO,SAAS,YAAY,SAAS,IAAI;AAC3C,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;;;ACxHA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,aAAa;AAErB,UAAI,WAAW;AAQf,UAAMC;AAAA;AAAA;AAAA;AAAA,QAIJ,QAAQ,IAAI,aAAa,eACrB,SAASA,YAAW,OAAO,aAAa;AACtC,iBAAO,iBAAiB;AAAA,QAC1B,IACA,SAASA,YAAW,OAAO,aAAa;AACtC,cAAI,iBAAiB,aAAa;AAChC,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAC/C,gBAAI;AAGJ,kBAAM,YAAY,YAAY,UAAU,OAAO,WAAW;AAC1D,kBAAM;AAAA;AAAA,cACJ,OAAO,eAAe,QAClB,MAAM,OAAO,WAAW,KACvB,qBAAqB,MAAM,iBAAiB,QAC7C,uBAAuB,SACvB,SACA,mBAAmB;AAAA;AAEzB,gBAAI,cAAc,gBAAgB;AAChC,oBAAM,oBAAoB,GAAG,SAAS,SAAS,KAAK;AACpD,oBAAM,IAAI,MAAM,cAAc,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWtC;AAAA,YACR;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAAA;AACN,cAAQ,aAAaA;AAAA;AAAA;;;AC5DrB;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,SAAS;AACjB,cAAQ,WAAWC;AAEnB,UAAI,aAAa;AAEjB,UAAI,WAAW;AAEf,UAAI,cAAc;AASlB,UAAMC,UAAN,MAAa;AAAA,QACX,YACE,MACA,OAAO,mBACP,iBAAiB;AAAA,UACf,MAAM;AAAA,UACN,QAAQ;AAAA,QACV,GACA;AACA,iBAAO,SAAS,aACb,GAAG,WAAW;AAAA,YACb;AAAA,YACA,qCAAqC,GAAG,SAAS,SAAS,IAAI;AAAA,UAChE;AACF,eAAK,OAAO;AACZ,eAAK,OAAO;AACZ,eAAK,iBAAiB;AACtB,eAAK,eAAe,OAAO,MACxB,GAAG,WAAW;AAAA,YACb;AAAA,YACA;AAAA,UACF;AACF,eAAK,eAAe,SAAS,MAC1B,GAAG,WAAW;AAAA,YACb;AAAA,YACA;AAAA,UACF;AAAA,QACJ;AAAA,QAEA,KAAK,OAAO,WAAW,IAAI;AACzB,iBAAO;AAAA,QACT;AAAA,MACF;AAOA,cAAQ,SAASA;AAEjB,eAASD,UAAS,QAAQ;AACxB,gBAAQ,GAAG,YAAY,YAAY,QAAQC,OAAM;AAAA,MACnD;AAAA;AAAA;;;AChEA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,SAAS;AACjB,cAAQ,QAAQC;AAChB,cAAQ,kBAAkBC;AAC1B,cAAQ,YAAYC;AACpB,cAAQ,aAAaC;AAErB,UAAI,eAAe;AAEnB,UAAI,OAAO;AAEX,UAAI,qBAAqB;AAEzB,UAAI,SAAS;AAEb,UAAI,SAAS;AAEb,UAAI,UAAU;AAEd,UAAI,aAAa;AAMjB,eAASH,OAAM,QAAQ,SAAS;AAC9B,cAAM,SAAS,IAAII,QAAO,QAAQ,OAAO;AACzC,eAAO,OAAO,cAAc;AAAA,MAC9B;AAYA,eAASD,YAAW,QAAQ,SAAS;AACnC,cAAM,SAAS,IAAIC,QAAO,QAAQ,OAAO;AACzC,eAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,cAAM,QAAQ,OAAO,kBAAkB,KAAK;AAC5C,eAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,eAAO;AAAA,MACT;AAMA,eAASH,iBAAgB,QAAQ,SAAS;AACxC,cAAM,SAAS,IAAIG,QAAO,QAAQ,OAAO;AACzC,eAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,cAAM,QAAQ,OAAO,uBAAuB;AAC5C,eAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,eAAO;AAAA,MACT;AAYA,eAASF,WAAU,QAAQ,SAAS;AAClC,cAAM,SAAS,IAAIE,QAAO,QAAQ,OAAO;AACzC,eAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,cAAMC,QAAO,OAAO,mBAAmB;AACvC,eAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,eAAOA;AAAA,MACT;AAaA,UAAMD,UAAN,MAAa;AAAA,QACX,YAAY,QAAQ,UAAU,CAAC,GAAG;AAChC,gBAAM,aAAa,GAAG,QAAQ,UAAU,MAAM,IAC1C,SACA,IAAI,QAAQ,OAAO,MAAM;AAC7B,eAAK,SAAS,IAAI,OAAO,MAAM,SAAS;AACxC,eAAK,WAAW;AAChB,eAAK,gBAAgB;AAAA,QACvB;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY;AACV,gBAAM,QAAQ,KAAK,YAAY,WAAW,UAAU,IAAI;AACxD,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,OAAO,MAAM;AAAA,UACf,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,gBAAgB;AACd,iBAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,YAClC,MAAM,OAAO,KAAK;AAAA,YAClB,aAAa,KAAK;AAAA,cAChB,WAAW,UAAU;AAAA,cACrB,KAAK;AAAA,cACL,WAAW,UAAU;AAAA,YACvB;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAyBA,kBAAkB;AAChB,cAAI,KAAK,KAAK,WAAW,UAAU,OAAO,GAAG;AAC3C,mBAAO,KAAK,yBAAyB;AAAA,UACvC;AAEA,gBAAM,iBAAiB,KAAK,gBAAgB;AAC5C,gBAAM,eAAe,iBACjB,KAAK,OAAO,UAAU,IACtB,KAAK,OAAO;AAEhB,cAAI,aAAa,SAAS,WAAW,UAAU,MAAM;AACnD,oBAAQ,aAAa,OAAO;AAAA,cAC1B,KAAK;AACH,uBAAO,KAAK,sBAAsB;AAAA,cAEpC,KAAK;AACH,uBAAO,KAAK,0BAA0B;AAAA,cAExC,KAAK;AACH,uBAAO,KAAK,0BAA0B;AAAA,cAExC,KAAK;AACH,uBAAO,KAAK,6BAA6B;AAAA,cAE3C,KAAK;AACH,uBAAO,KAAK,yBAAyB;AAAA,cAEvC,KAAK;AACH,uBAAO,KAAK,wBAAwB;AAAA,cAEtC,KAAK;AACH,uBAAO,KAAK,+BAA+B;AAAA,cAE7C,KAAK;AACH,uBAAO,KAAK,yBAAyB;AAAA,YACzC;AAEA,gBAAI,gBAAgB;AAClB,qBAAO,GAAG,aAAa;AAAA,gBACrB,KAAK,OAAO;AAAA,gBACZ,KAAK,OAAO,MAAM;AAAA,gBAClB;AAAA,cACF;AAAA,YACF;AAEA,oBAAQ,aAAa,OAAO;AAAA,cAC1B,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,uBAAO,KAAK,yBAAyB;AAAA,cAEvC,KAAK;AACH,uBAAO,KAAK,wBAAwB;AAAA,cAEtC,KAAK;AACH,uBAAO,KAAK,yBAAyB;AAAA,YACzC;AAAA,UACF;AAEA,gBAAM,KAAK,WAAW,YAAY;AAAA,QACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,2BAA2B;AACzB,gBAAM,QAAQ,KAAK,OAAO;AAE1B,cAAI,KAAK,KAAK,WAAW,UAAU,OAAO,GAAG;AAC3C,mBAAO,KAAK,KAAK,OAAO;AAAA,cACtB,MAAM,OAAO,KAAK;AAAA,cAClB,WAAW,KAAK,kBAAkB;AAAA,cAClC,MAAM;AAAA,cACN,qBAAqB,CAAC;AAAA,cACtB,YAAY,CAAC;AAAA,cACb,cAAc,KAAK,kBAAkB;AAAA,YACvC,CAAC;AAAA,UACH;AAEA,gBAAM,YAAY,KAAK,mBAAmB;AAC1C,cAAI;AAEJ,cAAI,KAAK,KAAK,WAAW,UAAU,IAAI,GAAG;AACxC,mBAAO,KAAK,UAAU;AAAA,UACxB;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA,qBAAqB,KAAK,yBAAyB;AAAA,YACnD,YAAY,KAAK,gBAAgB,KAAK;AAAA,YACtC,cAAc,KAAK,kBAAkB;AAAA,UACvC,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,qBAAqB;AACnB,gBAAM,iBAAiB,KAAK,YAAY,WAAW,UAAU,IAAI;AAEjE,kBAAQ,eAAe,OAAO;AAAA,YAC5B,KAAK;AACH,qBAAO,KAAK,kBAAkB;AAAA,YAEhC,KAAK;AACH,qBAAO,KAAK,kBAAkB;AAAA,YAEhC,KAAK;AACH,qBAAO,KAAK,kBAAkB;AAAA,UAClC;AAEA,gBAAM,KAAK,WAAW,cAAc;AAAA,QACtC;AAAA;AAAA;AAAA;AAAA,QAKA,2BAA2B;AACzB,iBAAO,KAAK;AAAA,YACV,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AAAA,QACF;AAAA;AAAA;AAAA;AAAA,QAKA,0BAA0B;AACxB,iBAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,YAClC,MAAM,OAAO,KAAK;AAAA,YAClB,UAAU,KAAK,cAAc;AAAA,YAC7B,OACG,KAAK,YAAY,WAAW,UAAU,KAAK,GAC5C,KAAK,mBAAmB;AAAA,YAC1B,cAAc,KAAK,oBAAoB,WAAW,UAAU,MAAM,IAC9D,KAAK,uBAAuB,IAC5B;AAAA,YACJ,YAAY,KAAK,qBAAqB;AAAA,UACxC,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,gBAAgB;AACd,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,YAAY,WAAW,UAAU,MAAM;AAC5C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,MAAM,KAAK,UAAU;AAAA,UACvB,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,oBAAoB;AAClB,iBAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,YAClC,MAAM,OAAO,KAAK;AAAA,YAClB,YAAY,KAAK;AAAA,cACf,WAAW,UAAU;AAAA,cACrB,KAAK;AAAA,cACL,WAAW,UAAU;AAAA,YACvB;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,iBAAiB;AACf,iBAAO,KAAK,KAAK,WAAW,UAAU,MAAM,IACxC,KAAK,cAAc,IACnB,KAAK,WAAW;AAAA,QACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,aAAa;AACX,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,UAAU;AACnC,cAAI;AACJ,cAAI;AAEJ,cAAI,KAAK,oBAAoB,WAAW,UAAU,KAAK,GAAG;AACxD,oBAAQ;AACR,mBAAO,KAAK,UAAU;AAAA,UACxB,OAAO;AACL,mBAAO;AAAA,UACT;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA,WAAW,KAAK,eAAe,KAAK;AAAA,YACpC,YAAY,KAAK,gBAAgB,KAAK;AAAA,YACtC,cAAc,KAAK,KAAK,WAAW,UAAU,OAAO,IAChD,KAAK,kBAAkB,IACvB;AAAA,UACN,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,eAAe,SAAS;AACtB,gBAAM,OAAO,UAAU,KAAK,qBAAqB,KAAK;AACtD,iBAAO,KAAK;AAAA,YACV,WAAW,UAAU;AAAA,YACrB;AAAA,YACA,WAAW,UAAU;AAAA,UACvB;AAAA,QACF;AAAA;AAAA;AAAA;AAAA,QAKA,cAAc,UAAU,OAAO;AAC7B,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,OAAO,KAAK,UAAU;AAC5B,eAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA,OAAO,KAAK,kBAAkB,OAAO;AAAA,UACvC,CAAC;AAAA,QACH;AAAA,QAEA,qBAAqB;AACnB,iBAAO,KAAK,cAAc,IAAI;AAAA,QAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA,gBAAgB;AACd,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,YAAY,WAAW,UAAU,MAAM;AAC5C,gBAAM,mBAAmB,KAAK,sBAAsB,IAAI;AAExD,cAAI,CAAC,oBAAoB,KAAK,KAAK,WAAW,UAAU,IAAI,GAAG;AAC7D,mBAAO,KAAK,KAAK,OAAO;AAAA,cACtB,MAAM,OAAO,KAAK;AAAA,cAClB,MAAM,KAAK,kBAAkB;AAAA,cAC7B,YAAY,KAAK,gBAAgB,KAAK;AAAA,YACxC,CAAC;AAAA,UACH;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,eAAe,mBAAmB,KAAK,eAAe,IAAI;AAAA,YAC1D,YAAY,KAAK,gBAAgB,KAAK;AAAA,YACtC,cAAc,KAAK,kBAAkB;AAAA,UACvC,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,0BAA0B;AACxB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,cAAc,UAAU;AAI7B,cAAI,KAAK,SAAS,iCAAiC,MAAM;AACvD,mBAAO,KAAK,KAAK,OAAO;AAAA,cACtB,MAAM,OAAO,KAAK;AAAA,cAClB,MAAM,KAAK,kBAAkB;AAAA,cAC7B,qBAAqB,KAAK,yBAAyB;AAAA,cACnD,gBAAgB,KAAK,cAAc,IAAI,GAAG,KAAK,eAAe;AAAA,cAC9D,YAAY,KAAK,gBAAgB,KAAK;AAAA,cACtC,cAAc,KAAK,kBAAkB;AAAA,YACvC,CAAC;AAAA,UACH;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,MAAM,KAAK,kBAAkB;AAAA,YAC7B,gBAAgB,KAAK,cAAc,IAAI,GAAG,KAAK,eAAe;AAAA,YAC9D,YAAY,KAAK,gBAAgB,KAAK;AAAA,YACtC,cAAc,KAAK,kBAAkB;AAAA,UACvC,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,oBAAoB;AAClB,cAAI,KAAK,OAAO,MAAM,UAAU,MAAM;AACpC,kBAAM,KAAK,WAAW;AAAA,UACxB;AAEA,iBAAO,KAAK,UAAU;AAAA,QACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAqBA,kBAAkB,SAAS;AACzB,gBAAM,QAAQ,KAAK,OAAO;AAE1B,kBAAQ,MAAM,MAAM;AAAA,YAClB,KAAK,WAAW,UAAU;AACxB,qBAAO,KAAK,UAAU,OAAO;AAAA,YAE/B,KAAK,WAAW,UAAU;AACxB,qBAAO,KAAK,YAAY,OAAO;AAAA,YAEjC,KAAK,WAAW,UAAU;AACxB,mBAAK,aAAa;AAClB,qBAAO,KAAK,KAAK,OAAO;AAAA,gBACtB,MAAM,OAAO,KAAK;AAAA,gBAClB,OAAO,MAAM;AAAA,cACf,CAAC;AAAA,YAEH,KAAK,WAAW,UAAU;AACxB,mBAAK,aAAa;AAClB,qBAAO,KAAK,KAAK,OAAO;AAAA,gBACtB,MAAM,OAAO,KAAK;AAAA,gBAClB,OAAO,MAAM;AAAA,cACf,CAAC;AAAA,YAEH,KAAK,WAAW,UAAU;AAAA,YAC1B,KAAK,WAAW,UAAU;AACxB,qBAAO,KAAK,mBAAmB;AAAA,YAEjC,KAAK,WAAW,UAAU;AACxB,mBAAK,aAAa;AAElB,sBAAQ,MAAM,OAAO;AAAA,gBACnB,KAAK;AACH,yBAAO,KAAK,KAAK,OAAO;AAAA,oBACtB,MAAM,OAAO,KAAK;AAAA,oBAClB,OAAO;AAAA,kBACT,CAAC;AAAA,gBAEH,KAAK;AACH,yBAAO,KAAK,KAAK,OAAO;AAAA,oBACtB,MAAM,OAAO,KAAK;AAAA,oBAClB,OAAO;AAAA,kBACT,CAAC;AAAA,gBAEH,KAAK;AACH,yBAAO,KAAK,KAAK,OAAO;AAAA,oBACtB,MAAM,OAAO,KAAK;AAAA,kBACpB,CAAC;AAAA,gBAEH;AACE,yBAAO,KAAK,KAAK,OAAO;AAAA,oBACtB,MAAM,OAAO,KAAK;AAAA,oBAClB,OAAO,MAAM;AAAA,kBACf,CAAC;AAAA,cACL;AAAA,YAEF,KAAK,WAAW,UAAU;AACxB,kBAAI,SAAS;AACX,qBAAK,YAAY,WAAW,UAAU,MAAM;AAE5C,oBAAI,KAAK,OAAO,MAAM,SAAS,WAAW,UAAU,MAAM;AACxD,wBAAM,UAAU,KAAK,OAAO,MAAM;AAClC,yBAAO,GAAG,aAAa;AAAA,oBACrB,KAAK,OAAO;AAAA,oBACZ,MAAM;AAAA,oBACN,yBAAyB;AAAA,kBAC3B;AAAA,gBACF,OAAO;AACL,wBAAM,KAAK,WAAW,KAAK;AAAA,gBAC7B;AAAA,cACF;AAEA,qBAAO,KAAK,cAAc;AAAA,YAE5B;AACE,oBAAM,KAAK,WAAW;AAAA,UAC1B;AAAA,QACF;AAAA,QAEA,yBAAyB;AACvB,iBAAO,KAAK,kBAAkB,IAAI;AAAA,QACpC;AAAA,QAEA,qBAAqB;AACnB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,aAAa;AAClB,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,OAAO,MAAM;AAAA,YACb,OAAO,MAAM,SAAS,WAAW,UAAU;AAAA,UAC7C,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,UAAU,SAAS;AACjB,gBAAM,OAAO,MAAM,KAAK,kBAAkB,OAAO;AAEjD,iBAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,YAClC,MAAM,OAAO,KAAK;AAAA,YAClB,QAAQ,KAAK;AAAA,cACX,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW,UAAU;AAAA,YACvB;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,YAAY,SAAS;AACnB,gBAAM,OAAO,MAAM,KAAK,iBAAiB,OAAO;AAEhD,iBAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,YAClC,MAAM,OAAO,KAAK;AAAA,YAClB,QAAQ,KAAK;AAAA,cACX,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW,UAAU;AAAA,YACvB;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,iBAAiB,SAAS;AACxB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,OAAO,KAAK,UAAU;AAC5B,eAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA,OAAO,KAAK,kBAAkB,OAAO;AAAA,UACvC,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,gBAAgB,SAAS;AACvB,gBAAM,aAAa,CAAC;AAEpB,iBAAO,KAAK,KAAK,WAAW,UAAU,EAAE,GAAG;AACzC,uBAAW,KAAK,KAAK,eAAe,OAAO,CAAC;AAAA,UAC9C;AAEA,iBAAO;AAAA,QACT;AAAA,QAEA,uBAAuB;AACrB,iBAAO,KAAK,gBAAgB,IAAI;AAAA,QAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,eAAe,SAAS;AACtB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,YAAY,WAAW,UAAU,EAAE;AACxC,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,MAAM,KAAK,UAAU;AAAA,YACrB,WAAW,KAAK,eAAe,OAAO;AAAA,UACxC,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,qBAAqB;AACnB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,cAAIC;AAEJ,cAAI,KAAK,oBAAoB,WAAW,UAAU,SAAS,GAAG;AAC5D,kBAAM,YAAY,KAAK,mBAAmB;AAC1C,iBAAK,YAAY,WAAW,UAAU,SAAS;AAC/C,YAAAA,QAAO,KAAK,KAAK,OAAO;AAAA,cACtB,MAAM,OAAO,KAAK;AAAA,cAClB,MAAM;AAAA,YACR,CAAC;AAAA,UACH,OAAO;AACL,YAAAA,QAAO,KAAK,eAAe;AAAA,UAC7B;AAEA,cAAI,KAAK,oBAAoB,WAAW,UAAU,IAAI,GAAG;AACvD,mBAAO,KAAK,KAAK,OAAO;AAAA,cACtB,MAAM,OAAO,KAAK;AAAA,cAClB,MAAAA;AAAA,YACF,CAAC;AAAA,UACH;AAEA,iBAAOA;AAAA,QACT;AAAA;AAAA;AAAA;AAAA,QAKA,iBAAiB;AACf,iBAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,YAClC,MAAM,OAAO,KAAK;AAAA,YAClB,MAAM,KAAK,UAAU;AAAA,UACvB,CAAC;AAAA,QACH;AAAA;AAAA,QAEA,kBAAkB;AAChB,iBACE,KAAK,KAAK,WAAW,UAAU,MAAM,KACrC,KAAK,KAAK,WAAW,UAAU,YAAY;AAAA,QAE/C;AAAA;AAAA;AAAA;AAAA,QAKA,mBAAmB;AACjB,cAAI,KAAK,gBAAgB,GAAG;AAC1B,mBAAO,KAAK,mBAAmB;AAAA,UACjC;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,wBAAwB;AACtB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,eAAK,cAAc,QAAQ;AAC3B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,iBAAiB,KAAK;AAAA,YAC1B,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AACA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,+BAA+B;AAC7B,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,YAAY,KAAK,mBAAmB;AAC1C,eAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,gBAAMA,QAAO,KAAK,eAAe;AACjC,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA,MAAAA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,4BAA4B;AAC1B,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,eAAK,cAAc,QAAQ;AAC3B,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,4BAA4B;AAC1B,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,eAAK,cAAc,MAAM;AACzB,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,0BAA0B;AAClD,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,SAAS,KAAK,sBAAsB;AAC1C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,4BAA4B;AAC1B,iBAAO,KAAK,sBAAsB,YAAY,IAC1C,KAAK,cAAc,WAAW,UAAU,KAAK,KAAK,cAAc,IAChE,CAAC;AAAA,QACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,wBAAwB;AACtB,iBAAO,KAAK;AAAA,YACV,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,uBAAuB;AACrB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,OAAO,KAAK,kBAAkB;AACpC,eAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,gBAAMA,QAAO,KAAK,mBAAmB;AACrC,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA,WAAW;AAAA,YACX,MAAAA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,oBAAoB;AAClB,iBAAO,KAAK;AAAA,YACV,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,qBAAqB;AACnB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,gBAAM,OAAO,KAAK,UAAU;AAC5B,eAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,gBAAMA,QAAO,KAAK,mBAAmB;AACrC,cAAI;AAEJ,cAAI,KAAK,oBAAoB,WAAW,UAAU,MAAM,GAAG;AACzD,2BAAe,KAAK,uBAAuB;AAAA,UAC7C;AAEA,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA,MAAAA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,+BAA+B;AAC7B,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,eAAK,cAAc,WAAW;AAC9B,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,0BAA0B;AAClD,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,SAAS,KAAK,sBAAsB;AAC1C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,2BAA2B;AACzB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,eAAK,cAAc,OAAO;AAC1B,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,QAAQ,KAAK,sBAAsB;AACzC,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,wBAAwB;AACtB,iBAAO,KAAK,oBAAoB,WAAW,UAAU,MAAM,IACvD,KAAK,cAAc,WAAW,UAAU,MAAM,KAAK,cAAc,IACjE,CAAC;AAAA,QACP;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,0BAA0B;AACxB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,eAAK,cAAc,MAAM;AACzB,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,SAAS,KAAK,0BAA0B;AAC9C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,4BAA4B;AAC1B,iBAAO,KAAK;AAAA,YACV,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AAAA,QACF;AAAA;AAAA;AAAA;AAAA,QAKA,2BAA2B;AACzB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,gBAAM,OAAO,KAAK,mBAAmB;AACrC,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA,QAKA,qBAAqB;AACnB,cACE,KAAK,OAAO,MAAM,UAAU,UAC5B,KAAK,OAAO,MAAM,UAAU,WAC5B,KAAK,OAAO,MAAM,UAAU,QAC5B;AACA,mBAAO,GAAG,aAAa;AAAA,cACrB,KAAK,OAAO;AAAA,cACZ,KAAK,OAAO,MAAM;AAAA,cAClB,GAAGC;AAAA,gBACD,KAAK,OAAO;AAAA,cACd;AAAA,YACF;AAAA,UACF;AAEA,iBAAO,KAAK,UAAU;AAAA,QACxB;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,iCAAiC;AAC/B,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,eAAK,cAAc,OAAO;AAC1B,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,SAAS,KAAK,2BAA2B;AAC/C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,6BAA6B;AAC3B,iBAAO,KAAK;AAAA,YACV,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAeA,2BAA2B;AACzB,gBAAM,eAAe,KAAK,OAAO,UAAU;AAE3C,cAAI,aAAa,SAAS,WAAW,UAAU,MAAM;AACnD,oBAAQ,aAAa,OAAO;AAAA,cAC1B,KAAK;AACH,uBAAO,KAAK,qBAAqB;AAAA,cAEnC,KAAK;AACH,uBAAO,KAAK,yBAAyB;AAAA,cAEvC,KAAK;AACH,uBAAO,KAAK,yBAAyB;AAAA,cAEvC,KAAK;AACH,uBAAO,KAAK,4BAA4B;AAAA,cAE1C,KAAK;AACH,uBAAO,KAAK,wBAAwB;AAAA,cAEtC,KAAK;AACH,uBAAO,KAAK,uBAAuB;AAAA,cAErC,KAAK;AACH,uBAAO,KAAK,8BAA8B;AAAA,YAC9C;AAAA,UACF;AAEA,gBAAM,KAAK,WAAW,YAAY;AAAA,QACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,uBAAuB;AACrB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,cAAc,QAAQ;AAC3B,eAAK,cAAc,QAAQ;AAC3B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,iBAAiB,KAAK;AAAA,YAC1B,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AAEA,cAAI,WAAW,WAAW,KAAK,eAAe,WAAW,GAAG;AAC1D,kBAAM,KAAK,WAAW;AAAA,UACxB;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,2BAA2B;AACzB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,cAAc,QAAQ;AAC3B,eAAK,cAAc,QAAQ;AAC3B,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,qBAAqB;AAE7C,cAAI,WAAW,WAAW,GAAG;AAC3B,kBAAM,KAAK,WAAW;AAAA,UACxB;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,2BAA2B;AACzB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,cAAc,QAAQ;AAC3B,eAAK,cAAc,MAAM;AACzB,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,0BAA0B;AAClD,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,SAAS,KAAK,sBAAsB;AAE1C,cACE,WAAW,WAAW,KACtB,WAAW,WAAW,KACtB,OAAO,WAAW,GAClB;AACA,kBAAM,KAAK,WAAW;AAAA,UACxB;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,8BAA8B;AAC5B,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,cAAc,QAAQ;AAC3B,eAAK,cAAc,WAAW;AAC9B,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,0BAA0B;AAClD,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,SAAS,KAAK,sBAAsB;AAE1C,cACE,WAAW,WAAW,KACtB,WAAW,WAAW,KACtB,OAAO,WAAW,GAClB;AACA,kBAAM,KAAK,WAAW;AAAA,UACxB;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,0BAA0B;AACxB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,cAAc,QAAQ;AAC3B,eAAK,cAAc,OAAO;AAC1B,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,QAAQ,KAAK,sBAAsB;AAEzC,cAAI,WAAW,WAAW,KAAK,MAAM,WAAW,GAAG;AACjD,kBAAM,KAAK,WAAW;AAAA,UACxB;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,yBAAyB;AACvB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,cAAc,QAAQ;AAC3B,eAAK,cAAc,MAAM;AACzB,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,SAAS,KAAK,0BAA0B;AAE9C,cAAI,WAAW,WAAW,KAAK,OAAO,WAAW,GAAG;AAClD,kBAAM,KAAK,WAAW;AAAA,UACxB;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,gCAAgC;AAC9B,gBAAM,QAAQ,KAAK,OAAO;AAC1B,eAAK,cAAc,QAAQ;AAC3B,eAAK,cAAc,OAAO;AAC1B,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,aAAa,KAAK,qBAAqB;AAC7C,gBAAM,SAAS,KAAK,2BAA2B;AAE/C,cAAI,WAAW,WAAW,KAAK,OAAO,WAAW,GAAG;AAClD,kBAAM,KAAK,WAAW;AAAA,UACxB;AAEA,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,2BAA2B;AACzB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,cAAc,KAAK,iBAAiB;AAC1C,eAAK,cAAc,WAAW;AAC9B,eAAK,YAAY,WAAW,UAAU,EAAE;AACxC,gBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAM,OAAO,KAAK,kBAAkB;AACpC,gBAAM,aAAa,KAAK,sBAAsB,YAAY;AAC1D,eAAK,cAAc,IAAI;AACvB,gBAAM,YAAY,KAAK,wBAAwB;AAC/C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,YACA;AAAA,YACA,WAAW;AAAA,YACX;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,0BAA0B;AACxB,iBAAO,KAAK;AAAA,YACV,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,UACP;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA6BA,yBAAyB;AACvB,gBAAM,QAAQ,KAAK,OAAO;AAC1B,gBAAM,OAAO,KAAK,UAAU;AAE5B,cACE,OAAO,UAAU,eAAe;AAAA,YAC9B,mBAAmB;AAAA,YACnB,KAAK;AAAA,UACP,GACA;AACA,mBAAO;AAAA,UACT;AAEA,gBAAM,KAAK,WAAW,KAAK;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,KAAK,YAAY,MAAM;AACrB,cAAI,KAAK,SAAS,eAAe,MAAM;AACrC,iBAAK,MAAM,IAAI,KAAK;AAAA,cAClB;AAAA,cACA,KAAK,OAAO;AAAA,cACZ,KAAK,OAAO;AAAA,YACd;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK,MAAM;AACT,iBAAO,KAAK,OAAO,MAAM,SAAS;AAAA,QACpC;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,MAAM;AAChB,gBAAM,QAAQ,KAAK,OAAO;AAE1B,cAAI,MAAM,SAAS,MAAM;AACvB,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACT;AAEA,iBAAO,GAAG,aAAa;AAAA,YACrB,KAAK,OAAO;AAAA,YACZ,MAAM;AAAA,YACN,YAAYC,kBAAiB,IAAI,YAAYD,cAAa,KAAK;AAAA,UACjE;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,oBAAoB,MAAM;AACxB,gBAAM,QAAQ,KAAK,OAAO;AAE1B,cAAI,MAAM,SAAS,MAAM;AACvB,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACT;AAEA,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,cAAc,OAAO;AACnB,gBAAM,QAAQ,KAAK,OAAO;AAE1B,cAAI,MAAM,SAAS,WAAW,UAAU,QAAQ,MAAM,UAAU,OAAO;AACrE,iBAAK,aAAa;AAAA,UACpB,OAAO;AACL,mBAAO,GAAG,aAAa;AAAA,cACrB,KAAK,OAAO;AAAA,cACZ,MAAM;AAAA,cACN,aAAa,iBAAiBA,cAAa,KAAK;AAAA,YAClD;AAAA,UACF;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,sBAAsB,OAAO;AAC3B,gBAAM,QAAQ,KAAK,OAAO;AAE1B,cAAI,MAAM,SAAS,WAAW,UAAU,QAAQ,MAAM,UAAU,OAAO;AACrE,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACT;AAEA,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA,QAKA,WAAW,SAAS;AAClB,gBAAM,QACJ,YAAY,QAAQ,YAAY,SAAS,UAAU,KAAK,OAAO;AACjE,kBAAQ,GAAG,aAAa;AAAA,YACtB,KAAK,OAAO;AAAA,YACZ,MAAM;AAAA,YACN,cAAcA,cAAa,KAAK;AAAA,UAClC;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,IAAI,UAAU,SAAS,WAAW;AAChC,eAAK,YAAY,QAAQ;AACzB,gBAAM,QAAQ,CAAC;AAEf,iBAAO,CAAC,KAAK,oBAAoB,SAAS,GAAG;AAC3C,kBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,UAC/B;AAEA,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,aAAa,UAAU,SAAS,WAAW;AACzC,cAAI,KAAK,oBAAoB,QAAQ,GAAG;AACtC,kBAAM,QAAQ,CAAC;AAEf,eAAG;AACD,oBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,YAC/B,SAAS,CAAC,KAAK,oBAAoB,SAAS;AAE5C,mBAAO;AAAA,UACT;AAEA,iBAAO,CAAC;AAAA,QACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,KAAK,UAAU,SAAS,WAAW;AACjC,eAAK,YAAY,QAAQ;AACzB,gBAAM,QAAQ,CAAC;AAEf,aAAG;AACD,kBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,UAC/B,SAAS,CAAC,KAAK,oBAAoB,SAAS;AAE5C,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,cAAc,eAAe,SAAS;AACpC,eAAK,oBAAoB,aAAa;AACtC,gBAAM,QAAQ,CAAC;AAEf,aAAG;AACD,kBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,UAC/B,SAAS,KAAK,oBAAoB,aAAa;AAE/C,iBAAO;AAAA,QACT;AAAA,QAEA,eAAe;AACb,gBAAM,EAAE,UAAU,IAAI,KAAK;AAE3B,gBAAM,QAAQ,KAAK,OAAO,QAAQ;AAElC,cAAI,cAAc,UAAa,MAAM,SAAS,WAAW,UAAU,KAAK;AACtE,cAAE,KAAK;AAEP,gBAAI,KAAK,gBAAgB,WAAW;AAClC,qBAAO,GAAG,aAAa;AAAA,gBACrB,KAAK,OAAO;AAAA,gBACZ,MAAM;AAAA,gBACN,+BAA+B;AAAA,cACjC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAKA,cAAQ,SAASF;AAEjB,eAASE,cAAa,OAAO;AAC3B,cAAM,QAAQ,MAAM;AACpB,eAAOC,kBAAiB,MAAM,IAAI,KAAK,SAAS,OAAO,KAAK,WAAW;AAAA,MACzE;AAKA,eAASA,kBAAiB,MAAM;AAC9B,gBAAQ,GAAG,OAAO,uBAAuB,IAAI,IAAI,IAAI,UAAU;AAAA,MACjE;AAAA;AAAA;;;AC9hDA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,cAAcC;AAMtB,eAASA,aAAY,KAAK;AACxB,eAAO,IAAI,IAAI,QAAQC,gBAAeC,gBAAe;AAAA,MACvD;AAEA,UAAMD,iBAAgB;AAEtB,eAASC,iBAAgB,KAAK;AAC5B,eAAOC,iBAAgB,IAAI,WAAW,CAAC,CAAC;AAAA,MAC1C;AAEA,UAAMA,mBAAkB;AAAA,QACttLA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,QAAQ;AAChB,cAAQ,uBAAuBC;AAC/B,cAAQ,aAAaC;AACrB,cAAQ,QAAQC;AAChB,cAAQ,kBAAkBC;AAE1B,UAAI,aAAa;AAEjB,UAAI,WAAW;AAEf,UAAI,OAAO;AAEX,UAAI,SAAS;AAEb,UAAMC,SAAQ,OAAO,OAAO,CAAC,CAAC;AAgF9B,cAAQ,QAAQA;AAEhB,eAASF,OAAM,MAAM,SAAS,cAAc,KAAK,mBAAmB;AAClE,cAAM,gBAAgB,oBAAI,IAAI;AAE9B,mBAAW,QAAQ,OAAO,OAAO,OAAO,IAAI,GAAG;AAC7C,wBAAc,IAAI,MAAMF,sBAAqB,SAAS,IAAI,CAAC;AAAA,QAC7D;AAGA,YAAI,QAAQ;AACZ,YAAI,UAAU,MAAM,QAAQ,IAAI;AAChC,YAAI,OAAO,CAAC,IAAI;AAChB,YAAI,QAAQ;AACZ,YAAI,QAAQ,CAAC;AACb,YAAI,OAAO;AACX,YAAI,MAAM;AACV,YAAI,SAAS;AACb,cAAM,OAAO,CAAC;AACd,cAAM,YAAY,CAAC;AAGnB,WAAG;AACD;AACA,gBAAM,YAAY,UAAU,KAAK;AACjC,gBAAM,WAAW,aAAa,MAAM,WAAW;AAE/C,cAAI,WAAW;AACb,kBAAM,UAAU,WAAW,IAAI,SAAY,KAAK,KAAK,SAAS,CAAC;AAC/D,mBAAO;AACP,qBAAS,UAAU,IAAI;AAEvB,gBAAI,UAAU;AACZ,kBAAI,SAAS;AACX,uBAAO,KAAK,MAAM;AAClB,oBAAI,aAAa;AAEjB,2BAAW,CAAC,SAAS,SAAS,KAAK,OAAO;AACxC,wBAAM,WAAW,UAAU;AAE3B,sBAAI,cAAc,MAAM;AACtB,yBAAK,OAAO,UAAU,CAAC;AACvB;AAAA,kBACF,OAAO;AACL,yBAAK,QAAQ,IAAI;AAAA,kBACnB;AAAA,gBACF;AAAA,cACF,OAAO;AACL,uBAAO,OAAO;AAAA,kBACZ,CAAC;AAAA,kBACD,OAAO,0BAA0B,IAAI;AAAA,gBACvC;AAEA,2BAAW,CAAC,SAAS,SAAS,KAAK,OAAO;AACxC,uBAAK,OAAO,IAAI;AAAA,gBAClB;AAAA,cACF;AAAA,YACF;AAEA,oBAAQ,MAAM;AACd,mBAAO,MAAM;AACb,oBAAQ,MAAM;AACd,sBAAU,MAAM;AAChB,oBAAQ,MAAM;AAAA,UAChB,WAAW,QAAQ;AACjB,kBAAM,UAAU,QAAQ,KAAK,KAAK;AAClC,mBAAO,OAAO,GAAG;AAEjB,gBAAI,SAAS,QAAQ,SAAS,QAAW;AACvC;AAAA,YACF;AAEA,iBAAK,KAAK,GAAG;AAAA,UACf;AAEA,cAAI;AAEJ,cAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,gBAAI,oBAAoB;AAExB,aAAC,GAAG,KAAK,QAAQ,IAAI,MAClB,GAAG,WAAW;AAAA,cACb;AAAA,cACA,sBAAsB,GAAG,SAAS,SAAS,IAAI;AAAA,YACjD;AACF,kBAAM,UAAU,aACX,qBAAqB,cAAc,IAAI,KAAK,IAAI,OAAO,QACxD,uBAAuB,SACrB,SACA,mBAAmB,SACpB,sBAAsB,cAAc,IAAI,KAAK,IAAI,OAAO,QACzD,wBAAwB,SACxB,SACA,oBAAoB;AACxB,qBACE,YAAY,QAAQ,YAAY,SAC5B,SACA,QAAQ,KAAK,SAAS,MAAM,KAAK,QAAQ,MAAM,SAAS;AAE9D,gBAAI,WAAWI,QAAO;AACpB;AAAA,YACF;AAEA,gBAAI,WAAW,OAAO;AACpB,kBAAI,CAAC,WAAW;AACd,qBAAK,IAAI;AACT;AAAA,cACF;AAAA,YACF,WAAW,WAAW,QAAW;AAC/B,oBAAM,KAAK,CAAC,KAAK,MAAM,CAAC;AAExB,kBAAI,CAAC,WAAW;AACd,qBAAK,GAAG,KAAK,QAAQ,MAAM,GAAG;AAC5B,yBAAO;AAAA,gBACT,OAAO;AACL,uBAAK,IAAI;AACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,cAAI,WAAW,UAAa,UAAU;AACpC,kBAAM,KAAK,CAAC,KAAK,IAAI,CAAC;AAAA,UACxB;AAEA,cAAI,WAAW;AACb,iBAAK,IAAI;AAAA,UACX,OAAO;AACL,gBAAI;AAEJ,oBAAQ;AAAA,cACN;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,MAAM;AAAA,YACR;AACA,sBAAU,MAAM,QAAQ,IAAI;AAC5B,mBAAO,UACH,QACC,aAAa,YAAY,KAAK,IAAI,OAAO,QAC1C,eAAe,SACf,aACA,CAAC;AACL,oBAAQ;AACR,oBAAQ,CAAC;AAET,gBAAI,QAAQ;AACV,wBAAU,KAAK,MAAM;AAAA,YACvB;AAEA,qBAAS;AAAA,UACX;AAAA,QACF,SAAS,UAAU;AAEnB,YAAI,MAAM,WAAW,GAAG;AAEtB,iBAAO,MAAM,MAAM,SAAS,CAAC,EAAE,CAAC;AAAA,QAClC;AAEA,eAAO;AAAA,MACT;AAQA,eAASD,iBAAgB,UAAU;AACjC,cAAM,WAAW,IAAI,MAAM,SAAS,MAAM,EAAE,KAAK,IAAI;AACrD,cAAM,gBAAgB,uBAAO,OAAO,IAAI;AAExC,mBAAW,QAAQ,OAAO,OAAO,OAAO,IAAI,GAAG;AAC7C,cAAI,aAAa;AACjB,gBAAM,YAAY,IAAI,MAAM,SAAS,MAAM,EAAE,KAAK,MAAS;AAC3D,gBAAM,YAAY,IAAI,MAAM,SAAS,MAAM,EAAE,KAAK,MAAS;AAE3D,mBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACxC,kBAAM,EAAE,OAAO,MAAM,IAAIH,sBAAqB,SAAS,CAAC,GAAG,IAAI;AAC/D,2BAAe,aAAa,SAAS,QAAQ,SAAS;AACtD,sBAAU,CAAC,IAAI;AACf,sBAAU,CAAC,IAAI;AAAA,UACjB;AAEA,cAAI,CAAC,YAAY;AACf;AAAA,UACF;AAEA,gBAAM,mBAAmB;AAAA,YACvB,SAAS,MAAM;AACb,oBAAM,OAAO,KAAK,CAAC;AAEnB,uBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,oBAAI,SAAS,CAAC,MAAM,MAAM;AACxB,sBAAI;AAEJ,wBAAM,UACH,eAAe,UAAU,CAAC,OAAO,QAAQ,iBAAiB,SACvD,SACA,aAAa,MAAM,SAAS,CAAC,GAAG,IAAI;AAE1C,sBAAI,WAAW,OAAO;AACpB,6BAAS,CAAC,IAAI;AAAA,kBAChB,WAAW,WAAWI,QAAO;AAC3B,6BAAS,CAAC,IAAIA;AAAA,kBAChB,WAAW,WAAW,QAAW;AAC/B,2BAAO;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,YAEA,SAAS,MAAM;AACb,oBAAM,OAAO,KAAK,CAAC;AAEnB,uBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,oBAAI,SAAS,CAAC,MAAM,MAAM;AACxB,sBAAI;AAEJ,wBAAM,UACH,eAAe,UAAU,CAAC,OAAO,QAAQ,iBAAiB,SACvD,SACA,aAAa,MAAM,SAAS,CAAC,GAAG,IAAI;AAE1C,sBAAI,WAAWA,QAAO;AACpB,6BAAS,CAAC,IAAIA;AAAA,kBAChB,WAAW,WAAW,UAAa,WAAW,OAAO;AACnD,2BAAO;AAAA,kBACT;AAAA,gBACF,WAAW,SAAS,CAAC,MAAM,MAAM;AAC/B,2BAAS,CAAC,IAAI;AAAA,gBAChB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AACA,wBAAc,IAAI,IAAI;AAAA,QACxB;AAEA,eAAO;AAAA,MACT;AAKA,eAASJ,sBAAqB,SAAS,MAAM;AAC3C,cAAM,cAAc,QAAQ,IAAI;AAEhC,YAAI,OAAO,gBAAgB,UAAU;AAEnC,iBAAO;AAAA,QACT,WAAW,OAAO,gBAAgB,YAAY;AAE5C,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,OAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,UACL,OAAO,QAAQ;AAAA,UACf,OAAO,QAAQ;AAAA,QACjB;AAAA,MACF;AAUA,eAASC,YAAW,SAAS,MAAM,WAAW;AAC5C,cAAM,EAAE,OAAO,MAAM,IAAID,sBAAqB,SAAS,IAAI;AAC3D,eAAO,YAAY,QAAQ;AAAA,MAC7B;AAAA;AAAA;;;ACxXA;AAAA;AAAA;AAEA,aAAO,eAAe,SAAS,cAAc;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AACD,cAAQ,QAAQK;AAEhB,UAAI,eAAe;AAEnB,UAAI,eAAe;AAEnB,UAAI,WAAW;AAMf,eAASA,OAAM,KAAK;AAClB,gBAAQ,GAAG,SAAS,OAAO,KAAKC,mBAAkB;AAAA,MACpD;AAEA,UAAMC,mBAAkB;AACxB,UAAMD,sBAAqB;AAAA,QACzB,MAAM;AAAA,UACJ,OAAO,CAAC,SAAS,KAAK;AAAA,QACxB;AAAA,QACA,UAAU;AAAA,UACR,OAAO,CAAC,SAAS,MAAM,KAAK;AAAA,QAC9B;AAAA;AAAA,QAEA,UAAU;AAAA,UACR,OAAO,CAAC,SAASE,MAAK,KAAK,aAAa,MAAM;AAAA,QAChD;AAAA,QACA,qBAAqB;AAAA,UACnB,MAAM,MAAM;AACV,kBAAM,UAAUC,MAAK,KAAKD,MAAK,KAAK,qBAAqB,IAAI,GAAG,GAAG;AACnE,kBAAM,SAASA;AAAA,cACb;AAAA,gBACE,KAAK;AAAA,gBACLA,MAAK,CAAC,KAAK,MAAM,OAAO,CAAC;AAAA,gBACzBA,MAAK,KAAK,YAAY,GAAG;AAAA,cAC3B;AAAA,cACA;AAAA,YACF;AAGA,oBAAQ,WAAW,UAAU,KAAK,SAAS,OAAO,KAAK;AAAA,UACzD;AAAA,QACF;AAAA,QACA,oBAAoB;AAAA,UAClB,OAAO,CAAC,EAAE,UAAU,MAAAE,OAAM,cAAc,WAAW,MACjD,WACA,OACAA,QACAD,MAAK,OAAO,YAAY,IACxBA,MAAK,KAAKD,MAAK,YAAY,GAAG,CAAC;AAAA,QACnC;AAAA,QACA,cAAc;AAAA,UACZ,OAAO,CAAC,EAAE,WAAW,MAAMG,OAAM,UAAU;AAAA,QAC7C;AAAA,QACA,OAAO;AAAA,UACL,MAAM,EAAE,OAAO,MAAM,WAAW,MAAM,YAAY,aAAa,GAAG;AAChE,kBAAM,SAASF,MAAK,IAAI,OAAO,IAAI,IAAI;AACvC,gBAAI,WAAW,SAASA,MAAK,KAAKD,MAAK,MAAM,IAAI,GAAG,GAAG;AAEvD,gBAAI,SAAS,SAASD,kBAAiB;AACrC,yBAAW,SAASE,MAAK,OAAOG,QAAOJ,MAAK,MAAM,IAAI,CAAC,GAAG,KAAK;AAAA,YACjE;AAEA,mBAAOA,MAAK,CAAC,UAAUA,MAAK,YAAY,GAAG,GAAG,YAAY,GAAG,GAAG;AAAA,UAClE;AAAA,QACF;AAAA,QACA,UAAU;AAAA,UACR,OAAO,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,OAAO;AAAA,QAC5C;AAAA;AAAA,QAEA,gBAAgB;AAAA,UACd,OAAO,CAAC,EAAE,MAAM,WAAW,MACzB,QAAQ,OAAOC,MAAK,KAAKD,MAAK,YAAY,GAAG,CAAC;AAAA,QAClD;AAAA,QACA,gBAAgB;AAAA,UACd,OAAO,CAAC,EAAE,eAAe,YAAY,aAAa,MAChDA;AAAA,YACE;AAAA,cACE;AAAA,cACAC,MAAK,OAAO,aAAa;AAAA,cACzBD,MAAK,YAAY,GAAG;AAAA,cACpB;AAAA,YACF;AAAA,YACA;AAAA,UACF;AAAA,QACJ;AAAA,QACA,oBAAoB;AAAA,UAClB,OAAO,CACL,EAAE,MAAM,eAAe,qBAAqB,YAAY,aAAa;AAAA;AAAA,YAGrE,YAAY,OAAOC,MAAK,KAAKD,MAAK,qBAAqB,IAAI,GAAG,GAAG,QAC3D,iBAAiBC,MAAK,IAAID,MAAK,YAAY,GAAG,GAAG,GAAG,MAC1D;AAAA;AAAA,QACJ;AAAA;AAAA,QAEA,UAAU;AAAA,UACR,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,QACxB;AAAA,QACA,YAAY;AAAA,UACV,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,QACxB;AAAA,QACA,aAAa;AAAA,UACX,OAAO,CAAC,EAAE,OAAO,OAAO,cAAc,MACpC,iBACK,GAAG,aAAa,kBAAkB,KAAK,KACvC,GAAG,aAAa,aAAa,KAAK;AAAA,QAC3C;AAAA,QACA,cAAc;AAAA,UACZ,OAAO,CAAC,EAAE,MAAM,MAAO,QAAQ,SAAS;AAAA,QAC1C;AAAA,QACA,WAAW;AAAA,UACT,OAAO,MAAM;AAAA,QACf;AAAA,QACA,WAAW;AAAA,UACT,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,QACxB;AAAA,QACA,WAAW;AAAA,UACT,OAAO,CAAC,EAAE,OAAO,MAAM,MAAMA,MAAK,QAAQ,IAAI,IAAI;AAAA,QACpD;AAAA,QACA,aAAa;AAAA,UACX,OAAO,CAAC,EAAE,OAAO,MAAM,MAAMA,MAAK,QAAQ,IAAI,IAAI;AAAA,QACpD;AAAA,QACA,aAAa;AAAA,UACX,OAAO,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,OAAO;AAAA,QAC5C;AAAA;AAAA,QAEA,WAAW;AAAA,UACT,OAAO,CAAC,EAAE,MAAM,WAAW,KAAK,MAC9B,MAAM,OAAOC,MAAK,KAAKD,MAAK,MAAM,IAAI,GAAG,GAAG;AAAA,QAChD;AAAA;AAAA,QAEA,WAAW;AAAA,UACT,OAAO,CAAC,EAAE,KAAK,MAAM;AAAA,QACvB;AAAA,QACA,UAAU;AAAA,UACR,OAAO,CAAC,EAAE,MAAAE,MAAK,MAAM,MAAMA,QAAO;AAAA,QACpC;AAAA,QACA,aAAa;AAAA,UACX,OAAO,CAAC,EAAE,MAAAA,MAAK,MAAMA,QAAO;AAAA,QAC9B;AAAA;AAAA,QAEA,kBAAkB;AAAA,UAChB,OAAO,CAAC,EAAE,aAAa,YAAY,eAAe,MAChDD,MAAK,IAAI,aAAa,IAAI,IAC1BD,MAAK,CAAC,UAAUA,MAAK,YAAY,GAAG,GAAGG,OAAM,cAAc,CAAC,GAAG,GAAG;AAAA,QACtE;AAAA,QACA,yBAAyB;AAAA,UACvB,OAAO,CAAC,EAAE,WAAW,MAAAD,MAAK,MAAM,YAAY,OAAOA;AAAA,QACrD;AAAA,QACA,sBAAsB;AAAA,UACpB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MACtCD,MAAK,IAAI,aAAa,IAAI,IAC1BD,MAAK,CAAC,UAAU,MAAMA,MAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,QACrD;AAAA,QACA,sBAAsB;AAAA,UACpB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,YAAY,OAAO,MAC1DC,MAAK,IAAI,aAAa,IAAI,IAC1BD;AAAA,YACE;AAAA,cACE;AAAA,cACA;AAAA,cACAC,MAAK,eAAeD,MAAK,YAAY,KAAK,CAAC;AAAA,cAC3CA,MAAK,YAAY,GAAG;AAAA,cACpBG,OAAM,MAAM;AAAA,YACd;AAAA,YACA;AAAA,UACF;AAAA,QACJ;AAAA,QACA,iBAAiB;AAAA,UACf,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MAAM,MAAAD,OAAM,WAAW,MAC7DD,MAAK,IAAI,aAAa,IAAI,IAC1B,QACCI,mBAAkB,IAAI,IACnBJ,MAAK,OAAOG,QAAOJ,MAAK,MAAM,IAAI,CAAC,GAAG,KAAK,IAC3CC,MAAK,KAAKD,MAAK,MAAM,IAAI,GAAG,GAAG,KACnC,OACAE,QACAD,MAAK,KAAKD,MAAK,YAAY,GAAG,CAAC;AAAA,QACnC;AAAA,QACA,sBAAsB;AAAA,UACpB,OAAO,CAAC,EAAE,aAAa,MAAM,MAAAE,OAAM,cAAc,WAAW,MAC1DD,MAAK,IAAI,aAAa,IAAI,IAC1BD;AAAA,YACE,CAAC,OAAO,OAAOE,OAAMD,MAAK,MAAM,YAAY,GAAGD,MAAK,YAAY,GAAG,CAAC;AAAA,YACpE;AAAA,UACF;AAAA,QACJ;AAAA,QACA,yBAAyB;AAAA,UACvB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,YAAY,OAAO,MAC1DC,MAAK,IAAI,aAAa,IAAI,IAC1BD;AAAA,YACE;AAAA,cACE;AAAA,cACA;AAAA,cACAC,MAAK,eAAeD,MAAK,YAAY,KAAK,CAAC;AAAA,cAC3CA,MAAK,YAAY,GAAG;AAAA,cACpBG,OAAM,MAAM;AAAA,YACd;AAAA,YACA;AAAA,UACF;AAAA,QACJ;AAAA,QACA,qBAAqB;AAAA,UACnB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,MAAM,MAC7CF,MAAK,IAAI,aAAa,IAAI,IAC1BD;AAAA,YACE,CAAC,SAAS,MAAMA,MAAK,YAAY,GAAG,GAAGC,MAAK,MAAMD,MAAK,OAAO,KAAK,CAAC,CAAC;AAAA,YACrE;AAAA,UACF;AAAA,QACJ;AAAA,QACA,oBAAoB;AAAA,UAClB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,OAAO,MAC9CC,MAAK,IAAI,aAAa,IAAI,IAC1BD,MAAK,CAAC,QAAQ,MAAMA,MAAK,YAAY,GAAG,GAAGG,OAAM,MAAM,CAAC,GAAG,GAAG;AAAA,QAClE;AAAA,QACA,qBAAqB;AAAA,UACnB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MACtCF,MAAK,IAAI,aAAa,IAAI,IAAID,MAAK,CAAC,MAAMA,MAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,QACzE;AAAA,QACA,2BAA2B;AAAA,UACzB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,OAAO,MAC9CC,MAAK,IAAI,aAAa,IAAI,IAC1BD,MAAK,CAAC,SAAS,MAAMA,MAAK,YAAY,GAAG,GAAGG,OAAM,MAAM,CAAC,GAAG,GAAG;AAAA,QACnE;AAAA,QACA,qBAAqB;AAAA,UACnB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MAAM,YAAY,UAAU,MAClEF,MAAK,IAAI,aAAa,IAAI,IAC1B,gBACA,QACCI,mBAAkB,IAAI,IACnBJ,MAAK,OAAOG,QAAOJ,MAAK,MAAM,IAAI,CAAC,GAAG,KAAK,IAC3CC,MAAK,KAAKD,MAAK,MAAM,IAAI,GAAG,GAAG,MAClC,aAAa,gBAAgB,MAC9B,SACAA,MAAK,WAAW,KAAK;AAAA,QACzB;AAAA,QACA,iBAAiB;AAAA,UACf,OAAO,CAAC,EAAE,YAAY,eAAe,MACnCA;AAAA,YACE,CAAC,iBAAiBA,MAAK,YAAY,GAAG,GAAGG,OAAM,cAAc,CAAC;AAAA,YAC9D;AAAA,UACF;AAAA,QACJ;AAAA,QACA,qBAAqB;AAAA,UACnB,OAAO,CAAC,EAAE,MAAM,WAAW,MACzBH,MAAK,CAAC,iBAAiB,MAAMA,MAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,QAC5D;AAAA,QACA,qBAAqB;AAAA,UACnB,OAAO,CAAC,EAAE,MAAM,YAAY,YAAY,OAAO,MAC7CA;AAAA,YACE;AAAA,cACE;AAAA,cACA;AAAA,cACAC,MAAK,eAAeD,MAAK,YAAY,KAAK,CAAC;AAAA,cAC3CA,MAAK,YAAY,GAAG;AAAA,cACpBG,OAAM,MAAM;AAAA,YACd;AAAA,YACA;AAAA,UACF;AAAA,QACJ;AAAA,QACA,wBAAwB;AAAA,UACtB,OAAO,CAAC,EAAE,MAAM,YAAY,YAAY,OAAO,MAC7CH;AAAA,YACE;AAAA,cACE;AAAA,cACA;AAAA,cACAC,MAAK,eAAeD,MAAK,YAAY,KAAK,CAAC;AAAA,cAC3CA,MAAK,YAAY,GAAG;AAAA,cACpBG,OAAM,MAAM;AAAA,YACd;AAAA,YACA;AAAA,UACF;AAAA,QACJ;AAAA,QACA,oBAAoB;AAAA,UAClB,OAAO,CAAC,EAAE,MAAM,YAAY,MAAM,MAChCH;AAAA,YACE;AAAA,cACE;AAAA,cACA;AAAA,cACAA,MAAK,YAAY,GAAG;AAAA,cACpBC,MAAK,MAAMD,MAAK,OAAO,KAAK,CAAC;AAAA,YAC/B;AAAA,YACA;AAAA,UACF;AAAA,QACJ;AAAA,QACA,mBAAmB;AAAA,UACjB,OAAO,CAAC,EAAE,MAAM,YAAY,OAAO,MACjCA,MAAK,CAAC,eAAe,MAAMA,MAAK,YAAY,GAAG,GAAGG,OAAM,MAAM,CAAC,GAAG,GAAG;AAAA,QACzE;AAAA,QACA,0BAA0B;AAAA,UACxB,OAAO,CAAC,EAAE,MAAM,YAAY,OAAO,MACjCH,MAAK,CAAC,gBAAgB,MAAMA,MAAK,YAAY,GAAG,GAAGG,OAAM,MAAM,CAAC,GAAG,GAAG;AAAA,QAC1E;AAAA,MACF;AAMA,eAASH,MAAK,YAAY,YAAY,IAAI;AACxC,YAAI;AAEJ,gBAAQ,wBACN,eAAe,QAAQ,eAAe,SAClC,SACA,WAAW,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,SAAS,OAAO,QACrD,0BAA0B,SACxB,wBACA;AAAA,MACN;AAKA,eAASG,OAAM,OAAO;AACpB,eAAOF,MAAK,OAAOG,QAAOJ,MAAK,OAAO,IAAI,CAAC,GAAG,KAAK;AAAA,MACrD;AAKA,eAASC,MAAK,OAAO,aAAa,MAAM,IAAI;AAC1C,eAAO,eAAe,QAAQ,gBAAgB,KAC1C,QAAQ,cAAc,MACtB;AAAA,MACN;AAEA,eAASG,QAAO,KAAK;AACnB,eAAOH,MAAK,MAAM,IAAI,QAAQ,OAAO,MAAM,CAAC;AAAA,MAC9C;AAEA,eAASI,mBAAkB,YAAY;AACrC,YAAI;AAKJ,gBAAQ,mBACN,eAAe,QAAQ,eAAe,SAClC,SACA,WAAW,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,CAAC,OAAO,QACtD,qBAAqB,SACnB,mBACA;AAAA,MACN;AAAA;AAAA;;;AC9VA;AAAA;AAAA;AAEA,aAAO,UAAU,SAAS,gBAAgB,MAAM;AAC9C,YAAI,MAAM,KAAK,KACb,OAAO,KAAK,MACZC,QAAO,KAAK;AACd,aAAK,MAAM;AACX,aAAK,OAAO;AACZ,aAAK,OAAOA;AAAA,MACd;AAAA;AAAA;;;ACTA;AAAA;AAAA;AAEA,UAAI,kBAAkB;AAEtB,aAAO,UAAU,SAAS,kBAAkB,OAAO;AACjD,eACG,OAAO,SAAS,eAAe,iBAAiB,QAChD,OAAO,SAAS,eAAe,iBAAiB,QACjD,iBAAiB;AAAA,MAErB;AAAA;AAAA;;;ACVA;AAAA;AAAA;AAEA,UAAI,2BAA2B;AAE/B,aAAO,UAAU,SAAS,aAAa,OAAO,MAAM,mBAAmB;AACrE,YAAI,SAAS,QAAQ;AACnB,iBAAO;AAAA,QACT;AAEA,YAAI,sBAAsB,QAAQ;AAChC,8BAAoB;AAAA,QACtB;AAEA,YAAIC;AACJ,YAAI,QAAQ,oBAAI,IAAI;AAEpB,iBAAS,QAAQ,OAAO,MAAM;AAC5B,cAAI,cAAc,MAAM,IAAI,IAAI;AAChC,cAAI;AAAa,wBAAY,KAAK,MAAM,aAAa,KAAK;AAAA;AACrD,kBAAM,IAAI,MAAM,KAAK;AAAA,QAC5B;AAEA,YAAI,kBAAkB,KAAK,GAAG;AAC5B,UAAAA,SAAQ;AACR,kBAAQ,CAAC,IAAI,GAAG,KAAK;AAAA,QACvB,OAAO;AACL,cAAI,SAAS,OAAO,OAAO,MAAM;AACjC,cAAI,OAAO,aAAa,eAAe,iBAAiB;AACtD,YAAAA,SAAQ,MAAM,UAAU,IAAI,KAAK,OAAO,SAAU,MAAMC,IAAG;AACzD,sBAAQ,CAAC,KAAK,SAASA,EAAC,GAAG,IAAI;AAC/B,qBAAO;AAAA,YACT,CAAC;AAAA,mBACM,MAAM,QAAQ,KAAK;AAC1B,YAAAD,SAAQ,MAAM,IAAI,SAAU,OAAOC,IAAG;AACpC,kBAAIC,UAAS,aAAa,OAAO,KAAK,SAASD,IAAG,iBAAiB;AACnE,cAAAC,QAAO,MAAM,QAAQ,OAAO;AAC5B,qBAAOA,QAAO;AAAA,YAChB,CAAC;AAAA,mBACM,SAAS,MAAM,gBAAgB,QAAQ;AAC9C,YAAAF,SAAQ,CAAC;AAET,qBAAS,KAAK,OAAO;AACnB,kBAAI,SAAS,aAAa,MAAM,CAAC,GAAG,KAAK,SAAS,GAAG,iBAAiB;AACtE,qBAAO,MAAM,QAAQ,OAAO;AAC5B,cAAAA,OAAM,CAAC,IAAI,OAAO;AAAA,YACpB;AAAA,UACF;AAAO,YAAAA,SAAQ;AAAA,QACjB;AAEA,eAAO;AAAA,UACL,OAAOA;AAAA,UACP;AAAA,QACF;AAAA,MACF;AAAA;AAAA;;;ACrDA;AAAA;AAAA;AAEA,cAAQ,kBAAkB;AAC1B,cAAQ,eAAe;AACvB,cAAQ,oBAAoB;AAAA;AAAA;;;ACJ5B;AAAA;AAAA,UAAIG,UAAS,UAAQ,QAAQ,EAAE;AAC/B,UAAI,OAAO,UAAQ,MAAM;AAEzB,aAAO,UAAU;AACjB,eAAS,gBAAgB;AACvB,aAAK,SAAS;AACd,aAAK,WAAW;AAChB,aAAK,cAAc,OAAO;AAC1B,aAAK,cAAc;AAEnB,aAAK,uBAAuB;AAC5B,aAAK,YAAY;AACjB,aAAK,kBAAkB,CAAC;AAAA,MAC1B;AACA,WAAK,SAAS,eAAeA,OAAM;AAEnC,oBAAc,SAAS,SAAS,QAAQ,SAAS;AAC/C,YAAI,gBAAgB,IAAI,KAAK;AAE7B,kBAAU,WAAW,CAAC;AACtB,iBAAS,UAAU,SAAS;AAC1B,wBAAc,MAAM,IAAI,QAAQ,MAAM;AAAA,QACxC;AAEA,sBAAc,SAAS;AAEvB,YAAI,WAAW,OAAO;AACtB,eAAO,OAAO,WAAW;AACvB,wBAAc,YAAY,SAAS;AACnC,iBAAO,SAAS,MAAM,QAAQ,SAAS;AAAA,QACzC;AAEA,eAAO,GAAG,SAAS,WAAW;AAAA,QAAC,CAAC;AAChC,YAAI,cAAc,aAAa;AAC7B,iBAAO,MAAM;AAAA,QACf;AAEA,eAAO;AAAA,MACT;AAEA,aAAO,eAAe,cAAc,WAAW,YAAY;AAAA,QACzD,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,KAAK,WAAW;AACd,iBAAO,KAAK,OAAO;AAAA,QACrB;AAAA,MACF,CAAC;AAED,oBAAc,UAAU,cAAc,WAAW;AAC/C,eAAO,KAAK,OAAO,YAAY,MAAM,KAAK,QAAQ,SAAS;AAAA,MAC7D;AAEA,oBAAc,UAAU,SAAS,WAAW;AAC1C,YAAI,CAAC,KAAK,WAAW;AACnB,eAAK,QAAQ;AAAA,QACf;AAEA,aAAK,OAAO,OAAO;AAAA,MACrB;AAEA,oBAAc,UAAU,QAAQ,WAAW;AACzC,aAAK,OAAO,MAAM;AAAA,MACpB;AAEA,oBAAc,UAAU,UAAU,WAAW;AAC3C,aAAK,YAAY;AAEjB,aAAK,gBAAgB,QAAQ,SAAS,MAAM;AAC1C,eAAK,KAAK,MAAM,MAAM,IAAI;AAAA,QAC5B,EAAE,KAAK,IAAI,CAAC;AACZ,aAAK,kBAAkB,CAAC;AAAA,MAC1B;AAEA,oBAAc,UAAU,OAAO,WAAW;AACxC,YAAI,IAAIA,QAAO,UAAU,KAAK,MAAM,MAAM,SAAS;AACnD,aAAK,OAAO;AACZ,eAAO;AAAA,MACT;AAEA,oBAAc,UAAU,cAAc,SAAS,MAAM;AACnD,YAAI,KAAK,WAAW;AAClB,eAAK,KAAK,MAAM,MAAM,IAAI;AAC1B;AAAA,QACF;AAEA,YAAI,KAAK,CAAC,MAAM,QAAQ;AACtB,eAAK,YAAY,KAAK,CAAC,EAAE;AACzB,eAAK,4BAA4B;AAAA,QACnC;AAEA,aAAK,gBAAgB,KAAK,IAAI;AAAA,MAChC;AAEA,oBAAc,UAAU,8BAA8B,WAAW;AAC/D,YAAI,KAAK,sBAAsB;AAC7B;AAAA,QACF;AAEA,YAAI,KAAK,YAAY,KAAK,aAAa;AACrC;AAAA,QACF;AAEA,aAAK,uBAAuB;AAC5B,YAAI,UACF,kCAAkC,KAAK,cAAc;AACvD,aAAK,KAAK,SAAS,IAAI,MAAM,OAAO,CAAC;AAAA,MACvC;AAAA;AAAA;;;AC1GA;AAAA;AAAA,UAAI,OAAO,UAAQ,MAAM;AACzB,UAAIC,UAAS,UAAQ,QAAQ,EAAE;AAC/B,UAAI,gBAAgB;AAEpB,aAAO,UAAU;AACjB,eAAS,iBAAiB;AACxB,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,cAAc,IAAI,OAAO;AAC9B,aAAK,eAAe;AAEpB,aAAK,YAAY;AACjB,aAAK,WAAW,CAAC;AACjB,aAAK,iBAAiB;AACtB,aAAK,cAAc;AACnB,aAAK,eAAe;AAAA,MACtB;AACA,WAAK,SAAS,gBAAgBA,OAAM;AAEpC,qBAAe,SAAS,SAAS,SAAS;AACxC,YAAI,iBAAiB,IAAI,KAAK;AAE9B,kBAAU,WAAW,CAAC;AACtB,iBAAS,UAAU,SAAS;AAC1B,yBAAe,MAAM,IAAI,QAAQ,MAAM;AAAA,QACzC;AAEA,eAAO;AAAA,MACT;AAEA,qBAAe,eAAe,SAAS,QAAQ;AAC7C,eAAQ,OAAO,WAAW,cACpB,OAAO,WAAW,YAClB,OAAO,WAAW,aAClB,OAAO,WAAW,YAClB,CAAC,OAAO,SAAS,MAAM;AAAA,MAC/B;AAEA,qBAAe,UAAU,SAAS,SAAS,QAAQ;AACjD,YAAI,eAAe,eAAe,aAAa,MAAM;AAErD,YAAI,cAAc;AAChB,cAAI,EAAE,kBAAkB,gBAAgB;AACtC,gBAAI,YAAY,cAAc,OAAO,QAAQ;AAAA,cAC3C,aAAa;AAAA,cACb,aAAa,KAAK;AAAA,YACpB,CAAC;AACD,mBAAO,GAAG,QAAQ,KAAK,eAAe,KAAK,IAAI,CAAC;AAChD,qBAAS;AAAA,UACX;AAEA,eAAK,cAAc,MAAM;AAEzB,cAAI,KAAK,cAAc;AACrB,mBAAO,MAAM;AAAA,UACf;AAAA,QACF;AAEA,aAAK,SAAS,KAAK,MAAM;AACzB,eAAO;AAAA,MACT;AAEA,qBAAe,UAAU,OAAO,SAAS,MAAM,SAAS;AACtD,QAAAA,QAAO,UAAU,KAAK,KAAK,MAAM,MAAM,OAAO;AAC9C,aAAK,OAAO;AACZ,eAAO;AAAA,MACT;AAEA,qBAAe,UAAU,WAAW,WAAW;AAC7C,aAAK,iBAAiB;AAEtB,YAAI,KAAK,aAAa;AACpB,eAAK,eAAe;AACpB;AAAA,QACF;AAEA,aAAK,cAAc;AACnB,YAAI;AACF,aAAG;AACD,iBAAK,eAAe;AACpB,iBAAK,aAAa;AAAA,UACpB,SAAS,KAAK;AAAA,QAChB,UAAE;AACA,eAAK,cAAc;AAAA,QACrB;AAAA,MACF;AAEA,qBAAe,UAAU,eAAe,WAAW;AACjD,YAAI,SAAS,KAAK,SAAS,MAAM;AAGjC,YAAI,OAAO,UAAU,aAAa;AAChC,eAAK,IAAI;AACT;AAAA,QACF;AAEA,YAAI,OAAO,WAAW,YAAY;AAChC,eAAK,UAAU,MAAM;AACrB;AAAA,QACF;AAEA,YAAI,YAAY;AAChB,kBAAU,SAASC,SAAQ;AACzB,cAAI,eAAe,eAAe,aAAaA,OAAM;AACrD,cAAI,cAAc;AAChB,YAAAA,QAAO,GAAG,QAAQ,KAAK,eAAe,KAAK,IAAI,CAAC;AAChD,iBAAK,cAAcA,OAAM;AAAA,UAC3B;AAEA,eAAK,UAAUA,OAAM;AAAA,QACvB,EAAE,KAAK,IAAI,CAAC;AAAA,MACd;AAEA,qBAAe,UAAU,YAAY,SAAS,QAAQ;AACpD,aAAK,iBAAiB;AAEtB,YAAI,eAAe,eAAe,aAAa,MAAM;AACrD,YAAI,cAAc;AAChB,iBAAO,GAAG,OAAO,KAAK,SAAS,KAAK,IAAI,CAAC;AACzC,iBAAO,KAAK,MAAM,EAAC,KAAK,MAAK,CAAC;AAC9B;AAAA,QACF;AAEA,YAAI,QAAQ;AACZ,aAAK,MAAM,KAAK;AAChB,aAAK,SAAS;AAAA,MAChB;AAEA,qBAAe,UAAU,gBAAgB,SAAS,QAAQ;AACxD,YAAI,OAAO;AACX,eAAO,GAAG,SAAS,SAAS,KAAK;AAC/B,eAAK,WAAW,GAAG;AAAA,QACrB,CAAC;AAAA,MACH;AAEA,qBAAe,UAAU,QAAQ,SAAS,MAAM;AAC9C,aAAK,KAAK,QAAQ,IAAI;AAAA,MACxB;AAEA,qBAAe,UAAU,QAAQ,WAAW;AAC1C,YAAI,CAAC,KAAK,cAAc;AACtB;AAAA,QACF;AAEA,YAAG,KAAK,gBAAgB,KAAK,kBAAkB,OAAO,KAAK,eAAe,SAAU;AAAY,eAAK,eAAe,MAAM;AAC1H,aAAK,KAAK,OAAO;AAAA,MACnB;AAEA,qBAAe,UAAU,SAAS,WAAW;AAC3C,YAAI,CAAC,KAAK,WAAW;AACnB,eAAK,YAAY;AACjB,eAAK,WAAW;AAChB,eAAK,SAAS;AAAA,QAChB;AAEA,YAAG,KAAK,gBAAgB,KAAK,kBAAkB,OAAO,KAAK,eAAe,UAAW;AAAY,eAAK,eAAe,OAAO;AAC5H,aAAK,KAAK,QAAQ;AAAA,MACpB;AAEA,qBAAe,UAAU,MAAM,WAAW;AACxC,aAAK,OAAO;AACZ,aAAK,KAAK,KAAK;AAAA,MACjB;AAEA,qBAAe,UAAU,UAAU,WAAW;AAC5C,aAAK,OAAO;AACZ,aAAK,KAAK,OAAO;AAAA,MACnB;AAEA,qBAAe,UAAU,SAAS,WAAW;AAC3C,aAAK,WAAW;AAChB,aAAK,WAAW,CAAC;AACjB,aAAK,iBAAiB;AAAA,MACxB;AAEA,qBAAe,UAAU,iBAAiB,WAAW;AACnD,aAAK,gBAAgB;AACrB,YAAI,KAAK,YAAY,KAAK,aAAa;AACrC;AAAA,QACF;AAEA,YAAI,UACF,kCAAkC,KAAK,cAAc;AACvD,aAAK,WAAW,IAAI,MAAM,OAAO,CAAC;AAAA,MACpC;AAEA,qBAAe,UAAU,kBAAkB,WAAW;AACpD,aAAK,WAAW;AAEhB,YAAI,OAAO;AACX,aAAK,SAAS,QAAQ,SAAS,QAAQ;AACrC,cAAI,CAAC,OAAO,UAAU;AACpB;AAAA,UACF;AAEA,eAAK,YAAY,OAAO;AAAA,QAC1B,CAAC;AAED,YAAI,KAAK,kBAAkB,KAAK,eAAe,UAAU;AACvD,eAAK,YAAY,KAAK,eAAe;AAAA,QACvC;AAAA,MACF;AAEA,qBAAe,UAAU,aAAa,SAAS,KAAK;AAClD,aAAK,OAAO;AACZ,aAAK,KAAK,SAAS,GAAG;AAAA,MACxB;AAAA;AAAA;;;AC/MA;AAAA;AAAA;AAAA,QACE,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,aAAa;AAAA,QAC9B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,MAAM;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAO;AAAA,QAC9B;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,KAAK;AAAA,QAClC;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,KAAK;AAAA,QAC3B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,aAAa;AAAA,QAC9B;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,MAAK,IAAI;AAAA,QAC/B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,MAAK,QAAO,SAAQ,OAAM,OAAM,QAAO,OAAM,UAAS,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,QAAQ;AAAA,QAC7J;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,UAAS,WAAU,UAAS,QAAQ;AAAA,QACrD;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,OAAM,IAAI;AAAA,QAChC;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAO;AAAA,QAC9B;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,WAAW;AAAA,QAClC;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wDAAwD;AAAA,UACtD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAO;AAAA,QAC9B;AAAA,QACA,+DAA+D;AAAA,UAC7D,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,0DAA0D;AAAA,UACxD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QAC9C;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,QACZ;AAAA,QACA,0DAA0D;AAAA,UACxD,QAAU;AAAA,QACZ;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,QACZ;AAAA,QACA,8DAA8D;AAAA,UAC5D,QAAU;AAAA,QACZ;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,QACZ;AAAA,QACA,6DAA6D;AAAA,UAC3D,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,QAAO,OAAM,MAAM;AAAA,QAC1C;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0DAA0D;AAAA,UACxD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,UAAU;AAAA,QAClC;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,SAAQ,SAAQ,MAAM;AAAA,QAC5C;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,QACZ;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4CAA4C;AAAA,UAC1C,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,2CAA2C;AAAA,UACzC,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,WAAU,UAAU;AAAA,QAC3C;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2DAA2D;AAAA,UACzD,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,QACZ;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QACpD;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,KAAK;AAAA,QAClC;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8DAA8D;AAAA,UAC5D,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2DAA2D;AAAA,UACzD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0DAA0D;AAAA,UACxD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wDAAwD;AAAA,UACtD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2DAA2D;AAAA,UACzD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,gEAAgE;AAAA,UAC9D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wDAAwD;AAAA,UACtD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,uEAAuE;AAAA,UACrE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6DAA6D;AAAA,UAC3D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qEAAqE;AAAA,UACnE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2EAA2E;AAAA,UACzE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2EAA2E;AAAA,UACzE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4EAA4E;AAAA,UAC1E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mFAAmF;AAAA,UACjF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kFAAkF;AAAA,UAChF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sFAAsF;AAAA,UACpF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sEAAsE;AAAA,UACpE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0EAA0E;AAAA,UACxE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0EAA0E;AAAA,UACxE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mFAAmF;AAAA,UACjF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oFAAoF;AAAA,UAClF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kFAAkF;AAAA,UAChF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4EAA4E;AAAA,UAC1E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wFAAwF;AAAA,UACtF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qFAAqF;AAAA,UACnF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mFAAmF;AAAA,UACjF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iFAAiF;AAAA,UAC/E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qEAAqE;AAAA,UACnE,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iFAAiF;AAAA,UAC/E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0EAA0E;AAAA,UACxE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oFAAoF;AAAA,UAClF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wEAAwE;AAAA,UACtE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iFAAiF;AAAA,UAC/E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wFAAwF;AAAA,UACtF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2DAA2D;AAAA,UACzD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mEAAmE;AAAA,UACjE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,QACZ;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2EAA2E;AAAA,UACzE,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wFAAwF;AAAA,UACtF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oFAAoF;AAAA,UAClF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2EAA2E;AAAA,UACzE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,oFAAoF;AAAA,UAClF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kFAAkF;AAAA,UAChF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8DAA8D;AAAA,UAC5D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,MAAM;AAAA,QACnC;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QACpD;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wDAAwD;AAAA,UACtD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,YAAY;AAAA,QAC7B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,MAAM;AAAA,QAC9B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,OAAM,KAAK;AAAA,QACnC;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,sBAAsB;AAAA,UACpB,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAO;AAAA,QAC9B;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QAC9C;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QACtE;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,sCAAsC;AAAA,UACpC,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,8BAA8B;AAAA,UAC5B,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,yBAAyB;AAAA,UACvB,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,aAAa;AAAA,QAC9B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QAC9C;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,KAAK;AAAA,QAClC;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,KAAK;AAAA,QAC3B;AAAA,QACA,qCAAqC;AAAA,UACnC,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,IAAI;AAAA,QAC1B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,IAAI;AAAA,QAC3B;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,WAAU,MAAM;AAAA,QACjC;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yCAAyC;AAAA,UACvC,cAAgB;AAAA,UAChB,YAAc,CAAC,cAAc;AAAA,QAC/B;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,KAAK;AAAA,QAClC;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,IAAI;AAAA,QACxD;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAQ,KAAK;AAAA,QAC9B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,SAAQ,QAAO,KAAK;AAAA,QAC5C;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,KAAK;AAAA,QAC3B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,QAAO,OAAM,KAAK;AAAA,QACzC;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAM,QAAO,OAAM,OAAM,KAAK;AAAA,QACtD;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,OAAM,MAAM;AAAA,QACzC;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,cAAgB;AAAA,QAClB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,QAAO,MAAM;AAAA,QACpC;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,IAAI;AAAA,QAC3B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAM,KAAK;AAAA,QACnC;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,cAAgB;AAAA,QAClB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,QAAO,OAAM,MAAM;AAAA,QAC1C;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,OAAM,OAAM,OAAM,KAAK;AAAA,QAC7C;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,MAAM;AAAA,QACpC;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAO;AAAA,QAC/B;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAO;AAAA,QAC/B;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,YAAW,UAAU;AAAA,QACtC;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,iBAAiB;AAAA,UACf,cAAgB;AAAA,QAClB;AAAA,QACA,YAAY;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,YAAc,CAAC,UAAS,WAAW;AAAA,QACrC;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAM,OAAO;AAAA,QACrC;AAAA,QACA,aAAa;AAAA,UACX,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,YAAW,IAAI;AAAA,QAChC;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,WAAW;AAAA,UACT,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,QAAO,OAAM,QAAO,OAAM,MAAK,KAAK;AAAA,QAClE;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,YAAc,CAAC,UAAS,MAAM;AAAA,QAChC;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,MAAK,QAAO,OAAM,MAAK,IAAI;AAAA,QAChD;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,SAAW;AAAA,UACX,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,MAAM;AAAA,QACpC;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,KAAK;AAAA,QAC1B;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,MAAK,OAAM,OAAM,KAAI,MAAK,KAAK;AAAA,QACpD;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,OAAM,OAAM,KAAK;AAAA,QACtC;AAAA,QACA,kBAAkB;AAAA,UAChB,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,cAAgB;AAAA,QAClB;AAAA,QACA,cAAc;AAAA,UACZ,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,KAAK;AAAA,QAC1B;AAAA,QACA,qBAAqB;AAAA,UACnB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,MAAM;AAAA,QACpC;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAM,OAAM,OAAM,KAAK;AAAA,QAC/C;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,KAAK;AAAA,QAC3B;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,KAAK;AAAA,QACnC;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,cAAgB;AAAA,QAClB;AAAA,MACF;AAAA;AAAA;;;ACt0QA;AAAA;AAWA,aAAO,UAAU;AAAA;AAAA;;;ACXjB;AAAA;AAAA;AAcA,UAAI,KAAK;AACT,UAAI,UAAU,UAAQ,MAAM,EAAE;AAO9B,UAAI,sBAAsB;AAC1B,UAAI,mBAAmB;AAOvB,cAAQ,UAAU;AAClB,cAAQ,WAAW,EAAE,QAAQ,QAAQ;AACrC,cAAQ,cAAc;AACtB,cAAQ,YAAY;AACpB,cAAQ,aAAa,uBAAO,OAAO,IAAI;AACvC,cAAQ,SAAS;AACjB,cAAQ,QAAQ,uBAAO,OAAO,IAAI;AAGlC,mBAAa,QAAQ,YAAY,QAAQ,KAAK;AAS9C,eAAS,QAASC,OAAM;AACtB,YAAI,CAACA,SAAQ,OAAOA,UAAS,UAAU;AACrC,iBAAO;AAAA,QACT;AAGA,YAAI,QAAQ,oBAAoB,KAAKA,KAAI;AACzC,YAAI,OAAO,SAAS,GAAG,MAAM,CAAC,EAAE,YAAY,CAAC;AAE7C,YAAI,QAAQ,KAAK,SAAS;AACxB,iBAAO,KAAK;AAAA,QACd;AAGA,YAAI,SAAS,iBAAiB,KAAK,MAAM,CAAC,CAAC,GAAG;AAC5C,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AASA,eAAS,YAAa,KAAK;AAEzB,YAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACnC,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,IAAI,QAAQ,GAAG,MAAM,KAC5B,QAAQ,OAAO,GAAG,IAClB;AAEJ,YAAI,CAAC,MAAM;AACT,iBAAO;AAAA,QACT;AAGA,YAAI,KAAK,QAAQ,SAAS,MAAM,IAAI;AAClC,cAAIC,WAAU,QAAQ,QAAQ,IAAI;AAClC,cAAIA;AAAS,oBAAQ,eAAeA,SAAQ,YAAY;AAAA,QAC1D;AAEA,eAAO;AAAA,MACT;AASA,eAAS,UAAWD,OAAM;AACxB,YAAI,CAACA,SAAQ,OAAOA,UAAS,UAAU;AACrC,iBAAO;AAAA,QACT;AAGA,YAAI,QAAQ,oBAAoB,KAAKA,KAAI;AAGzC,YAAI,OAAO,SAAS,QAAQ,WAAW,MAAM,CAAC,EAAE,YAAY,CAAC;AAE7D,YAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ;AACzB,iBAAO;AAAA,QACT;AAEA,eAAO,KAAK,CAAC;AAAA,MACf;AASA,eAAS,OAAQ,MAAM;AACrB,YAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,iBAAO;AAAA,QACT;AAGA,YAAIE,aAAY,QAAQ,OAAO,IAAI,EAChC,YAAY,EACZ,OAAO,CAAC;AAEX,YAAI,CAACA,YAAW;AACd,iBAAO;AAAA,QACT;AAEA,eAAO,QAAQ,MAAMA,UAAS,KAAK;AAAA,MACrC;AAOA,eAAS,aAAc,YAAY,OAAO;AAExC,YAAI,aAAa,CAAC,SAAS,UAAU,QAAW,MAAM;AAEtD,eAAO,KAAK,EAAE,EAAE,QAAQ,SAAS,gBAAiBF,OAAM;AACtD,cAAI,OAAO,GAAGA,KAAI;AAClB,cAAI,OAAO,KAAK;AAEhB,cAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ;AACzB;AAAA,UACF;AAGA,qBAAWA,KAAI,IAAI;AAGnB,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAIE,aAAY,KAAK,CAAC;AAEtB,gBAAI,MAAMA,UAAS,GAAG;AACpB,kBAAI,OAAO,WAAW,QAAQ,GAAG,MAAMA,UAAS,CAAC,EAAE,MAAM;AACzD,kBAAI,KAAK,WAAW,QAAQ,KAAK,MAAM;AAEvC,kBAAI,MAAMA,UAAS,MAAM,+BACtB,OAAO,MAAO,SAAS,MAAM,MAAMA,UAAS,EAAE,OAAO,GAAG,EAAE,MAAM,iBAAkB;AAEnF;AAAA,cACF;AAAA,YACF;AAGA,kBAAMA,UAAS,IAAIF;AAAA,UACrB;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;;;AC3LA;AAAA;AAAA,aAAO,UAAU;AAOjB,eAAS,MAAM,IACf;AACE,YAAI,WAAW,OAAO,gBAAgB,aAClC,eAEA,OAAO,WAAW,YAAY,OAAO,QAAQ,YAAY,aACvD,QAAQ,WACR;AAGN,YAAI,UACJ;AACE,mBAAS,EAAE;AAAA,QACb,OAEA;AACE,qBAAW,IAAI,CAAC;AAAA,QAClB;AAAA,MACF;AAAA;AAAA;;;ACzBA;AAAA;AAAA,UAAI,QAAQ;AAGZ,aAAO,UAAU;AASjB,eAAS,MAAM,UACf;AACE,YAAI,UAAU;AAGd,cAAM,WAAW;AAAE,oBAAU;AAAA,QAAM,CAAC;AAEpC,eAAO,SAAS,eAAe,KAAK,QACpC;AACE,cAAI,SACJ;AACE,qBAAS,KAAK,MAAM;AAAA,UACtB,OAEA;AACE,kBAAM,SAAS,oBACf;AACE,uBAAS,KAAK,MAAM;AAAA,YACtB,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA;AAAA;;;ACjCA;AAAA;AACA,aAAO,UAAU;AAOjB,eAAS,MAAM,OACf;AACE,eAAO,KAAK,MAAM,IAAI,EAAE,QAAQ,MAAM,KAAK,KAAK,CAAC;AAGjD,cAAM,OAAO,CAAC;AAAA,MAChB;AAQA,eAAS,MAAM,KACf;AACE,YAAI,OAAO,KAAK,KAAK,GAAG,KAAK,YAC7B;AACE,eAAK,KAAK,GAAG,EAAE;AAAA,QACjB;AAAA,MACF;AAAA;AAAA;;;AC5BA;AAAA;AAAA,UAAI,QAAQ;AAAZ,UACI,QAAQ;AAIZ,aAAO,UAAU;AAUjB,eAAS,QAAQ,MAAM,UAAU,OAAO,UACxC;AAEE,YAAI,MAAM,MAAM,WAAW,IAAI,MAAM,WAAW,EAAE,MAAM,KAAK,IAAI,MAAM;AAEvE,cAAM,KAAK,GAAG,IAAI,OAAO,UAAU,KAAK,KAAK,GAAG,GAAG,SAAS,OAAOG,SACnE;AAGE,cAAI,EAAE,OAAO,MAAM,OACnB;AACE;AAAA,UACF;AAGA,iBAAO,MAAM,KAAK,GAAG;AAErB,cAAI,OACJ;AAIE,kBAAM,KAAK;AAAA,UACb,OAEA;AACE,kBAAM,QAAQ,GAAG,IAAIA;AAAA,UACvB;AAGA,mBAAS,OAAO,MAAM,OAAO;AAAA,QAC/B,CAAC;AAAA,MACH;AAWA,eAAS,OAAO,UAAU,KAAK,MAAM,UACrC;AACE,YAAI;AAGJ,YAAI,SAAS,UAAU,GACvB;AACE,oBAAU,SAAS,MAAM,MAAM,SAAS;AAAA,QAC1C,OAGA;AACE,oBAAU,SAAS,MAAM,KAAK,MAAM,SAAS;AAAA,QAC/C;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;;;AC1EA;AAAA;AACA,aAAO,UAAU;AAWjB,eAAS,MAAM,MAAM,YACrB;AACE,YAAI,cAAc,CAAC,MAAM,QAAQ,IAAI,GACjC,YACF;AAAA,UACE,OAAW;AAAA,UACX,WAAW,eAAe,aAAa,OAAO,KAAK,IAAI,IAAI;AAAA,UAC3D,MAAW,CAAC;AAAA,UACZ,SAAW,cAAc,CAAC,IAAI,CAAC;AAAA,UAC/B,MAAW,cAAc,OAAO,KAAK,IAAI,EAAE,SAAS,KAAK;AAAA,QAC3D;AAGF,YAAI,YACJ;AAGE,oBAAU,UAAU,KAAK,cAAc,aAAa,SAAS,GAAG,GAChE;AACE,mBAAO,WAAW,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,UACpC,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;;;ACpCA;AAAA;AAAA,UAAI,QAAQ;AAAZ,UACI,QAAQ;AAIZ,aAAO,UAAU;AAQjB,eAAS,WAAW,UACpB;AACE,YAAI,CAAC,OAAO,KAAK,KAAK,IAAI,EAAE,QAC5B;AACE;AAAA,QACF;AAGA,aAAK,QAAQ,KAAK;AAGlB,cAAM,IAAI;AAGV,cAAM,UAAU,MAAM,KAAK,OAAO;AAAA,MACpC;AAAA;AAAA;;;AC5BA;AAAA;AAAA,UAAI,UAAa;AAAjB,UACI,YAAa;AADjB,UAEI,aAAa;AAIjB,aAAO,UAAU;AAUjB,eAAS,SAAS,MAAM,UAAU,UAClC;AACE,YAAI,QAAQ,UAAU,IAAI;AAE1B,eAAO,MAAM,SAAS,MAAM,WAAW,KAAK,MAAM,QAClD;AACE,kBAAQ,MAAM,UAAU,OAAO,SAAS,OAAO,QAC/C;AACE,gBAAI,OACJ;AACE,uBAAS,OAAO,MAAM;AACtB;AAAA,YACF;AAGA,gBAAI,OAAO,KAAK,MAAM,IAAI,EAAE,WAAW,GACvC;AACE,uBAAS,MAAM,MAAM,OAAO;AAC5B;AAAA,YACF;AAAA,UACF,CAAC;AAED,gBAAM;AAAA,QACR;AAEA,eAAO,WAAW,KAAK,OAAO,QAAQ;AAAA,MACxC;AAAA;AAAA;;;AC1CA;AAAA;AAAA,UAAI,UAAa;AAAjB,UACI,YAAa;AADjB,UAEI,aAAa;AAIjB,aAAO,UAAU;AAEjB,aAAO,QAAQ,YAAa;AAC5B,aAAO,QAAQ,aAAa;AAW5B,eAAS,cAAc,MAAM,UAAU,YAAY,UACnD;AACE,YAAI,QAAQ,UAAU,MAAM,UAAU;AAEtC,gBAAQ,MAAM,UAAU,OAAO,SAAS,gBAAgB,OAAO,QAC/D;AACE,cAAI,OACJ;AACE,qBAAS,OAAO,MAAM;AACtB;AAAA,UACF;AAEA,gBAAM;AAGN,cAAI,MAAM,SAAS,MAAM,WAAW,KAAK,MAAM,QAC/C;AACE,oBAAQ,MAAM,UAAU,OAAO,eAAe;AAC9C;AAAA,UACF;AAGA,mBAAS,MAAM,MAAM,OAAO;AAAA,QAC9B,CAAC;AAED,eAAO,WAAW,KAAK,OAAO,QAAQ;AAAA,MACxC;AAaA,eAAS,UAAU,GAAG,GACtB;AACE,eAAO,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,MAClC;AASA,eAAS,WAAW,GAAG,GACvB;AACE,eAAO,KAAK,UAAU,GAAG,CAAC;AAAA,MAC5B;AAAA;AAAA;;;AC1EA;AAAA;AAAA,UAAI,gBAAgB;AAGpB,aAAO,UAAU;AAUjB,eAAS,OAAO,MAAM,UAAU,UAChC;AACE,eAAO,cAAc,MAAM,UAAU,MAAM,QAAQ;AAAA,MACrD;AAAA;AAAA;;;AChBA;AAAA;AAAA,aAAO,UACP;AAAA,QACE,UAAgB;AAAA,QAChB,QAAgB;AAAA,QAChB,eAAgB;AAAA,MAClB;AAAA;AAAA;;;ACLA;AAAA;AACA,aAAO,UAAU,SAAS,KAAK,KAAK;AAElC,eAAO,KAAK,GAAG,EAAE,QAAQ,SAAS,MAClC;AACE,cAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI;AAAA,QACnC,CAAC;AAED,eAAO;AAAA,MACT;AAAA;AAAA;;;ACTA;AAAA;AAAA,UAAI,iBAAiB;AACrB,UAAI,OAAO,UAAQ,MAAM;AACzB,UAAI,OAAO,UAAQ,MAAM;AACzB,UAAIC,QAAO,UAAQ,MAAM;AACzB,UAAIC,SAAQ,UAAQ,OAAO;AAC3B,UAAI,WAAW,UAAQ,KAAK,EAAE;AAC9B,UAAI,KAAK,UAAQ,IAAI;AACrB,UAAI,OAAO;AACX,UAAI,WAAW;AACf,UAAI,WAAW;AAGf,aAAO,UAAUC;AAGjB,WAAK,SAASA,WAAU,cAAc;AAUtC,eAASA,UAAS,SAAS;AACzB,YAAI,EAAE,gBAAgBA,YAAW;AAC/B,iBAAO,IAAIA,UAAS,OAAO;AAAA,QAC7B;AAEA,aAAK,kBAAkB;AACvB,aAAK,eAAe;AACpB,aAAK,mBAAmB,CAAC;AAEzB,uBAAe,KAAK,IAAI;AAExB,kBAAU,WAAW,CAAC;AACtB,iBAAS,UAAU,SAAS;AAC1B,eAAK,MAAM,IAAI,QAAQ,MAAM;AAAA,QAC/B;AAAA,MACF;AAEA,MAAAA,UAAS,aAAa;AACtB,MAAAA,UAAS,uBAAuB;AAEhC,MAAAA,UAAS,UAAU,SAAS,SAAS,OAAO,OAAO,SAAS;AAE1D,kBAAU,WAAW,CAAC;AAGtB,YAAI,OAAO,WAAW,UAAU;AAC9B,oBAAU,EAAC,UAAU,QAAO;AAAA,QAC9B;AAEA,YAAI,SAAS,eAAe,UAAU,OAAO,KAAK,IAAI;AAGtD,YAAI,OAAO,SAAS,UAAU;AAC5B,kBAAQ,KAAK;AAAA,QACf;AAGA,YAAI,KAAK,QAAQ,KAAK,GAAG;AAGvB,eAAK,OAAO,IAAI,MAAM,2BAA2B,CAAC;AAClD;AAAA,QACF;AAEA,YAAI,SAAS,KAAK,iBAAiB,OAAO,OAAO,OAAO;AACxD,YAAI,SAAS,KAAK,iBAAiB;AAEnC,eAAO,MAAM;AACb,eAAO,KAAK;AACZ,eAAO,MAAM;AAGb,aAAK,aAAa,QAAQ,OAAO,OAAO;AAAA,MAC1C;AAEA,MAAAA,UAAS,UAAU,eAAe,SAAS,QAAQ,OAAO,SAAS;AACjE,YAAI,cAAc;AAMlB,YAAI,QAAQ,eAAe,MAAM;AAC/B,yBAAe,CAAC,QAAQ;AAAA,QAC1B,WAAW,OAAO,SAAS,KAAK,GAAG;AACjC,wBAAc,MAAM;AAAA,QACtB,WAAW,OAAO,UAAU,UAAU;AACpC,wBAAc,OAAO,WAAW,KAAK;AAAA,QACvC;AAEA,aAAK,gBAAgB;AAGrB,aAAK,mBACH,OAAO,WAAW,MAAM,IACxBA,UAAS,WAAW;AAGtB,YAAI,CAAC,SAAW,CAAC,MAAM,QAAQ,EAAE,MAAM,YAAY,MAAM,eAAe,aAAa,IAAM;AACzF;AAAA,QACF;AAGA,YAAI,CAAC,QAAQ,aAAa;AACxB,eAAK,iBAAiB,KAAK,KAAK;AAAA,QAClC;AAAA,MACF;AAEA,MAAAA,UAAS,UAAU,mBAAmB,SAAS,OAAO,UAAU;AAE9D,YAAI,MAAM,eAAe,IAAI,GAAG;AAS9B,cAAI,MAAM,OAAO,UAAa,MAAM,OAAO,YAAY,MAAM,SAAS,QAAW;AAK/E,qBAAS,MAAM,MAAM,MAAM,KAAK,MAAM,QAAQ,MAAM,QAAQ,EAAE;AAAA,UAGhE,OAAO;AAEL,eAAG,KAAK,MAAM,MAAM,SAAS,KAAK,MAAM;AAEtC,kBAAI;AAEJ,kBAAI,KAAK;AACP,yBAAS,GAAG;AACZ;AAAA,cACF;AAGA,yBAAW,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ;AACpD,uBAAS,MAAM,QAAQ;AAAA,YACzB,CAAC;AAAA,UACH;AAAA,QAGF,WAAW,MAAM,eAAe,aAAa,GAAG;AAC9C,mBAAS,MAAM,CAAC,MAAM,QAAQ,gBAAgB,CAAC;AAAA,QAGjD,WAAW,MAAM,eAAe,YAAY,GAAG;AAE7C,gBAAM,GAAG,YAAY,SAAS,UAAU;AACtC,kBAAM,MAAM;AACZ,qBAAS,MAAM,CAAC,SAAS,QAAQ,gBAAgB,CAAC;AAAA,UACpD,CAAC;AACD,gBAAM,OAAO;AAAA,QAGf,OAAO;AACL,mBAAS,gBAAgB;AAAA,QAC3B;AAAA,MACF;AAEA,MAAAA,UAAS,UAAU,mBAAmB,SAAS,OAAO,OAAO,SAAS;AAIpE,YAAI,OAAO,QAAQ,UAAU,UAAU;AACrC,iBAAO,QAAQ;AAAA,QACjB;AAEA,YAAI,qBAAqB,KAAK,uBAAuB,OAAO,OAAO;AACnE,YAAI,cAAc,KAAK,gBAAgB,OAAO,OAAO;AAErD,YAAI,WAAW;AACf,YAAI,UAAW;AAAA;AAAA,UAEb,uBAAuB,CAAC,aAAa,WAAW,QAAQ,GAAG,EAAE,OAAO,sBAAsB,CAAC,CAAC;AAAA;AAAA,UAE5F,gBAAgB,CAAC,EAAE,OAAO,eAAe,CAAC,CAAC;AAAA,QAC7C;AAGA,YAAI,OAAO,QAAQ,UAAU,UAAU;AACrC,mBAAS,SAAS,QAAQ,MAAM;AAAA,QAClC;AAEA,YAAI;AACJ,iBAAS,QAAQ,SAAS;AACxB,cAAI,CAAC,QAAQ,eAAe,IAAI;AAAG;AACnC,mBAAS,QAAQ,IAAI;AAGrB,cAAI,UAAU,MAAM;AAClB;AAAA,UACF;AAGA,cAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,qBAAS,CAAC,MAAM;AAAA,UAClB;AAGA,cAAI,OAAO,QAAQ;AACjB,wBAAY,OAAO,OAAO,OAAO,KAAK,IAAI,IAAIA,UAAS;AAAA,UACzD;AAAA,QACF;AAEA,eAAO,OAAO,KAAK,YAAY,IAAIA,UAAS,aAAa,WAAWA,UAAS;AAAA,MAC/E;AAEA,MAAAA,UAAS,UAAU,yBAAyB,SAAS,OAAO,SAAS;AAEnE,YAAI,UACA;AAGJ,YAAI,OAAO,QAAQ,aAAa,UAAU;AAExC,qBAAW,KAAK,UAAU,QAAQ,QAAQ,EAAE,QAAQ,OAAO,GAAG;AAAA,QAChE,WAAW,QAAQ,YAAY,MAAM,QAAQ,MAAM,MAAM;AAIvD,qBAAW,KAAK,SAAS,QAAQ,YAAY,MAAM,QAAQ,MAAM,IAAI;AAAA,QACvE,WAAW,MAAM,YAAY,MAAM,eAAe,aAAa,GAAG;AAEhE,qBAAW,KAAK,SAAS,MAAM,OAAO,aAAa,QAAQ,EAAE;AAAA,QAC/D;AAEA,YAAI,UAAU;AACZ,+BAAqB,eAAe,WAAW;AAAA,QACjD;AAEA,eAAO;AAAA,MACT;AAEA,MAAAA,UAAS,UAAU,kBAAkB,SAAS,OAAO,SAAS;AAG5D,YAAI,cAAc,QAAQ;AAG1B,YAAI,CAAC,eAAe,MAAM,MAAM;AAC9B,wBAAc,KAAK,OAAO,MAAM,IAAI;AAAA,QACtC;AAGA,YAAI,CAAC,eAAe,MAAM,MAAM;AAC9B,wBAAc,KAAK,OAAO,MAAM,IAAI;AAAA,QACtC;AAGA,YAAI,CAAC,eAAe,MAAM,YAAY,MAAM,eAAe,aAAa,GAAG;AACzE,wBAAc,MAAM,QAAQ,cAAc;AAAA,QAC5C;AAGA,YAAI,CAAC,gBAAgB,QAAQ,YAAY,QAAQ,WAAW;AAC1D,wBAAc,KAAK,OAAO,QAAQ,YAAY,QAAQ,QAAQ;AAAA,QAChE;AAGA,YAAI,CAAC,eAAe,OAAO,SAAS,UAAU;AAC5C,wBAAcA,UAAS;AAAA,QACzB;AAEA,eAAO;AAAA,MACT;AAEA,MAAAA,UAAS,UAAU,mBAAmB,WAAW;AAC/C,eAAO,SAAS,MAAM;AACpB,cAAI,SAASA,UAAS;AAEtB,cAAI,WAAY,KAAK,SAAS,WAAW;AACzC,cAAI,UAAU;AACZ,sBAAU,KAAK,cAAc;AAAA,UAC/B;AAEA,eAAK,MAAM;AAAA,QACb,EAAE,KAAK,IAAI;AAAA,MACb;AAEA,MAAAA,UAAS,UAAU,gBAAgB,WAAW;AAC5C,eAAO,OAAO,KAAK,YAAY,IAAI,OAAOA,UAAS;AAAA,MACrD;AAEA,MAAAA,UAAS,UAAU,aAAa,SAAS,aAAa;AACpD,YAAI;AACJ,YAAI,cAAc;AAAA,UAChB,gBAAgB,mCAAmC,KAAK,YAAY;AAAA,QACtE;AAEA,aAAK,UAAU,aAAa;AAC1B,cAAI,YAAY,eAAe,MAAM,GAAG;AACtC,wBAAY,OAAO,YAAY,CAAC,IAAI,YAAY,MAAM;AAAA,UACxD;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,MAAAA,UAAS,UAAU,cAAc,SAAS,UAAU;AAClD,aAAK,YAAY;AAAA,MACnB;AAEA,MAAAA,UAAS,UAAU,cAAc,WAAW;AAC1C,YAAI,CAAC,KAAK,WAAW;AACnB,eAAK,kBAAkB;AAAA,QACzB;AAEA,eAAO,KAAK;AAAA,MACd;AAEA,MAAAA,UAAS,UAAU,YAAY,WAAW;AACxC,YAAI,aAAa,IAAI,OAAO,MAAO,CAAE;AACrC,YAAI,WAAW,KAAK,YAAY;AAGhC,iBAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK;AACxD,cAAI,OAAO,KAAK,SAAS,CAAC,MAAM,YAAY;AAG1C,gBAAG,OAAO,SAAS,KAAK,SAAS,CAAC,CAAC,GAAG;AACpC,2BAAa,OAAO,OAAQ,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;AAAA,YAC5D,OAAM;AACJ,2BAAa,OAAO,OAAQ,CAAC,YAAY,OAAO,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,YACzE;AAGA,gBAAI,OAAO,KAAK,SAAS,CAAC,MAAM,YAAY,KAAK,SAAS,CAAC,EAAE,UAAW,GAAG,SAAS,SAAS,CAAE,MAAM,UAAU;AAC7G,2BAAa,OAAO,OAAQ,CAAC,YAAY,OAAO,KAAKA,UAAS,UAAU,CAAC,CAAE;AAAA,YAC7E;AAAA,UACF;AAAA,QACF;AAGA,eAAO,OAAO,OAAQ,CAAC,YAAY,OAAO,KAAK,KAAK,cAAc,CAAC,CAAC,CAAE;AAAA,MACxE;AAEA,MAAAA,UAAS,UAAU,oBAAoB,WAAW;AAGhD,YAAI,WAAW;AACf,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,sBAAY,KAAK,MAAM,KAAK,OAAO,IAAI,EAAE,EAAE,SAAS,EAAE;AAAA,QACxD;AAEA,aAAK,YAAY;AAAA,MACnB;AAKA,MAAAA,UAAS,UAAU,gBAAgB,WAAW;AAC5C,YAAI,cAAc,KAAK,kBAAkB,KAAK;AAI9C,YAAI,KAAK,SAAS,QAAQ;AACxB,yBAAe,KAAK,cAAc,EAAE;AAAA,QACtC;AAGA,YAAI,CAAC,KAAK,eAAe,GAAG;AAI1B,eAAK,OAAO,IAAI,MAAM,oDAAoD,CAAC;AAAA,QAC7E;AAEA,eAAO;AAAA,MACT;AAKA,MAAAA,UAAS,UAAU,iBAAiB,WAAW;AAC7C,YAAI,iBAAiB;AAErB,YAAI,KAAK,iBAAiB,QAAQ;AAChC,2BAAiB;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAEA,MAAAA,UAAS,UAAU,YAAY,SAAS,IAAI;AAC1C,YAAI,cAAc,KAAK,kBAAkB,KAAK;AAE9C,YAAI,KAAK,SAAS,QAAQ;AACxB,yBAAe,KAAK,cAAc,EAAE;AAAA,QACtC;AAEA,YAAI,CAAC,KAAK,iBAAiB,QAAQ;AACjC,kBAAQ,SAAS,GAAG,KAAK,MAAM,MAAM,WAAW,CAAC;AACjD;AAAA,QACF;AAEA,iBAAS,SAAS,KAAK,kBAAkB,KAAK,kBAAkB,SAAS,KAAK,QAAQ;AACpF,cAAI,KAAK;AACP,eAAG,GAAG;AACN;AAAA,UACF;AAEA,iBAAO,QAAQ,SAAS,QAAQ;AAC9B,2BAAe;AAAA,UACjB,CAAC;AAED,aAAG,MAAM,WAAW;AAAA,QACtB,CAAC;AAAA,MACH;AAEA,MAAAA,UAAS,UAAU,SAAS,SAAS,QAAQ,IAAI;AAC/C,YAAI,SACA,SACA,WAAW,EAAC,QAAQ,OAAM;AAK9B,YAAI,OAAO,UAAU,UAAU;AAE7B,mBAAS,SAAS,MAAM;AACxB,oBAAU,SAAS;AAAA,YACjB,MAAM,OAAO;AAAA,YACb,MAAM,OAAO;AAAA,YACb,MAAM,OAAO;AAAA,YACb,UAAU,OAAO;AAAA,UACnB,GAAG,QAAQ;AAAA,QAGb,OAAO;AAEL,oBAAU,SAAS,QAAQ,QAAQ;AAEnC,cAAI,CAAC,QAAQ,MAAM;AACjB,oBAAQ,OAAO,QAAQ,YAAY,WAAW,MAAM;AAAA,UACtD;AAAA,QACF;AAGA,gBAAQ,UAAU,KAAK,WAAW,OAAO,OAAO;AAGhD,YAAI,QAAQ,YAAY,UAAU;AAChC,oBAAUD,OAAM,QAAQ,OAAO;AAAA,QACjC,OAAO;AACL,oBAAUD,MAAK,QAAQ,OAAO;AAAA,QAChC;AAGA,aAAK,UAAU,SAAS,KAAK,QAAQ;AACnC,cAAI,KAAK;AACP,iBAAK,OAAO,GAAG;AACf;AAAA,UACF;AAGA,kBAAQ,UAAU,kBAAkB,MAAM;AAE1C,eAAK,KAAK,OAAO;AACjB,cAAI,IAAI;AACN,gBAAI;AAEJ,gBAAI,WAAW,SAAU,OAAO,UAAU;AACxC,sBAAQ,eAAe,SAAS,QAAQ;AACxC,sBAAQ,eAAe,YAAY,UAAU;AAE7C,qBAAO,GAAG,KAAK,MAAM,OAAO,QAAQ;AAAA,YACtC;AAEA,yBAAa,SAAS,KAAK,MAAM,IAAI;AAErC,oBAAQ,GAAG,SAAS,QAAQ;AAC5B,oBAAQ,GAAG,YAAY,UAAU;AAAA,UACnC;AAAA,QACF,EAAE,KAAK,IAAI,CAAC;AAEZ,eAAO;AAAA,MACT;AAEA,MAAAE,UAAS,UAAU,SAAS,SAAS,KAAK;AACxC,YAAI,CAAC,KAAK,OAAO;AACf,eAAK,QAAQ;AACb,eAAK,MAAM;AACX,eAAK,KAAK,SAAS,GAAG;AAAA,QACxB;AAAA,MACF;AAEA,MAAAA,UAAS,UAAU,WAAW,WAAY;AACxC,eAAO;AAAA,MACT;AAAA;AAAA;;;;;;;;AC/ea,cAAA,wBAAwC;QACnD,OAAO,KAAK;QACZ,WAAW,KAAK;;;;;;;;;;;;;ACJlB,UAAA,kBAAA;AACA,UAAA,cAAA,gBAAA,mBAAA;AACA,UAAA,0BAAA;AAQA,UAAM,4BAA4B,SAAC,OAAU;AAC3C,eAAA,gBAAA,kBAAkB,KAAK,KACtB,UAAU,QAAQ,OAAO,UAAU,YAAY,OAAO,MAAM,SAAS;MADtE;AAQF,eAAwB,kBACtB,OACA,WACA,eACA,gBAAsC;AAAtC,YAAA,mBAAA,QAAA;AAAA,2BAAiB,wBAAA;QAAqB;AAEhC,YAAA,KAAmB,gBAAA,aAAa,EAAE,OAAO,WAAW,cAAa,GAAI,IAAI,yBAAyB,GAAhGC,SAAK,GAAA,OAAE,QAAK,GAAA;AAEpB,YAAI,MAAM,SAAS,GAAG;AACpB,cAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,mBAAO,eAAe,UAAUA,MAAK;;AAGvC,cAAI,OAAO,cAAc,eAAe,CAAC,MAAM,QAAQ,SAAS,GAAG;AACjE,kBAAM,IAAI,MAAM,qEAAqE;;AAIvF,cAAM,UAAU,MAAM,OACpB,SAAC,MAAM,cAAc,OAAK;AACxB,iBAAK,KAAK,EAAE,OAAO,cAAc,WAAW,YAAY,UAAU,KAAK,IAAI,OAAS,CAAE;AACtF,mBAAO;UACT,GACA,CAAA,CAAE;AAGJ,iBAAO,eAAe,UAAU,OAAO;;AAGzC,YAAM,OAAO,OAAO,aAAa,cAAc,YAAA,UAAe;AAE9D,YAAM,OAAO,IAAI,KAAI;AAErB,aAAK,OAAO,cAAc,eAAe,UAAUA,MAAK,CAAC;AAEzD,YAAM,MAAmC,CAAA;AACzC,YAAI,IAAI;AACR,cAAM,QAAQ,SAAC,OAAK;AAClB,cAAI,EAAE,CAAC,IAAI;QACb,CAAC;AACD,aAAK,OAAO,OAAO,eAAe,UAAU,GAAG,CAAC;AAEhD,YAAI;AACJ,cAAM,QAAQ,SAAC,OAAO,MAAI;AACxB,eAAK,OAAO,KAAG,EAAE,GAAK,IAAW;QACnC,CAAC;AAED,eAAO;MACT;AAhDA,cAAA,UAAA;;;;;;;;;;ACNA,eAAgB,iBACd,mBACA,WACA,gBAA2C;AAE3C,eAAQ,kBAAwC,WAC3C,oBACA;UACC,UAAU;UACV;UACA;UACA,QAAQ;;MAEhB;AAbA,cAAA,mBAAA;AAeA,eAAgB,oBACd,gBACA,WACA,gBAA2C;AAE3C,eAAQ,eAAwC,QAC3C,iBACD;UACE,OAAO;UACP;UACA;UACA,QAAQ;;MAEhB;AAbA,cAAA,sBAAA;AAeA,eAAgB,sBACd,oBACA,gBAA2C;AAE3C,eAAQ,mBAA+C,YAClD,qBACD;UACE,WAAW;UACX;UACA,QAAQ;;MAEhB;AAXA,cAAA,wBAAA;AAaA,eAAgB,yBACd,cACAC,WACA,WACA,gBAA2C;AAE3C,eAAQ,aAA2C,WAC9C,eACA;UACC,KAAK;UACL,UAAUA;UACV;UACA;UACA,QAAQ;;MAEhB;AAfA,cAAA,2BAAA;AAiBA,eAAgB,4BACd,cACA,OACA,WACA,gBAA2C;AAE3C,eAAQ,aAA8C,QACjD,eACD;UACE,KAAK;UACL;UACA;UACA;UACA,QAAQ;;MAEhB;AAfA,cAAA,8BAAA;AAiBA,eAAgB,+BACd,cACA,WACA,gBAA2C;AAE3C,eAAQ,aAAiD,YACpD,eACD;UACE,KAAK;UACL;UACA;UACA,QAAQ;;MAEhB;AAbA,cAAA,iCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA,UAAA;;QAAA,SAAA,QAAA;AAAiC,oBAAAC,cAAA,MAAA;AAI/B,mBAAAA,aAAY,UAA2B,SAA8B;AAArE,gBAAA,QAAA;AACE,gBAAM,UAAaA,aAAY,eAAe,QAAQ,IAAC,OAAK,KAAK,UAAU;cACzE;cACA;aACD;AAED,oBAAA,OAAA,KAAA,MAAM,OAAO,KAAC;AAEd,mBAAO,eAAe,OAAMA,aAAY,SAAS;AAEjD,kBAAK,WAAW;AAChB,kBAAK,UAAU;AAGf,gBAAI,OAAO,MAAM,sBAAsB,YAAY;AACjD,oBAAM,kBAAkB,OAAMA,YAAW;;;UAE7C;AAEe,UAAAA,aAAA,iBAAf,SAA8B,UAAyB;AACrD,gBAAI;AACF,qBAAO,SAAS,OAAQ,CAAC,EAAE;qBACpB,GAAP;AACA,qBAAO,0BAAwB,SAAS,SAAM;;UAElD;AACF,iBAAAA;QAAA,EA9BiC,KAAK;;AAAzB,cAAA,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Bb,UAAA,UAAA;AAEA,UAAA,KAAA;AAEA,UAAM,kBAAkB;AACxB,UAAM,iBAAiB;AACvB,UAAM,OAAO;AACb,UAAM,OAAO;AACb,UAAM,YAAY;AAClB,UAAM,OAAO;AACb,UAAM,QAAQ;AACd,UAAM,WAAW;AAWjB,UAAA;;QAAA,WAAA;AAeE,mBAAAC,yBAAYC,OAAc,SAAa,IAAW;AAChD,iBAAK,QAAQA;AACb,iBAAK,WAAW;AAChB,iBAAK,MAAM;UACb;AAdA,iBAAA,eAAWD,yBAAA,WAAA,QAAI;iBAAf,WAAA;AACE,qBAAO,KAAK;YACd;;;;AACA,iBAAA,eAAWA,yBAAA,WAAA,MAAE;iBAAb,WAAA;AACE,qBAAO,KAAK;YACd;;;;AACA,iBAAA,eAAWA,yBAAA,WAAA,WAAO;iBAAlB,WAAA;AACE,qBAAO,KAAK;YACd;;;;AAQA,iBAAA,eAAWA,yBAAA,WAAA,QAAI;iBAAf,WAAA;AACE,kBAAM,SAAc,EAAE,MAAM,KAAK,KAAI;AACrC,kBAAI,KAAK,MAAM,QAAQ,KAAK,MAAM;AAAW,uBAAO,KAAK,KAAK;AAC9D,kBAAI,KAAK,WAAW,QAAQ,KAAK,WAAW;AAAW,uBAAO,UAAU,KAAK;AAC7E,qBAAO,KAAK,UAAU,MAAM;YAC9B;;;;AAEO,UAAAA,yBAAA,QAAP,SAAgB,MAAcE,IAAsB;AAC5C,gBAAA,KAAoE,KAAK,MAAM,IAAI,GAAjFD,QAAI,GAAA,MAAE,UAAO,GAAA,SAAE,KAAE,GAAA;AACzB,mBAAO,IAAID,yBAAwBC,OAAMC,GAAE,OAAO,GAAG,EAAE;UACzD;AACF,iBAAAF;QAAA,EAhCA;;AA8DA,UAAA;;QAAA,WAAA;AAME,mBAAAG,wBAAY,QAAmB,IAAyD;AAAxF,gBAAA,QAAA;gBAAiC,SAAM,GAAA,QAAE,iBAAc,GAAA,gBAAE,SAAM,GAAA,QAAE,SAAM,GAAA;AAF/D,iBAAA,cAA2B,EAAE,cAAc,OAAO,eAAe,GAAG,eAAe,CAAA,EAAE;AAG3F,iBAAK,SAAS;AAEd,mBAAO,SAAS,SAAO,GAAC;AAAA,qBAAA,UAAA,OAAA,QAAA,QAAA,WAAA;;;;;AACtB,2BAAK,YAAY,eAAe;AAChC,2BAAK,YAAY,gBAAgB,CAAA;AACjC,4BAAAC,MAAA,QAAO;AAAK,2BAAA;2BAAe;AAAA,+BAAA,CAAA,GAAA,CAAA;AAAS,6BAAA,CAAA,GAAM,OAAM,CAAE;;AAAd,2BAAA,GAAA,KAAA;;;AAAiB,2BAAA;;;AAArD,yBAAA,MAAAA,KAAA,CAAY,GAAA,MAAA,QAAA,CAAA,EAAA,CAAA,EAA+C,IAAI,CAAA;;;;;;;;;AAGjE,mBAAO,UAAU,SAAC,GAAC;AACjB,oBAAK,YAAY,eAAe;AAChC,oBAAK,YAAY,gBAAgB,CAAA;YACnC;AAEA,mBAAO,UAAU,SAAC,GAAC;AACjB,sBAAQ,MAAM,CAAC;YACjB;AAEA,mBAAO,YAAY,SAAC,GAAC;AACnB,kBAAI;AACF,oBAAM,UAAU,aAAa,EAAE,IAAI;AACnC,wBAAQ,QAAQ,MAAM;kBACpB,KAAK,gBAAgB;AACnB,wBAAI,MAAK,YAAY,cAAc;AACjC,8BAAQ,KAAK,0CAA0C;2BAClD;AACL,4BAAK,YAAY,eAAe;AAChC,0BAAI;AAAgB,uCAAe,QAAQ,OAAO;;AAEpD;;kBAEF,KAAK,MAAM;AACT,wBAAI;AAAQ,6BAAO,QAAQ,OAAO,EAAE,KAAK,SAAC,GAAC;AAAK,+BAAA,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI;sBAAxB,CAAyB;;AACpE,6BAAO,KAAK,KAAK,IAAI,EAAE,IAAI;AAChC;;kBAEF,KAAK,MAAM;AACT,wBAAI;AAAQ,6BAAO,QAAQ,OAAO;AAClC;;;AAIJ,oBAAI,CAAC,MAAK,YAAY,cAAc;AAElC;;AAGF,oBAAI,QAAQ,OAAO,UAAa,QAAQ,OAAO,QAAQ,CAAC,MAAK,YAAY,cAAc,QAAQ,EAAE,GAAG;AAElG;;AAEI,oBAAAA,MAAmC,MAAK,YAAY,cAAc,QAAQ,EAAE,GAA1E,QAAKA,IAAA,OAAE,YAASA,IAAA,WAAE,aAAUA,IAAA;AAEpC,wBAAQ,QAAQ,MAAM;kBACpB,KAAK,MAAM;AACT,wBAAI,CAAC,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,MAAM;AACnD,iCAAW,QAAQ,WAAW,KAAK,QAAQ,QAAQ,IAAI;;AAEzD,wBAAI,QAAQ,QAAQ,QAAQ;AAC1B,iCAAW,SACT,WAAW,MAAM,IAAI,QAAA,YAAWC,UAAAA,UAAA,CAAA,GAAM,QAAQ,OAAO,GAAA,EAAE,QAAQ,IAAG,CAAA,GAAI,EAAE,OAAO,UAAS,CAAE,CAAC;2BACxF;;AAEP;;kBAGF,KAAK,OAAO;AACV,+BAAW,SACT,WAAW,MACT,IAAI,QAAA,YAAY,EAAE,QAAQ,QAAQ,SAAS,QAAQ,IAAG,GAAI,EAAE,OAAO,UAAS,CAAE,CAAC;AAEnF;;kBAGF,KAAK,UAAU;AACb,+BAAW,YAAY,WAAW,SAAQ;AAC1C,2BAAO,MAAK,YAAY,cAAc,QAAQ,EAAE;AAChD;;;uBAGGC,IAAP;AAEA,wBAAQ,MAAMA,EAAC;AACf,uBAAO,MAAM,IAAI;;AAEnB,qBAAO,MAAM,MAAM,6BAA6B;YAClD;UACF;AAEQ,UAAAH,wBAAA,UAAA,gBAAR,SACE,OACA,eACA,WACA,YAAmC;AAJrC,gBAAA,QAAA;AAME,gBAAM,kBAAkB,KAAK,YAAY,iBAAiB,SAAQ;AAClE,iBAAK,YAAY,cAAc,cAAc,IAAI,EAAE,OAAO,WAAW,WAAU;AAC/E,iBAAK,OAAO,KAAK,UAAU,gBAAgB,EAAE,OAAO,eAAe,UAAS,CAAE,EAAE,IAAI;AACpF,mBAAO,WAAA;AACL,oBAAK,OAAO,KAAK,SAAS,cAAc,EAAE,IAAI;AAC9C,qBAAO,MAAK,YAAY,cAAc,cAAc;YACtD;UACF;AAEA,UAAAA,wBAAA,UAAA,aAAA,SACE,OACA,WAAa;AAFf,gBAAA,QAAA;AAIE,mBAAO,IAAI,QACT,SAAC,SAAS,QAAM;AACd,kBAAI;AACJ,oBAAK,aACH,OACA;gBACE,MAAM,SAAC,MAAS,YAAa;AAAK,yBAAC,SAAS,EAAE,MAAM,WAAU;gBAA5B;gBAClC,OAAO;gBACP,UAAU,WAAA;AAAM,yBAAA,QAAQ,MAAM;gBAAd;iBAElB,SAAS;YAEb,CAAC;UAEL;AAEA,UAAAA,wBAAA,UAAA,UAAA,SAAgCI,WAA2B,WAAa;AAAxE,gBAAA,QAAA;AACE,mBAAO,IAAI,QAAW,SAAC,SAAS,QAAM;AACpC,kBAAI;AACJ,oBAAK,UACHA,WACA;gBACE,MAAM,SAAC,MAAO;AAAK,yBAAC,SAAS;gBAAV;gBACnB,OAAO;gBACP,UAAU,WAAA;AAAM,yBAAA,QAAQ,MAAM;gBAAd;iBAElB,SAAS;YAEb,CAAC;UACH;AAEA,UAAAJ,wBAAA,UAAA,YAAA,SACEI,WACA,YACA,WAAa;AAEP,gBAAA,KAA2B,GAAA,uBAAuBA,SAAQ,GAAxD,QAAK,GAAA,OAAE,gBAAa,GAAA;AAC5B,mBAAO,KAAK,cAAc,OAAO,eAAe,WAAW,UAAU;UACvE;AAEA,UAAAJ,wBAAA,UAAA,eAAA,SACE,OACA,YACA,WAAa;AAEb,mBAAO,KAAK,cAAc,OAAO,QAAW,WAAW,UAAU;UACnE;AAEA,UAAAA,wBAAA,UAAA,OAAA,SAAK,SAAkB;AACrB,iBAAK,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI;UACrC;AAEA,UAAAA,wBAAA,UAAA,QAAA,WAAA;AACE,iBAAK,OAAO,MAAM,GAAI;UACxB;AAvKO,UAAAA,wBAAA,WAAmB;AAwK5B,iBAAAA;UAzKA;;AAAa,cAAA,yBAAA;AA6Kb,eAAS,aAAsB,MAAcD,IAAiC;AAAjC,YAAAA,OAAA,QAAA;AAAA,UAAAA,KAAA,SAA0B,GAAC;AAAK,mBAAA;UAAA;QAAC;AAC5E,YAAM,IAAI,wBAAwB,MAAS,MAAMA,EAAC;AAClD,eAAO;MACT;AAEA,eAAS,eAAkB,SAAW;AACpC,eAAO,IAAI,wBAAwB,iBAAiB,OAAO;MAC7D;AAEA,eAAS,KAAK,SAAY;AACxB,eAAO,IAAI,wBAAwB,MAAM,SAAS,MAAS;MAC7D;AACA,eAAS,KAAK,SAAY;AACxB,eAAO,IAAI,wBAAwB,MAAM,SAAS,MAAS;MAC7D;AAEA,eAAS,UAAU,IAAY,SAAyB;AACtD,eAAO,IAAI,wBAAwB,WAAW,SAAS,EAAE;MAC3D;AAEA,eAAS,SAAS,IAAU;AAC1B,eAAO,IAAI,wBAAwB,UAAU,QAAW,EAAE;MAC5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvRA,UAAA,gBAAA,aAAA,uBAAA;AAAA,UAAA,aAAA;AAIA,UAAA,WAAA;AACA,UAAA,YAAA;AACA,UAAA,sBAAA,gBAAA,2BAAA;AACA,UAAA,0BAAA;AACA,UAAA,cAAA;AAQA,UAAA,UAAA;AAsBE,aAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,eAnBA,QAAA;MAAW,EAAA,CAAA;AA+Bb,UAAM,iBAAiB,SAAC,SAAmC;AACzD,YAAI,WAAmC,CAAA;AACvC,YAAI,SAAS;AACX,cACG,OAAO,YAAY,eAAe,mBAAmB,WACrD,cAAc,WAAW,WAAW,mBAAmB,WAAW,SACnE;AACA,uBAAW,6BAA6B,OAAO;qBACtC,MAAM,QAAQ,OAAO,GAAG;AACjC,oBAAQ,QAAQ,SAAC,IAAa;kBAAZ,OAAI,GAAA,CAAA,GAAE,QAAK,GAAA,CAAA;AAC3B,uBAAS,IAAI,IAAI;YACnB,CAAC;iBACI;AACL,uBAAW;;;AAIf,eAAO;MACT;AAQA,UAAM,gBAAgB,SAAC,KAAW;AAAa,eAAA,IAAI,QAAQ,uBAAuB,GAAG,EAAE,KAAI;MAA5C;AAyB/C,UAAM,sBAAsB,SAAI,IAKN;YAJxB,QAAK,GAAA,OACL,YAAS,GAAA,WACT,gBAAa,GAAA,eACb,iBAAc,GAAA;AAEd,YAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,SAAmB,CAAC,WAAS,mBAAmB,cAAc,KAAK,CAAC,CAAG;AAE7E,cAAI,WAAW;AACb,mBAAO,KAAK,eAAa,mBAAmB,eAAe,UAAU,SAAS,CAAC,CAAG;;AAGpF,cAAI,eAAe;AACjB,mBAAO,KAAK,mBAAiB,mBAAmB,aAAa,CAAG;;AAGlE,iBAAO,OAAO,KAAK,GAAG;;AAGxB,YAAI,OAAO,cAAc,eAAe,CAAC,MAAM,QAAQ,SAAS,GAAG;AACjE,gBAAM,IAAI,MAAM,8DAA8D;;AAIhF,YAAM,UAAU,MAAM,OACpB,SAAC,MAAM,cAAc,OAAK;AACxB,eAAK,KAAK;YACR,OAAO,cAAc,YAAY;YACjC,WAAW,YAAY,eAAe,UAAU,UAAU,KAAK,CAAC,IAAI;WACrE;AACD,iBAAO;QACT,GACA,CAAA,CAAE;AAGJ,eAAO,WAAS,mBAAmB,eAAe,UAAU,OAAO,CAAC;MACtE;AAKA,UAAM,OAAO,SAAsB,IAkBlC;YAjBC,MAAG,GAAA,KACH,QAAK,GAAA,OACL,YAAS,GAAA,WACT,gBAAa,GAAA,eACb,UAAO,GAAA,SACPM,SAAK,GAAA,OACL,eAAY,GAAA,cACZ,aAAU,GAAA;;;;;;AAWJ,uBAAO,oBAAA,QAAkB,OAAO,WAAW,eAAe,aAAa,cAAc;AAEvF,0BAAOC,UAAA,EACT,QAAQ,QACR,SAAOA,UAAAA,UAAA,CAAA,GACD,OAAO,SAAS,WAAW,EAAE,gBAAgB,mBAAkB,IAAK,CAAA,CAAG,GACxE,OAAO,GAEZ,KAAI,GACD,YAAY;qBAEb;AAAA,yBAAA,CAAA,GAAA,CAAA;AACQ,uBAAA,CAAA,GAAM,QAAQ,QAAQ,WAAW,OAAO,CAAC,CAAC;;AAApD,0BAAU,GAAA,KAAA;;;AAEL,uBAAA,CAAA,GAAMD,OAAM,KAAK,OAAO,CAAC;;AAAhC,uBAAA,CAAA,GAAO,GAAA,KAAA,CAAyB;;;;;AAMlC,UAAM,MAAM,SAAsB,IAkBjC;YAjBC,MAAG,GAAA,KACH,QAAK,GAAA,OACL,YAAS,GAAA,WACT,gBAAa,GAAA,eACb,UAAO,GAAA,SACPA,SAAK,GAAA,OACL,eAAY,GAAA,cACZ,aAAU,GAAA;;;;;;AAWJ,8BAAc,oBAAuB;kBACzC;kBACA;kBACA;kBACA,gBAAgB,aAAa;iBACH;AAExB,0BAAOC,UAAA,EACT,QAAQ,OACR,QAAO,GACJ,YAAY;qBAEb;AAAA,yBAAA,CAAA,GAAA,CAAA;AACQ,uBAAA,CAAA,GAAM,QAAQ,QAAQ,WAAW,OAAO,CAAC,CAAC;;AAApD,0BAAU,GAAA,KAAA;;;AAEL,uBAAA,CAAA,GAAMD,OAAS,MAAG,MAAI,aAAe,OAAO,CAAC;;AAApD,uBAAA,CAAA,GAAO,GAAA,KAAA,CAA6C;;;;;AAMtD,UAAAE;;QAAA,WAAA;AACE,mBAAAA,eAAoB,KAA8B,SAAgC;AAAhC,gBAAA,YAAA,QAAA;AAAA,wBAAA,CAAA;YAAgC;AAA9D,iBAAA,MAAA;AAA8B,iBAAA,UAAA;UAAmC;AAW/E,UAAAA,eAAA,UAAA,aAAN,SACE,gBACA,WACA,gBAA2C;;;;AAErC,oCAAoB,YAAA,oBAAuB,gBAAgB,WAAW,cAAc;AAEtF,qBAOA,KAAK,SANP,UAAO,GAAA,SACP,KAAA,GAAA,OAAAF,SAAK,OAAA,SAAG,cAAA,UAAU,IAClB,KAAA,GAAA,QAAA,SAAM,OAAA,SAAG,SAAM,IACf,oBAAiB,GAAA,mBACjB,qBAAkB,GAAA,oBACf,eAAY,OAAA,IANb,CAAA,WAAA,SAAA,UAAA,qBAAA,oBAAA,CAOH;AACK,sBAAQ,KAAI;AAClB,oBAAI,kBAAkB,WAAW,QAAW;AAC1C,+BAAa,SAAS,kBAAkB;;AAGlC,gCAAkB,uBAAuB,kBAAkB,KAAK,EAAC;AAEzE,uBAAA,CAAA,GAAO,YAAkB;kBACvB;kBACA,OAAO,kBAAkB;kBACzB,WAAW,kBAAkB;kBAC7B,SAAOC,UAAAA,UAAA,CAAA,GACF,eAAe,eAAe,OAAO,CAAC,CAAC,GACvC,eAAe,kBAAkB,cAAc,CAAC;kBAErD;kBACA,OAAKD;kBACL;kBACA;kBACA,YAAY;iBACb,EACE,KAAK,SAAC,UAAQ;AACb,sBAAI,oBAAoB;AACtB,uCAAmB,QAAQ;;AAE7B,yBAAO;gBACT,CAAC,EACA,MAAM,SAAC,OAAK;AACX,sBAAI,oBAAoB;AACtB,uCAAmB,KAAK;;AAE1B,wBAAM;gBACR,CAAC,CAAC;;;;AAeN,UAAAE,eAAA,UAAA,UAAA,SACE,mBAAgF;AAChF,gBAAA,6BAAA,CAAA;qBAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAI+D;AAJ/D,yCAAA,KAAA,CAAA,IAAA,UAAA,EAAA;;AAMO,gBAAA,YAA6B,2BAA0B,CAAA,GAA5C,iBAAkB,2BAA0B,CAAA;AAC9D,gBAAM,iBAAiB,YAAA,iBAAoB,mBAAmB,WAAW,cAAc;AAEvF,gBAAI,KAOA,KAAK,SANP,UAAO,GAAA,SACP,KAAA,GAAA,OAAAF,SAAK,OAAA,SAAG,cAAA,UAAU,IAClB,KAAA,GAAA,QAAA,SAAM,OAAA,SAAG,SAAM,IACf,oBAAiB,GAAA,mBACjB,qBAAkB,GAAA,oBACf,eAAY,OAAA,IANb,CAAA,WAAA,SAAA,UAAA,qBAAA,oBAAA,CAOH;AACK,gBAAA,MAAQ,KAAI;AAClB,gBAAI,eAAe,WAAW,QAAW;AACvC,2BAAa,SAAS,eAAe;;AAGjC,gBAAA,KAA2B,uBAAuB,eAAe,QAAQ,GAAvE,QAAK,GAAA,OAAE,gBAAa,GAAA;AAE5B,mBAAO,YAAkB;cACvB;cACA;cACA,WAAW,eAAe;cAC1B,SAAOC,UAAAA,UAAA,CAAA,GACF,eAAe,eAAe,OAAO,CAAC,CAAC,GACvC,eAAe,eAAe,cAAc,CAAC;cAElD;cACA,OAAKD;cACL;cACA;cACA,YAAY;aACb,EACE,KAAK,SAAC,UAAQ;AACb,kBAAI,oBAAoB;AACtB,mCAAmB,QAAQ;;AAE7B,qBAAO,SAAS;YAClB,CAAC,EACA,MAAM,SAAC,OAAK;AACX,kBAAI,oBAAoB;AACtB,mCAAmB,KAAK;;AAE1B,oBAAM;YACR,CAAC;UACL;AAUA,UAAAE,eAAA,UAAA,gBAAA,SACE,oBACA,gBAA2C;AAE3C,gBAAM,sBAAsB,YAAA,sBAAyB,oBAAoB,cAAc;AAEvF,gBAAI,KAOA,KAAK,SANP,UAAO,GAAA,SACP,KAAA,GAAA,OAAAF,SAAK,OAAA,SAAG,cAAA,UAAU,IAClB,KAAA,GAAA,QAAA,SAAM,OAAA,SAAG,SAAM,IACf,oBAAiB,GAAA,mBACjB,qBAAkB,GAAA,oBACf,eAAY,OAAA,IANb,CAAA,WAAA,SAAA,UAAA,qBAAA,oBAAA,CAOH;AACK,gBAAA,MAAQ,KAAI;AAClB,gBAAI,oBAAoB,WAAW,QAAW;AAC5C,2BAAa,SAAS,oBAAoB;;AAG5C,gBAAM,UAAU,oBAAoB,UAAU,IAC5C,SAACG,KAAY;kBAAVC,YAAQD,IAAA;AAAO,qBAAA,uBAAuBC,SAAQ,EAAE;YAAjC,CAAsC;AAE1D,gBAAM,YAAY,oBAAoB,UAAU,IAAI,SAACD,KAAa;kBAAXE,aAASF,IAAA;AAAO,qBAAAE;YAAA,CAAS;AAEhF,mBAAO,YAAkC;cACvC;cACA,OAAO;cACP;cACA,SAAOJ,UAAAA,UAAA,CAAA,GACF,eAAe,eAAe,OAAO,CAAC,CAAC,GACvC,eAAe,oBAAoB,cAAc,CAAC;cAEvD,eAAe;cACf,OAAKD;cACL;cACA;cACA,YAAY;aACb,EACE,KAAK,SAAC,UAAQ;AACb,kBAAI,oBAAoB;AACtB,mCAAmB,QAAQ;;AAE7B,qBAAO,SAAS;YAClB,CAAC,EACA,MAAM,SAAC,OAAK;AACX,kBAAI,oBAAoB;AACtB,mCAAmB,KAAK;;AAE1B,oBAAM;YACR,CAAC;UACL;AAEA,UAAAE,eAAA,UAAA,aAAA,SAAW,SAAmC;AAC5C,iBAAK,QAAQ,UAAU;AACvB,mBAAO;UACT;AAKA,UAAAA,eAAA,UAAA,YAAA,SAAU,KAAa,OAAa;;AAC1B,gBAAA,UAAY,KAAK,QAAO;AAEhC,gBAAI,SAAS;AAGX,sBAAQ,GAAG,IAAI;mBACV;AACL,mBAAK,QAAQ,WAAO,KAAA,CAAA,GAAK,GAAC,GAAG,IAAG,OAAK;;AAGvC,mBAAO;UACT;AAKA,UAAAA,eAAA,UAAA,cAAA,SAAY,OAAa;AACvB,iBAAK,MAAM;AACX,mBAAO;UACT;AACF,iBAAAA;QAAA,EAzNA;;AAAa,cAAA,gBAAAA;AA2Nb,eAAe,YAAoC,IAoBlD;YAnBC,MAAG,GAAA,KACH,QAAK,GAAA,OACL,YAAS,GAAA,WACT,UAAO,GAAA,SACP,gBAAa,GAAA,eACbF,SAAK,GAAA,OACL,KAAA,GAAA,QAAA,SAAM,OAAA,SAAG,SAAM,IACf,eAAY,GAAA,cACZ,aAAU,GAAA;;;;;;AAYJ,0BAAU,OAAO,YAAW,MAAO,SAAS,OAAO;AACnD,mCAAmB,MAAM,QAAQ,KAAK;AAE3B,uBAAA,CAAA,GAAM,QAAQ;kBAC7B;kBACA;kBACA;kBACA;kBACA;kBACA,OAAKA;kBACL;kBACA;iBACD,CAAC;;AATI,2BAAW,GAAA,KAAA;AAUF,uBAAA,CAAA,GAAM,UAAU,UAAU,aAAa,cAAc,CAAC;;AAA/D,yBAAS,GAAA,KAAA;AAET,2CACJ,oBAAoB,MAAM,QAAQ,MAAM,IAAI,CAAC,OAAO,KAAK,SAACG,KAAQ;sBAANG,QAAIH,IAAA;AAAO,yBAAA,CAACG;gBAAD,CAAK,IAAI,CAAC,CAAC,OAAO;AAErF,gDACJ,CAAC,OAAO,UAAU,aAAa,gBAAgB,SAAS,aAAa,gBAAgB;AAEvF,oBAAI,SAAS,MAAM,iCAAiC,0BAA0B;AACpE,8BAAoB,SAAQ,SAAnB,WAAW,SAAQ;AAE5B,2BAAoB,OAAM,QAAf,OAAI,OAAK,QAAtB,CAAA,QAAA,CAAmB;AACnB,yBAAO,aAAa,gBAAgB,WAAW,OAAO;AAE5D,yBAAA,CAAA,GAAAL,UAAAA,UAAA,CAAA,GACM,mBAAmB,EAAE,KAAI,IAAK,IAAK,GAAA,EACvC,SAAO,WACP,QAAM,SAAA,CAAA,CAAA;uBAEH;AACC,gCAAc,OAAO,WAAW,WAAW,EAAE,OAAO,OAAM,IAAK;AACrE,wBAAM,IAAI,QAAA,YAAWA,UAAAA,UAAA,CAAA,GACd,WAAW,GAAA,EAAE,QAAQ,SAAS,QAAQ,SAAS,SAAS,QAAO,CAAA,GACpE,EAAE,OAAO,UAAS,CAAE;;;;;;;;;;AAiB1B,eAAsB,WACpB,cACA,OACA,WACA,gBAA2C;;;;AAErC,6BAAiB,YAAA,4BAA+B,cAAc,OAAO,WAAW,cAAc;AAC9F,qBAAS,IAAIC,eAAc,eAAe,GAAG;AACnD,mBAAA,CAAA,GAAO,OAAO,WAAUD,UAAA,CAAA,GACnB,cAAc,CAAA,CACjB;;;;AAVJ,cAAA,aAAA;AAyDA,eAAsB,QACpB,cACAG,WAAoD;AACpD,YAAA,6BAAA,CAAA;iBAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAI+D;AAJ/D,qCAAA,KAAA,CAAA,IAAA,UAAA,EAAA;;;;;AAMO,wBAA6B,2BAA0B,CAAA,GAA5C,iBAAkB,2BAA0B,CAAA;AACxD,6BAAiB,YAAA,yBAA4B,cAAcA,WAAU,WAAW,cAAc;AAC9F,qBAAS,IAAIF,eAAc,eAAe,GAAG;AACnD,mBAAA,CAAA,GAAO,OAAO,QAAOD,UAAA,CAAA,GAChB,cAAc,CAAA,CACjB;;;;AAdJ,cAAA,UAAA;AA2DA,eAAsB,cACpB,cACA,WACA,gBAA2C;;;;AAErC,6BAAiB,YAAA,+BAAkC,cAAc,WAAW,cAAc;AAC1F,qBAAS,IAAIC,eAAc,eAAe,GAAG;AACnD,mBAAA,CAAA,GAAO,OAAO,cAAaD,UAAA,CAAA,GAAY,cAAc,CAAA,CAAG;;;;AAP1D,cAAA,gBAAA;AAUA,cAAA,UAAe;AAKf,eAAe,UAAU,UAAwB,gBAAsC;AAAtC,YAAA,mBAAA,QAAA;AAAA,2BAAiB,wBAAA;QAAqB;;;;;;AAGrF,yBAAS,QAAQ,QAAQ,SAAC,OAAO,KAAG;AAClC,sBAAI,IAAI,YAAW,MAAO,gBAAgB;AACxC,kCAAc;;gBAElB,CAAC;sBAEG,eAAe,YAAY,YAAW,EAAG,WAAW,kBAAkB;AAAtE,yBAAA,CAAA,GAAA,CAAA;AACK,sBAAA,KAAA,gBAAe;AAAM,uBAAA,CAAA,GAAM,SAAS,KAAI,CAAE;;AAAjD,uBAAA,CAAA,GAAO,GAAA,MAAA,IAAA,CAAqB,GAAA,KAAA,CAAqB,CAAA,CAAC;;AAElD,uBAAA,CAAA,GAAO,SAAS,KAAI,CAAE;;;;;AAO1B,eAAS,qBAAqBG,WAAsB;;AAClD,YAAI,gBAAgB;AAEpB,YAAM,uBAAuBA,UAAS,YAAY,OAChD,SAAC,YAAU;AAAK,iBAAA,WAAW,SAAS;QAApB,CAAyC;AAG3D,YAAI,qBAAqB,WAAW,GAAG;AACrC,2BAAgB,KAAA,qBAAqB,CAAC,EAAE,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE;;AAGhD,eAAO;MACT;AAEA,eAAgB,uBAAuBA,WAAyB;AAC9D,YAAI,OAAOA,cAAa,UAAU;AAChC,cAAI,kBAAgB;AAEpB,cAAI;AACF,gBAAM,iBAAiB,SAAA,MAAMA,SAAQ;AACrC,8BAAgB,qBAAqB,cAAc;mBAC5C,KAAP;;AAIF,iBAAO,EAAE,OAAOA,WAAU,eAAa,gBAAA;;AAGzC,YAAM,gBAAgB,qBAAqBA,SAAQ;AAEnD,eAAO,EAAE,OAAO,UAAA,MAAMA,SAAQ,GAAG,cAAa;MAChD;AAjBA,cAAA,yBAAA;AAmBA,eAAS,eAAkB,OAAuB;AAChD,eAAO,OAAO,UAAU,aAAc,MAAiB,IAAK;MAC9D;AAeA,eAAgBG,KAAI,QAA4B;AAAE,YAAA,YAAA,CAAA;iBAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAmB;AAAnB,oBAAA,KAAA,CAAA,IAAA,UAAA,EAAA;;AAChD,eAAO,OAAO,OACZ,SAAC,aAAa,OAAO,OAAK;AAAK,iBAAA,KAAG,cAAc,SAAQ,SAAS,YAAY,UAAU,KAAK,IAAI;QAAjE,GAC/B,EAAE;MAEN;AALA,cAAA,MAAAA;AAUA,eAAS,6BAA6B,SAAgC;AACpE,YAAM,IAAS,CAAA;AACf,gBAAQ,QAAQ,SAAC,GAAG,GAAC;AACnB,YAAE,CAAC,IAAI;QACT,CAAC;AACD,eAAO;MACT;AAEA,UAAA,eAAA;AAAS,aAAA,eAAA,SAAA,0BAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,eAAA,aAAA;MAAsB,EAAA,CAAA;;;;;AC7tB/B;AAAA;AAAA;AAEA,UAAI;AAEJ,UAAM,oBAAqB,OAAO,gBAAgB,cAAc,IAAI,YAAY,SAAS,EAAE,WAAW,MAAM,OAAO,KAAK,CAAC,IAAI,EAAE,QAAQ,MAAM;AAAE,cAAM,MAAM,2BAA2B;AAAA,MAAE,EAAE;AAE1L,UAAI,OAAO,gBAAgB,aAAa;AAAE,0BAAkB,OAAO;AAAA,MAAG;AACtE,UAAI,qBAAqB;AAEzB,eAAS,kBAAkB;AACvB,YAAI,uBAAuB,QAAQ,mBAAmB,eAAe,GAAG;AACpE,+BAAqB,IAAI,WAAW,OAAO,OAAO,MAAM;AAAA,QAC5D;AACA,eAAO;AAAA,MACX;AAEA,eAAS,mBAAmB,KAAK,KAAK;AAClC,cAAM,QAAQ;AACd,eAAO,kBAAkB,OAAO,gBAAgB,EAAE,SAAS,KAAK,MAAM,GAAG,CAAC;AAAA,MAC9E;AAEA,eAAS,aAAa,UAAU,OAAO;AACnC,YAAI,EAAE,oBAAoB,QAAQ;AAC9B,gBAAM,IAAI,MAAM,wBAAwB,MAAM,MAAM;AAAA,QACxD;AACA,eAAO,SAAS;AAAA,MACpB;AAQA,eAASC,KAAI,KAAK,KAAK,KAAK;AACxB,cAAMC,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,GAAG,KAAK,KAAK,KAAK;AACvB,cAAMA,OAAM,OAAO,GAAG,KAAK,KAAK,GAAG;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,GAAG,KAAK,KAAK,KAAK;AACvB,cAAMA,OAAM,OAAO,GAAG,KAAK,KAAK,GAAG;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,GAAG,KAAK,KAAK,KAAK;AACvB,cAAMA,OAAM,OAAO,GAAG,KAAK,KAAK,GAAG;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,MAAM,KAAK,KAAK;AACrB,cAAMA,OAAM,OAAO,MAAM,KAAK,GAAG;AACjC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,IAAI,KAAK,KAAK;AACnB,cAAMA,OAAM,OAAO,IAAI,KAAK,GAAG;AAC/B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,GAAG,KAAK,KAAK,KAAK;AACvB,cAAMA,OAAM,OAAO,GAAG,KAAK,KAAK,GAAG;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,SAAS,SAAS,SAAS;AAC1C,cAAMA,OAAM,OAAO,KAAK,KAAK,SAAS,SAAS,OAAO;AACtD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAASA,KAAI,OAAO;AAChB,cAAMA,OAAM,OAAO,IAAI,KAAK;AAC5B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,MAAM,KAAK;AACrB,cAAMA,OAAM,OAAO,KAAK,MAAM,GAAG;AACjC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAKC,QAAO;AACjB,cAAMD,OAAM,OAAO,KAAKC,MAAK;AAC7B,eAAO,YAAY,OAAOD,IAAG;AAAA,MACjC;AAQA,eAAS,IAAI,UAAU,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,UAAU,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,UAAU,UAAU,KAAK;AAClC,cAAMA,OAAM,OAAO,IAAI,UAAU,UAAU,GAAG;AAC9C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,IAAI,QAAQ,UAAU,UAAU,KAAK;AAC1C,cAAMA,OAAM,OAAO,IAAI,QAAQ,UAAU,UAAU,GAAG;AACtD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,KAAK,QAAQ;AACvB,cAAMA,OAAM,OAAO,KAAK,KAAK,MAAM;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,KAAK;AACf,cAAMA,OAAM,OAAO,KAAK,GAAG;AAC3B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,QAAQ,aAAa;AAC/B,cAAMA,OAAM,OAAO,KAAK,QAAQ,WAAW;AAC3C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,eAAe,WAAW,eAAe,SAAS;AAC5D,cAAMA,OAAM,OAAO,KAAK,eAAe,WAAW,eAAe,OAAO;AACxE,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,IAAI,UAAU,kBAAkB,QAAQ,KAAK;AAClD,cAAMA,OAAM,OAAO,IAAI,UAAU,kBAAkB,QAAQ,GAAG;AAC9D,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,UAAU,kBAAkB;AACtC,cAAMA,OAAM,OAAO,KAAK,UAAU,gBAAgB;AAClD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,KAAK,kBAAkB;AACjC,cAAMA,OAAM,OAAO,KAAK,KAAK,gBAAgB;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,GAAG,KAAK;AACb,cAAMA,OAAM,OAAO,GAAG,GAAG;AACzB,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,kBAAkB,QAAQ,KAAK;AACxC,cAAMA,OAAM,OAAO,IAAI,kBAAkB,QAAQ,GAAG;AACpD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,IAAI,GAAG,GAAG,GAAG,GAAG;AACrB,cAAMA,OAAM,OAAO,IAAI,GAAG,GAAG,GAAG,CAAC;AACjC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,GAAG,GAAG,MAAM,KAAK;AAC3B,cAAMA,OAAM,OAAO,KAAK,GAAG,GAAG,MAAM,GAAG;AACvC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,QAAQ,aAAa;AAC/B,cAAMA,OAAM,OAAO,KAAK,QAAQ,WAAW;AAC3C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,OAAO;AACjB,cAAMA,OAAM,OAAO,KAAK,KAAK;AAC7B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,UAAU,QAAQ,MAAM;AAClC,cAAMA,OAAM,OAAO,KAAK,UAAU,QAAQ,IAAI;AAC9C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,QAAQ,UAAU;AAChC,cAAMA,OAAM,OAAO,IAAI,KAAK,QAAQ,QAAQ;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,UAAU,QAAQ,UAAU,MAAM;AAC5C,cAAMA,OAAM,OAAO,KAAK,UAAU,QAAQ,UAAU,IAAI;AACxD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,UAAU,QAAQ,OAAO;AAClC,cAAMA,OAAM,OAAO,IAAI,UAAU,QAAQ,KAAK;AAC9C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,UAAU,QAAQ,UAAU,MAAM;AAC5C,cAAMA,OAAM,OAAO,KAAK,UAAU,QAAQ,UAAU,IAAI;AACxD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAASE,IAAG,kBAAkB,QAAQ,eAAe;AACjD,cAAMF,OAAM,OAAO,GAAG,kBAAkB,QAAQ,aAAa;AAC7D,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,IAAI,kBAAkB,cAAc,QAAQ,eAAe;AAChE,cAAMA,OAAM,OAAO,IAAI,kBAAkB,cAAc,QAAQ,aAAa;AAC5E,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,UAAU,UAAU,eAAe;AAC7C,cAAMA,OAAM,OAAO,KAAK,UAAU,UAAU,aAAa;AACzD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,UAAU,UAAU,eAAe;AAC7C,cAAMA,OAAM,OAAO,KAAK,UAAU,UAAU,aAAa;AACzD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,cAAc,UAAU,eAAe;AACjD,cAAMA,OAAM,OAAO,KAAK,cAAc,UAAU,aAAa;AAC7D,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,UAAU,UAAU,KAAK;AACnC,cAAMA,OAAM,OAAO,KAAK,UAAU,UAAU,GAAG;AAC/C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,UAAU,UAAU,KAAK;AACnC,cAAMA,OAAM,OAAO,KAAK,UAAU,UAAU,GAAG;AAC/C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,KAAK,QAAQ;AACvB,cAAMA,OAAM,OAAO,KAAK,KAAK,MAAM;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAMA,eAAS,OAAO;AACZ,cAAMA,OAAM,OAAO,KAAK;AACxB,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,OAAO;AACjB,cAAMA,OAAM,OAAO,KAAK,KAAK;AAC7B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,eAAe,kBAAkB;AAC/C,cAAMA,OAAM,OAAO,IAAI,KAAK,eAAe,gBAAgB;AAC3D,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,IAAI,YAAY;AACrB,cAAMA,OAAM,OAAO,IAAI,UAAU;AACjC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,YAAY,KAAK,KAAK;AAC/B,cAAMA,OAAM,OAAO,IAAI,YAAY,KAAK,GAAG;AAC3C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,IAAI,gBAAgB,WAAW,UAAU,OAAO;AACrD,cAAMA,OAAM,OAAO,IAAI,gBAAgB,WAAW,UAAU,KAAK;AACjE,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAASG,MAAK,KAAK,KAAK,KAAK;AACzB,cAAMH,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,IAAI,KAAK,KAAK,KAAK;AACxB,cAAMA,OAAM,OAAO,IAAI,KAAK,KAAK,GAAG;AACpC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,KAAK,KAAK,KAAK;AACzB,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,GAAG;AACrC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,UAAU,UAAU,YAAY;AAC1C,cAAMA,OAAM,OAAO,KAAK,UAAU,UAAU,UAAU;AACtD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,GAAG,KAAK,MAAM,QAAQ;AAC3B,cAAMA,OAAM,OAAO,GAAG,KAAK,MAAM,MAAM;AACvC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAASI,IAAG,KAAK,MAAM,QAAQ;AAC3B,cAAMJ,OAAM,OAAO,GAAG,KAAK,MAAM,MAAM;AACvC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,GAAG,MAAM,OAAO,QAAQ;AAC7B,cAAMA,OAAM,OAAO,GAAG,MAAM,OAAO,MAAM;AACzC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,GAAG,MAAM,OAAO,QAAQ;AAC7B,cAAMA,OAAM,OAAO,GAAG,MAAM,OAAO,MAAM;AACzC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,UAAU,UAAU,KAAK;AACnC,cAAMA,OAAM,OAAO,KAAK,UAAU,UAAU,GAAG;AAC/C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAASK,KAAI,KAAK,KAAK,UAAU;AAC7B,cAAML,OAAM,OAAO,IAAI,KAAK,KAAK,QAAQ;AACzC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,MAAM,OAAO;AACvB,cAAMA,OAAM,OAAO,KAAK,MAAM,KAAK;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,GAAG,KAAK,UAAU;AACvB,cAAMA,OAAM,OAAO,GAAG,KAAK,QAAQ;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,KAAK,KAAK;AACpB,cAAMA,OAAM,OAAO,KAAK,KAAK,GAAG;AAChC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,SAAS,YAAY;AAC/B,cAAMA,OAAM,OAAO,KAAK,SAAS,UAAU;AAC3C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,SAAS,OAAO;AAC1B,cAAMA,OAAM,OAAO,KAAK,SAAS,KAAK;AACtC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,KAAK,SAAS,OAAO;AAC1B,cAAMA,OAAM,OAAO,KAAK,SAAS,KAAK;AACtC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,SAAS,SAAS,OAAO;AACnC,cAAMA,OAAM,OAAO,KAAK,SAAS,SAAS,KAAK;AAC/C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,KAAK,SAAS,SAAS,OAAO;AACnC,cAAMA,OAAM,OAAO,KAAK,SAAS,SAAS,KAAK;AAC/C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,UAAU,UAAU,SAAS,OAAO;AAC9C,cAAMA,OAAM,OAAO,KAAK,UAAU,UAAU,SAAS,KAAK;AAC1D,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,UAAU,UAAU,SAAS,OAAO;AAC9C,cAAMA,OAAM,OAAO,KAAK,UAAU,UAAU,SAAS,KAAK;AAC1D,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,GAAG,YAAY;AACpB,cAAMA,OAAM,OAAO,GAAG,UAAU;AAChC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,QAAQ;AAClB,cAAMA,OAAM,OAAO,KAAK,MAAM;AAC9B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,QAAQ;AAClB,cAAMA,OAAM,OAAO,KAAK,MAAM;AAC9B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,IAAI,QAAQ;AACjB,cAAMA,OAAM,OAAO,IAAI,MAAM;AAC7B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,IAAI,QAAQ;AACjB,cAAMA,OAAM,OAAO,IAAI,MAAM;AAC7B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,SAAS;AACnB,cAAMA,OAAM,OAAO,KAAK,OAAO;AAC/B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,SAAS;AACnB,cAAMA,OAAM,OAAO,KAAK,OAAO;AAC/B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,SAAS;AACnB,cAAMA,OAAM,OAAO,KAAK,OAAO;AAC/B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAOA,eAAS,KAAK,SAAS;AACnB,cAAMA,OAAM,OAAO,KAAK,OAAO;AAC/B,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,cAAMA,OAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,SAAS,SAAS,SAAS;AAC1C,cAAMA,OAAM,OAAO,KAAK,KAAK,SAAS,SAAS,OAAO;AACtD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,SAAS,SAAS,SAAS;AAC1C,cAAMA,OAAM,OAAO,KAAK,KAAK,SAAS,SAAS,OAAO;AACtD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,SAAS,SAAS,QAAQ;AACzC,cAAMA,OAAM,OAAO,KAAK,KAAK,SAAS,SAAS,MAAM;AACrD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,SAAS,SAAS,QAAQ;AACzC,cAAMA,OAAM,OAAO,KAAK,KAAK,SAAS,SAAS,MAAM;AACrD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,SAAS,SAAS,QAAQ;AACzC,cAAMA,OAAM,OAAO,KAAK,KAAK,SAAS,SAAS,MAAM;AACrD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,KAAK,SAAS,SAAS,QAAQ;AACzC,cAAMA,OAAM,OAAO,KAAK,KAAK,SAAS,SAAS,MAAM;AACrD,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,KAAK,GAAG,GAAG,GAAG,GAAG;AACtB,cAAMA,OAAM,OAAO,KAAK,GAAG,GAAG,GAAG,CAAC;AAClC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAQA,eAAS,QAAQ,IAAI,MAAM;AACvB,cAAMA,OAAM,OAAO,QAAQ,IAAI,IAAI;AACnC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AASA,eAAS,SAAS,IAAI,IAAI,MAAM;AAC5B,cAAMA,OAAM,OAAO,SAAS,IAAI,IAAI,IAAI;AACxC,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,UAAU,IAAI,IAAI,IAAI,MAAM;AACjC,qBAAa,MAAM,WAAW;AAC9B,YAAI,OAAO,KAAK,mBAAmB;AACnC,cAAMA,OAAM,OAAO,UAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,UAAU,IAAI,IAAI,IAAI,MAAM;AACjC,qBAAa,MAAM,WAAW;AAC9B,YAAI,OAAO,KAAK,mBAAmB;AACnC,cAAMA,OAAM,OAAO,UAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,UAAU,IAAI,IAAI,IAAI,MAAM;AACjC,qBAAa,MAAM,QAAQ;AAC3B,YAAI,OAAO,KAAK,mBAAmB;AACnC,cAAMA,OAAM,OAAO,UAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,UAAU,IAAI,IAAI,IAAI,MAAM;AACjC,qBAAa,MAAM,QAAQ;AAC3B,YAAI,OAAO,KAAK,mBAAmB;AACnC,cAAMA,OAAM,OAAO,UAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,UAAU,IAAI,IAAI,IAAI,MAAM;AACjC,qBAAa,MAAM,OAAO;AAC1B,YAAI,OAAO,KAAK,mBAAmB;AACnC,cAAMA,OAAM,OAAO,UAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,UAAU,IAAI,IAAI,IAAI,MAAM;AACjC,qBAAa,MAAM,OAAO;AAC1B,YAAI,OAAO,KAAK,mBAAmB;AACnC,cAAMA,OAAM,OAAO,UAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,UAAU,IAAI,IAAI,IAAI,MAAM;AACjC,qBAAa,MAAM,OAAO;AAC1B,YAAI,OAAO,KAAK,mBAAmB;AACnC,cAAMA,OAAM,OAAO,UAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAUA,eAAS,UAAU,IAAI,IAAI,IAAI,MAAM;AACjC,qBAAa,MAAM,OAAO;AAC1B,YAAI,OAAO,KAAK,mBAAmB;AACnC,cAAMA,OAAM,OAAO,UAAU,IAAI,IAAI,IAAI,IAAI;AAC7C,eAAO,YAAY,OAAOA,IAAG;AAAA,MACjC;AAEA,UAAI,qBAAqB;AAEzB,eAAS,kBAAkB;AACvB,YAAI,uBAAuB,QAAQ,mBAAmB,eAAe,GAAG;AACpE,+BAAqB,IAAI,WAAW,OAAO,OAAO,MAAM;AAAA,QAC5D;AACA,eAAO;AAAA,MACX;AAEA,eAAS,oBAAoB,KAAK,KAAK;AACnC,cAAM,QAAQ;AACd,eAAO,gBAAgB,EAAE,SAAS,MAAM,GAAG,MAAM,IAAI,GAAG;AAAA,MAC5D;AAMA,UAAM,SAAS,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA,QAI7B,kBAAiB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIvB,WAAU;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIhB,uBAAsB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAI5B,YAAW;AAAA,QAAE,KAAI;AAAA,MAAc,CAAC;AAMhC,UAAMM,WAAU,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA,QAI9B,MAAK;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIX,gBAAe;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIrB,cAAa;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAInB,kBAAiB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIvB,mBAAkB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIxB,oBAAmB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIzB,sBAAqB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAI3B,oBAAmB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIzB,QAAO;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIb,YAAW;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAInB,oBAAmB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI3B,qBAAoB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI5B,sBAAqB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI7B,sBAAqB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI/B,4BAA2B;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIrC,yBAAwB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIlC,mBAAkB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI5B,oBAAmB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI7B,sBAAqB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI/B,YAAW;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIrB,0BAAyB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAInC,oBAAmB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI7B,qBAAoB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI9B,sBAAqB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI/B,WAAU;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIpB,eAAc;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIxB,sBAAqB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI/B,gBAAe;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIzB,iBAAgB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI1B,kBAAiB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI3B,oBAAmB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI7B,uBAAsB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIhC,mBAAkB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI5B,0BAAyB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAInC,8BAA6B;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIvC,oBAAmB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI7B,wBAAuB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIjC,2BAA0B;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIpC,mBAAkB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI5B,0BAAyB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAInC,0BAAyB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAInC,wBAAuB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIjC,wBAAuB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIjC,iBAAgB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI1B,oBAAmB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI7B,uBAAsB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIhC,oBAAmB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI7B,mBAAkB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI5B,0BAAyB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAInC,wBAAuB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIjC,6BAA4B;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAItC,iCAAgC;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI1C,kBAAiB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI3B,uBAAsB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIhC,2BAA0B;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIpC,8BAA6B;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIvC,YAAW;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIrB,cAAa;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIvB,kBAAiB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI3B,mBAAkB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI5B,0BAAyB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAInC,2BAA0B;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIpC,yBAAwB;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIlC,iCAAgC;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAI1C,gCAA+B;AAAA,QAAI,OAAM;AAAA;AAAA;AAAA;AAAA,QAIzC,mBAAkB;AAAA,QAAK,QAAO;AAAA;AAAA;AAAA;AAAA,QAI9B,aAAY;AAAA,QAAK,QAAO;AAAA;AAAA;AAAA;AAAA,QAIxB,aAAY;AAAA,QAAK,QAAO;AAAA;AAAA;AAAA;AAAA,QAIxB,gBAAe;AAAA,QAAK,QAAO;AAAA;AAAA;AAAA;AAAA,QAI3B,oBAAmB;AAAA,QAAK,QAAO;AAAA;AAAA;AAAA;AAAA,QAI/B,gBAAe;AAAA,QAAK,QAAO;AAAA;AAAA;AAAA;AAAA,QAI3B,cAAa;AAAA,QAAK,QAAO;AAAA,MAAgB,CAAC;AAI1C,UAAM,cAAc,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA,QAIlC,IAAG;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIT,IAAG;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIT,IAAG;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIT,IAAG;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIT,KAAI;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIV,KAAI;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIV,KAAI;AAAA,QAAE,KAAI;AAAA,MAAO,CAAC;AAIlB,UAAM,cAAc,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA,QAIlC,oBAAmB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIzB,QAAO;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIb,UAAS;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIf,qBAAoB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAI1B,gBAAe;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA,QAKrB,oBAAmB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIzB,kBAAiB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIvB,iBAAgB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAItB,kBAAiB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIvB,yBAAwB;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAI9B,iBAAgB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIxB,eAAc;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAItB,gBAAe;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIvB,iBAAgB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIxB,qBAAoB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI5B,2BAA0B;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIlC,wBAAuB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI/B,6BAA4B;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIpC,cAAa;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIrB,uBAAsB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI9B,mBAAkB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI1B,WAAU;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIlB,oBAAmB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI3B,qBAAoB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI5B,yBAAwB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIhC,iBAAgB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIxB,0BAAyB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIjC,2BAA0B;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIlC,4BAA2B;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAInC,wBAAuB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI/B,+BAA8B;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA;AAAA,QAKtC,yBAAwB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIhC,2BAA0B;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIlC,kBAAiB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIzB,oBAAmB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAM3B,iBAAgB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIxB,+BAA8B;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAItC,mBAAkB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI1B,oBAAmB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI3B,qBAAoB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAI5B,gBAAe;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIvB,gBAAe;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIvB,iBAAgB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIxB,iBAAgB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA,QAIxB,oBAAmB;AAAA,QAAG,MAAK;AAAA;AAAA;AAAA;AAAA;AAAA,QAK3B,cAAa;AAAA,QAAG,MAAK;AAAA,MAAgB,CAAC;AAItC,UAAM,SAAS,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA,QAI7B,KAAI;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIV,KAAI;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIV,KAAI;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIV,IAAG;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIT,KAAI;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIV,KAAI;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIV,KAAI;AAAA,QAAE,KAAI;AAAA;AAAA;AAAA;AAAA,QAIV,KAAI;AAAA,QAAE,KAAI;AAAA,MAAO,CAAC;AAIlB,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMN,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAYC,QAAO;AACf,uBAAaA,QAAO,KAAK;AACzB,cAAI,OAAOA,OAAM,mBAAmB;AACpC,gBAAMD,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,eAAe,kBAAkB;AAC9C,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,eAAe,KAAK;AACjC,cAAI,OAAO,cAAc,mBAAmB;AAC5C,uBAAa,kBAAkB,KAAK;AACpC,cAAI,OAAO,iBAAiB,mBAAmB;AAC/C,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,KAAK;AACb,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,KAAK,QAAQ;AACrB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,QAAQ,aAAa;AAC7B,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,aAAa,KAAK;AAC/B,cAAI,OAAO,YAAY,mBAAmB;AAC1C,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,eAAe,WAAW,eAAe,SAAS;AAC1D,uBAAa,eAAe,KAAK;AACjC,cAAI,OAAO,cAAc,mBAAmB;AAC5C,uBAAa,WAAW,KAAK;AAC7B,cAAI,OAAO,UAAU,mBAAmB;AACxC,uBAAa,eAAe,KAAK;AACjC,cAAI,OAAO,cAAc,mBAAmB;AAC5C,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,KAAK;AACb,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,UAAU,kBAAkB,QAAQ,KAAK;AACjD,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,kBAAkB,KAAK;AACpC,cAAI,OAAO,iBAAiB,mBAAmB;AAC/C,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,QAAQ;AAChB,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,QAAQ;AAChB,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,QAAQ;AAChB,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,QAAQ;AAChB,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,UAAU,kBAAkB;AACpC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,kBAAkB,KAAK;AACpC,cAAI,OAAO,iBAAiB,mBAAmB;AAC/C,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,KAAK,kBAAkB;AAC/B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,kBAAkB,KAAK;AACpC,cAAI,OAAO,iBAAiB,mBAAmB;AAC/C,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,cAAN,MAAkB;AAAA,QAEd,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,YAAY,SAAS;AAC/C,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,uBAAuB,GAAG;AAAA,QACrC;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,OAAO;AACP,gBAAMA,OAAM,OAAO,2BAA2B,KAAK,SAAS;AAC5D,iBAAOA;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,KAAK,MAAM;AACX,iBAAO,2BAA2B,KAAK,WAAW,IAAI;AAAA,QAC1D;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,eAAe;AACf,gBAAMA,OAAM,OAAO,mCAAmC,KAAK,SAAS;AACpE,iBAAOA,SAAQ;AAAA,QACnB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,aAAa,MAAM;AACnB,iBAAO,mCAAmC,KAAK,WAAW,IAAI;AAAA,QAClE;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,SAAS;AACL,gBAAM,MAAM,KAAK,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,mBAAmB,GAAG;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,OAAO,SAAS,MAAM;AAClB,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,qBAAqB,IAAI;AAC5C,iBAAOA,SAAQ,IAAI,SAAY,YAAY,OAAOA,IAAG;AAAA,QACzD;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,UAAN,MAAc;AAAA,QAEV,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,mBAAmB,GAAG;AAAA,QACjC;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,eAAe;AACf,gBAAMA,OAAM,OAAO,mCAAmC,KAAK,SAAS;AACpE,iBAAOA,SAAQ;AAAA,QACnB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,aAAa,MAAM;AACnB,iBAAO,mCAAmC,KAAK,WAAW,IAAI;AAAA,QAClE;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,GAAG,GAAG,GAAG,GAAG;AACpB,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,UAAU,eAAe;AAC3C,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,eAAe,KAAK;AACjC,cAAI,OAAO,cAAc,mBAAmB;AAC5C,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,UAAU,eAAe;AAC3C,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,eAAe,KAAK;AACjC,cAAI,OAAO,cAAc,mBAAmB;AAC5C,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,cAAc,UAAU,eAAe;AAC/C,uBAAa,cAAc,KAAK;AAChC,cAAI,OAAO,aAAa,mBAAmB;AAC3C,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,eAAe,KAAK;AACjC,cAAI,OAAO,cAAc,mBAAmB;AAC5C,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,OAAO;AACf,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,GAAG,SAAS;AACtC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,KAAK,UAAU;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,gBAAMA,OAAM,OAAO,kBAAkB,MAAM,IAAI;AAC/C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,SAAS,KAAK,SAAS;AAC1C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,OAAO,UAAU,IAAI,MAAM;AACvB,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,gBAAMA,OAAM,OAAO,aAAa,MAAM,IAAI;AAC1C,iBAAO,GAAG,OAAOA,IAAG;AAAA,QACxB;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,IAAI,SAAS;AACvC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,UAAU;AAC5B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,OAAO,UAAU,IAAI,IAAI,MAAM;AAC3B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,gBAAMA,OAAM,OAAO,cAAc,MAAM,MAAM,IAAI;AACjD,iBAAO,IAAI,OAAOA,IAAG;AAAA,QACzB;AAAA,MACJ;AAIA,UAAM,QAAN,MAAY;AAAA,QAER,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,MAAM,SAAS;AACzC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,iBAAiB,GAAG;AAAA,QAC/B;AAAA,MACJ;AAIA,UAAM,QAAN,MAAY;AAAA,QAER,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,MAAM,SAAS;AACzC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,iBAAiB,GAAG;AAAA,QAC/B;AAAA,MACJ;AAIA,UAAM,QAAN,MAAY;AAAA,QAER,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,MAAM,SAAS;AACzC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,iBAAiB,GAAG;AAAA,QAC/B;AAAA,MACJ;AAIA,UAAM,QAAN,MAAY;AAAA,QAER,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,MAAM,SAAS;AACzC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,iBAAiB,GAAG;AAAA,QAC/B;AAAA,MACJ;AAUA,UAAM,cAAN,MAAkB;AAAA,QAEd,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,YAAY,SAAS;AAC/C,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,uBAAuB,GAAG;AAAA,QACrC;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,WAAW;AACP,cAAI;AACA,kBAAM,SAAS,OAAO,gCAAgC,GAAG;AACzD,mBAAO,qBAAqB,QAAQ,KAAK,SAAS;AAClD,gBAAI,KAAK,gBAAgB,EAAE,SAAS,IAAI,CAAC;AACzC,gBAAI,KAAK,gBAAgB,EAAE,SAAS,IAAI,CAAC;AACzC,gBAAI,KAAK,oBAAoB,IAAI,EAAE,EAAE,MAAM;AAC3C,mBAAO,gBAAgB,IAAI,KAAK,GAAG,CAAC;AACpC,mBAAO;AAAA,UACX,UAAE;AACE,mBAAO,gCAAgC,EAAE;AAAA,UAC7C;AAAA,QACJ;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,OAAO;AACV,gBAAMA,OAAM,OAAO,iBAAiB;AACpC,iBAAOA,SAAQ;AAAA,QACnB;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,YAAY;AACpB,uBAAa,YAAY,KAAK;AAC9B,cAAI,OAAO,WAAW,mBAAmB;AACzC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,YAAY;AACpB,uBAAa,YAAY,KAAK;AAC9B,cAAI,OAAO,WAAW,mBAAmB;AACzC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,SAAS,OAAO;AACxB,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,kBAAkB,MAAM,IAAI;AAC/C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,SAAS,KAAK,SAAS;AAC1C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,SAAS,OAAO;AACxB,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,kBAAkB,MAAM,IAAI;AAC/C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,SAAS,KAAK,SAAS;AAC1C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,YAAY,KAAK,KAAK;AAC9B,uBAAa,YAAY,KAAK;AAC9B,cAAI,OAAO,WAAW,mBAAmB;AACzC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,UAAU,UAAU,SAAS,OAAO;AAC5C,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,UAAU,UAAU,SAAS,OAAO;AAC5C,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,UAAU,YAAY;AACxC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,YAAY,KAAK;AAC9B,cAAI,OAAO,WAAW,mBAAmB;AACzC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,SAAS,SAAS,OAAO;AACjC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,SAAS,SAAS,OAAO;AACjC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,SAAS,YAAY;AAC7B,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,YAAY,KAAK;AAC9B,cAAI,OAAO,WAAW,mBAAmB;AACzC,gBAAMA,OAAM,OAAO,kBAAkB,MAAM,IAAI;AAC/C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,SAAS,KAAK,SAAS;AAC1C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,UAAU,KAAK;AACjC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,MAAM,QAAQ;AAC3B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,kBAAkB,QAAQ,KAAK;AACvC,uBAAa,kBAAkB,KAAK;AACpC,cAAI,OAAO,iBAAiB,mBAAmB;AAC/C,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,GAAG,GAAG,GAAG,GAAG;AACpB,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,GAAG,GAAG,MAAM,KAAK;AACzB,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,uBAAa,GAAG,KAAK;AACrB,cAAI,OAAO,EAAE,mBAAmB;AAChC,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,MAAM,QAAQ;AAC3B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,UAAU,KAAK;AACvB,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,MAAM,OAAO;AACrB,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,kBAAkB,MAAM,IAAI;AAC/C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,SAAS,KAAK,SAAS;AAC1C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,UAAU,KAAK;AACjC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,UAAU,KAAK;AACjC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,QAAQ,UAAU,UAAU,KAAK;AACzC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,QAAQ,aAAa;AAC7B,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,aAAa,KAAK;AAC/B,cAAI,OAAO,YAAY,mBAAmB;AAC1C,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,SAAS,SAAS,SAAS;AACxC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,KAAK,KAAK;AAClB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,KAAK,KAAK;AAClB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,kBAAkB,MAAM,IAAI;AAC/C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,SAAS,KAAK,SAAS;AAC1C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,WAAN,MAAe;AAAA,QAEX,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,oBAAoB,GAAG;AAAA,QAClC;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,KAAK;AACL,gBAAMA,OAAM,OAAO,sBAAsB,KAAK,SAAS;AACvD,iBAAOA;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,GAAG,MAAM;AACT,iBAAO,sBAAsB,KAAK,WAAW,IAAI;AAAA,QACrD;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,eAAe;AACf,gBAAMA,OAAM,OAAO,mCAAmC,KAAK,SAAS;AACpE,iBAAOA,SAAQ;AAAA,QACnB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,aAAa,MAAM;AACnB,iBAAO,mCAAmC,KAAK,WAAW,IAAI;AAAA,QAClE;AAAA,MACJ;AAIA,UAAM,UAAN,MAAc;AAAA,QAEV,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,mBAAmB,GAAG;AAAA,QACjC;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,eAAe;AACf,gBAAMA,OAAM,OAAO,mCAAmC,KAAK,SAAS;AACpE,iBAAOA,SAAQ;AAAA,QACnB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,aAAa,MAAM;AACnB,iBAAO,mCAAmC,KAAK,WAAW,IAAI;AAAA,QAClE;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,eAAe;AACf,gBAAMA,OAAM,OAAO,+BAA+B,KAAK,SAAS;AAChE,iBAAOA,SAAQ;AAAA,QACnB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,IAAI,aAAa,MAAM;AACnB,iBAAO,+BAA+B,KAAK,WAAW,IAAI;AAAA,QAC9D;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA,QAIA,cAAc;AACV,gBAAMA,OAAM,OAAO,oBAAoB;AACvC,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,KAAK,KAAK;AAClB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,SAAS;AACjB,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,SAAS;AACjB,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,SAAS;AACjB,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,SAAS;AACjB,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,mBAAN,MAAuB;AAAA,QAEnB,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,4BAA4B,GAAG;AAAA,QAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,QAAQ,aAAa;AAC7B,gBAAMA,OAAM,OAAO,kCAAkC,QAAQ,WAAW;AACxE,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,SAAS;AACL,gBAAMA,OAAM,OAAO,wBAAwB,KAAK,SAAS;AACzD,iBAAOA;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,cAAc;AACV,gBAAMA,OAAM,OAAO,6BAA6B,KAAK,SAAS;AAC9D,iBAAOA,SAAQ;AAAA,QACnB;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,OAAO;AACf,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,MAAM,KAAK;AACnB,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,YAAY,OAAO;AACf,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,IAAI;AAC3C,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,QAAN,MAAY;AAAA,QAER,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,MAAM,SAAS;AACzC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,iBAAiB,GAAG;AAAA,QAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,OAAO,YAAY,GAAG;AAClB,gBAAMA,OAAM,OAAO,kBAAkB,CAAC;AACtC,iBAAOA,SAAQ,IAAI,SAAY,MAAM,OAAOA,IAAG;AAAA,QACnD;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,MAAM;AACT,gBAAMA,OAAM,OAAO,UAAU;AAC7B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,OAAO;AACV,gBAAMA,OAAM,OAAO,WAAW;AAC9B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,MAAM;AACT,gBAAMA,OAAM,OAAO,UAAU;AAC7B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,OAAO;AACV,gBAAMA,OAAM,OAAO,WAAW;AAC9B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,KAAK;AACR,gBAAMA,OAAM,OAAO,SAAS;AAC5B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,OAAO;AACV,gBAAMA,OAAM,OAAO,WAAW;AAC9B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,OAAO,KAAK;AACR,gBAAMA,OAAM,OAAO,SAAS;AAC5B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,KAAK;AACR,gBAAMA,OAAM,OAAO,SAAS;AAC5B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,KAAK;AACR,gBAAMA,OAAM,OAAO,SAAS;AAC5B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,MAAM;AACT,gBAAMA,OAAM,OAAO,UAAU;AAC7B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,KAAK;AACR,gBAAMA,OAAM,OAAO,SAAS;AAC5B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,MAAM;AACT,gBAAMA,OAAM,OAAO,UAAU;AAC7B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,OAAO;AACV,gBAAMA,OAAM,OAAO,WAAW;AAC9B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,OAAO,KAAK;AACR,gBAAMA,OAAM,OAAO,SAAS;AAC5B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,MAAM;AACT,gBAAMA,OAAM,OAAO,UAAU;AAC7B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,WAAW;AACd,gBAAMA,OAAM,OAAO,eAAe;AAClC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,OAAO,OAAO;AACV,gBAAMA,OAAM,OAAO,WAAW;AAC9B,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,GAAG;AACX,gBAAMA,OAAM,OAAO,qBAAqB,CAAC;AACzC,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAM,MAAM,KAAK,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,YAAY,GAAG;AAClC,iBAAOA;AAAA,QACX;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,UAAU,KAAK;AACjC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,MAAM,OAAO,QAAQ;AAC7B,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,QAAQ,MAAM;AAChC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,gBAAgB,WAAW,UAAU,OAAO;AACpD,uBAAa,gBAAgB,KAAK;AAClC,cAAI,OAAO,eAAe,mBAAmB;AAC7C,uBAAa,WAAW,KAAK;AAC7B,cAAI,OAAO,UAAU,mBAAmB;AACxC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,QAAQ,UAAU;AAC/B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,UAAU,QAAQ,UAAU,MAAM;AAC1C,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,MAAM,OAAO,QAAQ;AAC7B,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,UAAU,QAAQ,OAAO;AACjC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,UAAU,QAAQ,UAAU,MAAM;AAC1C,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,UAAU,KAAK;AAC5B,cAAI,OAAO,SAAS,mBAAmB;AACvC,uBAAa,MAAM,KAAK;AACxB,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,YAAY,KAAK,QAAQ;AACrB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,IAAI;AACjD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,KAAN,MAAS;AAAA,QAEL,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,cAAc,GAAG;AAAA,QAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,kBAAkB,QAAQ,eAAe;AACjD,uBAAa,kBAAkB,KAAK;AACpC,cAAI,OAAO,iBAAiB,mBAAmB;AAC/C,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,eAAe,KAAK;AACjC,cAAI,OAAO,cAAc,mBAAmB;AAC5C,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,kBAAkB,cAAc,QAAQ,eAAe;AAC/D,uBAAa,kBAAkB,KAAK;AACpC,cAAI,OAAO,iBAAiB,mBAAmB;AAC/C,uBAAa,cAAc,KAAK;AAChC,cAAI,OAAO,aAAa,mBAAmB;AAC3C,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,uBAAa,eAAe,KAAK;AACjC,cAAI,OAAO,cAAc,mBAAmB;AAC5C,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,SAAS,SAAS,QAAQ;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,KAAK,SAAS;AACxC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,KAAK,KAAK,OAAO;AAC9B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,UAAU,IAAI,IAAI,IAAI,MAAM;AAC/B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,MAAM,WAAW;AAC9B,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,eAAe,MAAM,MAAM,MAAM,IAAI;AACxD,iBAAO,KAAK,OAAOA,IAAG;AAAA,QAC1B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,KAAK,SAAS;AACxC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,KAAK,KAAK,OAAO;AAC9B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,UAAU,IAAI,IAAI,IAAI,MAAM;AAC/B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,MAAM,OAAO;AAC1B,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,eAAe,MAAM,MAAM,MAAM,IAAI;AACxD,iBAAO,KAAK,OAAOA,IAAG;AAAA,QAC1B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,SAAS,SAAS,SAAS;AACxC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,KAAK,SAAS;AACxC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,KAAK,KAAK,OAAO;AAC9B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,UAAU,IAAI,IAAI,IAAI,MAAM;AAC/B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,MAAM,OAAO;AAC1B,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,eAAe,MAAM,MAAM,MAAM,IAAI;AACxD,iBAAO,KAAK,OAAOA,IAAG;AAAA,QAC1B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,SAAS,SAAS,QAAQ;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,KAAK,SAAS;AACxC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,KAAK,KAAK,OAAO;AAC9B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,UAAU,IAAI,IAAI,IAAI,MAAM;AAC/B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,MAAM,QAAQ;AAC3B,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,eAAe,MAAM,MAAM,MAAM,IAAI;AACxD,iBAAO,KAAK,OAAOA,IAAG;AAAA,QAC1B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,SAAS,SAAS,QAAQ;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,KAAK,SAAS;AACxC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,KAAK,KAAK,OAAO;AAC9B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,UAAU,IAAI,IAAI,IAAI,MAAM;AAC/B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,MAAM,WAAW;AAC9B,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,eAAe,MAAM,MAAM,MAAM,IAAI;AACxD,iBAAO,KAAK,OAAOA,IAAG;AAAA,QAC1B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,KAAK,SAAS;AACxC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,KAAK,KAAK,OAAO;AAC9B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,UAAU,IAAI,IAAI,IAAI,MAAM;AAC/B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,MAAM,OAAO;AAC1B,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,eAAe,MAAM,MAAM,MAAM,IAAI;AACxD,iBAAO,KAAK,OAAOA,IAAG;AAAA,QAC1B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,SAAS,SAAS,SAAS;AACxC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,KAAK,SAAS;AACxC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,KAAK,KAAK,OAAO;AAC9B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,UAAU,IAAI,IAAI,IAAI,MAAM;AAC/B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,MAAM,OAAO;AAC1B,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,eAAe,MAAM,MAAM,MAAM,IAAI;AACxD,iBAAO,KAAK,OAAOA,IAAG;AAAA,QAC1B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,SAAS,SAAS,QAAQ;AACvC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,SAAS,KAAK;AAC3B,cAAI,OAAO,QAAQ,mBAAmB;AACtC,uBAAa,QAAQ,KAAK;AAC1B,cAAI,OAAO,OAAO,mBAAmB;AACrC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,OAAO,OAAO,KAAK;AACf,gBAAM,QAAQ;AACd,gBAAM,MAAM,OAAO,OAAO,KAAK,SAAS;AACxC,cAAI,YAAY;AAEhB,iBAAO;AAAA,QACX;AAAA,QAEA,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA,YAAY,KAAK,KAAK,KAAK,OAAO;AAC9B,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,OAAO,KAAK;AACzB,cAAI,OAAO,MAAM,mBAAmB;AACpC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,MAAM,IAAI;AAC7D,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,QAAQ,KAAK,SAAS;AACzC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,OAAO,UAAU,IAAI,IAAI,IAAI,MAAM;AAC/B,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,IAAI,KAAK;AACtB,cAAI,OAAO,GAAG,mBAAmB;AACjC,uBAAa,MAAM,QAAQ;AAC3B,cAAI,OAAO,KAAK,mBAAmB;AACnC,gBAAMA,OAAM,OAAO,eAAe,MAAM,MAAM,MAAM,IAAI;AACxD,iBAAO,KAAK,OAAOA,IAAG;AAAA,QAC1B;AAAA,MACJ;AAIA,UAAM,MAAN,MAAU;AAAA,QAEN,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,eAAe,GAAG;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,mBAAmB,MAAM,MAAM,IAAI;AACtD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAIA,UAAM,OAAN,MAAW;AAAA,QAEP,qBAAqB;AACjB,gBAAM,MAAM,KAAK;AACjB,eAAK,YAAY;AAEjB,iBAAO;AAAA,QACX;AAAA,QAEA,OAAO;AACH,gBAAM,MAAM,KAAK,mBAAmB;AACpC,iBAAO,gBAAgB,GAAG;AAAA,QAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,YAAY,KAAK,KAAK,KAAK;AACvB,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,uBAAa,KAAK,KAAK;AACvB,cAAI,OAAO,IAAI,mBAAmB;AAClC,gBAAMA,OAAM,OAAO,oBAAoB,MAAM,MAAM,IAAI;AACvD,eAAK,YAAYA,SAAQ;AACzB,iBAAO;AAAA,QACX;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,KAAK;AACD,gBAAMA,OAAM,OAAO,OAAO,KAAK,SAAS;AACxC,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,QAAQ;AACJ,gBAAMA,OAAM,OAAO,WAAW,KAAK,SAAS;AAC5C,iBAAO,MAAM,OAAOA,IAAG;AAAA,QAC3B;AAAA,MACJ;AAEA,qBAAe,WAAWO,SAAQ,SAAS;AACvC,YAAI,OAAO,aAAa,cAAcA,mBAAkB,UAAU;AAC9D,cAAI,OAAO,YAAY,yBAAyB,YAAY;AACxD,gBAAI;AACA,qBAAO,MAAM,YAAY,qBAAqBA,SAAQ,OAAO;AAAA,YAEjE,SAAS,GAAP;AACE,kBAAIA,QAAO,QAAQ,IAAI,cAAc,KAAK,oBAAoB;AAC1D,wBAAQ,KAAK,qMAAqM,CAAC;AAAA,cAEvN,OAAO;AACH,sBAAM;AAAA,cACV;AAAA,YACJ;AAAA,UACJ;AAEA,gBAAMN,SAAQ,MAAMM,QAAO,YAAY;AACvC,iBAAO,MAAM,YAAY,YAAYN,QAAO,OAAO;AAAA,QAEvD,OAAO;AACH,gBAAM,WAAW,MAAM,YAAY,YAAYM,SAAQ,OAAO;AAE9D,cAAI,oBAAoB,YAAY,UAAU;AAC1C,mBAAO,EAAE,UAAU,QAAAA,QAAO;AAAA,UAE9B,OAAO;AACH,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAEA,eAAS,oBAAoB;AACzB,cAAM,UAAU,CAAC;AACjB,gBAAQ,MAAM,CAAC;AACf,gBAAQ,IAAI,mBAAmB,SAAS,MAAM,MAAM;AAChD,gBAAM,IAAI,MAAM,mBAAmB,MAAM,IAAI,CAAC;AAAA,QAClD;AAEA,eAAO;AAAA,MACX;AAEA,eAAS,oBAAoB,UAAUA,SAAQ;AAC3C,iBAAS,SAAS;AAClB,mBAAW,yBAAyBA;AACpC,6BAAqB;AACrB,6BAAqB;AAGrB,eAAO;AAAA,MACX;AAEA,eAAS,SAASA,SAAQ;AACtB,YAAI,WAAW;AAAW,iBAAO;AAEjC,cAAM,UAAU,kBAAkB;AAElC,YAAI,EAAEA,mBAAkB,YAAY,SAAS;AACzC,UAAAA,UAAS,IAAI,YAAY,OAAOA,OAAM;AAAA,QAC1C;AAEA,cAAM,WAAW,IAAI,YAAY,SAASA,SAAQ,OAAO;AAEzD,eAAO,oBAAoB,UAAUA,OAAM;AAAA,MAC/C;AAEA,qBAAe,WAAW,OAAO;AAC7B,YAAI,WAAW;AAAW,iBAAO;AACjC,cAAM,UAAU,kBAAkB;AAElC,cAAM,EAAE,UAAU,QAAAA,QAAO,IAAI,MAAM,WAAW,MAAM,OAAO,OAAO;AAElE,eAAO,oBAAoB,UAAUA,OAAM;AAAA,MAC/C;AAEA,eAAS,gBAAiB,MAAM,UAAU,KAAK,SAAS;AACtD,iBAAS,sBAAsB,QAAQC,UAAS,QAAQ;AACtD,cAAI,kBAAkB,SAAS,YAAY,uBAAuB,YAAY;AAC9E,cAAI,cAAc,SAAS,YAAY,mBAAmB,YAAY;AAEtE,cAAIA,UAAS;AACX,mBAAO,gBAAgB,QAAQA,QAAO;AAAA,UACxC,OAAO;AACL,mBAAO,YAAY,MAAM;AAAA,UAC3B;AAAA,QACF;AAGF,YAAI,MAAM;AACV,YAAIC,UAAS,OAAO,YAAY,eAAe,QAAQ,YAAY,QAAQ,QAAQ,SAAS,QAAQ;AACpG,YAAIA,SAAQ;AAEZ,gBAAM,OAAO,KAAK,KAAK,QAAQ;AAAA,QAE/B,OAAO;AAEP,cAAI,MAAM,WAAW,KAAK,GAAG;AAC7B,cAAI,YAAY,IAAI;AACpB,gBAAM,IAAI,WAAW,IAAI,YAAY,SAAS,CAAC;AAC/C,mBAAQ,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,gBAAI,CAAC,IAAI,IAAI,WAAW,CAAC;AAAA,UAC5B;AAAA,QAEA;AAGE,YAAG,MAAM;AACP,cAAIC,OAAM,IAAI,YAAY,OAAO,GAAG;AACpC,iBAAO,UAAU,IAAI,YAAY,SAASA,MAAK,OAAO,IAAIA;AAAA,QAC5D,OAAO;AACL,iBAAO,sBAAsB,KAAK,SAAS,KAAK;AAAA,QAClD;AAAA,MACF;AAEA,eAAS,KAAK,SAAQ;AAAC,eAAO,gBAAgB,GAAG,MAAM,o3/CAAo3/C,OAAO;AAAA,MAAC;AAEn7/C,qBAAeC,YAAY;AACzB,eAAO,MAAM,WAAW,KAAK,CAAC;AAAA,MAChC;AAMA,MAAAA,UAAS;AAET,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,cAAc;AACtB,cAAQ,cAAc;AACtB,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,UAAU;AAClB,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,SAAS;AACjB,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,UAAUL;AAClB,cAAQ,QAAQ;AAChB,cAAQ,QAAQ;AAChB,cAAQ,QAAQ;AAChB,cAAQ,QAAQ;AAChB,cAAQ,cAAc;AACtB,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,WAAW;AACnB,cAAQ,SAAS;AACjB,cAAQ,UAAU;AAClB,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,mBAAmB;AAC3B,cAAQ,cAAc;AACtB,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,QAAQ;AAChB,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAMP;AACd,cAAQ,OAAOI;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,UAAU;AAClB,cAAQ,KAAK;AACb,cAAQ,MAAME;AACd,cAAQ,WAAW;AACnB,cAAQ,WAAW;AACnB,cAAQ,WAAWM;AACnB,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,KAAKP;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,QAAQ;AAChB,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,MAAMJ;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,KAAK;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,KAAKE;AACb,cAAQ,MAAM;AACd,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,YAAY;AACpB,cAAQ,OAAO;AACf,cAAQ,YAAY;AACpB,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,YAAY;AACpB,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,YAAY;AACpB,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,YAAY;AACpB,cAAQ,OAAO;AACf,cAAQ,YAAY;AACpB,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,YAAY;AACpB,cAAQ,OAAO;AACf,cAAQ,OAAO;AACf,cAAQ,YAAY;AACpB,cAAQ,MAAM;AACd,cAAQ,OAAO;AAAA;AAAA;;;ACtnSf,WAAS,OAAO,GAAS;AACvB,QAAI,CAAC,OAAO,cAAc,CAAC,KAAK,IAAI;AAAG,YAAM,IAAI,MAAM,2BAA2B,GAAG;EACvF;AAOA,WAAS,QAAQ,GAAU;AACzB,WACE,aAAa,cACZ,KAAK,QAAQ,OAAO,MAAM,YAAY,EAAE,YAAY,SAAS;EAElE;AAEA,WAAS,MAAM,MAA8B,SAAiB;AAC5D,QAAI,CAAC,QAAQ,CAAC;AAAG,YAAM,IAAI,MAAM,qBAAqB;AACtD,QAAI,QAAQ,SAAS,KAAK,CAAC,QAAQ,SAAS,EAAE,MAAM;AAClD,YAAM,IAAI,MAAM,iCAAiC,0BAA0B,EAAE,QAAQ;EACzF;AAQA,WAAS,KAAKU,OAAU;AACtB,QAAI,OAAOA,UAAS,cAAc,OAAOA,MAAK,WAAW;AACvD,YAAM,IAAI,MAAM,iDAAiD;AACnE,WAAOA,MAAK,SAAS;AACrB,WAAOA,MAAK,QAAQ;EACtB;AAEA,WAAS,OAAO,UAAe,gBAAgB,MAAI;AACjD,QAAI,SAAS;AAAW,YAAM,IAAI,MAAM,kCAAkC;AAC1E,QAAI,iBAAiB,SAAS;AAAU,YAAM,IAAI,MAAM,uCAAuC;EACjG;AACA,WAAS,OAAO,KAAU,UAAa;AACrC,UAAM,GAAG;AACT,UAAM,MAAM,SAAS;AACrB,QAAI,IAAI,SAAS,KAAK;AACpB,YAAM,IAAI,MAAM,yDAAyD,KAAK;IAChF;EACF;;;ACzCA,WAAoB;AACb,MAAM,SACX,MAAM,OAAO,OAAO,YAAY,eAAe,KAAS,eAAoB;;;ACUvE,MAAM,MAAM,CAAC,QAClB,IAAI,YAAY,IAAI,QAAQ,IAAI,YAAY,KAAK,MAAM,IAAI,aAAa,CAAC,CAAC;AAE5E,WAASC,SAAQ,GAAU;AACzB,WACE,aAAa,cACZ,KAAK,QAAQ,OAAO,MAAM,YAAY,EAAE,YAAY,SAAS;EAElE;AAGO,MAAM,aAAa,CAAC,QACzB,IAAI,SAAS,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAGlD,MAAM,OAAO,CAAC,MAAc,UAAmB,QAAS,KAAK,QAAW,SAAS;AAMjF,MAAM,OAAO,IAAI,WAAW,IAAI,YAAY,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM;AAChF,MAAI,CAAC;AAAM,UAAM,IAAI,MAAM,6CAA6C;AA0ElE,WAAU,YAAY,KAAW;AACrC,QAAI,OAAO,QAAQ;AAAU,YAAM,IAAI,MAAM,oCAAoC,OAAO,KAAK;AAC7F,WAAO,IAAI,WAAW,IAAI,YAAW,EAAG,OAAO,GAAG,CAAC;EACrD;AAQM,WAAU,QAAQ,MAAW;AACjC,QAAI,OAAO,SAAS;AAAU,aAAO,YAAY,IAAI;AACrD,QAAI,CAACC,SAAQ,IAAI;AAAG,YAAM,IAAI,MAAM,4BAA4B,OAAO,MAAM;AAC7E,WAAO;EACT;AAKM,WAAU,eAAe,QAAoB;AACjD,QAAI,MAAM;AACV,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAM,IAAI,OAAO,CAAC;AAClB,UAAI,CAACA,SAAQ,CAAC;AAAG,cAAM,IAAI,MAAM,qBAAqB;AACtD,aAAO,EAAE;IACX;AACA,UAAM,MAAM,IAAI,WAAW,GAAG;AAC9B,aAAS,IAAI,GAAGC,OAAM,GAAG,IAAI,OAAO,QAAQ,KAAK;AAC/C,YAAM,IAAI,OAAO,CAAC;AAClB,UAAI,IAAI,GAAGA,IAAG;AACd,MAAAA,QAAO,EAAE;IACX;AACA,WAAO;EACT;AAGM,MAAgB,OAAhB,MAAoB;;IAsBxB,QAAK;AACH,aAAO,KAAK,WAAU;IACxB;;AAcF,MAAM,QAAQ,CAAA,EAAG;AAEX,WAAU,UACd,UACA,MAAS;AAET,QAAI,SAAS,UAAa,MAAM,KAAK,IAAI,MAAM;AAC7C,YAAM,IAAI,MAAM,uCAAuC;AACzD,UAAM,SAAS,OAAO,OAAO,UAAU,IAAI;AAC3C,WAAO;EACT;AAIM,WAAU,gBAAmC,UAAuB;AACxE,UAAM,QAAQ,CAAC,QAA2B,SAAQ,EAAG,OAAO,QAAQ,GAAG,CAAC,EAAE,OAAM;AAChF,UAAM,MAAM,SAAQ;AACpB,UAAM,YAAY,IAAI;AACtB,UAAM,WAAW,IAAI;AACrB,UAAM,SAAS,MAAM,SAAQ;AAC7B,WAAO;EACT;AAaM,WAAU,2BACd,UAAkC;AAElC,UAAM,QAAQ,CAAC,KAAY,SAAyB,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,CAAC,EAAE,OAAM;AAC9F,UAAM,MAAM,SAAS,CAAA,CAAO;AAC5B,UAAM,YAAY,IAAI;AACtB,UAAM,WAAW,IAAI;AACrB,UAAM,SAAS,CAAC,SAAY,SAAS,IAAI;AACzC,WAAO;EACT;AAKM,WAAU,YAAY,cAAc,IAAE;AAC1C,QAAI,UAAU,OAAO,OAAO,oBAAoB,YAAY;AAC1D,aAAO,OAAO,gBAAgB,IAAI,WAAW,WAAW,CAAC;IAC3D;AACA,UAAM,IAAI,MAAM,wCAAwC;EAC1D;;;AC5OA,WAAS,aAAa,MAAgB,YAAoB,OAAeC,OAAa;AACpF,QAAI,OAAO,KAAK,iBAAiB;AAAY,aAAO,KAAK,aAAa,YAAY,OAAOA,KAAI;AAC7F,UAAMC,QAAO,OAAO,EAAE;AACtB,UAAM,WAAW,OAAO,UAAU;AAClC,UAAM,KAAK,OAAQ,SAASA,QAAQ,QAAQ;AAC5C,UAAM,KAAK,OAAO,QAAQ,QAAQ;AAClC,UAAM,IAAID,QAAO,IAAI;AACrB,UAAM,IAAIA,QAAO,IAAI;AACrB,SAAK,UAAU,aAAa,GAAG,IAAIA,KAAI;AACvC,SAAK,UAAU,aAAa,GAAG,IAAIA,KAAI;EACzC;AAGM,MAAgB,OAAhB,cAAgD,KAAO;IAc3D,YACW,UACF,WACE,WACAA,OAAa;AAEtB,YAAK;AALI,WAAA,WAAA;AACF,WAAA,YAAA;AACE,WAAA,YAAA;AACA,WAAA,OAAAA;AATD,WAAA,WAAW;AACX,WAAA,SAAS;AACT,WAAA,MAAM;AACN,WAAA,YAAY;AASpB,WAAK,SAAS,IAAI,WAAW,QAAQ;AACrC,WAAK,OAAO,WAAW,KAAK,MAAM;IACpC;IACA,OAAO,MAAW;AAChB,aAAO,IAAI;AACX,YAAM,EAAE,MAAM,QAAQ,SAAQ,IAAK;AACnC,aAAO,QAAQ,IAAI;AACnB,YAAM,MAAM,KAAK;AACjB,eAAS,MAAM,GAAG,MAAM,OAAO;AAC7B,cAAM,OAAO,KAAK,IAAI,WAAW,KAAK,KAAK,MAAM,GAAG;AAEpD,YAAI,SAAS,UAAU;AACrB,gBAAM,WAAW,WAAW,IAAI;AAChC,iBAAO,YAAY,MAAM,KAAK,OAAO;AAAU,iBAAK,QAAQ,UAAU,GAAG;AACzE;QACF;AACA,eAAO,IAAI,KAAK,SAAS,KAAK,MAAM,IAAI,GAAG,KAAK,GAAG;AACnD,aAAK,OAAO;AACZ,eAAO;AACP,YAAI,KAAK,QAAQ,UAAU;AACzB,eAAK,QAAQ,MAAM,CAAC;AACpB,eAAK,MAAM;QACb;MACF;AACA,WAAK,UAAU,KAAK;AACpB,WAAK,WAAU;AACf,aAAO;IACT;IACA,WAAW,KAAe;AACxB,aAAO,IAAI;AACX,aAAO,KAAK,IAAI;AAChB,WAAK,WAAW;AAIhB,YAAM,EAAE,QAAQ,MAAM,UAAU,MAAAA,MAAI,IAAK;AACzC,UAAI,EAAE,IAAG,IAAK;AAEd,aAAO,KAAK,IAAI;AAChB,WAAK,OAAO,SAAS,GAAG,EAAE,KAAK,CAAC;AAEhC,UAAI,KAAK,YAAY,WAAW,KAAK;AACnC,aAAK,QAAQ,MAAM,CAAC;AACpB,cAAM;MACR;AAEA,eAAS,IAAI,KAAK,IAAI,UAAU;AAAK,eAAO,CAAC,IAAI;AAIjD,mBAAa,MAAM,WAAW,GAAG,OAAO,KAAK,SAAS,CAAC,GAAGA,KAAI;AAC9D,WAAK,QAAQ,MAAM,CAAC;AACpB,YAAM,QAAQ,WAAW,GAAG;AAC5B,YAAM,MAAM,KAAK;AAEjB,UAAI,MAAM;AAAG,cAAM,IAAI,MAAM,6CAA6C;AAC1E,YAAM,SAAS,MAAM;AACrB,YAAM,QAAQ,KAAK,IAAG;AACtB,UAAI,SAAS,MAAM;AAAQ,cAAM,IAAI,MAAM,oCAAoC;AAC/E,eAAS,IAAI,GAAG,IAAI,QAAQ;AAAK,cAAM,UAAU,IAAI,GAAG,MAAM,CAAC,GAAGA,KAAI;IACxE;IACA,SAAM;AACJ,YAAM,EAAE,QAAQ,UAAS,IAAK;AAC9B,WAAK,WAAW,MAAM;AACtB,YAAM,MAAM,OAAO,MAAM,GAAG,SAAS;AACrC,WAAK,QAAO;AACZ,aAAO;IACT;IACA,WAAW,IAAM;AACf,aAAA,KAAO,IAAK,KAAK,YAAmB;AACpC,SAAG,IAAI,GAAG,KAAK,IAAG,CAAE;AACpB,YAAM,EAAE,UAAU,QAAQ,QAAQ,UAAU,WAAW,IAAG,IAAK;AAC/D,SAAG,SAAS;AACZ,SAAG,MAAM;AACT,SAAG,WAAW;AACd,SAAG,YAAY;AACf,UAAI,SAAS;AAAU,WAAG,OAAO,IAAI,MAAM;AAC3C,aAAO;IACT;;;;AC7GF,MAAM,MAAM,CAAC,GAAW,GAAW,MAAe,IAAI,IAAM,CAAC,IAAI;AAEjE,MAAM,MAAM,CAAC,GAAW,GAAW,MAAe,IAAI,IAAM,IAAI,IAAM,IAAI;AAK1E,MAAM,WAA0B,oBAAI,YAAY;IAC9C;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;GACrF;AAID,MAAM,KAAoB,oBAAI,YAAY;IACxC;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;GACrF;AAID,MAAM,WAA2B,oBAAI,YAAY,EAAE;AACnD,MAAM,SAAN,cAAqB,KAAY;IAY/B,cAAA;AACE,YAAM,IAAI,IAAI,GAAG,KAAK;AAVxB,WAAA,IAAI,GAAG,CAAC,IAAI;AACZ,WAAA,IAAI,GAAG,CAAC,IAAI;AACZ,WAAA,IAAI,GAAG,CAAC,IAAI;AACZ,WAAA,IAAI,GAAG,CAAC,IAAI;AACZ,WAAA,IAAI,GAAG,CAAC,IAAI;AACZ,WAAA,IAAI,GAAG,CAAC,IAAI;AACZ,WAAA,IAAI,GAAG,CAAC,IAAI;AACZ,WAAA,IAAI,GAAG,CAAC,IAAI;IAIZ;IACU,MAAG;AACX,YAAM,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,IAAK;AACnC,aAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAChC;;IAEU,IACR,GAAW,GAAW,GAAW,GAAW,GAAW,GAAW,GAAW,GAAS;AAEtF,WAAK,IAAI,IAAI;AACb,WAAK,IAAI,IAAI;AACb,WAAK,IAAI,IAAI;AACb,WAAK,IAAI,IAAI;AACb,WAAK,IAAI,IAAI;AACb,WAAK,IAAI,IAAI;AACb,WAAK,IAAI,IAAI;AACb,WAAK,IAAI,IAAI;IACf;IACU,QAAQ,MAAgB,QAAc;AAE9C,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK,UAAU;AAAG,iBAAS,CAAC,IAAI,KAAK,UAAU,QAAQ,KAAK;AACpF,eAAS,IAAI,IAAI,IAAI,IAAI,KAAK;AAC5B,cAAM,MAAM,SAAS,IAAI,EAAE;AAC3B,cAAM,KAAK,SAAS,IAAI,CAAC;AACzB,cAAM,KAAK,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAK,QAAQ;AACnD,cAAM,KAAK,KAAK,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE,IAAK,OAAO;AACjD,iBAAS,CAAC,IAAK,KAAK,SAAS,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,EAAE,IAAK;MACjE;AAEA,UAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,IAAK;AACjC,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,cAAM,SAAS,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE;AACpD,cAAM,KAAM,IAAI,SAAS,IAAI,GAAG,GAAG,CAAC,IAAI,SAAS,CAAC,IAAI,SAAS,CAAC,IAAK;AACrE,cAAM,SAAS,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE;AACpD,cAAM,KAAM,SAAS,IAAI,GAAG,GAAG,CAAC,IAAK;AACrC,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAK,IAAI,KAAM;AACf,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAK,KAAK,KAAM;MAClB;AAEA,UAAK,IAAI,KAAK,IAAK;AACnB,UAAK,IAAI,KAAK,IAAK;AACnB,UAAK,IAAI,KAAK,IAAK;AACnB,UAAK,IAAI,KAAK,IAAK;AACnB,UAAK,IAAI,KAAK,IAAK;AACnB,UAAK,IAAI,KAAK,IAAK;AACnB,UAAK,IAAI,KAAK,IAAK;AACnB,UAAK,IAAI,KAAK,IAAK;AACnB,WAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACjC;IACU,aAAU;AAClB,eAAS,KAAK,CAAC;IACjB;IACA,UAAO;AACL,WAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC/B,WAAK,OAAO,KAAK,CAAC;IACpB;;AAsBK,MAAM,SAAyB,gCAAgB,MAAM,IAAI,OAAM,CAAE;;;AChIlE,MAAO,OAAP,cAAuC,KAAa;IAQxD,YAAYE,OAAa,MAAW;AAClC,YAAK;AAJC,WAAA,WAAW;AACX,WAAA,YAAY;AAIlB,WAAWA,KAAI;AACf,YAAM,MAAM,QAAQ,IAAI;AACxB,WAAK,QAAQA,MAAK,OAAM;AACxB,UAAI,OAAO,KAAK,MAAM,WAAW;AAC/B,cAAM,IAAI,MAAM,qDAAqD;AACvE,WAAK,WAAW,KAAK,MAAM;AAC3B,WAAK,YAAY,KAAK,MAAM;AAC5B,YAAM,WAAW,KAAK;AACtB,YAAMC,OAAM,IAAI,WAAW,QAAQ;AAEnC,MAAAA,KAAI,IAAI,IAAI,SAAS,WAAWD,MAAK,OAAM,EAAG,OAAO,GAAG,EAAE,OAAM,IAAK,GAAG;AACxE,eAAS,IAAI,GAAG,IAAIC,KAAI,QAAQ;AAAK,QAAAA,KAAI,CAAC,KAAK;AAC/C,WAAK,MAAM,OAAOA,IAAG;AAErB,WAAK,QAAQD,MAAK,OAAM;AAExB,eAAS,IAAI,GAAG,IAAIC,KAAI,QAAQ;AAAK,QAAAA,KAAI,CAAC,KAAK,KAAO;AACtD,WAAK,MAAM,OAAOA,IAAG;AACrB,MAAAA,KAAI,KAAK,CAAC;IACZ;IACA,OAAO,KAAU;AACf,aAAa,IAAI;AACjB,WAAK,MAAM,OAAO,GAAG;AACrB,aAAO;IACT;IACA,WAAW,KAAe;AACxB,aAAa,IAAI;AACjB,YAAY,KAAK,KAAK,SAAS;AAC/B,WAAK,WAAW;AAChB,WAAK,MAAM,WAAW,GAAG;AACzB,WAAK,MAAM,OAAO,GAAG;AACrB,WAAK,MAAM,WAAW,GAAG;AACzB,WAAK,QAAO;IACd;IACA,SAAM;AACJ,YAAM,MAAM,IAAI,WAAW,KAAK,MAAM,SAAS;AAC/C,WAAK,WAAW,GAAG;AACnB,aAAO;IACT;IACA,WAAW,IAAY;AAErB,aAAA,KAAO,OAAO,OAAO,OAAO,eAAe,IAAI,GAAG,CAAA,CAAE;AACpD,YAAM,EAAE,OAAO,OAAO,UAAU,WAAW,UAAU,UAAS,IAAK;AACnE,WAAK;AACL,SAAG,WAAW;AACd,SAAG,YAAY;AACf,SAAG,WAAW;AACd,SAAG,YAAY;AACf,SAAG,QAAQ,MAAM,WAAW,GAAG,KAAK;AACpC,SAAG,QAAQ,MAAM,WAAW,GAAG,KAAK;AACpC,aAAO;IACT;IACA,UAAO;AACL,WAAK,YAAY;AACjB,WAAK,MAAM,QAAO;AAClB,WAAK,MAAM,QAAO;IACpB;;AASK,MAAM,OAAO,CAACD,OAAa,KAAY,YAC5C,IAAI,KAAUA,OAAM,GAAG,EAAE,OAAO,OAAO,EAAE,OAAM;AACjD,OAAK,SAAS,CAACA,OAAa,QAAe,IAAI,KAAUA,OAAM,GAAG;;;ACrElE,WAAS,WAAWE,OAAa,WAAkB,OAAc,OAAgB;AAC/E,SAAWA,KAAI;AACf,UAAM,OAAO,UAAU,EAAE,OAAO,IAAI,WAAW,GAAE,GAAI,KAAK;AAC1D,UAAM,EAAE,GAAG,OAAO,UAAS,IAAK;AAChC,WAAa,CAAC;AACd,WAAa,KAAK;AAClB,WAAa,SAAS;AACtB,QAAI,IAAI;AAAG,YAAM,IAAI,MAAM,uCAAuC;AAClE,UAAM,WAAW,QAAQ,SAAS;AAClC,UAAM,OAAO,QAAQ,KAAK;AAE1B,UAAM,KAAK,IAAI,WAAW,KAAK;AAE/B,UAAM,MAAM,KAAK,OAAOA,OAAM,QAAQ;AACtC,UAAM,UAAU,IAAI,WAAU,EAAG,OAAO,IAAI;AAC5C,WAAO,EAAE,GAAG,OAAO,WAAW,IAAI,KAAK,QAAO;EAChD;AAEA,WAAS,aACP,KACA,SACA,IACA,MACA,GAAa;AAEb,QAAI,QAAO;AACX,YAAQ,QAAO;AACf,QAAI;AAAM,WAAK,QAAO;AACtB,MAAE,KAAK,CAAC;AACR,WAAO;EACT;AASM,WAAU,OAAOA,OAAa,UAAiB,MAAa,MAAe;AAC/E,UAAM,EAAE,GAAG,OAAO,IAAI,KAAK,QAAO,IAAK,WAAWA,OAAM,UAAU,MAAM,IAAI;AAC5E,QAAI;AACJ,UAAM,MAAM,IAAI,WAAW,CAAC;AAC5B,UAAM,OAAO,WAAW,GAAG;AAC3B,UAAM,IAAI,IAAI,WAAW,IAAI,SAAS;AAEtC,aAAS,KAAK,GAAG,MAAM,GAAG,MAAM,OAAO,MAAM,OAAO,IAAI,WAAW;AAEjE,YAAM,KAAK,GAAG,SAAS,KAAK,MAAM,IAAI,SAAS;AAC/C,WAAK,SAAS,GAAG,IAAI,KAAK;AAG1B,OAAC,OAAO,QAAQ,WAAW,IAAI,GAAG,OAAO,GAAG,EAAE,WAAW,CAAC;AAC1D,SAAG,IAAI,EAAE,SAAS,GAAG,GAAG,MAAM,CAAC;AAC/B,eAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAE7B,YAAI,WAAW,IAAI,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC;AAC3C,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ;AAAK,aAAG,CAAC,KAAK,EAAE,CAAC;MAClD;IACF;AACA,WAAO,aAAa,KAAK,SAAS,IAAI,MAAM,CAAC;EAC/C;;;AChEA,MAAM,OAAO,CAAC,GAAW,MAAe,KAAK,IAAM,MAAO,KAAK;AAK/D,WAAS,YACP,MACA,IACA,OACA,IACA,KACA,IAAU;AAIV,QAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;AACjE,QAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;AACjE,QAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;AACjE,QAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;AACjE,QAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;AACjE,QAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;AACjE,QAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;AACjE,QAAI,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;AAEjE,QAAI,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KACvC,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KACvC,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KACvC,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM;AAE3C,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAAG,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAAG,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAAG,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAAG,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAAG,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAAG,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAAG,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAAG,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAAG,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAAG,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAAG,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAAG,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAAG,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAAG,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAAG,aAAO,KAAK,MAAM,MAAM,GAAI,CAAC;AAC7D,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;AAAG,aAAO,KAAK,MAAM,MAAM,GAAG,EAAE;IAC/D;AAEA,QAAI,IAAI,IAAK,MAAM,MAAO;AAAG,QAAI,IAAI,IAAK,MAAM,MAAO;AACvD,QAAI,IAAI,IAAK,MAAM,MAAO;AAAG,QAAI,IAAI,IAAK,MAAM,MAAO;AACvD,QAAI,IAAI,IAAK,MAAM,MAAO;AAAG,QAAI,IAAI,IAAK,MAAM,MAAO;AACvD,QAAI,IAAI,IAAK,MAAM,MAAO;AAAG,QAAI,IAAI,IAAK,MAAM,MAAO;AACvD,QAAI,IAAI,IAAK,MAAM,MAAO;AAAG,QAAI,IAAI,IAAK,MAAM,MAAO;AACvD,QAAI,IAAI,IAAK,MAAM,MAAO;AAAG,QAAI,IAAI,IAAK,MAAM,MAAO;AACvD,QAAI,IAAI,IAAK,MAAM,MAAO;AAAG,QAAI,IAAI,IAAK,MAAM,MAAO;AACvD,QAAI,IAAI,IAAK,MAAM,MAAO;AAAG,QAAI,IAAI,IAAK,MAAM,MAAO;EACzD;AAEA,WAAS,SAAS,OAAoB,IAAY,KAAkB,IAAY,GAAS;AAEvF,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK,KAAK;AACrB,aAAS,IAAI,GAAG,IAAI,IAAI;AAAK,UAAI,OAAO,CAAC,IAAI,MAAM,MAAM,IAAI,IAAI,KAAK,KAAK,CAAC;AAC5E,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK,QAAQ,IAAI,MAAM,IAAI;AAEhD,kBAAY,KAAK,MAAM,OAAO,IAAI,KAAK,IAAI;AAC3C,UAAI,IAAI;AAAG,gBAAQ;AACnB,kBAAY,KAAK,MAAM,OAAQ,MAAM,IAAK,KAAK,IAAI;IACrD;EACF;AAaA,WAAS,WAAW,UAAiB,MAAa,OAAkB;AAElE,UAAM,OAAO,UACX;MACE,OAAO;MACP,WAAW;MACX,QAAQ,QAAQ,IAAI;OAEtB,KAAK;AAEP,UAAM,EAAE,GAAG,GAAG,GAAG,OAAO,WAAW,QAAQ,WAAU,IAAK;AAC1D,WAAa,CAAC;AACd,WAAa,CAAC;AACd,WAAa,CAAC;AACd,WAAa,KAAK;AAClB,WAAa,SAAS;AACtB,WAAa,MAAM;AACnB,QAAI,eAAe,UAAa,OAAO,eAAe;AACpD,YAAM,IAAI,MAAM,+BAA+B;AACjD,UAAM,YAAY,MAAM;AACxB,UAAM,cAAc,YAAY;AAChC,QAAI,KAAK,MAAM,IAAK,IAAI,OAAQ,KAAK,KAAK,MAAM,YAAY,MAAM,IAAI,KAAK,IAAI;AAG7E,YAAM,IAAI,MACR,6FAA6F;IAEjG;AACA,QAAI,IAAI,KAAK,KAAM,KAAK,KAAK,KAAK,KAAM,WAAW;AACjD,YAAM,IAAI,MACR,0FAA0F;IAE9F;AACA,QAAI,QAAQ,KAAK,SAAS,KAAK,KAAK,KAAK,IAAI;AAC3C,YAAM,IAAI,MACR,gFAAgF;IAEpF;AACA,UAAM,UAAU,aAAa,IAAI;AACjC,QAAI,UAAU,QAAQ;AACpB,YAAM,IAAI,MACR,iCAAiC,iCAAiC,iBAAiB;IAEvF;AAGA,UAAM,IAAI,OAAO,QAAQ,UAAU,MAAM,EAAE,GAAG,GAAG,OAAO,YAAY,EAAC,CAAE;AACvE,UAAM,MAAM,IAAI,CAAC;AAEjB,UAAM,IAAI,IAAI,IAAI,WAAW,YAAY,CAAC,CAAC;AAC3C,UAAM,MAAM,IAAI,IAAI,WAAW,SAAS,CAAC;AACzC,QAAI,aAAa,MAAK;IAAE;AACxB,QAAI,YAAY;AACd,YAAM,gBAAgB,IAAI,IAAI;AAG9B,YAAM,cAAc,KAAK,IAAI,KAAK,MAAM,gBAAgB,GAAK,GAAG,CAAC;AACjE,UAAI,cAAc;AAClB,mBAAa,MAAK;AAChB;AACA,YAAI,eAAe,EAAE,cAAc,gBAAgB,gBAAgB;AACjE,qBAAW,cAAc,aAAa;MAC1C;IACF;AACA,WAAO,EAAE,GAAG,GAAG,GAAG,OAAO,aAAa,GAAG,KAAK,GAAG,KAAK,YAAY,UAAS;EAC7E;AAEA,WAAS,aACP,UACA,OACA,GACA,GACA,KAAgB;AAEhB,UAAM,MAAM,OAAO,QAAQ,UAAU,GAAG,EAAE,GAAG,GAAG,MAAK,CAAE;AACvD,MAAE,KAAK,CAAC;AACR,MAAE,KAAK,CAAC;AACR,QAAI,KAAK,CAAC;AACV,WAAO;EACT;AAgBM,WAAU,OAAO,UAAiB,MAAa,MAAgB;AACnE,UAAM,EAAE,GAAG,GAAG,GAAG,OAAO,aAAa,GAAG,KAAK,GAAG,KAAK,WAAU,IAAK,WAClE,UACA,MACA,IAAI;AAEN,aAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,YAAMC,MAAK,cAAc;AACzB,eAAS,IAAI,GAAG,IAAI,aAAa;AAAK,UAAE,CAAC,IAAI,IAAIA,MAAK,CAAC;AACvD,eAAS,IAAI,GAAG,MAAM,GAAG,IAAI,IAAI,GAAG,KAAK;AACvC,iBAAS,GAAG,KAAK,GAAI,OAAO,aAAc,CAAC;AAC3C,mBAAU;MACZ;AACA,eAAS,IAAI,IAAI,KAAK,aAAa,KAAKA,KAAI,CAAC;AAC7C,iBAAU;AACV,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAE1B,cAAM,IAAI,IAAIA,MAAK,cAAc,EAAE,IAAI;AACvC,iBAAS,IAAI,GAAG,IAAI,aAAa;AAAK,cAAI,CAAC,IAAI,IAAIA,MAAK,CAAC,IAAI,EAAE,IAAI,cAAc,CAAC;AAClF,iBAAS,KAAK,GAAG,KAAKA,KAAI,CAAC;AAC3B,mBAAU;MACZ;IACF;AACA,WAAO,aAAa,UAAU,OAAO,GAAG,GAAG,GAAG;EAChD;;;ACjNA,MAAM,aAA6B,uBAAO,KAAK,KAAK,CAAC;AACrD,MAAM,OAAuB,uBAAO,EAAE;AAGtC,WAAS,QAAQ,GAAW,KAAK,OAAK;AACpC,QAAI;AAAI,aAAO,EAAE,GAAG,OAAO,IAAI,UAAU,GAAG,GAAG,OAAQ,KAAK,OAAQ,UAAU,EAAC;AAC/E,WAAO,EAAE,GAAG,OAAQ,KAAK,OAAQ,UAAU,IAAI,GAAG,GAAG,OAAO,IAAI,UAAU,IAAI,EAAC;EACjF;AAEA,WAAS,MAAM,KAAe,KAAK,OAAK;AACtC,QAAI,KAAK,IAAI,YAAY,IAAI,MAAM;AACnC,QAAI,KAAK,IAAI,YAAY,IAAI,MAAM;AACnC,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,YAAM,EAAE,GAAG,EAAC,IAAK,QAAQ,IAAI,CAAC,GAAG,EAAE;AACnC,OAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;IACxB;AACA,WAAO,CAAC,IAAI,EAAE;EAChB;AAgBA,MAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAK,IAAM,MAAO,KAAK;AAC5E,MAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAK,IAAM,MAAO,KAAK;AAE5E,MAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAM,IAAI,KAAQ,MAAO,KAAK;AACnF,MAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAM,IAAI,KAAQ,MAAO,KAAK;;;ACrBnF,MAAM,CAAC,SAAS,WAAW,UAAU,IAAoC,CAAC,CAAA,GAAI,CAAA,GAAI,CAAA,CAAE;AACpF,MAAM,MAAsB,uBAAO,CAAC;AACpC,MAAM,MAAsB,uBAAO,CAAC;AACpC,MAAM,MAAsB,uBAAO,CAAC;AACpC,MAAM,MAAsB,uBAAO,CAAC;AACpC,MAAM,QAAwB,uBAAO,GAAG;AACxC,MAAM,SAAyB,uBAAO,GAAI;AAC1C,WAAS,QAAQ,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,QAAQ,IAAI,SAAS;AAE9D,KAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC;AAChC,YAAQ,KAAK,KAAK,IAAI,IAAI,EAAE;AAE5B,cAAU,MAAQ,QAAQ,MAAM,QAAQ,KAAM,IAAK,EAAE;AAErD,QAAI,IAAI;AACR,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,WAAM,KAAK,OAAS,KAAK,OAAO,UAAW;AAC3C,UAAI,IAAI;AAAK,aAAK,QAAS,OAAuB,uBAAO,CAAC,KAAK;IACjE;AACA,eAAW,KAAK,CAAC;EACnB;AACA,MAAM,CAAC,aAAa,WAAW,IAAoB,sBAAM,YAAY,IAAI;AAGzE,MAAM,QAAQ,CAAC,GAAW,GAAW,MAAe,IAAI,KAAK,OAAO,GAAG,GAAG,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC;AAC7F,MAAM,QAAQ,CAAC,GAAW,GAAW,MAAe,IAAI,KAAK,OAAO,GAAG,GAAG,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC;AAGvF,WAAU,QAAQ,GAAgB,SAAiB,IAAE;AACzD,UAAM,IAAI,IAAI,YAAY,IAAI,CAAC;AAE/B,aAAS,QAAQ,KAAK,QAAQ,QAAQ,IAAI,SAAS;AAEjD,eAAS,IAAI,GAAG,IAAI,IAAI;AAAK,UAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AACvF,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AAC9B,cAAM,QAAQ,IAAI,KAAK;AACvB,cAAM,QAAQ,IAAI,KAAK;AACvB,cAAM,KAAK,EAAE,IAAI;AACjB,cAAM,KAAK,EAAE,OAAO,CAAC;AACrB,cAAM,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI;AACpC,cAAM,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACxC,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI;AAC/B,YAAE,IAAI,CAAC,KAAK;AACZ,YAAE,IAAI,IAAI,CAAC,KAAK;QAClB;MACF;AAEA,UAAI,OAAO,EAAE,CAAC;AACd,UAAI,OAAO,EAAE,CAAC;AACd,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,cAAM,QAAQ,UAAU,CAAC;AACzB,cAAM,KAAK,MAAM,MAAM,MAAM,KAAK;AAClC,cAAM,KAAK,MAAM,MAAM,MAAM,KAAK;AAClC,cAAM,KAAK,QAAQ,CAAC;AACpB,eAAO,EAAE,EAAE;AACX,eAAO,EAAE,KAAK,CAAC;AACf,UAAE,EAAE,IAAI;AACR,UAAE,KAAK,CAAC,IAAI;MACd;AAEA,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI;AAC/B,iBAAS,IAAI,GAAG,IAAI,IAAI;AAAK,YAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AAC3C,iBAAS,IAAI,GAAG,IAAI,IAAI;AAAK,YAAE,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,EAAE,IAAI,GAAG,IAAI,KAAK,EAAE;MAC5E;AAEA,QAAE,CAAC,KAAK,YAAY,KAAK;AACzB,QAAE,CAAC,KAAK,YAAY,KAAK;IAC3B;AACA,MAAE,KAAK,CAAC;EACV;AAEM,MAAO,SAAP,cAAsB,KAAY;;IAQtC,YACS,UACA,QACA,WACG,YAAY,OACZ,SAAiB,IAAE;AAE7B,YAAK;AANE,WAAA,WAAA;AACA,WAAA,SAAA;AACA,WAAA,YAAA;AACG,WAAA,YAAA;AACA,WAAA,SAAA;AAXF,WAAA,MAAM;AACN,WAAA,SAAS;AACT,WAAA,WAAW;AAEX,WAAA,YAAY;AAWpB,aAAO,SAAS;AAEhB,UAAI,KAAK,KAAK,YAAY,KAAK,YAAY;AACzC,cAAM,IAAI,MAAM,0CAA0C;AAC5D,WAAK,QAAQ,IAAI,WAAW,GAAG;AAC/B,WAAK,UAAU,IAAI,KAAK,KAAK;IAC/B;IACU,SAAM;AACd,cAAQ,KAAK,SAAS,KAAK,MAAM;AACjC,WAAK,SAAS;AACd,WAAK,MAAM;IACb;IACA,OAAO,MAAW;AAChB,aAAO,IAAI;AACX,YAAM,EAAE,UAAU,MAAK,IAAK;AAC5B,aAAO,QAAQ,IAAI;AACnB,YAAM,MAAM,KAAK;AACjB,eAAS,MAAM,GAAG,MAAM,OAAO;AAC7B,cAAM,OAAO,KAAK,IAAI,WAAW,KAAK,KAAK,MAAM,GAAG;AACpD,iBAAS,IAAI,GAAG,IAAI,MAAM;AAAK,gBAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AAC9D,YAAI,KAAK,QAAQ;AAAU,eAAK,OAAM;MACxC;AACA,aAAO;IACT;IACU,SAAM;AACd,UAAI,KAAK;AAAU;AACnB,WAAK,WAAW;AAChB,YAAM,EAAE,OAAO,QAAQ,KAAK,SAAQ,IAAK;AAEzC,YAAM,GAAG,KAAK;AACd,WAAK,SAAS,SAAU,KAAK,QAAQ,WAAW;AAAG,aAAK,OAAM;AAC9D,YAAM,WAAW,CAAC,KAAK;AACvB,WAAK,OAAM;IACb;IACU,UAAU,KAAe;AACjC,aAAO,MAAM,KAAK;AAClB,YAAM,GAAG;AACT,WAAK,OAAM;AACX,YAAM,YAAY,KAAK;AACvB,YAAM,EAAE,SAAQ,IAAK;AACrB,eAAS,MAAM,GAAG,MAAM,IAAI,QAAQ,MAAM,OAAO;AAC/C,YAAI,KAAK,UAAU;AAAU,eAAK,OAAM;AACxC,cAAM,OAAO,KAAK,IAAI,WAAW,KAAK,QAAQ,MAAM,GAAG;AACvD,YAAI,IAAI,UAAU,SAAS,KAAK,QAAQ,KAAK,SAAS,IAAI,GAAG,GAAG;AAChE,aAAK,UAAU;AACf,eAAO;MACT;AACA,aAAO;IACT;IACA,QAAQ,KAAe;AAErB,UAAI,CAAC,KAAK;AAAW,cAAM,IAAI,MAAM,uCAAuC;AAC5E,aAAO,KAAK,UAAU,GAAG;IAC3B;IACA,IAAIC,QAAa;AACf,aAAOA,MAAK;AACZ,aAAO,KAAK,QAAQ,IAAI,WAAWA,MAAK,CAAC;IAC3C;IACA,WAAW,KAAe;AACxB,aAAO,KAAK,IAAI;AAChB,UAAI,KAAK;AAAU,cAAM,IAAI,MAAM,6BAA6B;AAChE,WAAK,UAAU,GAAG;AAClB,WAAK,QAAO;AACZ,aAAO;IACT;IACA,SAAM;AACJ,aAAO,KAAK,WAAW,IAAI,WAAW,KAAK,SAAS,CAAC;IACvD;IACA,UAAO;AACL,WAAK,YAAY;AACjB,WAAK,MAAM,KAAK,CAAC;IACnB;IACA,WAAW,IAAW;AACpB,YAAM,EAAE,UAAU,QAAQ,WAAW,QAAQ,UAAS,IAAK;AAC3D,aAAA,KAAO,IAAI,OAAO,UAAU,QAAQ,WAAW,WAAW,MAAM;AAChE,SAAG,QAAQ,IAAI,KAAK,OAAO;AAC3B,SAAG,MAAM,KAAK;AACd,SAAG,SAAS,KAAK;AACjB,SAAG,WAAW,KAAK;AACnB,SAAG,SAAS;AAEZ,SAAG,SAAS;AACZ,SAAG,YAAY;AACf,SAAG,YAAY;AACf,SAAG,YAAY,KAAK;AACpB,aAAO;IACT;;AAGF,MAAM,MAAM,CAAC,QAAgB,UAAkB,cAC7C,gBAAgB,MAAM,IAAI,OAAO,UAAU,QAAQ,SAAS,CAAC;AAExD,MAAM,WAA2B,oBAAI,GAAM,KAAK,MAAM,CAAC;AAKvD,MAAM,WAA2B,oBAAI,GAAM,KAAK,MAAM,CAAC;AACvD,MAAM,WAA2B,oBAAI,GAAM,KAAK,MAAM,CAAC;AACvD,MAAM,WAA2B,oBAAI,GAAM,IAAI,MAAM,CAAC;AACtD,MAAM,aAA6B,oBAAI,GAAM,KAAK,MAAM,CAAC;AAKzD,MAAM,aAA6B,oBAAI,GAAM,KAAK,MAAM,CAAC;AACzD,MAAM,aAA6B,oBAAI,GAAM,KAAK,MAAM,CAAC;AACzD,MAAM,aAA6B,oBAAI,GAAM,IAAI,MAAM,CAAC;AAI/D,MAAM,WAAW,CAAC,QAAgB,UAAkB,cAClD,2BACE,CAAC,OAAkB,CAAA,MACjB,IAAI,OAAO,UAAU,QAAQ,KAAK,UAAU,SAAY,YAAY,KAAK,OAAO,IAAI,CAAC;AAGpF,MAAM,WAA2B,yBAAS,IAAM,KAAK,MAAM,CAAC;AAC5D,MAAM,WAA2B,yBAAS,IAAM,KAAK,MAAM,CAAC;;;AC9N5D,WAAS,qBAAqB;AACnC,WAAO;MACL,MAAM;MACN,WAAW;MACX,OAAO;IACT;EACF;ACNA,WAAS,aAAaC,UAAkE;AACtF,UAAM,CAAC,OAAO,OAAO,KAAK,IAAIA,SAAQ,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,SAAS,GAAG,EAAE,CAAC;AAC3E,WAAO,EAAE,OAAO,OAAO,MAAM;EAC/B;AAEA,WAAS,aACP,UACA,UAC0E;AAC1E,UAAM,UAAU,aAAa,QAAQ;AACrC,UAAM,UAAU,aAAa,QAAQ;AACrC,UAAM,QAAQ,QAAQ,QAAQ,QAAQ;AACtC,UAAM,QAAQ,QAAQ,QAAQ,QAAQ;AACtC,UAAM,QAAQ,QAAQ,QAAQ,QAAQ;AACtC,WAAO;MACL;MACA;MACA;MACA,iBAAiB,SAAS,SAAS;IACrC;EACF;AAYO,WAAS,QAAQ,UAAkB,UAA2B;AACnE,UAAM,EAAE,MAAM,IAAI,aAAa,UAAU,QAAQ;AACjD,WAAO,UAAU;EACnB;AAEO,WAAS,QAAQ,UAAkB,UAA2B;AACnE,UAAM,EAAE,MAAM,IAAI,aAAa,UAAU,QAAQ;AACjD,WAAO,UAAU;EACnB;AAEO,WAAS,QAAQ,UAAkB,UAA2B;AACnE,UAAM,EAAE,MAAM,IAAI,aAAa,UAAU,QAAQ;AACjD,WAAO,UAAU;EACnB;AC1CO,WAAS,kCAAkC,gBAAwB;AACxE,UAAM,EAAE,WAAW,iBAAiB,IAAI,mBAAmB;AAE3D,QAAI,qBAAqB,KAAK,cAAc,GAAG;AAE7C,cAAQ,KAAK,2DAA2D;kHACsC;IAChH;AAEA,WAAO;MACL;MACA,kBAAkB,QAAQ,gBAAgB,gBAAgB;MAC1D,kBAAkB,QAAQ,gBAAgB,gBAAgB;MAC1D,kBAAkB,QAAQ,gBAAgB,gBAAgB;IAC5D;EACF;ACqBO,MAAM,WAAW,mBAAmB;;;;;;;;;ACpCpC,MAAK,YAAL,kBAAKC,eAAL;AAELA,eAAA,eAAA,IAAgB;AAChBA,eAAA,+BAAA,IAAgC;AAChCA,eAAA,yBAAA,IAA0B;AAC1BA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,oBAAA,IAAqB;AACrBA,eAAA,wBAAA,IAAyB;AACzBA,eAAA,gBAAA,IAAiB;AACjBA,eAAA,oBAAA,IAAqB;AACrBA,eAAA,sBAAA,IAAuB;AACvBA,eAAA,gBAAA,IAAiB;AACjBA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,oBAAA,IAAqB;AACrBA,eAAA,iBAAA,IAAkB;AAClBA,eAAA,cAAA,IAAe;AACfA,eAAA,oBAAA,IAAqB;AACrBA,eAAA,8BAAA,IAA+B;AAG/BA,eAAA,wBAAA,IAAyB;AACzBA,eAAA,qBAAA,IAAsB;AACtBA,eAAA,sBAAA,IAAuB;AAGvBA,eAAA,aAAA,IAAc;AACdA,eAAA,wBAAA,IAAyB;AACzBA,eAAA,uBAAA,IAAwB;AACxBA,eAAA,kBAAA,IAAmB;AACnBA,eAAA,kBAAA,IAAmB;AACnBA,eAAA,oBAAA,IAAqB;AAGrBA,eAAA,oBAAA,IAAqB;AACrBA,eAAA,sBAAA,IAAuB;AACvBA,eAAA,sBAAA,IAAuB;AACvBA,eAAA,iBAAA,IAAkB;AAClBA,eAAA,mBAAA,IAAoB;AAGpBA,eAAA,cAAA,IAAe;AACfA,eAAA,cAAA,IAAe;AACfA,eAAA,cAAA,IAAe;AACfA,eAAA,qBAAA,IAAsB;AACtBA,eAAA,wBAAA,IAAyB;AACzBA,eAAA,aAAA,IAAc;AACdA,eAAA,0BAAA,IAA2B;AAC3BA,eAAA,iBAAA,IAAkB;AAClBA,eAAA,eAAA,IAAgB;AAChBA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,4BAAA,IAA6B;AAC7BA,eAAA,iBAAA,IAAkB;AAClBA,eAAA,sBAAA,IAAuB;AACvBA,eAAA,yBAAA,IAA0B;AAG1BA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,uBAAA,IAAwB;AACxBA,eAAA,oBAAA,IAAqB;AACrBA,eAAA,gCAAA,IAAiC;AACjCA,eAAA,2BAAA,IAA4B;AAC5BA,eAAA,4BAAA,IAA6B;AAC7BA,eAAA,4BAAA,IAA6B;AAC7BA,eAAA,0BAAA,IAA2B;AAC3BA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,qBAAA,IAAsB;AACtBA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,0BAAA,IAA2B;AAG3BA,eAAA,sBAAA,IAAuB;AAGvBA,eAAA,mBAAA,IAAoB;AACpBA,eAAA,kBAAA,IAAmB;AACnBA,eAAA,iBAAA,IAAkB;AAClBA,eAAA,cAAA,IAAe;AACfA,eAAA,kBAAA,IAAmB;AAGnBA,eAAA,kBAAA,IAAmB;AACnBA,eAAA,kBAAA,IAAmB;AACnBA,eAAA,0BAAA,IAA2B;AAG3BA,eAAA,0BAAA,IAA2B;AAC3BA,eAAA,mCAAA,IAAoC;AACpCA,eAAA,iCAAA,IAAkC;AAGlCA,eAAA,wBAAA,IAAyB;AAGzBA,eAAA,mBAAA,IAAoB;AAGpBA,eAAA,iBAAA,IAAkB;AAClBA,eAAA,4BAAA,IAA6B;AAG7BA,eAAA,sBAAA,IAAuB;AAtGb,WAAAA;EAAA,GAAA,aAAA,CAAA,CAAA;ACCL,MAAM,aAAN,cAAwB,MAAM;IAE1B,WAAW;IAEpB,OAAO,MAAM,GAAY;AACvB,YAAM,QAAQ;AAEd,UAAI,MAAM,SAAS,QAAW;AAC5B,cAAM,IAAI;UAAA;UAER;QACF;MACF;AAEA,YAAM,aAAa,OAAO,OAAO,SAAS;AAC1C,YAAM,cAAc,WAAW,SAAS,MAAM,IAAI;AAElD,UAAI,CAAC,aAAa;AAChB,cAAM,IAAI;UAAA;UAER,uBAAuB,MAAM,yBAAyB,WAAW,KAAK,IAAI;QAC5E;MACF;AAEA,aAAO,IAAI,WAAU,MAAM,MAAM,MAAM,OAAO;IAChD;IAEA;IAEA,YAAY,MAAiB,SAAiB;AAC5C,YAAM,OAAO;AACb,WAAK,OAAO;AACZ,WAAK,OAAO;IACd;IAEA,WAAW;AACT,YAAM,EAAE,MAAM,MAAM,SAAS,SAAS,IAAI;AAC1C,aAAO,EAAE,MAAM,MAAM,SAAS,SAAS;IACzC;EACF;AAvCO,MAAM,YAAN;AACL,EAAAC,eADW,WACK,SAAQ,SAAA;;;;;;;;;AEEnB,MAAM,mBAAmB,CAACC,QAAmB,cAAoC;AACtF,UAAM,SAAuB,CAAC;AAE9B,aAAS,SAAS,GAAG,SAASA,OAAM,QAAQ,UAAU,WAAW;AAC/D,YAAM,QAAQ,IAAI,WAAW,SAAS;AACtC,YAAM,IAAIA,OAAM,MAAM,QAAQ,SAAS,SAAS,CAAC;AACjD,aAAO,KAAK,KAAK;IACnB;AAEA,UAAM,YAAY,OAAO,OAAO,SAAS,CAAC;AAC1C,UAAM,iBAAiBA,OAAM,SAAS;AACtC,UAAM,oBAAoB,kBAAmB,IAAK,iBAAiB,KAAM;AACzE,UAAM,WAAW,UAAU,MAAM,GAAG,iBAAiB;AACrD,WAAO,OAAO,SAAS,CAAC,IAAI;AAE5B,WAAO;EACT;ACdO,MAAM,WAAW,CAAC,UAAiC;AAExD,QAAI,iBAAiB,YAAY;AAC/B,aAAO,IAAI,WAAW,KAAK;IAC7B;AAEA,QAAI,OAAO,UAAU,YAAY,MAAM,MAAM,0BAA0B,GAAG;AACxE,YAAM,SAAS,IAAI,YAAY,MAAM,SAAS,KAAK,CAAC;AACpD,UAAI,SAAS;AACb,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,eAAO,CAAC,IAAI,SAAS,MAAM,UAAU,QAAQ,SAAS,CAAC,GAAG,EAAE;AAC5D,kBAAU;MACZ;AACA,aAAO;IACT;AAEA,UAAM,IAAI,UAAU,UAAU,cAAc,yBAAyB;EACvE;AChBO,MAAMC,eAAc,CACzB,WACe;AACf,UAAM,aAAa,OAAO,IAAI,CAAC,UAAU;AACvC,UAAI,iBAAiB,YAAY;AAC/B,eAAO;MACT;AACA,aAAO,WAAW,KAAK,KAAK;IAC9B,CAAC;AAED,UAAM,YAAY,WAAW,OAAO,CAAC,OAAO,SAAS,QAAQ,KAAK,QAAQ,CAAC;AAC3E,UAAM,eAAe,IAAI,WAAW,SAAS;AAE7C,eAAW,OAAO,CAAC,QAAQ,WAAW;AACpC,mBAAa,IAAI,QAAQ,MAAM;AAC/B,aAAO,SAAS,OAAO;IACzB,GAAG,CAAC;AAEJ,WAAO;EACT;AAQO,MAAM,SAAS,CAAC,WAAiD;AACtE,UAAMD,SAAQ,OAAO,IAAI,CAAC,MAAM,SAAS,CAAC,CAAC;AAE3C,WAAOC,aAAYD,MAAK;EAC1B;ACrCA,MAAM,gBAAwB;AAKvB,WAAS,QAAQ,MAAyB;AAC/C,UAAMA,SAAQ,SAAS,IAAI;AAE3B,QAAI,SAAS;AACb,aAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ,KAAK;AACrC,YAAM,IAAIA,OAAM,CAAC;AACjB,gBAAU,eAAe,IAAI,QAAS,CAAC,IAAI,cAAc,IAAI,EAAI;IACnE;AACA,WAAO;EACT;AELA,MAAM,qBAA6B;AAWnC,MAAM,oBAA4B,OAAO,KAAK,EAAE,IAAI,OAAO,kBAAkB;AAQ7E,MAAM,cAAc,CAAC,OAAuB,KAAK,MAAM,KAAK,GAAI;AAQhE,MAAM,cAAc,CAAC,YAA4B,UAAU;AAQ3D,MAAM,qBAAqB,CAAC,UAC1B,OAAO,OAAO,KAAK,IAAI,iBAAiB;AAQ1C,MAAM,qBAAqB,CAAC,gBAC1B,OAAO,OAAO,WAAW,IAAI,iBAAiB;AAQhD,MAAM,0BAA0B,CAAC,UAC/B,YAAY,mBAAmB,KAAK,CAAC;AA8BhC,MAAM,YAAN,cAAuB,KAAqB;;;;;;;IASjD,OAAO,UAAU,OAAiC;AAChD,aAAO,IAAI,UAAS,wBAAwB,KAAK,CAAC;IACpD;;;;;IAMA,OAAO,qBAAqB,kBAAoC;AAC9D,aAAO,IAAI,UAAS,gBAAgB;IACtC;;;;;IAMA,OAAO,gBAAgB,aAA+B;AACpD,aAAO,IAAI,UAAS,YAAY,WAAW,CAAC;IAC9C;;;;IAKQ,YAAY,MAA8B;AAChD,YAAM,IAAI;IACZ;;;;;;IAOA,UAA0B;AACxB,aAAO,mBAAmB,KAAK,cAAc,CAAC;IAChD;;;;IAKA,qBAA6B;AAC3B,aAAO,KAAK,QAAQ;IACtB;;;;IAKA,gBAAwB;AACtB,aAAO,YAAY,KAAK,QAAQ,CAAC;IACnC;EACF;AA1DO,MAAM,WAAN;AACL,EAAAE,eADW,UACJ,cAA6B,EAAA;;;AKhGtC,MAAAC,iBAAmB;;;AOGZ,MAAM,UAAkB;;;ACC/B,WAAS,UAAU,OAAYC,OAAc,MAAY;AACrD,UAAM,QAAQA,MAAK,MAAM,GAAG,EAAE,IAAI,OAAK,EAAE,KAAI,CAAE;AAC/C,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,cAAQA,OAAM;QACV,KAAK;AACD;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACD,cAAI,OAAO,UAAWA,OAAM;AAAE;;;;AAI1C,UAAM,QAAa,IAAI,MAAM,0BAA2BA,OAAO;AAC/D,UAAM,OAAO;AACb,UAAM,WAAW,SAAU;AAC3B,UAAM,QAAQ;AAEd,UAAM;EACV;AAoBM,WAAU,iBACf,QACA,QACA,OAAqC;AAElC,aAAS,OAAO,QAAQ;AACpB,UAAI,QAAQ,OAAO,GAAG;AAEtB,YAAMC,QAAQ,QAAQ,MAAM,GAAG,IAAG;AAClC,UAAIA,OAAM;AAAE,kBAAU,OAAOA,OAAM,GAAG;;AAEtC,aAAO,eAAe,QAAQ,KAAK,EAAE,YAAY,MAAM,OAAO,UAAU,MAAK,CAAE;;EAEvF;;;AChCA,WAAS,UAAU,OAAU;AACzB,QAAI,SAAS,MAAM;AAAE,aAAO;;AAE5B,QAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,aAAO,OAAQ,MAAM,IAAI,SAAS,EAAG,KAAK,IAAI,IAAI;;AAGtD,QAAI,iBAAiB,YAAY;AAC7B,YAAM,MAAM;AACZ,UAAI,SAAS;AACb,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,kBAAU,IAAI,MAAM,CAAC,KAAK,CAAC;AAC3B,kBAAU,IAAI,MAAM,CAAC,IAAI,EAAG;;AAEhC,aAAO;;AAGX,QAAI,OAAO,UAAW,YAAY,OAAO,MAAM,WAAY,YAAY;AACnE,aAAO,UAAU,MAAM,OAAM,CAAE;;AAGnC,YAAQ,OAAO,OAAQ;MACnB,KAAK;MAAW,KAAK;AACjB,eAAO,MAAM,SAAQ;MACzB,KAAK;AACD,eAAO,OAAO,KAAK,EAAE,SAAQ;MACjC,KAAK;AACD,eAAQ,MAAO,SAAQ;MAC3B,KAAK;AACD,eAAO,KAAK,UAAU,KAAK;MAC/B,KAAK,UAAU;AACX,cAAM,OAAO,OAAO,KAAK,KAAK;AAC9B,aAAK,KAAI;AACT,eAAO,OAAO,KAAK,IAAI,CAAC,MAAM,GAAI,UAAU,CAAC,MAAQ,UAAU,MAAM,CAAC,CAAC,GAAI,EAAE,KAAK,IAAI,IAAI;;;AAIlG,WAAO;EACX;AAwkBM,WAAU,UAA8D,SAAiB,MAAS,MAAmB;AACvH;AACI,YAAM,UAAyB,CAAA;AAC/B,UAAI,MAAM;AACN,YAAI,aAAa,QAAQ,UAAU,QAAQ,UAAU,MAAM;AACvD,gBAAM,IAAI,MAAM,0CAA2C,UAAU,IAAI,GAAI;;AAEjF,mBAAW,OAAO,MAAM;AACpB,gBAAM,QAAc,KAAyB,GAAG;AAE5C,kBAAQ,KAAK,MAAM,MAAM,UAAU,KAAK,CAAC;;;AAOrD,cAAQ,KAAK,QAAS,MAAO;AAC7B,cAAQ,KAAK,WAAY,SAAU;AAEnC,UAAI,QAAQ,QAAQ;AAChB,mBAAW,OAAO,QAAQ,KAAK,IAAI,IAAI;;;AAI/C,QAAI;AACJ,YAAQ,MAAM;MACV,KAAK;AACD,gBAAQ,IAAI,UAAU,OAAO;AAC7B;MACJ,KAAK;MACL,KAAK;AACD,gBAAQ,IAAI,WAAW,OAAO;AAC9B;MACJ;AACI,gBAAQ,IAAI,MAAM,OAAO;;AAGjC,qBAA2C,OAAO,EAAE,KAAI,CAAE;AAE1D,QAAI,MAAM;AAAE,aAAO,OAAO,OAAO,IAAI;;AAErC,WAAU;EACd;AAQM,WAAU,OAA2D,OAAgB,SAAiB,MAAS,MAAmB;AACpI,QAAI,CAAC,OAAO;AAAE,YAAM,UAAU,SAAS,MAAM,IAAI;;EACrD;AAUM,WAAU,eAAe,OAAgB,SAAiB,MAAc,OAAc;AACxF,WAAO,OAAO,SAAS,oBAAoB,EAAE,UAAU,MAAM,MAAY,CAAE;EAC/E;AAiBA,MAAM,kBAAkB,CAAC,OAAO,OAAO,QAAQ,MAAM,EAAE,OAAO,CAAC,OAAO,SAAQ;AAC1E,QAAI;AAGA,UAAI,OAAO,UAAU,IAAI,MAAM,QAAQ;AAAE,cAAM,IAAI,MAAM,KAAK;;AAAI;AAGlE,UAAI,SAAS,OAAO;AAChB,cAAM,QAAQ,OAAO,aAAa,GAAI,EAAE,UAAU,KAAK;AACvD,cAAM,WAAW,OAAO,aAAa,KAAM,GAAM;AAEjD,YAAI,UAAU,UAAU;AAAE,gBAAM,IAAI,MAAM,QAAQ;;;AAItD,YAAM,KAAK,IAAI;aACX,OAAN;IAAa;AAEf,WAAO;EACX,GAAkB,CAAA,CAAE;AAKd,WAAU,gBAAgB,MAAY;AACxC,WAAO,gBAAgB,QAAQ,IAAI,KAAK,GAAG,+CAA+C,yBAAyB;MAC/G,WAAW;MAA8B,MAAM,EAAE,KAAI;KACxD;EACL;;;AC5tBA,WAAS,UAAU,OAAkB,MAAe,MAAc;AAC9D,QAAI,iBAAiB,YAAY;AAC7B,UAAI,MAAM;AAAE,eAAO,IAAI,WAAW,KAAK;;AACvC,aAAO;;AAGX,QAAI,OAAO,UAAW,YAAY,MAAM,MAAM,0BAA0B,GAAG;AACvE,YAAM,SAAS,IAAI,YAAY,MAAM,SAAS,KAAK,CAAC;AACpD,UAAI,SAAS;AACb,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,eAAO,CAAC,IAAI,SAAS,MAAM,UAAU,QAAQ,SAAS,CAAC,GAAG,EAAE;AAC5D,kBAAU;;AAEd,aAAO;;AAGX,mBAAe,OAAO,2BAA2B,QAAQ,SAAS,KAAK;EAC3E;AASM,WAAU,SAAS,OAAkB,MAAa;AACpD,WAAO,UAAU,OAAO,MAAM,KAAK;EACvC;AAqBM,WAAU,YAAY,OAAY,QAAyB;AAC7D,QAAI,OAAO,UAAW,YAAY,CAAC,MAAM,MAAM,kBAAkB,GAAG;AAChE,aAAO;;AAGX,QAAI,OAAO,WAAY,YAAY,MAAM,WAAW,IAAI,IAAI,QAAQ;AAAE,aAAO;;AAC7E,QAAI,WAAW,QAAS,MAAM,SAAS,MAAO,GAAG;AAAE,aAAO;;AAE1D,WAAO;EACX;AAUA,MAAMC,iBAAwB;AAKxB,WAAUC,SAAQ,MAAe;AACnC,UAAMC,SAAQ,SAAS,IAAI;AAE3B,QAAI,SAAS;AACb,aAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ,KAAK;AACnC,YAAM,IAAIA,OAAM,CAAC;AACjB,gBAAUF,gBAAe,IAAI,QAAS,CAAC,IAAIA,eAAc,IAAI,EAAI;;AAErE,WAAO;EACX;AAwBM,WAAU,UAAU,MAAiB,OAAgB,KAAY;AACnE,UAAMG,SAAQ,SAAS,IAAI;AAC3B,QAAI,OAAO,QAAQ,MAAMA,OAAM,QAAQ;AACnC,aAAO,OAAO,mCAAmC,kBAAkB;QAC/D,QAAQA;QAAO,QAAQA,OAAM;QAAQ,QAAQ;OAChD;;AAEL,WAAOC,SAAQD,OAAM,MAAO,SAAS,OAAQ,IAAG,OAAQ,OAAO,OAAQA,OAAM,SAAQ,GAAG,CAAC;EAC7F;;;ACxHA,MAAM,OAAO,OAAO,CAAC;AACrB,MAAM,OAAO,OAAO,CAAC;AAMrB,MAAM,WAAW;AAkEX,WAAU,UAAU,OAAqB,MAAa;AACxD,YAAQ,OAAO,OAAQ;MACnB,KAAK;AAAU,eAAO;MACtB,KAAK;AACD,uBAAe,OAAO,UAAU,KAAK,GAAG,aAAa,QAAQ,SAAS,KAAK;AAC3E,uBAAe,SAAS,CAAC,YAAY,SAAS,UAAU,YAAY,QAAQ,SAAS,KAAK;AAC1F,eAAO,OAAO,KAAK;MACvB,KAAK;AACD,YAAI;AACA,cAAI,UAAU,IAAI;AAAE,kBAAM,IAAI,MAAM,cAAc;;AAClD,cAAI,MAAM,CAAC,MAAM,OAAO,MAAM,CAAC,MAAM,KAAK;AACtC,mBAAO,CAAC,OAAO,MAAM,UAAU,CAAC,CAAC;;AAErC,iBAAO,OAAO,KAAK;iBACf,GAAN;AACE,yBAAe,OAAO,gCAAiC,EAAE,WAAY,QAAQ,SAAS,KAAK;;;AAGvG,mBAAe,OAAO,8BAA8B,QAAQ,SAAS,KAAK;EAC9E;AAMM,WAAU,QAAQ,OAAqB,MAAa;AACtD,UAAM,SAAS,UAAU,OAAO,IAAI;AACpC,WAAO,UAAU,MAAM,qCAAqC,iBAAiB;MACzE,OAAO;MAAY,WAAW;MAAW;KAC5C;AACD,WAAO;EACX;AAEA,MAAM,UAAU;AAMV,WAAU,SAAS,OAAgC;AACrD,QAAI,iBAAiB,YAAY;AAC7B,UAAI,SAAS;AACb,iBAAW,KAAK,OAAO;AACnB,kBAAU,QAAQ,KAAK,CAAC;AACxB,kBAAU,QAAQ,IAAI,EAAI;;AAE9B,aAAO,OAAO,MAAM;;AAGxB,WAAO,UAAU,KAAK;EAC1B;AAMM,WAAU,UAAU,OAAqB,MAAa;AACxD,YAAQ,OAAO,OAAQ;MACnB,KAAK;AACD,uBAAe,SAAS,CAAC,YAAY,SAAS,UAAU,YAAY,QAAQ,SAAS,KAAK;AAC1F,eAAO,OAAO,KAAK;MACvB,KAAK;AACD,uBAAe,OAAO,UAAU,KAAK,GAAG,aAAa,QAAQ,SAAS,KAAK;AAC3E,uBAAe,SAAS,CAAC,YAAY,SAAS,UAAU,YAAY,QAAQ,SAAS,KAAK;AAC1F,eAAO;MACX,KAAK;AACD,YAAI;AACA,cAAI,UAAU,IAAI;AAAE,kBAAM,IAAI,MAAM,cAAc;;AAClD,iBAAO,UAAU,OAAO,KAAK,GAAG,IAAI;iBAChC,GAAN;AACE,yBAAe,OAAO,2BAA4B,EAAE,WAAY,QAAQ,SAAS,KAAK;;;AAGlG,mBAAe,OAAO,yBAAyB,QAAQ,SAAS,KAAK;EACzE;AAeM,WAAU,QAAQ,QAAsB,QAAgB;AAC1D,UAAM,QAAQ,QAAQ,QAAQ,OAAO;AAErC,QAAI,SAAS,MAAM,SAAS,EAAE;AAE9B,QAAI,UAAU,MAAM;AAEhB,UAAI,OAAO,SAAS,GAAG;AAAE,iBAAS,MAAM;;WACrC;AACH,YAAM,QAAQ,UAAU,QAAQ,OAAO;AACvC,aAAO,QAAQ,KAAK,OAAO,QAAQ,wBAAyB,eAAgB,iBAAiB;QACzF,WAAW;QACX,OAAO;QACP,OAAO;OACV;AAGD,aAAO,OAAO,SAAU,QAAQ,GAAI;AAAE,iBAAS,MAAM;;;AAIzD,WAAO,OAAO;EAClB;;;ACxLA,MAAM,WAAW;AACjB,MAAI,SAAwC;AAE5C,WAAS,SAAS,QAAc;AAC5B,QAAI,UAAU,MAAM;AAChB,eAAS,CAAA;AACT,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,eAAO,SAAS,CAAC,CAAC,IAAI,OAAO,CAAC;;;AAGtC,UAAM,SAAS,OAAO,MAAM;AAC5B,mBAAe,UAAU,MAAM,wBAAwB,UAAU,MAAM;AACvE,WAAO;EACX;AAGA,MAAME,QAAO,OAAO,CAAC;AACrB,MAAM,QAAQ,OAAO,EAAE;AAKjB,WAAU,aAAa,QAAiB;AAC1C,QAAI,QAAQ,SAAS,SAAS,MAAM,CAAC;AACrC,QAAI,SAAS;AACb,WAAO,OAAO;AACV,eAAS,SAAS,OAAO,QAAQ,KAAK,CAAC,IAAI;AAC3C,eAAS;;AAEb,WAAO;EACX;AAKM,WAAU,aAAa,OAAa;AACtC,QAAI,SAASA;AACb,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,gBAAU;AACV,gBAAU,SAAS,MAAM,CAAC,CAAC;;AAE/B,WAAO;EACX;;;ACiBA,WAAS,UAAU,QAAyB,QAAgBC,QAAmBC,SAAuB,cAAqB;AACvH,mBAAe,OAAO,+BAAgC,WAAa,UAAW,SAASD,MAAK;EAChG;AAEA,WAAS,WAAW,QAAyB,QAAgBA,QAAmBC,SAAuB,cAAqB;AAGxH,QAAI,WAAW,gBAAgB,WAAW,uBAAuB;AAC7D,UAAI,IAAI;AACR,eAAS,IAAI,SAAS,GAAG,IAAID,OAAM,QAAQ,KAAK;AAC5C,YAAIA,OAAM,CAAC,KAAK,MAAM,GAAM;AAAE;;AAC9B;;AAEJ,aAAO;;AAKX,QAAI,WAAW,WAAW;AACtB,aAAOA,OAAM,SAAS,SAAS;;AAInC,WAAO;EACX;AAEA,WAAS,YAAY,QAAyB,QAAgBA,QAAmBC,SAAuB,cAAqB;AAGzH,QAAI,WAAW,YAAY;AACvB,qBAAe,OAAO,iBAAkB,UAAU,0CAA0C,gBAAgB,YAAY;AACxH,MAAAA,QAAO,KAAK,YAAY;AACxB,aAAO;;AAIX,IAAAA,QAAO,KAAK,KAAM;AAGlB,WAAO,WAAW,QAAQ,QAAQD,QAAOC,SAAQ,YAAY;EACjE;AAiBO,MAAM,iBAAkF,OAAO,OAAO;IACzG,OAAO;IACP,QAAQ;IACR,SAAS;GACZ;AAGD,WAAS,kBAAkB,QAAmB,SAAuB;AACjE,QAAI,WAAW,MAAM;AAAE,gBAAU,eAAe;;AAEhD,UAAMD,SAAQ,SAAS,QAAQ,OAAO;AAEtC,UAAM,SAAwB,CAAA;AAC9B,QAAI,IAAI;AAGR,WAAM,IAAIA,OAAM,QAAQ;AAEpB,YAAM,IAAIA,OAAM,GAAG;AAGnB,UAAI,KAAK,MAAM,GAAG;AACd,eAAO,KAAK,CAAC;AACb;;AAIJ,UAAI,cAA6B;AACjC,UAAI,eAA8B;AAGlC,WAAK,IAAI,SAAU,KAAM;AACrB,sBAAc;AACd,uBAAe;kBAGP,IAAI,SAAU,KAAM;AAC5B,sBAAc;AACd,uBAAe;kBAGP,IAAI,SAAU,KAAM;AAC5B,sBAAc;AACd,uBAAe;aAEZ;AACH,aAAK,IAAI,SAAU,KAAM;AACrB,eAAK,QAAQ,uBAAuB,IAAI,GAAGA,QAAO,MAAM;eACrD;AACH,eAAK,QAAQ,cAAc,IAAI,GAAGA,QAAO,MAAM;;AAEnD;;AAIJ,UAAI,IAAI,IAAI,eAAeA,OAAM,QAAQ;AACrC,aAAK,QAAQ,WAAW,IAAI,GAAGA,QAAO,MAAM;AAC5C;;AAIJ,UAAI,MAAqB,KAAM,KAAM,IAAI,cAAc,KAAM;AAE7D,eAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,YAAI,WAAWA,OAAM,CAAC;AAGtB,aAAK,WAAW,QAAS,KAAM;AAC3B,eAAK,QAAQ,oBAAoB,GAAGA,QAAO,MAAM;AACjD,gBAAM;AACN;;AACH;AAED,cAAO,OAAO,IAAM,WAAW;AAC/B;;AAIJ,UAAI,QAAQ,MAAM;AAAE;;AAGpB,UAAI,MAAM,SAAU;AAChB,aAAK,QAAQ,gBAAgB,IAAI,IAAI,aAAaA,QAAO,QAAQ,GAAG;AACpE;;AAIJ,UAAI,OAAO,SAAU,OAAO,OAAQ;AAChC,aAAK,QAAQ,mBAAmB,IAAI,IAAI,aAAaA,QAAO,QAAQ,GAAG;AACvE;;AAIJ,UAAI,OAAO,cAAc;AACrB,aAAK,QAAQ,YAAY,IAAI,IAAI,aAAaA,QAAO,QAAQ,GAAG;AAChE;;AAGJ,aAAO,KAAK,GAAG;;AAGnB,WAAO;EACX;AASM,WAAU,YAAY,KAAa,MAA+B;AAEpE,QAAI,QAAQ,MAAM;AACd,sBAAgB,IAAI;AACpB,YAAM,IAAI,UAAU,IAAI;;AAG5B,QAAI,SAAwB,CAAA;AAC5B,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAM,IAAI,IAAI,WAAW,CAAC;AAE1B,UAAI,IAAI,KAAM;AACV,eAAO,KAAK,CAAC;iBAEN,IAAI,MAAO;AAClB,eAAO,KAAM,KAAK,IAAK,GAAI;AAC3B,eAAO,KAAM,IAAI,KAAQ,GAAI;kBAErB,IAAI,UAAW,OAAQ;AAC/B;AACA,cAAM,KAAK,IAAI,WAAW,CAAC;AAE3B,uBAAe,IAAI,IAAI,WAAY,KAAK,WAAY,OAChD,0BAA0B,OAAO,GAAG;AAGxC,cAAM,OAAO,UAAY,IAAI,SAAW,OAAO,KAAK;AACpD,eAAO,KAAM,QAAQ,KAAM,GAAI;AAC/B,eAAO,KAAO,QAAQ,KAAM,KAAQ,GAAI;AACxC,eAAO,KAAO,QAAQ,IAAK,KAAQ,GAAI;AACvC,eAAO,KAAM,OAAO,KAAQ,GAAI;aAE7B;AACH,eAAO,KAAM,KAAK,KAAM,GAAI;AAC5B,eAAO,KAAO,KAAK,IAAK,KAAQ,GAAI;AACpC,eAAO,KAAM,IAAI,KAAQ,GAAI;;;AAIrC,WAAO,IAAI,WAAW,MAAM;EAChC;AAGA,WAAS,cAAc,YAAyB;AAC5C,WAAO,WAAW,IAAI,CAAC,cAAa;AAChC,UAAI,aAAa,OAAQ;AACrB,eAAO,OAAO,aAAa,SAAS;;AAExC,mBAAa;AACb,aAAO,OAAO,cACP,aAAa,KAAM,QAAS,QAC7B,YAAY,QAAS,KAAO;IAEtC,CAAC,EAAE,KAAK,EAAE;EACd;AASM,WAAU,aAAaE,QAAkB,SAAuB;AAClE,WAAO,cAAc,kBAAkBA,QAAO,OAAO,CAAC;EAC1D;;;ACxTA,MAAAC,iBAEO;;;ACWP,MAAI,SAAS;AAEb,MAAM,eAAe,SAAS,WAAgC,KAAiB,MAAgB;AAC3F,eAAO,2BAAW,WAAW,GAAG,EAAE,OAAO,IAAI,EAAE,OAAM;EACzD;AAEA,MAAI,gBAAgB;AAmBd,WAAU,YAAY,WAAgC,MAAiB,OAAgB;AACzF,UAAM,MAAM,SAAS,MAAM,KAAK;AAChC,UAAM,OAAO,SAAS,OAAO,MAAM;AACnC,WAAOC,SAAQ,cAAc,WAAW,KAAK,IAAI,CAAC;EACtD;AACA,cAAY,IAAI;AAChB,cAAY,OAAQ,WAAA;AAAa,aAAS;EAAM;AAChD,cAAY,WAAW,SAAS,MAAsF;AAClH,QAAI,QAAQ;AAAE,YAAM,IAAI,MAAM,uBAAuB;;AACrD,oBAAgB;EACpB;AACA,SAAO,OAAO,WAAW;;;AClDlB,WAASC,QAAO,GAAG;AACtB,QAAI,CAAC,OAAO,cAAc,CAAC,KAAK,IAAI;AAChC,YAAM,IAAI,MAAM,2BAA2B,GAAG;AAAA,EACtD;AACO,WAAS,KAAK,GAAG;AACpB,QAAI,OAAO,MAAM;AACb,YAAM,IAAI,MAAM,yBAAyB,GAAG;AAAA,EACpD;AACO,WAASC,OAAM,MAAM,SAAS;AACjC,QAAI,EAAE,aAAa;AACf,YAAM,IAAI,UAAU,qBAAqB;AAC7C,QAAI,QAAQ,SAAS,KAAK,CAAC,QAAQ,SAAS,EAAE,MAAM;AAChD,YAAM,IAAI,UAAU,iCAAiC,0BAA0B,EAAE,QAAQ;AAAA,EACjG;AACO,WAASC,MAAKA,OAAM;AACvB,QAAI,OAAOA,UAAS,cAAc,OAAOA,MAAK,WAAW;AACrD,YAAM,IAAI,MAAM,iDAAiD;AACrE,IAAAF,QAAOE,MAAK,SAAS;AACrB,IAAAF,QAAOE,MAAK,QAAQ;AAAA,EACxB;AACO,WAASC,QAAO,UAAU,gBAAgB,MAAM;AACnD,QAAI,SAAS;AACT,YAAM,IAAI,MAAM,kCAAkC;AACtD,QAAI,iBAAiB,SAAS;AAC1B,YAAM,IAAI,MAAM,uCAAuC;AAAA,EAC/D;AACO,WAASC,QAAO,KAAK,UAAU;AAClC,IAAAH,OAAM,GAAG;AACT,UAAM,MAAM,SAAS;AACrB,QAAI,IAAI,SAAS,KAAK;AAClB,YAAM,IAAI,MAAM,yDAAyD,KAAK;AAAA,IAClF;AAAA,EACJ;AACA,MAAMI,UAAS;AAAA,IACX,QAAAL;AAAA,IACA;AAAA,IACA,OAAAC;AAAA,IACA,MAAAC;AAAA,IACA,QAAAC;AAAA,IACA,QAAAC;AAAA,EACJ;AACA,MAAO,iBAAQC;;;ACzCf,MAAMC,cAAa,OAAO,KAAK,KAAK,CAAC;AACrC,MAAMC,QAAO,OAAO,EAAE;AAEf,WAASC,SAAQ,GAAG,KAAK,OAAO;AACnC,QAAI;AACA,aAAO,EAAE,GAAG,OAAO,IAAIF,WAAU,GAAG,GAAG,OAAQ,KAAKC,QAAQD,WAAU,EAAE;AAC5E,WAAO,EAAE,GAAG,OAAQ,KAAKC,QAAQD,WAAU,IAAI,GAAG,GAAG,OAAO,IAAIA,WAAU,IAAI,EAAE;AAAA,EACpF;AACO,WAASG,OAAM,KAAK,KAAK,OAAO;AACnC,QAAI,KAAK,IAAI,YAAY,IAAI,MAAM;AACnC,QAAI,KAAK,IAAI,YAAY,IAAI,MAAM;AACnC,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAM,EAAE,GAAG,EAAE,IAAID,SAAQ,IAAI,CAAC,GAAG,EAAE;AACnC,OAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AAAA,IAC1B;AACA,WAAO,CAAC,IAAI,EAAE;AAAA,EAClB;AACO,MAAM,QAAQ,CAAC,GAAG,MAAO,OAAO,MAAM,CAAC,KAAKD,QAAQ,OAAO,MAAM,CAAC;AAEzE,MAAM,QAAQ,CAAC,GAAG,GAAG,MAAM,MAAM;AACjC,MAAM,QAAQ,CAAC,GAAG,GAAG,MAAO,KAAM,KAAK,IAAO,MAAM;AAEpD,MAAM,SAAS,CAAC,GAAG,GAAG,MAAO,MAAM,IAAM,KAAM,KAAK;AACpD,MAAM,SAAS,CAAC,GAAG,GAAG,MAAO,KAAM,KAAK,IAAO,MAAM;AAErD,MAAM,SAAS,CAAC,GAAG,GAAG,MAAO,KAAM,KAAK,IAAO,MAAO,IAAI;AAC1D,MAAM,SAAS,CAAC,GAAG,GAAG,MAAO,MAAO,IAAI,KAAQ,KAAM,KAAK;AAE3D,MAAM,UAAU,CAAC,GAAG,MAAM;AAC1B,MAAM,UAAU,CAAC,GAAG,MAAM;AAE1B,MAAMG,UAAS,CAAC,GAAG,GAAG,MAAO,KAAK,IAAM,MAAO,KAAK;AACpD,MAAMC,UAAS,CAAC,GAAG,GAAG,MAAO,KAAK,IAAM,MAAO,KAAK;AAEpD,MAAMC,UAAS,CAAC,GAAG,GAAG,MAAO,KAAM,IAAI,KAAQ,MAAO,KAAK;AAC3D,MAAMC,UAAS,CAAC,GAAG,GAAG,MAAO,KAAM,IAAI,KAAQ,MAAO,KAAK;AAIpD,WAAS,IAAI,IAAI,IAAI,IAAI,IAAI;AAChC,UAAM,KAAK,OAAO,MAAM,OAAO;AAC/B,WAAO,EAAE,GAAI,KAAK,MAAO,IAAI,KAAK,KAAM,KAAM,GAAG,GAAG,IAAI,EAAE;AAAA,EAC9D;AAEA,MAAM,QAAQ,CAAC,IAAI,IAAI,QAAQ,OAAO,MAAM,OAAO,MAAM,OAAO;AAChE,MAAM,QAAQ,CAAC,KAAK,IAAI,IAAI,OAAQ,KAAK,KAAK,MAAO,MAAM,KAAK,KAAM,KAAM;AAC5E,MAAM,QAAQ,CAAC,IAAI,IAAI,IAAI,QAAQ,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO;AACjF,MAAM,QAAQ,CAAC,KAAK,IAAI,IAAI,IAAI,OAAQ,KAAK,KAAK,KAAK,MAAO,MAAM,KAAK,KAAM,KAAM;AACrF,MAAM,QAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,QAAQ,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO;AAClG,MAAM,QAAQ,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,OAAQ,KAAK,KAAK,KAAK,KAAK,MAAO,MAAM,KAAK,KAAM,KAAM;AAE9F,MAAM,MAAM;AAAA,IACR,SAAAL;AAAA,IAAS,OAAAC;AAAA,IAAO;AAAA,IAChB;AAAA,IAAO;AAAA,IACP;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IACxB;AAAA,IAAS;AAAA,IACT,QAAAC;AAAA,IAAQ,QAAAC;AAAA,IAAQ,QAAAC;AAAA,IAAQ,QAAAC;AAAA,IACxB;AAAA,IAAK;AAAA,IAAO;AAAA,IAAO;AAAA,IAAO;AAAA,IAAO;AAAA,IAAO;AAAA,EAC5C;AACA,MAAO,cAAQ;;;ACrDR,MAAMC,OAAM,CAAC,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,YAAY,KAAK,MAAM,IAAI,aAAa,CAAC,CAAC;AAE/F,MAAMC,cAAa,CAAC,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAGnF,MAAMC,QAAO,IAAI,WAAW,IAAI,YAAY,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM;AAGhF,MAAI,CAACA;AACD,UAAM,IAAI,MAAM,6CAA6C;AACjE,MAAM,QAAQ,MAAM,KAAK,EAAE,QAAQ,IAAI,GAAG,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC;AAkD5E,WAASC,aAAY,KAAK;AAC7B,QAAI,OAAO,QAAQ,UAAU;AACzB,YAAM,IAAI,UAAU,oCAAoC,OAAO,KAAK;AAAA,IACxE;AACA,WAAO,IAAI,YAAY,EAAE,OAAO,GAAG;AAAA,EACvC;AACO,WAASC,SAAQ,MAAM;AAC1B,QAAI,OAAO,SAAS;AAChB,aAAOD,aAAY,IAAI;AAC3B,QAAI,EAAE,gBAAgB;AAClB,YAAM,IAAI,UAAU,0CAA0C,OAAO,OAAO;AAChF,WAAO;AAAA,EACX;AAoBO,MAAME,QAAN,MAAW;AAAA;AAAA,IAEd,QAAQ;AACJ,aAAO,KAAK,WAAW;AAAA,IAC3B;AAAA,EACJ;AASO,WAASC,iBAAgB,iBAAiB;AAC7C,UAAM,QAAQ,CAAC,YAAY,gBAAgB,EAAE,OAAOC,SAAQ,OAAO,CAAC,EAAE,OAAO;AAC7E,UAAM,MAAM,gBAAgB;AAC5B,UAAM,YAAY,IAAI;AACtB,UAAM,WAAW,IAAI;AACrB,UAAM,SAAS,MAAM,gBAAgB;AACrC,WAAO;AAAA,EACX;AACO,WAAS,wBAAwB,UAAU;AAC9C,UAAM,QAAQ,CAAC,KAAK,SAAS,SAAS,IAAI,EAAE,OAAOA,SAAQ,GAAG,CAAC,EAAE,OAAO;AACxE,UAAM,MAAM,SAAS,CAAC,CAAC;AACvB,UAAM,YAAY,IAAI;AACtB,UAAM,WAAW,IAAI;AACrB,UAAM,SAAS,CAAC,SAAS,SAAS,IAAI;AACtC,WAAO;AAAA,EACX;;;AC3HA,MAAM,CAACC,UAASC,YAAWC,WAAU,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpD,MAAMC,OAAM,OAAO,CAAC;AACpB,MAAMC,OAAM,OAAO,CAAC;AACpB,MAAMC,OAAM,OAAO,CAAC;AACpB,MAAMC,OAAM,OAAO,CAAC;AACpB,MAAMC,SAAQ,OAAO,GAAG;AACxB,MAAMC,UAAS,OAAO,GAAI;AAC1B,WAAS,QAAQ,GAAG,IAAIJ,MAAK,IAAI,GAAG,IAAI,GAAG,QAAQ,IAAI,SAAS;AAE5D,KAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC;AAChC,IAAAJ,SAAQ,KAAK,KAAK,IAAI,IAAI,EAAE;AAE5B,IAAAC,WAAU,MAAQ,QAAQ,MAAM,QAAQ,KAAM,IAAK,EAAE;AAErD,QAAI,IAAIE;AACR,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,WAAM,KAAKC,QAAS,KAAKE,QAAOE,WAAWD;AAC3C,UAAI,IAAIF;AACJ,aAAKD,SAASA,QAAO,OAAO,CAAC,KAAKA;AAAA,IAC1C;AACA,IAAAF,YAAW,KAAK,CAAC;AAAA,EACrB;AACA,MAAM,CAACO,cAAaC,YAAW,IAAI,YAAI,MAAMR,aAAY,IAAI;AAE7D,MAAMS,SAAQ,CAAC,GAAG,GAAG,MAAM,IAAI,KAAK,YAAI,OAAO,GAAG,GAAG,CAAC,IAAI,YAAI,OAAO,GAAG,GAAG,CAAC;AAC5E,MAAMC,SAAQ,CAAC,GAAG,GAAG,MAAM,IAAI,KAAK,YAAI,OAAO,GAAG,GAAG,CAAC,IAAI,YAAI,OAAO,GAAG,GAAG,CAAC;AAErE,WAASC,SAAQ,GAAG,SAAS,IAAI;AACpC,UAAM,IAAI,IAAI,YAAY,IAAI,CAAC;AAE/B,aAAS,QAAQ,KAAK,QAAQ,QAAQ,IAAI,SAAS;AAE/C,eAAS,IAAI,GAAG,IAAI,IAAI;AACpB,UAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAC9D,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AAC5B,cAAM,QAAQ,IAAI,KAAK;AACvB,cAAM,QAAQ,IAAI,KAAK;AACvB,cAAM,KAAK,EAAE,IAAI;AACjB,cAAM,KAAK,EAAE,OAAO,CAAC;AACrB,cAAM,KAAKF,OAAM,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI;AACpC,cAAM,KAAKC,OAAM,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACxC,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI;AAC7B,YAAE,IAAI,CAAC,KAAK;AACZ,YAAE,IAAI,IAAI,CAAC,KAAK;AAAA,QACpB;AAAA,MACJ;AAEA,UAAI,OAAO,EAAE,CAAC;AACd,UAAI,OAAO,EAAE,CAAC;AACd,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,cAAM,QAAQX,WAAU,CAAC;AACzB,cAAM,KAAKU,OAAM,MAAM,MAAM,KAAK;AAClC,cAAM,KAAKC,OAAM,MAAM,MAAM,KAAK;AAClC,cAAM,KAAKZ,SAAQ,CAAC;AACpB,eAAO,EAAE,EAAE;AACX,eAAO,EAAE,KAAK,CAAC;AACf,UAAE,EAAE,IAAI;AACR,UAAE,KAAK,CAAC,IAAI;AAAA,MAChB;AAEA,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI;AAC7B,iBAAS,IAAI,GAAG,IAAI,IAAI;AACpB,YAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AAClB,iBAAS,IAAI,GAAG,IAAI,IAAI;AACpB,YAAE,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,EAAE,IAAI,GAAG,IAAI,KAAK,EAAE;AAAA,MACrD;AAEA,QAAE,CAAC,KAAKS,aAAY,KAAK;AACzB,QAAE,CAAC,KAAKC,aAAY,KAAK;AAAA,IAC7B;AACA,MAAE,KAAK,CAAC;AAAA,EACZ;AACO,MAAMI,UAAN,cAAqBC,MAAK;AAAA;AAAA,IAE7B,YAAY,UAAU,QAAQ,WAAW,YAAY,OAAO,SAAS,IAAI;AACrE,YAAM;AACN,WAAK,WAAW;AAChB,WAAK,SAAS;AACd,WAAK,YAAY;AACjB,WAAK,YAAY;AACjB,WAAK,SAAS;AACd,WAAK,MAAM;AACX,WAAK,SAAS;AACd,WAAK,WAAW;AAChB,WAAK,YAAY;AAEjB,qBAAO,OAAO,SAAS;AAEvB,UAAI,KAAK,KAAK,YAAY,KAAK,YAAY;AACvC,cAAM,IAAI,MAAM,0CAA0C;AAC9D,WAAK,QAAQ,IAAI,WAAW,GAAG;AAC/B,WAAK,UAAUC,KAAI,KAAK,KAAK;AAAA,IACjC;AAAA,IACA,SAAS;AACL,MAAAH,SAAQ,KAAK,SAAS,KAAK,MAAM;AACjC,WAAK,SAAS;AACd,WAAK,MAAM;AAAA,IACf;AAAA,IACA,OAAO,MAAM;AACT,qBAAO,OAAO,IAAI;AAClB,YAAM,EAAE,UAAU,MAAM,IAAI;AAC5B,aAAOI,SAAQ,IAAI;AACnB,YAAM,MAAM,KAAK;AACjB,eAAS,MAAM,GAAG,MAAM,OAAM;AAC1B,cAAM,OAAO,KAAK,IAAI,WAAW,KAAK,KAAK,MAAM,GAAG;AACpD,iBAAS,IAAI,GAAG,IAAI,MAAM;AACtB,gBAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AACnC,YAAI,KAAK,QAAQ;AACb,eAAK,OAAO;AAAA,MACpB;AACA,aAAO;AAAA,IACX;AAAA,IACA,SAAS;AACL,UAAI,KAAK;AACL;AACJ,WAAK,WAAW;AAChB,YAAM,EAAE,OAAO,QAAQ,KAAK,SAAS,IAAI;AAEzC,YAAM,GAAG,KAAK;AACd,WAAK,SAAS,SAAU,KAAK,QAAQ,WAAW;AAC5C,aAAK,OAAO;AAChB,YAAM,WAAW,CAAC,KAAK;AACvB,WAAK,OAAO;AAAA,IAChB;AAAA,IACA,UAAU,KAAK;AACX,qBAAO,OAAO,MAAM,KAAK;AACzB,qBAAO,MAAM,GAAG;AAChB,WAAK,OAAO;AACZ,YAAM,YAAY,KAAK;AACvB,YAAM,EAAE,SAAS,IAAI;AACrB,eAAS,MAAM,GAAG,MAAM,IAAI,QAAQ,MAAM,OAAM;AAC5C,YAAI,KAAK,UAAU;AACf,eAAK,OAAO;AAChB,cAAM,OAAO,KAAK,IAAI,WAAW,KAAK,QAAQ,MAAM,GAAG;AACvD,YAAI,IAAI,UAAU,SAAS,KAAK,QAAQ,KAAK,SAAS,IAAI,GAAG,GAAG;AAChE,aAAK,UAAU;AACf,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,KAAK;AAET,UAAI,CAAC,KAAK;AACN,cAAM,IAAI,MAAM,uCAAuC;AAC3D,aAAO,KAAK,UAAU,GAAG;AAAA,IAC7B;AAAA,IACA,IAAIC,QAAO;AACP,qBAAO,OAAOA,MAAK;AACnB,aAAO,KAAK,QAAQ,IAAI,WAAWA,MAAK,CAAC;AAAA,IAC7C;AAAA,IACA,WAAW,KAAK;AACZ,qBAAO,OAAO,KAAK,IAAI;AACvB,UAAI,KAAK;AACL,cAAM,IAAI,MAAM,6BAA6B;AACjD,WAAK,UAAU,GAAG;AAClB,WAAK,QAAQ;AACb,aAAO;AAAA,IACX;AAAA,IACA,SAAS;AACL,aAAO,KAAK,WAAW,IAAI,WAAW,KAAK,SAAS,CAAC;AAAA,IACzD;AAAA,IACA,UAAU;AACN,WAAK,YAAY;AACjB,WAAK,MAAM,KAAK,CAAC;AAAA,IACrB;AAAA,IACA,WAAW,IAAI;AACX,YAAM,EAAE,UAAU,QAAQ,WAAW,QAAQ,UAAU,IAAI;AAC3D,aAAO,KAAK,IAAIJ,QAAO,UAAU,QAAQ,WAAW,WAAW,MAAM;AACrE,SAAG,QAAQ,IAAI,KAAK,OAAO;AAC3B,SAAG,MAAM,KAAK;AACd,SAAG,SAAS,KAAK;AACjB,SAAG,WAAW,KAAK;AACnB,SAAG,SAAS;AAEZ,SAAG,SAAS;AACZ,SAAG,YAAY;AACf,SAAG,YAAY;AACf,SAAG,YAAY,KAAK;AACpB,aAAO;AAAA,IACX;AAAA,EACJ;AACA,MAAMK,OAAM,CAAC,QAAQ,UAAU,cAAcC,iBAAgB,MAAM,IAAIN,QAAO,UAAU,QAAQ,SAAS,CAAC;AACnG,MAAMO,YAAWF,KAAI,GAAM,KAAK,MAAM,CAAC;AAKvC,MAAMG,YAAWH,KAAI,GAAM,KAAK,MAAM,CAAC;AACvC,MAAMI,YAAWJ,KAAI,GAAM,KAAK,MAAM,CAAC;AACvC,MAAMK,YAAWL,KAAI,GAAM,IAAI,MAAM,CAAC;AACtC,MAAMM,cAAaN,KAAI,GAAM,KAAK,MAAM,CAAC;AAKzC,MAAMO,cAAaP,KAAI,GAAM,KAAK,MAAM,CAAC;AACzC,MAAMQ,cAAaR,KAAI,GAAM,KAAK,MAAM,CAAC;AACzC,MAAMS,cAAaT,KAAI,GAAM,IAAI,MAAM,CAAC;AAC/C,MAAMU,YAAW,CAAC,QAAQ,UAAU,cAAc,wBAAwB,CAAC,OAAO,CAAC,MAAM,IAAIf,QAAO,UAAU,QAAQ,KAAK,UAAU,SAAY,YAAY,KAAK,OAAO,IAAI,CAAC;AACvK,MAAMgB,YAAWD,UAAS,IAAM,KAAK,MAAM,CAAC;AAC5C,MAAME,YAAWF,UAAS,IAAM,KAAK,MAAM,CAAC;;;AC/LnD,MAAIG,UAAS;AAEb,MAAM,aAAa,SAAS,MAAgB;AACxC,WAAOC,YAAW,IAAI;EAC1B;AAEA,MAAI,cAA+C;AAwB7C,WAAU,UAAU,OAAgB;AACtC,UAAM,OAAO,SAAS,OAAO,MAAM;AACnC,WAAOC,SAAQ,YAAY,IAAI,CAAC;EACpC;AACA,YAAU,IAAI;AACd,YAAU,OAAO,WAAA;AAAmB,IAAAF,UAAS;EAAM;AACnD,YAAU,WAAW,SAAS,MAAqC;AAC/D,QAAIA,SAAQ;AAAE,YAAM,IAAI,UAAU,qBAAqB;;AACvD,kBAAc;EAClB;AACA,SAAO,OAAO,SAAS;;;AClDvB,WAASG,cAAa,MAAM,YAAY,OAAOC,OAAM;AACjD,QAAI,OAAO,KAAK,iBAAiB;AAC7B,aAAO,KAAK,aAAa,YAAY,OAAOA,KAAI;AACpD,UAAMC,QAAO,OAAO,EAAE;AACtB,UAAM,WAAW,OAAO,UAAU;AAClC,UAAM,KAAK,OAAQ,SAASA,QAAQ,QAAQ;AAC5C,UAAM,KAAK,OAAO,QAAQ,QAAQ;AAClC,UAAM,IAAID,QAAO,IAAI;AACrB,UAAM,IAAIA,QAAO,IAAI;AACrB,SAAK,UAAU,aAAa,GAAG,IAAIA,KAAI;AACvC,SAAK,UAAU,aAAa,GAAG,IAAIA,KAAI;AAAA,EAC3C;AAEO,MAAME,QAAN,cAAmBC,MAAK;AAAA,IAC3B,YAAY,UAAU,WAAW,WAAWH,OAAM;AAC9C,YAAM;AACN,WAAK,WAAW;AAChB,WAAK,YAAY;AACjB,WAAK,YAAY;AACjB,WAAK,OAAOA;AACZ,WAAK,WAAW;AAChB,WAAK,SAAS;AACd,WAAK,MAAM;AACX,WAAK,YAAY;AACjB,WAAK,SAAS,IAAI,WAAW,QAAQ;AACrC,WAAK,OAAOI,YAAW,KAAK,MAAM;AAAA,IACtC;AAAA,IACA,OAAO,MAAM;AACT,qBAAO,OAAO,IAAI;AAClB,YAAM,EAAE,MAAM,QAAQ,SAAS,IAAI;AACnC,aAAOC,SAAQ,IAAI;AACnB,YAAM,MAAM,KAAK;AACjB,eAAS,MAAM,GAAG,MAAM,OAAM;AAC1B,cAAM,OAAO,KAAK,IAAI,WAAW,KAAK,KAAK,MAAM,GAAG;AAEpD,YAAI,SAAS,UAAU;AACnB,gBAAM,WAAWD,YAAW,IAAI;AAChC,iBAAO,YAAY,MAAM,KAAK,OAAO;AACjC,iBAAK,QAAQ,UAAU,GAAG;AAC9B;AAAA,QACJ;AACA,eAAO,IAAI,KAAK,SAAS,KAAK,MAAM,IAAI,GAAG,KAAK,GAAG;AACnD,aAAK,OAAO;AACZ,eAAO;AACP,YAAI,KAAK,QAAQ,UAAU;AACvB,eAAK,QAAQ,MAAM,CAAC;AACpB,eAAK,MAAM;AAAA,QACf;AAAA,MACJ;AACA,WAAK,UAAU,KAAK;AACpB,WAAK,WAAW;AAChB,aAAO;AAAA,IACX;AAAA,IACA,WAAW,KAAK;AACZ,qBAAO,OAAO,IAAI;AAClB,qBAAO,OAAO,KAAK,IAAI;AACvB,WAAK,WAAW;AAIhB,YAAM,EAAE,QAAQ,MAAM,UAAU,MAAAJ,MAAK,IAAI;AACzC,UAAI,EAAE,IAAI,IAAI;AAEd,aAAO,KAAK,IAAI;AAChB,WAAK,OAAO,SAAS,GAAG,EAAE,KAAK,CAAC;AAEhC,UAAI,KAAK,YAAY,WAAW,KAAK;AACjC,aAAK,QAAQ,MAAM,CAAC;AACpB,cAAM;AAAA,MACV;AAEA,eAAS,IAAI,KAAK,IAAI,UAAU;AAC5B,eAAO,CAAC,IAAI;AAIhB,MAAAD,cAAa,MAAM,WAAW,GAAG,OAAO,KAAK,SAAS,CAAC,GAAGC,KAAI;AAC9D,WAAK,QAAQ,MAAM,CAAC;AACpB,YAAM,QAAQI,YAAW,GAAG;AAC5B,WAAK,IAAI,EAAE,QAAQ,CAAC,GAAG,MAAM,MAAM,UAAU,IAAI,GAAG,GAAGJ,KAAI,CAAC;AAAA,IAChE;AAAA,IACA,SAAS;AACL,YAAM,EAAE,QAAQ,UAAU,IAAI;AAC9B,WAAK,WAAW,MAAM;AACtB,YAAM,MAAM,OAAO,MAAM,GAAG,SAAS;AACrC,WAAK,QAAQ;AACb,aAAO;AAAA,IACX;AAAA,IACA,WAAW,IAAI;AACX,aAAO,KAAK,IAAI,KAAK,YAAY;AACjC,SAAG,IAAI,GAAG,KAAK,IAAI,CAAC;AACpB,YAAM,EAAE,UAAU,QAAQ,QAAQ,UAAU,WAAW,IAAI,IAAI;AAC/D,SAAG,SAAS;AACZ,SAAG,MAAM;AACT,SAAG,WAAW;AACd,SAAG,YAAY;AACf,UAAI,SAAS;AACT,WAAG,OAAO,IAAI,MAAM;AACxB,aAAO;AAAA,IACX;AAAA,EACJ;;;ACnGA,MAAM,MAAM,IAAI,WAAW,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC;AACjF,MAAM,KAAK,WAAW,KAAK,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC;AACtD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,KAAK,EAAE;AACzC,MAAI,OAAO,CAAC,EAAE;AACd,MAAI,OAAO,CAAC,EAAE;AACd,WAAS,IAAI,GAAG,IAAI,GAAG;AACnB,aAAS,KAAK,CAAC,MAAM,IAAI;AACrB,QAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;AACtC,MAAM,SAAS;AAAA,IACX,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IACvD,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IACvD,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IACvD,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,IACvD,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,EAC3D,EAAE,IAAI,CAAC,MAAM,IAAI,WAAW,CAAC,CAAC;AAC9B,MAAM,UAAU,KAAK,IAAI,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AACjE,MAAM,UAAU,KAAK,IAAI,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AACjE,MAAM,KAAK,IAAI,YAAY,CAAC,GAAY,YAAY,YAAY,YAAY,UAAU,CAAC;AACvF,MAAM,KAAK,IAAI,YAAY,CAAC,YAAY,YAAY,YAAY,YAAY,CAAU,CAAC;AAEvF,MAAMM,QAAO,CAAC,MAAM,UAAW,QAAQ,QAAU,SAAU,KAAK;AAEhE,WAAS,EAAE,OAAO,GAAG,GAAG,GAAG;AACvB,QAAI,UAAU;AACV,aAAO,IAAI,IAAI;AAAA,aACV,UAAU;AACf,aAAQ,IAAI,IAAM,CAAC,IAAI;AAAA,aAClB,UAAU;AACf,cAAQ,IAAI,CAAC,KAAK;AAAA,aACb,UAAU;AACf,aAAQ,IAAI,IAAM,IAAI,CAAC;AAAA;AAEvB,aAAO,KAAK,IAAI,CAAC;AAAA,EACzB;AAEA,MAAM,MAAM,IAAI,YAAY,EAAE;AACvB,MAAM,YAAN,cAAwBC,MAAK;AAAA,IAChC,cAAc;AACV,YAAM,IAAI,IAAI,GAAG,IAAI;AACrB,WAAK,KAAK,aAAa;AACvB,WAAK,KAAK,aAAa;AACvB,WAAK,KAAK,aAAa;AACvB,WAAK,KAAK,YAAa;AACvB,WAAK,KAAK,aAAa;AAAA,IAC3B;AAAA,IACA,MAAM;AACF,YAAM,EAAE,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI;AAC/B,aAAO,CAAC,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,IAC9B;AAAA,IACA,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACpB,WAAK,KAAK,KAAK;AACf,WAAK,KAAK,KAAK;AACf,WAAK,KAAK,KAAK;AACf,WAAK,KAAK,KAAK;AACf,WAAK,KAAK,KAAK;AAAA,IACnB;AAAA,IACA,QAAQ,MAAM,QAAQ;AAClB,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK,UAAU;AACnC,YAAI,CAAC,IAAI,KAAK,UAAU,QAAQ,IAAI;AAExC,UAAI,KAAK,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG,KAAK;AAGvI,eAAS,QAAQ,GAAG,QAAQ,GAAG,SAAS;AACpC,cAAM,SAAS,IAAI;AACnB,cAAM,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK;AACrC,cAAM,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK;AACvC,cAAM,KAAK,QAAQ,KAAK,GAAG,KAAK,QAAQ,KAAK;AAC7C,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,gBAAM,KAAMD,MAAK,KAAK,EAAE,OAAO,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,KAAM;AAC9E,eAAK,IAAI,KAAK,IAAI,KAAKA,MAAK,IAAI,EAAE,IAAI,GAAG,KAAK,IAAI,KAAK;AAAA,QAC3D;AAEA,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,gBAAME,MAAMF,MAAK,KAAK,EAAE,QAAQ,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,KAAM;AAC/E,eAAK,IAAI,KAAK,IAAI,KAAKA,MAAK,IAAI,EAAE,IAAI,GAAG,KAAK,IAAI,KAAKE;AAAA,QAC3D;AAAA,MACJ;AAEA,WAAK,IAAK,KAAK,KAAK,KAAK,KAAM,GAAI,KAAK,KAAK,KAAK,KAAM,GAAI,KAAK,KAAK,KAAK,KAAM,GAAI,KAAK,KAAK,KAAK,KAAM,GAAI,KAAK,KAAK,KAAK,KAAM,CAAC;AAAA,IACxI;AAAA,IACA,aAAa;AACT,UAAI,KAAK,CAAC;AAAA,IACd;AAAA,IACA,UAAU;AACN,WAAK,YAAY;AACjB,WAAK,OAAO,KAAK,CAAC;AAClB,WAAK,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,IAC1B;AAAA,EACJ;AAKO,MAAM,YAAYC,iBAAgB,MAAM,IAAI,UAAU,CAAC;;;AC3F9D,MAAIC,UAAS;AAEb,MAAM,aAAa,SAAS,MAAgB;AACxC,WAAO,UAAgB,IAAI;EAC/B;AAEA,MAAI,cAA+C;AAmB7C,WAAUC,WAAU,OAAgB;AACtC,UAAM,OAAO,SAAS,OAAO,MAAM;AACnC,WAAOC,SAAQ,YAAY,IAAI,CAAC;EACpC;AACA,EAAAD,WAAU,IAAI;AACd,EAAAA,WAAU,OAAO,WAAA;AAAmB,IAAAD,UAAS;EAAM;AACnD,EAAAC,WAAU,WAAW,SAAS,MAAqC;AAC/D,QAAID,SAAQ;AAAE,YAAM,IAAI,UAAU,qBAAqB;;AACvD,kBAAc;EAClB;AACA,SAAO,OAAOC,UAAS;;;AC3BvB,MAAIE,UAAS;AAEb,MAAM,UAAU,SAAS,UAAsB,MAAkB,YAAoB,QAAgB,MAAyB;AAC1H,eAAO,2BAAW,UAAU,MAAM,YAAY,QAAQ,IAAI;EAC9D;AAEA,MAAI,WAAW;AAsBT,WAAUC,QAAO,WAAsB,OAAkB,YAAoB,QAAgB,MAAyB;AACxH,UAAM,WAAW,SAAS,WAAW,UAAU;AAC/C,UAAM,OAAO,SAAS,OAAO,MAAM;AACnC,WAAOC,SAAQ,SAAS,UAAU,MAAM,YAAY,QAAQ,IAAI,CAAC;EACrE;AACA,EAAAD,QAAO,IAAI;AACX,EAAAA,QAAO,OAAO,WAAA;AAAmB,IAAAD,UAAS;EAAM;AAChD,EAAAC,QAAO,WAAW,SAAS,MAA0H;AACjJ,QAAID,SAAQ;AAAE,YAAM,IAAI,MAAM,kBAAkB;;AAChD,eAAW;EACf;AACA,SAAO,OAAOC,OAAM;;;AClDpB,MAAME,QAAO,OAAO,CAAC;AACrB,MAAM,QAAQ,OAAO,EAAE;AAEvB,WAAS,mBAAmB,SAAe;AAKvC,cAAU,QAAQ,YAAW;AAE7B,UAAM,QAAQ,QAAQ,UAAU,CAAC,EAAE,MAAM,EAAE;AAE3C,UAAM,WAAW,IAAI,WAAW,EAAE;AAClC,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,eAAS,CAAC,IAAI,MAAM,CAAC,EAAE,WAAW,CAAC;;AAGvC,UAAM,SAAS,SAAS,UAAU,QAAQ,CAAC;AAE3C,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AAC5B,UAAK,OAAO,KAAK,CAAC,KAAK,KAAM,GAAG;AAC5B,cAAM,CAAC,IAAI,MAAM,CAAC,EAAE,YAAW;;AAEnC,WAAK,OAAO,KAAK,CAAC,IAAI,OAAS,GAAG;AAC9B,cAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE,YAAW;;;AAI/C,WAAO,OAAO,MAAM,KAAK,EAAE;EAC/B;AAKA,MAAM,aAA8C,CAAA;AACpD,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAAE,eAAW,OAAO,CAAC,CAAC,IAAI,OAAO,CAAC;;AAC/D,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAAE,eAAW,OAAO,aAAa,KAAK,CAAC,CAAC,IAAI,OAAO,KAAK,CAAC;;AAItF,MAAM,aAAa;AAEnB,WAAS,aAAa,SAAe;AACjC,cAAU,QAAQ,YAAW;AAC7B,cAAU,QAAQ,UAAU,CAAC,IAAI,QAAQ,UAAU,GAAG,CAAC,IAAI;AAE3D,QAAI,WAAW,QAAQ,MAAM,EAAE,EAAE,IAAI,CAAC,MAAK;AAAG,aAAO,WAAW,CAAC;IAAG,CAAC,EAAE,KAAK,EAAE;AAG9E,WAAO,SAAS,UAAU,YAAW;AACjC,UAAIC,SAAQ,SAAS,UAAU,GAAG,UAAU;AAC5C,iBAAW,SAASA,QAAO,EAAE,IAAI,KAAK,SAAS,UAAUA,OAAM,MAAM;;AAGzE,QAAI,WAAW,OAAO,KAAM,SAAS,UAAU,EAAE,IAAI,EAAG;AACxD,WAAO,SAAS,SAAS,GAAG;AAAE,iBAAW,MAAM;;AAE/C,WAAO;EACX;AAEA,MAAM,SAAU,WAAA;AAAY;AACxB,UAAM,SAAiC,CAAA;AACvC,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,YAAM,MAAM,uCAAuC,CAAC;AACpD,aAAO,GAAG,IAAI,OAAO,CAAC;;AAE1B,WAAO;EACX,EAAE;AAEF,WAAS,WAAW,OAAa;AAC7B,YAAQ,MAAM,YAAW;AAEzB,QAAI,SAASC;AACb,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,eAAS,SAAS,QAAQ,OAAO,MAAM,CAAC,CAAC;;AAE7C,WAAO;EACX;AAqCM,WAAU,WAAW,SAAe;AAEtC,mBAAe,OAAO,YAAa,UAAU,mBAAmB,WAAW,OAAO;AAElF,QAAI,QAAQ,MAAM,wBAAwB,GAAG;AAGzC,UAAI,CAAC,QAAQ,WAAW,IAAI,GAAG;AAAE,kBAAU,OAAO;;AAElD,YAAM,SAAS,mBAAmB,OAAO;AAGzC,qBAAe,CAAC,QAAQ,MAAM,+BAA+B,KAAK,WAAW,SACzE,wBAAwB,WAAW,OAAO;AAE9C,aAAO;;AAIX,QAAI,QAAQ,MAAM,gCAAgC,GAAG;AAEjD,qBAAe,QAAQ,UAAU,GAAG,CAAC,MAAM,aAAa,OAAO,GAAG,qBAAqB,WAAW,OAAO;AAEzG,UAAI,SAAS,WAAW,QAAQ,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE;AACzD,aAAO,OAAO,SAAS,IAAI;AAAE,iBAAS,MAAM;;AAC5C,aAAQ,mBAAmB,OAAO,MAAM;;AAG5C,mBAAe,OAAO,mBAAmB,WAAW,OAAO;EAC/D;;;AC7IA,WAAS,aAAa,MAAc,aAA0B;AAC1D,WAAO;MACH,SAAS,WAAW,IAAI;MACxB,aAAa,YAAY,IAAI,CAAC,YAAY,UAAS;AAC/C,uBAAe,YAAY,YAAY,EAAE,GAAG,gBAAgB,eAAgB,UAAW,UAAU;AACjG,eAAO,WAAW,YAAW;MACjC,CAAC;;EAET;AAKM,WAAU,cAAc,OAAoB;AAC9C,QAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,aAA0F,MAAO,IAAI,CAAC,KAAK,UAAS;AAChH,YAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,yBAAe,IAAI,WAAW,GAAG,oBAAoB,SAAU,UAAW,GAAG;AAC7E,iBAAO,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;;AAEtC,uBAAe,OAAO,QAAQ,OAAO,QAAS,UAAU,4BAA4B,SAAS,KAAK;AAClG,eAAO,aAAa,IAAI,SAAS,IAAI,WAAW;MACpD,CAAC;;AAGL,mBAAe,SAAS,QAAQ,OAAO,UAAW,UAAU,uBAAuB,SAAS,KAAK;AAEjG,UAAM,SAAiE,OAAO,KAAK,KAAK,EAAE,IAAI,CAAC,SAAQ;AACnG,YAAM,cAAoC,MAAM,IAAI,EAAE,OAAO,CAAC,OAAO,eAAc;AAC/E,cAAM,UAAU,IAAI;AACpB,eAAO;MACX,GAAyB,CAAA,CAAG;AAC5B,aAAO,aAAa,MAAM,OAAO,KAAK,WAAW,EAAE,KAAI,CAAE;IAC7D,CAAC;AACD,WAAO,KAAK,CAAC,GAAG,MAAO,EAAE,QAAQ,cAAc,EAAE,OAAO,CAAE;AAC1D,WAAO;EACX;;;AClCA,MAAM,aAAa;AAKb,MAAO,gBAAP,MAAoB;;;;;;;IAOb;;;;IAKT,YAAY,MAAY;AACpB,uBAAgC,MAAM,EAAE,KAAI,CAAE;IAClD;;;;IAKA,QAAK;AACD,aAAO,IAAI,cAAc,KAAK,IAAI;IACtC;;AA+CE,MAAO,gBAAP,cAA6B,cAAa;;;;;;;IAOnC;;;;IAKA;;;;IAKA;;;;IAKA;;;;IAKA;;;;IAKA;;;;IAKA;;;;;;IAQT,YAAY,gBAAyB,OAAyB;AAC1D,UAAI,kBAAkB,MAAM;AAAE,yBAAiB;;AAC/C,YAAM,sCAAwC,kBAAkB,GAAK;AAErE,YAAM,QAAgC,EAAE,eAAc;AACtD,eAAS,IAAI,MAA+B,SAAe;AACvD,YAAI,SAAS,SAAS,CAAA,GAAK,IAAI;AAC/B,YAAI,SAAS,MAAM;AAAE,kBAAQ;;AAC7B,uBAAe,OAAO,UAAW,UAAU,qBAAsB,QAAS,SAAS,KAAK;AACxF,cAAM,IAAI,IAAI;MAClB;AAEA,UAAI,UAAU,IAAK;AACnB,UAAI,YAAY,IAAK;AACrB,UAAI,cAAc,CAAC;AACnB,UAAI,iBAAiB,EAAE;AACvB,UAAI,0BAA0B,IAAI;AAClC,UAAI,uBAAuB,IAAI;AAE/B,uBAAgC,MAAM,KAAK;IAC/C;IAEA,QAAK;AACD,aAAO,IAAI,cAAc,KAAK,gBAAgB,IAAI;IACtD;;AAYE,MAAO,YAAP,cAAyB,cAAa;;;;IAK/B;;;;IAKA;;;;;;IAOT,YAAY,SAAyB,eAA6B;AAC9D,YAAM,gCAAgC;AACtC,uBAA4B,MAAM;QAC9B,SAAU,WAAW;QACrB,eAAiB,iBAAiB,OAAQ,IAAG;OAChD;IACL;IAEA,QAAK;AACD,aAAO,IAAI,UAAU,KAAK,SAAS,KAAK,aAAa;IACzD;;AAwCE,MAAO,+BAAP,cAA4C,cAAa;IAClD;IACA;;;;IAKT,IAAI,MAAG;AAAa,aAAO,KAAK;IAAM;;;;IAKtC,IAAI,cAAW;AAA6K,aAAO,KAAK;IAAc;;;;;IAMtN,YAAY,KAAa,aAAmL;AACxM,YAAM,kDAAkD;AACxD,WAAK,OAAO;AACZ,WAAK,eAAe;IACxB;;IAGA,QAAK;AAAmC,aAAO;IAAM;;;;ACrMzD,MAAM,WAAgD,oBAAI,IAAG;AAOvD,MAAO,UAAP,MAAc;IAChB;IACA;IAEA;;;;IAKA,YAAY,MAAc,SAAqB;AAC3C,WAAK,QAAQ;AACb,WAAK,WAAW,UAAU,OAAO;AACjC,WAAK,WAAW,oBAAI,IAAG;IAC3B;;;;IAKA,SAAM;AACF,aAAO,EAAE,MAAM,KAAK,MAAM,SAAS,OAAO,KAAK,OAAO,EAAC;IAC3D;;;;;;;IAQA,IAAI,OAAI;AAAa,aAAO,KAAK;IAAO;IACxC,IAAI,KAAK,OAAa;AAAI,WAAK,QAAS;IAAO;;;;IAK/C,IAAI,UAAO;AAAa,aAAO,KAAK;IAAU;IAC9C,IAAI,QAAQ,OAAmB;AAAI,WAAK,WAAW,UAAU,OAAO,SAAS;IAAG;;;;;;;;IAShF,QAAQ,OAAiB;AACrB,UAAI,SAAS,MAAM;AAAE,eAAO;;AAE5B,UAAI,OAAO,UAAW,UAAU;AAC5B,YAAI;AACA,iBAAQ,KAAK,YAAY,UAAU,KAAK;iBACnC,OAAP;QAAc;AAChB,eAAQ,KAAK,SAAS;;AAG1B,UAAI,OAAO,UAAW,YAAY,OAAO,UAAW,UAAU;AAC1D,YAAI;AACA,iBAAQ,KAAK,YAAY,UAAU,KAAK;iBACnC,OAAP;QAAc;AAChB,eAAO;;AAGX,UAAI,OAAO,UAAW,UAAU;AAC5B,YAAI,MAAM,WAAW,MAAM;AACvB,cAAI;AACA,mBAAQ,KAAK,YAAY,UAAU,MAAM,OAAO;mBAC3C,OAAP;UAAc;AAChB,iBAAO;;AAEX,YAAI,MAAM,QAAQ,MAAM;AACpB,iBAAQ,KAAK,SAAS,MAAM;;AAEhC,eAAO;;AAGX,aAAO;IACX;;;;IAKA,IAAI,UAAO;AACP,aAAO,MAAM,KAAK,KAAK,SAAS,OAAM,CAAE;IAC5C;;;;;IAMA,aAAa,QAAqB;AAC9B,UAAI,KAAK,SAAS,IAAI,OAAO,IAAI,GAAG;AAChC,cAAM,IAAI,MAAM,mCAAoC,OAAO,OAAQ;;AAEvE,WAAK,SAAS,IAAI,OAAO,MAAM,OAAO,MAAK,CAAE;AAC7C,aAAO;IACX;;;;;;IAOA,UAAmD,MAAY;AAC3D,aAAW,KAAK,SAAS,IAAI,IAAI,KAAM;IAC3C;;;;;IAMA,WAAoD,UAAgB;AAChE,aAAkB,KAAK,QAAQ,OAAO,CAAC,MAAO,EAAE,KAAK,MAAM,GAAG,EAAE,CAAC,MAAM,QAAS;IACpF;;;;IAKA,QAAK;AACD,YAAMC,SAAQ,IAAI,QAAQ,KAAK,MAAM,KAAK,OAAO;AACjD,WAAK,QAAQ,QAAQ,CAAC,WAAU;AAC5B,QAAAA,OAAM,aAAa,OAAO,MAAK,CAAE;MACrC,CAAC;AACD,aAAOA;IACX;;;;;;;IAQA,oBAAoB,IAAmB;AACnC,YAAM,QAAQ,KAAK,UAAyB,oCAAoC,KAAM,IAAI,cAAa;AAEvG,UAAI,MAAM,MAAM;AAChB,UAAI,GAAG,MAAM,MAAM;AAAE,eAAO,MAAM;;AAClC,UAAI,GAAG,MAAM;AACT,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK,QAAQ,KAAK,GAAG;AACxC,cAAI,GAAG,KAAK,UAAU,GAAG,IAAI,CAAC,MAAM,MAAM;AACtC,mBAAO,MAAM;iBACV;AACH,mBAAO,MAAM;;;;AAKzB,UAAI,GAAG,YAAY;AACf,cAAM,aAAa,cAAc,GAAG,UAAU;AAC9C,mBAAW,QAAQ,YAAY;AAC3B,iBAAO,MAAM,sBAAsB,MAAM,yBAAyB,WAAW,IAAI,EAAE,YAAY;;;AAIvG,aAAO;IACX;;;;IAKA,OAAO,KAAK,SAAoB;AAC5B,2BAAoB;AAGpB,UAAI,WAAW,MAAM;AAAE,eAAO,QAAQ,KAAK,SAAS;;AAGpD,UAAI,OAAO,YAAa,UAAU;AAAE,kBAAU,OAAO,OAAO;;AAC5D,UAAI,OAAO,YAAa,YAAY,OAAO,YAAa,UAAU;AAC9D,cAAM,cAAc,SAAS,IAAI,OAAO;AACxC,YAAI,aAAa;AAAE,iBAAO,YAAW;;AACrC,YAAI,OAAO,YAAa,UAAU;AAC9B,iBAAO,IAAI,QAAQ,WAAW,OAAO;;AAGzC,uBAAe,OAAO,mBAAmB,WAAW,OAAO;;AAI/D,UAAI,OAAiB,QAAS,UAAW,YAAY;AACjD,cAAMA,SAAkB,QAAS,MAAK;AAGtC,eAAOA;;AAIX,UAAI,OAAO,YAAa,UAAU;AAC9B,uBAAe,OAAO,QAAQ,SAAU,YAAY,OAAO,QAAQ,YAAa,UAC5E,0CAA0C,WAAW,OAAO;AAEhE,cAAM,SAAS,IAAI,QAAiB,QAAQ,MAAgB,QAAQ,OAAQ;AAE5E,YAAU,QAAS,cAAoB,QAAS,cAAc,MAAM;AAChE,iBAAO,aAAa,IAAI,UAAgB,QAAS,YAAkB,QAAS,UAAU,CAAC;;AAO3F,eAAO;;AAGX,qBAAe,OAAO,mBAAmB,WAAW,OAAO;IAC/D;;;;;IAMA,OAAO,SAAS,eAAyC,aAA0B;AAC/E,UAAI,OAAO,kBAAmB,UAAU;AAAE,wBAAgB,OAAO,aAAa;;AAC9E,YAAM,WAAW,SAAS,IAAI,aAAa;AAC3C,UAAI,UAAU;AACV,uBAAe,OAAO,2BAA4B,KAAK,UAAU,SAAS,IAAI,KAAM,iBAAiB,aAAa;;AAEtH,eAAS,IAAI,eAAe,WAAW;IAC3C;;AAcJ,WAAS,WAAW,QAAyB,UAAgB;AACzD,UAAM,QAAQ,OAAO,MAAM;AAC3B,QAAI,CAAC,MAAM,MAAM,WAAW,GAAG;AAC3B,YAAM,IAAI,MAAM,uBAAwB,QAAS;;AAIrD,UAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,QAAI,MAAM,WAAW,GAAG;AAAE,YAAM,KAAK,EAAE;;AAGvC,QAAI,MAAM,WAAW,GAAG;AACpB,YAAM,IAAI,MAAM,uBAAwB,QAAS;;AAIrD,WAAO,MAAM,CAAC,EAAE,SAAS,UAAU;AAAE,YAAM,CAAC,KAAK;;AAGjD,QAAI,MAAM,CAAC,EAAE,SAAS,GAAG;AACrB,UAAI,OAAO,OAAO,MAAM,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC;AAC1C,UAAI,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,EAAE,MAAM,MAAM,GAAG;AAAE;;AAC5C,YAAM,CAAC,IAAI,KAAK,SAAQ;;AAG5B,WAAO,OAAO,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC;EACrC;AAGA,WAAS,oBAAoB,KAAW;AACpC,WAAO,IAAI,6BAA6B,KAAK,OAAO,cAAc,UAAU,YAAW;AAGnF,cAAQ,UAAU,cAAc,QAAQ;AAExC,UAAI;AACJ,UAAI;AACA,cAAM,CAAE,WAAW,QAAQ,IAAK,MAAM,QAAQ,IAAI;UAC9C,QAAQ,KAAI;UAAI,aAAY;SAC/B;AACD,mBAAW;AACX,cAAM,UAAU,SAAS,SAAS;AAClC,cAAM,UAAU;UACZ,UAAU,SAAS;UACnB,cAAc,WAAW,QAAQ,QAAQ,CAAC;UAC1C,sBAAsB,WAAW,QAAQ,gBAAgB,CAAC;;AAE9D,eAAO;eACF,OAAP;AACE,eAAO,OAAO,+CAAgD,KAAK,UAAU,QAAQ,GAAG,MAAO,gBAAgB,EAAE,SAAS,UAAU,MAAK,CAAE;;IAEnJ,CAAC;EACL;AAGA,WAAS,qBAAqB,sBAA4B;AACtD,WAAO,IAAI,6BAA6B,SAAS,OAAO,cAAc,UAAU,YAAW;AACvF,YAAM,UAAU,MAAM,aAAY;AAGlC,UAAI,QAAQ,gBAAgB,QAAQ,QAAQ,wBAAwB,MAAM;AACtE,eAAO;;AAIX,YAAM,UAAU,QAAQ,eAAe,QAAQ;AAC/C,aAAO;QACH,UAAU,QAAQ;QAClB,cAAe,UAAU;QACzB;;IAER,CAAC;EACL;AAGA,MAAI,WAAW;AACf,WAAS,uBAAoB;AACzB,QAAI,UAAU;AAAE;;AAChB,eAAW;AAGX,aAAS,YAAY,MAAc,SAAiB,SAAgB;AAChE,YAAM,OAAO,WAAA;AACT,cAAM,UAAU,IAAI,QAAQ,MAAM,OAAO;AAGzC,YAAI,QAAQ,cAAc,MAAM;AAC5B,kBAAQ,aAAa,IAAI,UAAU,MAAM,QAAQ,UAAU,CAAC;;AAGhE,gBAAQ,aAAa,IAAI,cAAa,CAAE;AAExC,SAAC,QAAQ,WAAW,CAAA,GAAI,QAAQ,CAAC,WAAU;AACvC,kBAAQ,aAAa,MAAM;QAC/B,CAAC;AAED,eAAO;MACX;AAGA,cAAQ,SAAS,MAAM,IAAI;AAC3B,cAAQ,SAAS,SAAS,IAAI;AAE9B,UAAI,QAAQ,UAAU;AAClB,gBAAQ,SAAS,QAAQ,CAACC,UAAQ;AAC9B,kBAAQ,SAASA,OAAM,IAAI;QAC/B,CAAC;;IAET;AAEA,gBAAY,WAAW,GAAG,EAAE,YAAY,GAAG,UAAU,CAAE,WAAW,EAAE,CAAE;AACtE,gBAAY,WAAW,GAAG,EAAE,YAAY,EAAC,CAAE;AAC3C,gBAAY,WAAW,GAAG,EAAE,YAAY,EAAC,CAAE;AAC3C,gBAAY,UAAU,GAAG,EAAE,YAAY,EAAC,CAAE;AAC1C,gBAAY,SAAS,IAAI,EAAE,YAAY,GAAE,CAAE;AAC3C,gBAAY,WAAW,UAAU,CAAA,CAAG;AAEpC,gBAAY,WAAW,IAAI,CAAA,CAAG;AAC9B,gBAAY,gBAAgB,GAAG,CAAA,CAAG;AAIlC,gBAAY,YAAY,OAAO;MAC3B,YAAY;KACf;AACD,gBAAY,mBAAmB,QAAQ,CAAA,CAAG;AAE1C,gBAAY,OAAO,IAAI,EAAE,YAAY,EAAC,CAAE;AACxC,gBAAY,QAAQ,IAAI,CAAA,CAAG;AAE3B,gBAAY,SAAS,OAAO,EAAE,YAAY,EAAC,CAAE;AAC7C,gBAAY,gBAAgB,OAAO,CAAA,CAAG;AAEtC,gBAAY,SAAS,KAAK;MACtB,YAAY;MACZ,SAAS;QACL,oBAAoB,0CAA2C;;KAEtE;AACD,gBAAY,gBAAgB,OAAO;MAC/B,UAAU,CAAE,eAAe,UAAU;MACrC,SAAS;QACL,oBAAoB,kDAAmD;;KAE9E;AAED,gBAAY,YAAY,IAAI;MACxB,YAAY;MACZ,SAAS;QACL,qBAAqB,OAAO,SAAS,CAAC;;KAE7C;AACD,gBAAY,mBAAmB,KAAK,CAAA,CAAG;AAEvC,gBAAY,QAAQ,KAAK,EAAE,YAAY,EAAC,CAAE;EAC9C;;;A1BjcA,MAAAC,iBAAmB;AEAnB,MAAAA,kBAAmB;ANIZ,MAAMC,UAAS,CAAC,WAAsC;AAC3D,UAAM,EAAE,UAAU,MAAM,GAAG,GAAG,GAAG,MAAM,IAAI;AAC3C,UAAM,aAAa,OAAY,UAAU,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,OAAO,MAAM,CAAC;AAE3E,WAAO;EACT;ACPO,MAAMC,aAAY,CAAC,SAAiC,WAAW,IAAI;AEAnE,MAAM,mBAAkD,CAC7D,QACA,WAAqB,aACN,WAAW,KAAK,OAAO,KAAK,QAAQ,QAAQ,CAAC;ACDvD,MAAMC,eAAwC,CAAC,WAA+B;AACnF,UAAM,eAAe,WAAW,KAAK,eAAAC,QAAO,YAAY,MAAM,CAAC;AAC/D,WAAO;EACT;ACLO,MAAM,mBAAkD,CAC7D,QACA,WAAqB,aACV,OAAO,KAAK,MAAM,EAAE,SAAS,QAAQ;AHMlD,MAAM,YAAY;AAKX,MAAM,kBAAgD,CAC3D,UACA,eACe;AACf,UAAM,aAAa,iBAAiB,OAAO,QAAQ,EAAE,UAAU,MAAM,GAAG,OAAO;AAC/E,UAAM,MAAMC,QAAO,YAAY,YAAY,KAAQ,IAAI,QAAQ;AAE/D,WAAO,SAAS,GAAG;EACrB;AAQO,MAAM,UAAgC,OAC3C,UACA,SACsB;AACtB,UAAM,KAAKF,aAAY,EAAE;AACzB,UAAM,OAAOA,aAAY,EAAE;AAC3B,UAAM,SAAS,gBAAgB,UAAU,IAAI;AAC7C,UAAM,aAAa,WAAW,KAAK,OAAO,KAAK,KAAK,UAAU,IAAI,GAAG,OAAO,CAAC;AAE7E,UAAM,SAAS,MAAMC,eAAAA,QAAO,eAAe,WAAW,QAAQ,EAAE;AAChE,QAAI,aAAa,OAAO,OAAO,UAAU;AACzC,iBAAa,OAAO,OAAO,CAAC,YAAY,OAAO,MAAM,CAAC,CAAC;AAEvD,WAAO;MACL,MAAM,iBAAiB,UAAU;MACjC,IAAI,iBAAiB,EAAE;MACvB,MAAM,iBAAiB,IAAI;IAC7B;EACF;AAMO,MAAM,UAAgC,OAC3C,UACA,aACe;AACf,UAAM,KAAK,iBAAiB,SAAS,EAAE;AACvC,UAAM,OAAO,iBAAiB,SAAS,IAAI;AAC3C,UAAM,SAAS,gBAAgB,UAAU,IAAI;AAC7C,UAAM,gBAAgB,iBAAiB,SAAS,IAAI;AAEpD,UAAM,WAAW,MAAMA,eAAAA,QAAO,iBAAiB,WAAW,QAAQ,EAAE;AACpE,UAAM,YAAY,SAAS,OAAO,aAAa;AAC/C,UAAM,SAAS,OAAO,OAAO,CAAC,WAAW,SAAS,MAAM,CAAC,CAAC;AAC1D,UAAM,gBAAgB,OAAO,KAAK,MAAM,EAAE,SAAS,OAAO;AAE1D,QAAI;AACF,aAAO,KAAK,MAAM,aAAa;IACjC,QAAA;AACE,YAAM,IAAI,UAAU,UAAU,qBAAqB,sBAAsB;IAC3E;EACF;AIzEA,iBAAsB,sBAAsB,MAAkB,KAAiB,IAAgB;AAC7F,UAAM,SAAS,MAAMA,gBAAAA,QAAO,eAAe,eAAe,IAAI,SAAS,GAAG,EAAE,GAAG,EAAE;AAEjF,UAAM,YAAY,OAAO,OAAO,CAAC,OAAO,OAAO,IAAI,GAAG,OAAO,MAAM,CAAC,CAAC;AAErE,WAAO,IAAI,WAAW,SAAS;EACjC;AAEA,iBAAsB,sBAAsB,MAAkB,KAAiB,IAAgB;AAC7F,UAAM,WAAWA,gBAAAA,QAAO,iBAAiB,eAAe,IAAI,SAAS,GAAG,EAAE,GAAG,EAAE;AAE/E,UAAM,YAAY,MAAM,OAAO,OAAO,CAAC,SAAS,OAAO,IAAI,GAAG,SAAS,MAAM,CAAC,CAAC;AAE/E,WAAO,IAAI,WAAW,SAAS;EACjC;ACPA,MAAM,MAAiB;IACrB;IACA;IACA;IACA;IACA;IACA,aAAAD;IACA,QAAAF;IACA,WAAAC;IACA;IACA;EACF;AAEA,MAAO,eAAQ;AClBR,MAAM;IACX,kBAAAI;IACA,SAAAC;IACA,SAAAC;IACA,iBAAAC;IACA,aAAAN;IACA,kBAAAO;IACA,QAAAT;IACA,WAAAC;IACA,uBAAAS;IACA,uBAAAC;EACF,IAAI;;;AuBgCG,MAAe,kBAAf,MAA+B;EAQtC;AAGO,MAAe,kBAAf,MAA+B;EAOtC;AAIO,MAAe,kBAAf,MAA+B;EAStC;AAEO,MAAe,mBAAf,cAAwC,gBAAgB;EAE/D;;;ACpEA,sBAAwB;AAOjB,MAAM,yBAAyB;AAO/B,WAAS,WAAW,SAAiC;AAC1D,WAAO,sBAAQ,OAAO,OAAO;EAC/B;AAOO,WAAS,SAAS,SAAqC;AAC5D,WAAO,sBAAQ;MACb;MACA,sBAAQ,QAAQ,SAAS,QAAQ,OAAO,CAAC,CAAC;IAC5C;EACF;AAOO,WAAS,SAAS,SAA6B;AACpD,WACE,OAAO,YAAY,YACnB,QAAQ,QAAQ,yBAAyB,CAAC,MAAM,KAChD,WAAW,OAAwB,EAAE,WAAW;EAEpD;AAOO,WAAS,OAAO,SAA0B;AAC/C,WAAO,QAAQ,WAAW,MAAM,qBAAqB,KAAK,OAAO;EACnE;AAOO,WAAS,YAAY,SAA0B;AACpD,WAAO,QAAQ,WAAW,OAAO,sBAAsB,KAAK,OAAO;EACrE;AAOO,WAAS,aAAa,SAA0B;AACrD,WAAO,QAAQ,WAAW,MAAM,qBAAqB,KAAK,OAAO;EACnE;AAOO,WAAS,mBAAmB,SAAoC;AACrE,WAAO,IAAI,WAAW,sBAAQ,UAAU,WAAW,OAAO,EAAE,KAAK,CAAC;EACpE;AAOO,WAAS,OAAO,SAAqC;AAC1D,QAAI,CAAC,SAAS,OAAO,GAAG;AACtB,YAAM,IAAI;QACR,UAAU,MAAM;QAChB,2BAA2B;MAC7B;IACF;AAEA,WAAO,QAAQ,mBAAmB,OAAO,CAAC;EAC5C;AAUO,WAAS,gBAAgB,SAAuC;AACrE,UAAM,EAAE,MAAM,IAAI,WAAW,OAAO;AACpC,WAAO,sBAAQ,OAAO,wBAAwB,KAAK;EACrD;AAOO,MAAM,aAAa,CAAC,gBAA+D;AACxF,QAAI,uBAAuB,iBAAiB;AAC1C,aAAO,YAAY;IACrB;AAEA,QAAI,uBAAuB,kBAAkB;AAC3C,aAAO,YAAY;IACrB;AAEA,WAAO;EACT;AAKO,MAAM,gBAAgB,MAAM,QAAQC,cAAY,EAAE,CAAC;AAUnD,MAAM,4BAA4B,CAAC,SAAsC;AAC9E,QAAIC;AAEJ,QAAI;AACF,UAAI,CAAC,OAAO,IAAI,GAAG;AACjB,cAAM,IAAI;UACR,UAAU,MAAM;UAChB,2BAA2B;QAC7B;MACF;AAEA,MAAAA,SAAQ,mBAAmB,SAAS,IAAI,CAAC;AACzC,MAAAA,SAAQ,QAAQA,OAAM,KAAK,GAAG,GAAG,EAAE,CAAC;IACtC,SAAS,OAAT;AACE,YAAM,IAAI;QACR,UAAU,MAAM;QAChB,0CAA0C;MAC5C;IACF;AAEA,WAAOA;EACT;AAWO,MAAM,8BAA8B,CAAC,YAAoC;AAC9E,QAAI,CAAC,aAAa,OAAO,GAAG;AAC1B,YAAM,IAAI,UAAU,UAAU,MAAM,qBAAqB,6BAA6B;IACxF;AAEA,WAAO,QAAQ,QAAQ,MAAM,4BAA4B;EAC3D;ACtKA,MAAqB,UAArB,cAAqC,gBAAgB;;IAE1C;;;;;IAMT,YAAY,SAAwB;AAClC,YAAM;AACN,WAAK,gBAAgB,gBAAgB,OAAO;AAE5C,UAAI,CAAC,SAAS,KAAK,aAAa,GAAG;AACjC,cAAM,IAAIC;UACRA,UAAU,MAAM;UAChB,2BAA2B;QAC7B;MACF;IACF;;;;;;IAOA,YAA2B;AACzB,aAAO,KAAK;IACd;;;;;;IAOA,SAAsB;AACpB,aAAO,OAAO,KAAK,aAAa;IAClC;;;;;;IAOA,UAAsB;AACpB,aAAO,mBAAmB,KAAK,aAAa;IAC9C;;;;;;IAOA,cAA2B;AACzB,aAAO,KAAK,OAAO;IACrB;;;;;;IAOA,WAAmB;AACjB,aAAO,KAAK;IACd;;;;;;IAOA,SAAiB;AACf,aAAO,KAAK;IACd;;;;;;IAOA,eAA2B;AACzB,YAAM,cAAc,OAAO,KAAK,aAAa;AAE7C,aAAO;QACL,OAAO,0BAA0B,WAAW;MAC9C;IACF;;;;;;IAOA,YAAqB;AACnB,aAAO;QACL,OAAO,KAAK,OAAO;MACrB;IACF;;;;;;IAOA,UAAkB;AAChB,aAAO,KAAK;IACd;;;;;;;IAQA,OAAO,OAAyB;AAC9B,aAAO,KAAK,kBAAkB,MAAM;IACtC;;;;;;;IAQA,OAAO,cAAc,WAA4B;AAC/C,UAAI,CAAC,YAAY,SAAS,GAAG;AAC3B,cAAM,IAAIA,UAAUA,UAAU,MAAM,oBAAoB,uBAAuB,YAAY;MAC7F;AAEA,YAAM,cAAcC,QAAQ,OAAOC,SAAS,SAAS,CAAC,CAAC;AACvD,aAAO,IAAI,QAAQ,SAAS,WAAW,CAAC;IAC1C;;;;;;;IAQA,OAAO,SAAS,aAA8B;AAC5C,UAAI,CAAC,OAAO,WAAW,GAAG;AACxB,cAAM,IAAIF;UACRA,UAAU,MAAM;UAChB,yBAAyB;QAC3B;MACF;AAEA,aAAO,IAAI,QAAQ,SAAS,WAAW,CAAC;IAC1C;;;;;;IAOA,OAAO,aAAsB;AAC3B,aAAO,KAAK,SAAS,cAAc,CAAC;IACtC;;;;;;;IAQA,OAAO,WAAW,SAA0B;AAC1C,aAAO,SAAS,OAAO,IAAI,IAAI,QAAQ,OAAwB,IAAI,KAAK,SAAS,OAAO;IAC1F;;;;;;IAOA,OAAO,oBAAoB,SAAoD;AAC7E,aAAO,OAAO,YAAY,WAAW,KAAK,WAAW,OAAO,IAAI;IAClE;;;;;;;;IASA,OAAO,iBAAiB,SAA4C;AAIlE,UAAI,OAAO,YAAY,YAAY,YAAY,SAAS;AACtD,eAAO,QAAQ,SAAS,QAAQ,OAAO,CAAC;MAC1C;AACA,UAAI,YAAY,OAAO,GAAG;AACxB,eAAO,QAAQ,cAAc,OAAO;MACtC;AAEA,UAAI,SAAS,OAAO,GAAG;AACrB,eAAO,IAAI,QAAQ,OAAwB;MAC7C;AAEA,UAAI,OAAO,OAAO,GAAG;AACnB,eAAO,QAAQ,SAAS,OAAO;MACjC;AAEA,UAAI,aAAa,OAAO,GAAG;AACzB,eAAO,QAAQ,eAAe,OAAO;MACvC;AAEA,YAAM,IAAIA;QACRA,UAAU,MAAM;QAChB;MACF;IACF;;;;;;IAOA,OAAO,eAAe,YAA6B;AACjD,UAAI,CAAC,aAAa,UAAU,GAAG;AAC7B,cAAM,IAAIA;UACRA,UAAU,MAAM;UAChB,wBAAwB;QAC1B;MACF;AAEA,YAAM,gBAAgB,4BAA4B,UAAU;AAE5D,aAAO,IAAI,QAAQ,SAAS,aAAa,CAAC;IAC5C;EACF;;;AC9PO,MAAM,cAAc;AACpB,MAAM,cAAc;;;ACA3B,kBAAiB;ACDV,MAAM,oBAAoB;AAC1B,MAAM,wBAAwB;AAC9B,MAAM,gBAAgB;ACCtB,WAAS,QAAQ,OAAyB,SAAyB;AACxE,UAAM,EAAE,YAAY,mBAAmB,eAAe,sBAAsB,IAAI,WAAW,CAAC;AAE5F,UAAM,CAAC,aAAa,KAAK,gBAAgB,GAAG,IAAI,OAAO,SAAS,KAAK,EAAE,MAAM,GAAG;AAChF,UAAM,aAAa;AACnB,UAAM,QAAQ,WAAW,QAAQ,YAAY,KAAK;AAClD,QAAI,WAAW,cAAc,MAAM,GAAG,SAAS;AAG/C,QAAI,eAAe,WAAW;AAC5B,YAAM,iBAAiB,SAAS,MAAM,YAAY;AAClD,YAAM,mBAAmB,iBAAiB,CAAC,EAAE,UAAU;AACvD,YAAM,YAAY,KAAK,IAAI,cAAc,gBAAgB;AACzD,iBAAW,SAAS,MAAM,GAAG,SAAS;IACxC;AAEA,UAAM,iBAAiB,WAAW,IAAI,aAAa;AACnD,WAAO,GAAG,QAAQ;EACpB;AFuBO,MAAM,KAAN,cAAiB,UAAAG,QAAuE;IAC7F,UAAU;IAEV,YAAY,OAAwB,MAAuB,QAA0B;AACnF,UAAI,UAAU;AACd,UAAI,SAAS;AAEb,UAAI,GAAG,KAAK,KAAK,GAAG;AAClB,kBAAU,MAAM,QAAQ;MAC1B,WAES,OAAO,UAAU,YAAY,MAAM,MAAM,GAAG,CAAC,MAAM,MAAM;AAChE,kBAAU,MAAM,UAAU,CAAC;AAC3B,iBAAS,QAAQ;MACnB;AAEA,YAAM,WAAW,OAAO,IAAI,SAAS,QAAQ,MAAM;IACrD;;;IAIA,SAAS,MAAuB,QAAiB;AAC/C,YAAMC,UAAS,MAAM,SAAS,MAAM,MAAM;AAE1C,UAAI,SAAS,MAAM,SAAS,OAAO;AACjC,eAAO,KAAKA;MACd;AAEA,aAAOA;IACT;IAEA,MAAM,cAA+B;AACnC,YAAMC,SAAQ,gBAAgB;AAC9B,YAAM,cAAcA,SAAQ;AAE5B,UAAI,KAAK,MAAM,GAAG;AAChB,cAAM,IAAI,UAAU,UAAU,mBAAmB,uCAAuC;MAC1F;AACA,UAAI,gBAAgB,KAAK,WAAW,IAAI,cAAc;AACpD,cAAM,IAAI;UACR,UAAU;UACV,kBAAkB,2CAA2C;QAC/D;MACF;AAEA,aAAO,KAAK,SAAS,IAAI,WAAW;IACtC;IAEA,QAAQ,cAAmC;AACzC,UAAI,KAAK,MAAM,GAAG;AAChB,cAAM,IAAI,UAAU,UAAU,mBAAmB,yCAAyC;MAC5F;AAEA,aAAO,WAAW,KAAK,KAAK,QAAQ,QAAW,YAAY,CAAC;IAC9D;IAEA,SAAiB;AACf,aAAO,KAAK,SAAS,EAAE;IACzB;IAEA,UAAkB;AAChB,aAAO,KAAK,SAAS;IACvB;IAEA,OAAO,SAAgC;AACrC,YAAM;QACJ,QAAQ;QACR,YAAY;QACZ,eAAe;MACjB,IAAI,WAAW,CAAC;AAEhB,YAAM,iBAAiB,KAAK,YAAY,KAAK;AAC7C,YAAM,iBAAiB,QAAQ,gBAAgB,EAAE,WAAW,aAAa,CAAC;AAG1E,UAAI,CAAC,WAAW,cAAc,GAAG;AAC/B,cAAM,CAAC,EAAE,mBAAmB,GAAG,IAAI,eAAe,MAAM,GAAG;AAC3D,cAAM,eAAe,iBAAiB,MAAM,OAAO;AAEnD,YAAI,gBAAgB,aAAa,SAAS,aAAa,QAAQ,IAAI,WAAW;AAC5E,gBAAM,CAAC,aAAa,GAAG,IAAI,eAAe,MAAM,GAAG;AACnD,iBAAO,GAAG,cAAc,iBAAiB,MAAM,GAAG,aAAa,QAAQ,CAAC;QAC1E;MACF;AAEA,aAAO;IACT;IAEA,YAAY,QAAgB,eAAuB;AACjD,YAAM,aAAa,KAAK,SAAS,EAAE,MAAM,GAAG,QAAQ,EAAE;AACtD,YAAM,gBAAgB,KAAK,SAAS,EAAE,MAAM,QAAQ,EAAE;AACtD,YAAM,SAAS,cAAc;AAC7B,YAAM,kBAAkB,MAAM,KAAK,EAAE,QAAQ,QAAQ,OAAO,CAAC,EAC1D,KAAK,GAAG,EACR,KAAK,EAAE;AACV,YAAM,iBAAiB,aAAa,GAAG,gBAAgB;AAEvD,aAAO,GAAG,iBAAiB,kBAAkB;IAC/C;;;IAIA,IAAI,GAAgB;AAClB,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;IAEA,IAAI,GAAgB;AAClB,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;IAEA,IAAI,GAAgB;AAClB,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;IAEA,IAAI,GAAgB;AAClB,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;IAEA,IAAI,GAAgB;AAClB,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;IAEA,IAAI,GAAgB;AAClB,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;IAEA,SAAS,GAAgB;AACvB,aAAO,KAAK,OAAO,GAAG,UAAU;IAClC;IAEA,GAAG,GAAqB;AACtB,aAAO,KAAK,OAAO,GAAG,IAAI;IAC5B;IAEA,IAAI,GAAqB;AACvB,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;IAEA,GAAG,GAAqB;AACtB,aAAO,KAAK,OAAO,GAAG,IAAI;IAC5B;IAEA,IAAI,GAAqB;AACvB,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;IAEA,GAAG,GAAqB;AACtB,aAAO,KAAK,OAAO,GAAG,IAAI;IAC5B;IAEA,IAAI,GAA2B;AAC7B,aAAO,KAAK,OAAO,GAAG,KAAK;IAC7B;;;IAIA,MAAU;AACR,aAAO,IAAI,GAAG,MAAM,IAAI,EAAE,QAAQ,CAAC;IACrC;IAEA,MAAU;AACR,aAAO,IAAI,GAAG,MAAM,IAAI,EAAE,QAAQ,CAAC;IACrC;IAEA,MAAU;AACR,aAAO,IAAI,GAAG,MAAM,IAAI,EAAE,QAAQ,CAAC;IACrC;IAEA,OAAO,OAAmB;AACxB,aAAO,IAAI,GAAG,MAAM,OAAO,KAAK,EAAE,QAAQ,CAAC;IAC7C;IAEA,SAAS,OAAmB;AAC1B,aAAO,IAAI,GAAG,MAAM,SAAS,KAAK,EAAE,QAAQ,CAAC;IAC/C;;;IAIA,OAAO,GAAY,YAAgE;AACjF,YAAMD,UAAS,MAAM,UAAU,EAAE,IAAI,GAAG,CAAC,CAAC;AAE1C,UAAI,GAAG,KAAKA,OAAM,GAAG;AACnB,eAAO,IAAI,GAAGA,QAAO,QAAQ,CAAC;MAChC;AAEA,UAAI,OAAOA,YAAW,WAAW;AAC/B,eAAOA;MACT;AAEA,aAAOA;IACT;IAEA,QAAQ;AACN,aAAO,IAAI,GAAG,KAAK,QAAQ,CAAC;IAC9B;IAEA,MAAM,KAAS,KAAS;AACtB,YAAMA,UAAgB,IAAI,UAAAD,QAAK,KAAK,QAAQ,CAAC,EAAS,MAAM,KAAK,GAAG;AAEpE,aAAO,IAAI,GAAGC,QAAO,QAAQ,CAAC;IAChC;IAEA,KAAK,GAAS;AACZ,YAAM,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,UAAAD,QAAK,KAAK,QAAQ,CAAC,EAAE,KAAK,CAAC;AAErD,aAAO;QACL,GAAG,IAAI,GAAG,EAAE,QAAQ,CAAC;QACrB,GAAG,IAAI,GAAG,EAAE,QAAQ,CAAC;QACrB,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC;MAC3B;IACF;IAEA,OAAO,KAAc,MAAe,UAA0C;AAC5E,YAAM,EAAE,KAAK,KAAAG,KAAI,IAAK,IAAI,UAAAH,QAAK,KAAK,QAAQ,CAAC,EAAS,OAAO,IAAI,GAAG,GAAG,GAAG,MAAM,QAAQ;AAExF,aAAO;QACL,KAAK,IAAI,GAAG,KAAK,QAAQ,CAAC;QAC1B,KAAK,IAAI,GAAGG,MAAK,QAAQ,CAAC;MAC5B;IACF;IAEA,SAAa;AACX,aAAO,KAAK,IAAI,KAAK,OAAO,IAAI,IAAI,GAAG,KAAK,OAAO,IAAI;IACzD;IAEA,qBAAyB;AACvB,aAAO,KAAK,OAAO,IAAI,IAAI,GAAG,CAAC,IAAI;IACrC;;EAEF;AAGO,MAAM,KAAK,CAAC,OAAwB,MAAuB,WAChE,IAAI,GAAG,OAAO,MAAM,MAAM;AAE5B,KAAG,aAAa,CAAC,OAAe,QAAgB,kBAAsB;AACpE,UAAM,eAAe,UAAU,MAAM,OAAO;AAC5C,UAAM,CAAC,aAAa,KAAK,gBAAgB,GAAG,IAAI,aAAa,MAAM,GAAG;AACtE,UAAM,SAAS,cAAc;AAE7B,QAAI,SAAS,OAAO;AAClB,YAAM,IAAI;QACR,UAAU;QACV,gCAAgC;MAClC;IACF;AAEA,UAAM,WAAW,MAAM,KAAK,EAAE,QAAQ,MAAM,CAAC,EAAE,KAAK,GAAG;AACvD,aAAS,OAAO,GAAG,QAAQ,aAAa;AACxC,UAAM,SAAS,GAAG,WAAW,WAAW,KAAK,EAAE,IAAI,SAAS,KAAK,EAAE;AACnE,WAAO,GAAG,MAAM;EAClB;AG9RO,WAASC,UAAS,OAAwB;AAC/C,WAAO,GAAG,KAAK,EAAE,SAAS;EAC5B;AAGO,WAAS,MAAM,OAAgB,cAA+B;AACnE,WAAO,GAAG,KAAK,EAAE,MAAM,YAAY;EACrC;AAGO,WAASC,SAAQ,OAAgB,cAAmC;AACzE,WAAO,GAAG,KAAK,EAAE,QAAQ,YAAY;EACvC;ACjBO,WAAS,OAAO,SAAkC;AACvD,WAAO,QAAQ,OAAW,CAAC,MAAM,QAAS,GAAG,GAAG,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,MAAO,GAAG,CAAC,CAAC;EACrF;;;ACMO,MAAM,iBAAiB,CAAC,qBAAqD;AAClF,QAAI;AACJ,QAAI;AACJ,QAAIC;AACJ,QAAI,MAAM,QAAQ,gBAAgB,GAAG;AACnC,eAAS,iBAAiB,CAAC;AAC3B,gBAAU,iBAAiB,CAAC,KAAK;AACjC,MAAAA,OAAM,iBAAiB,CAAC,KAAK;AAAA,IAC/B,OAAO;AACL,eAAS,iBAAiB;AAC1B,gBAAU,iBAAiB,WAAW;AACtC,MAAAA,OAAM,iBAAiB,OAAO;AAAA,IAChC;AAEA,UAAM,WAAW,GAAG,MAAM;AAC1B,WAAO;AAAA,MACL,SAAS,QAAQ,OAAO;AAAA,MACxB,QAAQ,SAAS,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI;AAAA,MACjC,KAAKA,OAAM,GAAGA,IAAG,IAAI;AAAA,IACvB;AAAA,EACF;AAQO,MAAM,mBAAmB,CAAC,WAAoD;AACnF,UAAM,EAAE,QAAQ,QAAQ,IAAI;AAE5B,UAAM,iBAAiB,CAAC,GAAG,OAAO,cAAc;AAEhD,UAAM,WAAW,eAAe,UAAU,CAAC,iBAAiB,aAAa,YAAY,OAAO;AAE5F,QAAI,aAAa,IAAI;AACnB,qBAAe,QAAQ,EAAE,SAAS,eAAe,QAAQ,EAAE,OAAO,IAAI,MAAM;AAAA,IAC9E,OAAO;AACL,qBAAe,KAAK,EAAE,SAAS,OAAO,CAAC;AAAA,IACzC;AAEA,WAAO;AAAA,EACT;;;AC7CO,WAASC,QAAO,MAAyB;AAC9C,WAAO,QAAQ,OAAc,SAAS,IAAI,CAAC,CAAC;EAC9C;AAQO,WAASC,MAAK,MAAyB;AAC5C,WAAOD,QAAO,IAAI;EACpB;AAKO,WAAS,gBAAgB,OAA2B;AACzD,UAAM,cAAc,OAAO,KAAK;AAChC,UAAM,SAAS,IAAI,YAAY,CAAC;AAChC,UAAM,WAAW,IAAI,SAAS,MAAM;AACpC,aAAS,aAAa,GAAG,aAAa,KAAK;AAC3C,WAAO,IAAI,WAAW,SAAS,MAAM;EACvC;AAQO,WAAS,YAAY,KAAa;AACvC,WAAOC,MAAK,kBAAiB,KAAK,OAAO,CAAC;EAC5C;;;;;;;;;;;;;;;;;;;;;;ACVO,MAAe,QAAf,MAA2D;IACvD;IACA;IACA;IAET,YAAY,MAAcC,OAAc,eAAuB;AAC7D,WAAK,OAAO;AACZ,WAAK,OAAOA;AACZ,WAAK,gBAAgB;IACvB;EAKF;AE3CO,MAAM,gBAAgB;AACtB,MAAM,iBAAiB;AACvB,MAAM,iBAAiB;AACvB,MAAM,iBAAiB;AACvB,MAAM,kBAAkB;AACxB,MAAM,qBAAqB;AAC3B,MAAM,uBAAuB;AAC7B,MAAM,kBAAkB;AACxB,MAAM,kBAAkB;AACxB,MAAM,kBAAkB;AACxB,MAAM,oBAAoB;AAC1B,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AACzB,MAAM,wBAAwB;AAC9B,MAAM,uBAAuB;AAC7B,MAAM,cAAc;AACpB,MAAM,aAAa;AACnB,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,MAAM,aAAa;AACnB,MAAM,eAAe;AAIrB,MAAM,cAAc;AACpB,MAAM,cAAc;AAIpB,MAAM,YAAY;AAClB,MAAM,WAAW;AAEjB,MAAM,eAAe;AAErB,MAAM,cAAc;AACpB,MAAM,YAAY;AAClB,MAAM,SAAS,YAAY;AAC3B,MAAM,iBAAiB,YAAY;AACnC,MAAM,YAAY,KAAK,KAAK;AAE5B,MAAM,sBAAsB,CAAC,EAAE,UAAU,MAC9C;EACA;;EAEA,aAAa,eAAe;AAGvB,MAAM,oBACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAGK,MAAM,wBACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAGK,MAAM,2BACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AE/EF,MAAM,iBAA0D;IAC9D,KAAK;IACL,MAAM,YAAY;EACpB;AAEO,MAAM,iBAAN,cAA6B,MAAmB;IACrD,YAAY,UAA8B;AACxC,YAAM,aAAa,UAAU,eAAe,QAAQ,CAAC;IACvD;IAEA,OAAO,OAA4B;AACjC,UAAIC;AAEJ,UAAI;AACF,QAAAA,SAAQC,SAAQ,OAAO,KAAK,aAAa;MAC3C,SAAS,OAAT;AACE,cAAM,IAAI,UAAU,UAAU,cAAc,WAAW,KAAK,OAAO;MACrE;AAEA,aAAOD;IACT;IAEA,OAAO,MAAkB,QAA8B;AACrD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAI,UAAU,UAAU,cAAc,WAAW,KAAK,iBAAiB;MAC/E;AAEA,UAAIA,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,aAAa;AAC1D,MAAAA,SAAQA,OAAM,MAAM,GAAG,KAAK,aAAa;AAEzC,UAAIA,OAAM,WAAW,KAAK,eAAe;AACvC,cAAM,IAAI,UAAU,UAAU,cAAc,WAAW,KAAK,sBAAsB;MACpF;AAEA,aAAO,CAAC,GAAGA,MAAK,GAAG,SAAS,KAAK,aAAa;IAChD;EACF;AD5BA,MAAM,qBAAqB;AACpB,MAAM,qBAAqB,qBAAqB;AAEvD,MAAM,2BAA2B;AAC1B,MAAM,wBAAwB,2BAA2B;AAIzD,WAAS,sBAAsB,OAA4D;AAChG,UAAM,eAA4B,CAAC;AAEnC,QAAI,aAAa;AACjB,UAAM,UAAU,MAAM,IAAI,CAAC,SAAS;AAClC,YAAM,cAAe,KAAmC;AACxD,UAAI,aAAa;AACf,eAAO,QAAQ,WAAW,EAAE,QAAQ,CAAC,CAAC,cAAc,KAAK,MAAM;AAC7D,uBAAa,SAAS,cAAc,EAAE,IAAI,UAAU,IAAI;QAC1D,CAAC;MACH;AAEA,YAAM,YAAY,SAAS,IAAI;AAC/B,oBAAc,UAAU,aAAa;AAErC,aAAO;IACT,CAAC;AAED,UAAM,SAAS,QAAQ,OAAO,CAAC,OAAO,SAAS,QAAQ,KAAK,QAAQ,CAAC;AACrE,UAAM,SAAoC,IAAI,WAAW,MAAM;AAE/D,YAAQ,OAAO,CAAC,QAAQ,WAAW;AACjC,aAAO,IAAI,QAAQ,MAAM;AACzB,aAAO,SAAS,OAAO;IACzB,GAAG,CAAC;AAGJ,QAAI,OAAO,KAAK,YAAY,EAAE,QAAQ;AACpC,aAAO,cAAc;IACvB;AAEA,WAAO;EACT;AAEO,WAAS,kBACd,SACA,YACA,YACY;AACZ,QAAI,CAAC,QAAQ,aAAa;AACxB,aAAO,OAAO,CAAC,OAAO,CAAC;IACzB;AAEA,QAAI,8BAA8B;AAClC,QAAI,iBAAiB;AACrB,WAAO,QAAQ,QAAQ,WAAW,EAAE,QAAQ,CAAC,CAAC,cAAc,KAAK,MAAM;AAErE,YAAM,gBAAgB,SAAS,cAAc,EAAE,IAAI;AACnD,YAAM,gBAAgB,IAAI,eAAe,KAAK,EAAE;QAC9C,aAAa,aAAa;MAC5B;AACA,qBAAe,IAAI,eAAe,aAAa;AAG/C,YAAM,eAAe,MAAM;;QAEvB;UACE;UACA;UACA,aAAa,MAAM,aAAa;QAClC;UACA;AACJ,uBAAiB,OAAO,CAAC,gBAAgB,YAAY,CAAC;AAEtD,qCAA+B,aAAa;IAC9C,CAAC;AAED,WAAO;EACT;AAsBO,MAAM,gBAAgB,CAAC,MAAkB,SAAS,cAA4B;AACnF,UAAM,SAAS,CAAC;AAChB,QAAI,SAAS;AACb,QAAI,QAAQ,KAAK,MAAM,QAAQ,SAAS,MAAM;AAC9C,WAAO,MAAM,QAAQ;AACnB,aAAO,KAAK,KAAK;AACjB,gBAAU;AACV,cAAQ,KAAK,MAAM,QAAQ,SAAS,MAAM;IAC5C;AAEA,WAAO;EACT;AAMO,MAAM,gBAAgB,CAACE,UAAiB;AAC7C,YAAQA,OAAM;MACZ,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK,QAAQ;AACX,eAAO;MACT;MACA,SAAS;AACP,eAAO;MACT;IACF;EACF;AAEO,MAAM,aAAa,CAACA,UACzBA,UAAS,kBAAkBA,UAAS,oBAAoBA,UAAS;AAE5D,WAAS,YACd,KACA,WACA,UAAuB,MAAM;AAC3B,UAAM,IAAIC,UAAUC,UAAU,mBAAmB,iCAAiC;EACpF,GACG;AACH,UAAM,QAAQ,IAAI,KAAK,SAAS;AAChC,QAAI,UAAU,QAAW;AACvB,cAAQ;IACV;AAEA,WAAO;EACT;AAQO,MAAM,uBAAuB,CAAC,WAAmB,SAAS,cAAc;AAExE,MAAM,qBAAqB,CAAC,WAAmB,YAAa,SAAS;AAErE,MAAM,qBAAqB,CAAC,YAAwB;AACzD,QAAI,qBAAqB,QAAQ,MAAM,GAAG;AACxC,aAAO;IACT;AACA,UAAM,UAAU,IAAI,WAAW,YAAa,QAAQ,SAAS,SAAU;AACvE,WAAOC,aAAY,CAAC,SAAS,OAAO,CAAC;EACvC;AF1KO,MAAM,aAAN,cAA+C,MAGpD;IACA;IACA;IAEA,YAAY,OAAe,QAAgB;AACzC,YAAM,SAAS,IAAI,MAAM,SAAS,WAAW,SAAS,MAAM,aAAa;AACzE,WAAK,QAAQ;AACb,WAAK,SAAS;IAChB;IAEA,OAAO,OAAyC;AAC9C,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,IAAIF,UAAUC,UAAU,cAAc,uBAAuB;MACrE;AAEA,UAAI,KAAK,WAAW,MAAM,QAAQ;AAChC,cAAM,IAAID,UAAUC,UAAU,cAAc,+BAA+B;MAC7E;AAEA,aAAO,sBAAsB,MAAM,KAAK,KAAK,EAAE,IAAI,CAAC,MAAM,KAAK,MAAM,OAAO,CAAC,CAAC,CAAC;IACjF;IAEA,OAAO,MAAkB,QAAkD;AACzE,UAAI,KAAK,SAAS,KAAK,iBAAiB,KAAK,SAAS,WAAW;AAC/D,cAAM,IAAID,UAAUC,UAAU,cAAc,0BAA0B;MACxE;AAEA,UAAI,YAAY;AAChB,YAAM,eAAe,MAAM,KAAK,MAAM,EACnC,KAAK,CAAC,EACN,IAAI,MAAM;AACT,YAAI;AACJ,SAAC,SAAS,SAAS,IAAI,KAAK,MAAM,OAAO,MAAM,SAAS;AACxD,eAAO;MACT,CAAC;AAEH,aAAO,CAAC,cAAwC,SAAS;IAC3D;EACF;AI5CO,MAAM,YAAN,cAAwB,MAAsB;IACnD,cAAc;AACZ,YAAM,QAAQ,QAAQ,YAAY,CAAC;IACrC;IAEA,OAAO,OAA2B;AAChC,UAAI;AACJ,UAAI;AACF,uBAAeE,SAAS,KAAK;MAC/B,SAAS,OAAT;AACE,cAAM,IAAIH,UAAUC,UAAU,cAAc,WAAW,KAAK,OAAO;MACrE;AACA,UAAI,aAAa,WAAW,KAAK,eAAe;AAC9C,cAAM,IAAID,UAAUC,UAAU,cAAc,WAAW,KAAK,OAAO;MACrE;AACA,aAAO;IACT;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAID,UAAUC,UAAU,cAAc,yBAAyB;MACvE;AAEA,UAAIJ,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,aAAa;AAE1D,YAAM,UAAUO,GAAGP,MAAK;AACxB,UAAI,QAAQ,OAAO,GAAG;AACpB,QAAAA,SAAQ,IAAI,WAAW,EAAE;MAC3B;AAEA,UAAIA,OAAM,WAAW,KAAK,eAAe;AACvC,cAAM,IAAIG,UAAUC,UAAU,cAAc,8BAA8B;MAC5E;AAEA,aAAO,CAAC,MAAMJ,QAAO,EAAE,GAAG,SAAS,EAAE;IACvC;EACF;ACpCO,MAAM,YAAN,cAAwB,MAAsB;IACnD,cAAc;AACZ,YAAM,QAAQ,eAAe,YAAY,CAAC;IAC5C;IAEA,OAAO,OAA2B;AAChC,UAAI;AACJ,UAAI;AACF,uBAAeM,SAAS,KAAK;MAC/B,SAAS,OAAT;AACE,cAAM,IAAIH,UAAUC,UAAU,cAAc,WAAW,KAAK,OAAO;MACrE;AACA,UAAI,aAAa,WAAW,KAAK,eAAe;AAC9C,cAAM,IAAID,UAAUC,UAAU,cAAc,WAAW,KAAK,OAAO;MACrE;AACA,aAAO;IACT;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAID,UAAUC,UAAU,cAAc,yBAAyB;MACvE;AAEA,UAAIJ,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,aAAa;AAE1D,YAAM,UAAUO,GAAGP,MAAK;AACxB,UAAI,QAAQ,OAAO,GAAG;AACpB,QAAAA,SAAQ,IAAI,WAAW,EAAE;MAC3B;AAEA,UAAIA,OAAM,WAAW,KAAK,eAAe;AACvC,cAAM,IAAIG,UAAUC,UAAU,cAAc,8BAA8B;MAC5E;AAEA,aAAO,CAACI,MAAMR,QAAO,KAAK,aAAa,GAAG,SAAS,KAAK,aAAa;IACvE;EACF;ACrCO,MAAM,eAAN,cAA2B,MAAwB;IACxD;IACA;IAEA,YACE,UAA2B;MACzB,cAAc;MACd,eAAe;IACjB,GACA;AACA,YAAM,gBAAgB,QAAQ,eAAe,IAAI;AAEjD,YAAM,WAAW,WAAW,aAAa;AAEzC,WAAK,gBAAgB;AACrB,WAAK,UAAU;IACjB;IAEA,OAAO,OAA4B;AACjC,YAAM,aAAa,UAAU,QAAQ,UAAU;AAE/C,UAAI,CAAC,YAAY;AACf,cAAM,IAAIG,UAAUC,UAAU,cAAc,wBAAwB;MACtE;AAEA,YAAMK,UAAqBR,SAAQ,QAAQ,IAAI,GAAG,KAAK,aAAa;AAEpE,UAAI,KAAK,QAAQ,eAAe;AAC9B,eAAOQ,QAAO,QAAQ;MACxB;AAEA,aAAOA;IACT;IAEA,OAAO,MAAkB,QAAmC;AAC1D,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIN,UAAUC,UAAU,cAAc,4BAA4B;MAC1E;AAEA,UAAIJ;AAEJ,UAAI,KAAK,QAAQ,eAAe;AAC9B,QAAAA,SAAQ,KAAK,MAAM,QAAQ,SAAS,CAAC;MACvC,OAAO;AACL,QAAAA,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,aAAa;MACxD;AAEA,YAAM,eAAeO,GAAGP,MAAK;AAC7B,UAAI,aAAa,OAAO,GAAG;AACzB,eAAO,CAAC,OAAO,SAAS,KAAK,aAAa;MAC5C;AAEA,UAAI,CAAC,aAAa,GAAGO,GAAG,CAAC,CAAC,GAAG;AAC3B,cAAM,IAAIJ,UAAUC,UAAU,cAAc,wBAAwB;MACtE;AAEA,aAAO,CAAC,MAAM,SAAS,KAAK,aAAa;IAC3C;EACF;AChEA,MAAA;AAAA,MAAA;AAWO,MAAM,YAAN,cAAwB,MAA4B;IAEzD,cAAc;AACZ,YAAM,UAAU,gBAAgB,kBAAkB;AA8BpD,MAAAM,cAAA,MAAA,cAAA;IA7BA;IAEA,OAAO,OAA6B;AAClC,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,IAAIP,UAAUC,UAAU,cAAc,uBAAuB;MACrE;AAEA,YAAM,QAAsB,CAAC;AAG7B,YAAM,UAAqC,IAAI,eAAe,KAAK,EAAE,OAAO,kBAAkB;AAG9F,YAAM,OAAOO,iBAAA,MAAK,gBAAA,gBAAA,EAAL,KAAA,MAAoB,KAAA;AACjC,cAAQ,cAAc;QACpB,GAAG,sBAAsB,CAAC,IAAI,CAAC;MACjC;AAEA,YAAM,KAAK,OAAO;AAGlB,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,KAAK,UAAU,CAAC;AAG5D,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AAEzD,aAAO,sBAAsB,KAAK;IACpC;IAaA,OAAO,MAAkB,QAAsC;AAC7D,UAAI,KAAK,SAAS,oBAAoB;AACpC,cAAM,IAAIR,UAAUC,UAAU,cAAc,yBAAyB;MACvE;AAEA,YAAM,MAAM,KAAK,MAAM,IAAI,EAAE;AAC7B,YAAM,gBAAgBG,GAAG,IAAI,eAAe,KAAK,EAAE,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS;AAC/E,YAAM,WAAW,KAAK,MAAM,oBAAoB,qBAAqB,aAAa;AAElF,UAAI,SAAS,WAAW,eAAe;AACrC,cAAM,IAAIJ,UAAUC,UAAU,cAAc,+BAA+B;MAC7E;AAEA,aAAO,CAAC,UAAU,SAAS,kBAAkB;IAC/C;EACF;AA1BE,mBAAA,oBAAA,QAAA;AAAA,qBAAc,SAAC,OAA6B;AAC1C,UAAM,OAAqB,CAAC,WAAW,KAAK,KAAK,CAAC;AAElD,UAAM,iBAAiB,YAAa,MAAM,SAAS,aAAc;AACjE,QAAI,eAAe;AACjB,WAAK,KAAK,IAAI,WAAW,aAAa,CAAC;IACzC;AAEA,WAAOQ,OAAO,IAAI;EACpB;AAzCA,EAAAC,eADW,WACJ,cAAa,CAAA;ACMtB,MAAM,oBAAoB,CAAC,eACzB,OAAO,OAAO,UAAU,EAAE;;IAExB,CAAC,EAAE,MAAAX,OAAM,OAAO,MAAMA,UAAS,QAAQ,KAAK,UAAU,MAAM,MAAM,KAAK,UAAU,CAAC,CAAC;EACrF;AAEK,MAAM,YAAN,cAA+D,MAGpE;IACA;IACA;IACA;IACA;IAEA,YAAY,MAAc,QAAiB;AACzC,YAAM,iBAAiB,IAAI,eAAe,KAAK;AAC/C,YAAM,mBAAmB,OAAO,OAAO,MAAM,EAAE;QAC7C,CAACY,MAAK,UAAU,KAAK,IAAIA,MAAK,MAAM,aAAa;QACjD;MACF;AACA,YAAM,QAAQ,QAAQ,QAAQ,eAAe,gBAAgB,gBAAgB;AAC7E,WAAK,OAAO;AACZ,WAAK,SAAS;AACd,WAAK,kBAAkB;AACvB,WAAK,oBAAoB;IAC3B;IAEA,kBAAkB,OAA2B;AAC3C,YAAM,aAAa,KAAK,OAAO,KAAK;AACpC,YAAM,eAAe,WAAW,OAAO,CAAC,CAAC;AACzC,YAAM,YAAY,OAAO,KAAK,KAAK,MAAM,EAAE,QAAQ,KAAK;AAExD,YAAM,UAAU,IAAI,WAAW,KAAK,oBAAoB,WAAW,aAAa;AAChF,aAAOF,OAAO,CAAC,KAAK,gBAAgB,OAAO,SAAS,GAAG,SAAS,YAAY,CAAC;IAC/E;IAEA,OAAO,OAA0C;AAC/C,UAAI,OAAO,UAAU,YAAY,KAAK,OAAO,KAAK,GAAG;AACnD,eAAO,KAAK,kBAAkB,KAAK;MACrC;AAEA,YAAM,CAAC,SAAS,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK;AAC7C,UAAI,CAAC,SAAS;AACZ,cAAM,IAAIT,UAAUC,UAAU,sBAAsB,wCAAwC;MAC9F;AACA,UAAI,MAAM,WAAW,GAAG;AACtB,cAAM,IAAID,UAAUC,UAAU,sBAAsB,kCAAkC;MACxF;AACA,YAAM,aAAa,KAAK,OAAO,OAAO;AACtC,YAAM,YAAY,OAAO,KAAK,KAAK,MAAM,EAAE,QAAQ,OAAO;AAC1D,YAAM,eAAe,WAAW,OAAO,MAAM,OAAO,CAAC;AAErD,YAAM,UAAU,IAAI,WAAW,KAAK,oBAAoB,WAAW,aAAa;AAChF,aAAO,sBAAsB,CAAC,KAAK,gBAAgB,OAAO,SAAS,GAAG,SAAS,YAAY,CAAC;IAC9F;IAEA,kBAAkB,SAAiB,WAAsD;AACvF,aAAO,CAAC,SAA+C,SAAS;IAClE;IAEA,OAAO,MAAkB,QAAmD;AAC1E,UAAI,KAAK,SAAS,KAAK,mBAAmB;AACxC,cAAM,IAAID,UAAUC,UAAU,cAAc,yBAAyB;MACvE;AAEA,UAAI,YAAY;AAEhB,UAAI;AACJ,OAAC,SAAS,SAAS,IAAI,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,SAAS;AACvE,YAAM,YAAYW,UAAS,OAAO;AAClC,YAAM,UAAU,OAAO,KAAK,KAAK,MAAM,EAAE,SAAS;AAClD,UAAI,CAAC,SAAS;AACZ,cAAM,IAAIZ;UACRC,UAAU;UACV,sBAAsB,4BAA4B,OAAO,KAAK,KAAK,MAAM;QAC3E;MACF;AAEA,YAAM,aAAa,KAAK,OAAO,OAAO;AACtC,YAAM,UAAU,KAAK,oBAAoB,WAAW;AACpD,mBAAa;AACb,OAAC,SAAS,SAAS,IAAI,WAAW,OAAO,MAAM,SAAS;AAExD,UAAI,kBAAkB,KAAK,MAAM,GAAG;AAClC,eAAO,KAAK,kBAAkB,SAAS,SAAS;MAClD;AAEA,aAAO,CAAC,EAAE,CAAC,OAAO,GAAG,QAAQ,GAA8B,SAAS;IACtE;EACF;AClGO,MAAM,cAAN,cAAiE,UAAmB;IACzF,OAAO,OAA0C;AAC/C,YAAM,SAAS,MAAM,OAAO,KAAK,aAAa,KAAK,CAAqC;AACxF,aAAO;IACT;IAEA,aAAa,OAAmD;AAC9D,UAAI,UAAU,QAAW;AACvB,eAAO,EAAE,MAAM,MAAM;MACvB;AAEA,aAAO,EAAE,MAAM,CAAC,EAAE;IACpB;IAEA,OAAO,MAAkB,QAAmD;AAE1E,UAAI,KAAK,SAAS,KAAK,gBAAgB,GAAG;AACxC,cAAM,IAAID,UAAUC,UAAU,cAAc,2BAA2B;MACzE;AAEA,YAAM,CAAC,SAAS,SAAS,IAAI,MAAM,OAAO,MAAM,MAAM;AACtD,aAAO,CAAC,KAAK,SAAS,OAAO,GAA8B,SAAS;IACtE;IAEA,SAASK,SAAmD;AAC1D,UAAIA,WAAU,UAAUA,SAAQ;AAC9B,eAAOA,QAAO;MAChB;AAEA,aAAO;IACT;EACF;ACjCO,MAAM,cAAN,cAA0B,MAAsB;;;IAGrD;IACA;IACA;IACA;IAEA,YACE,UACA,UAA2B;MACzB,cAAc;MACd,eAAe;IACjB,GACA;AACA,YAAM,gBAAgB,QAAQ,gBAAgB,aAAa,OAAO,IAAI;AAEtE,YAAM,UAAU,UAAU,aAAa;AACvC,WAAK,WAAW;AAChB,cAAQ,UAAU;QAChB,KAAK;AACH,eAAK,SAAS;AACd;QACF,KAAK;AACH,eAAK,SAAS;AACd;QACF,KAAK;QACL;AACE,eAAK,SAAS;AACd;MACJ;AAEA,WAAK,gBAAgB;AACrB,WAAK,UAAU;IACjB;IAEA,OAAO,OAAoC;AACzC,UAAIT;AAEJ,UAAI;AACF,QAAAA,SAAQC,SAAQ,KAAK;MACvB,SAAS,OAAT;AACE,cAAM,IAAIE,UAAUC,UAAU,cAAc,WAAW,KAAK,WAAW;MACzE;AAEA,UAAIJ,OAAM,SAAS,KAAK,QAAQ;AAC9B,cAAM,IAAIG,UAAUC,UAAU,cAAc,WAAW,KAAK,2BAA2B;MACzF;AAEA,YAAMK,UAASR,SAAQD,QAAO,KAAK,aAAa;AAEhD,UAAI,KAAK,aAAa,MAAM;AAC1B,eAAOS;MACT;AAEA,aAAO,KAAK,QAAQ,gBAAgBA,QAAO,QAAQ,IAAIA;IACzD;IAEQ,SAAS,MAAkB,QAAkC;AACnE,UAAIT;AACJ,UAAI,KAAK,QAAQ,eAAe;AAC9B,QAAAA,SAAQ,KAAK,MAAM,QAAQ,SAAS,CAAC;MACvC,OAAO;AACL,QAAAA,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,aAAa;AACtD,QAAAA,SAAQA,OAAM,MAAM,KAAK,gBAAgB,KAAK,QAAQ,KAAK,aAAa;MAC1E;AAEA,aAAO,CAACe,UAASf,MAAK,GAAG,SAAS,KAAK,aAAa;IACtD;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIG,UAAUC,UAAU,cAAc,2BAA2B;MACzE;AAEA,UAAI,KAAK,aAAa,MAAM;AAC1B,eAAO,KAAK,SAAS,MAAM,MAAM;MACnC;AAEA,UAAIJ,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,aAAa;AAC1D,MAAAA,SAAQA,OAAM,MAAM,IAAI,KAAK,QAAQ,CAAC;AAEtC,UAAIA,OAAM,WAAW,KAAK,iBAAiB,KAAK,gBAAgB,KAAK,SAAS;AAC5E,cAAM,IAAIG,UAAUC,UAAU,cAAc,gCAAgC;MAC9E;AAEA,aAAO,CAACW,UAASf,MAAK,GAAG,SAAS,CAAC;IACrC;EACF;ACtFO,MAAM,gBAAN,cAA4B,MAA0B;IAC3D,cAAc;AACZ,YAAM,qBAAqB,qBAAqB,qBAAqB;IACvE;IAEA,OAAO,OAA6B;AAClC,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,IAAIG,UAAUC,UAAU,cAAc,uBAAuB;MACrE;AAEA,YAAM,QAAsB,CAAC;AAC7B,YAAM,QAAQ,IAAI,YAAY,MAAM,EAAE,cAAc,KAAK,CAAC;AAG1D,YAAM,UAAqC,IAAI,eAAe,KAAK,EAAE;QACnE;MACF;AAGA,cAAQ,cAAc;QACpB,GAAG,sBAAsB,MAAM,IAAI,CAAC,MAAM,MAAM,OAAO,CAAC,CAAC,CAAC;MAC5D;AAEA,YAAM,KAAK,OAAO;AAGlB,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AAEzD,aAAO,sBAAsB,KAAK;IACpC;IAEA,OAAO,MAAkB,QAAoC;AAC3D,YAAM,YAAY,KAAK,MAAM,MAAM;AACnC,YAAM,gBAAgB,IAAI;QACxB,IAAI,YAAY,MAAM,EAAE,cAAc,KAAK,CAAC;QAC5C,UAAU;MACZ;AACA,YAAM,CAAC,YAAY,IAAI,cAAc,OAAO,WAAW,CAAC;AAExD,aAAO,CAAC,cAAc,SAAS,UAAU,MAAM;IACjD;EACF;ACnDA,MAAAY;AAAA,MAAAC;AAYO,MAAM,iBAAN,cAA6B,MAAsB;IAExD,cAAc;AACZ,YAAM,UAAU,iBAAiB,CAAC;AA0BpC,MAAAP,cAAA,MAAAM,eAAAA;IAzBA;IAEA,OAAO,OAA2B;AAChC,YAAM,QAAsB,CAAC;AAG7B,YAAM,UAAqC,IAAI,eAAe,KAAK,EAAE,OAAO,kBAAkB;AAG9F,YAAM,OAAOL,iBAAA,MAAKK,iBAAAC,iBAAAA,EAAL,KAAA,MAAoB,KAAA;AACjC,cAAQ,cAAc;QACpB,GAAG,sBAAsB,CAAC,IAAI,CAAC;MACjC;AAEA,YAAM,KAAK,OAAO;AAGlB,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,KAAK,UAAU,CAAC;AAG5D,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AAEzD,aAAO,sBAAsB,KAAK;IACpC;IAaA,OAAO,MAAkB,QAAkC;AACzD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAId,UAAUC,UAAU,cAAc,+BAA+B;MAC7E;AAEA,YAAM,MAAM,KAAK,MAAM,IAAI,EAAE;AAC7B,YAAM,gBAAgBG,GAAG,IAAI,eAAe,KAAK,EAAE,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS;AAC/E,YAAM,WAAW,KAAK,MAAM,oBAAoB,qBAAqB,aAAa;AAElF,UAAI,SAAS,WAAW,eAAe;AACrC,cAAM,IAAIJ,UAAUC,UAAU,cAAc,oCAAoC;MAClF;AAEA,YAAM,QAAQ,aAAa,QAAQ;AACnC,aAAO,CAAC,OAAO,SAAS,kBAAkB;IAC5C;EACF;AA3BEY,oBAAA,oBAAA,QAAA;AAAAC,sBAAc,SAAC,OAA2B;AACxC,UAAM,OAAqB,CAAC,YAAY,KAAK,CAAC;AAE9C,UAAM,iBAAiB,YAAa,MAAM,SAAS,aAAc;AACjE,QAAI,eAAe;AACjB,WAAK,KAAK,IAAI,WAAW,aAAa,CAAC;IACzC;AAEA,WAAOL,OAAO,IAAI;EACpB;AArCA,EAAAC,eADW,gBACJ,cAAa,CAAA;ACPf,MAAM,cAAN,cAA2D,MAAsB;IACtF;IACA;IAEA,YAAY,QAAiB;AAC3B,UAAI,iBAAiB,IAAI,UAAU;AACnC,sBAAgB,gBAAgB,IAAI,gBAAgB,IAAI;AACxD,YAAM,UAAU,OAAO,WAAW,SAAS,aAAa;AACxD,WAAK,SAAS;AACd,WAAK,iBAAiB;IACxB;IAEA,OAAO,OAA2B;AAChC,UAAI,KAAK,WAAW,MAAM,QAAQ;AAChC,cAAM,IAAIV,UAAUC,UAAU,cAAc,sCAAsC;MACpF;AAEA,YAAM,UAAUc,YAAY,KAAK;AACjC,YAAM,UAAU,IAAI,WAAW,KAAK,cAAc;AAClD,aAAON,OAAO,CAAC,SAAS,OAAO,CAAC;IAClC;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIT,UAAUC,UAAU,cAAc,2BAA2B;MACzE;AAEA,YAAMJ,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,MAAM;AAErD,UAAIA,OAAM,WAAW,KAAK,QAAQ;AAChC,cAAM,IAAIG,UAAUC,UAAU,cAAc,gCAAgC;MAC9E;AAEA,YAAM,QAAQe,aAAanB,MAAK;AAEhC,YAAM,UAAU,KAAK;AACrB,aAAO,CAAC,OAAO,SAAS,KAAK,SAAS,OAAO;IAC/C;EACF;ACxBO,MAAM,cAAN,cAAiE,MAGtE;IACA;IACA;IAEA,YAAY,MAAc,QAAiB;AACzC,YAAM,gBAAgB,OAAO,OAAO,MAAM,EAAE;QAC1C,CAAC,KAAK,UAAU,MAAM,MAAM;QAC5B;MACF;AACA,YAAM,UAAU,UAAU,QAAQ,aAAa;AAC/C,WAAK,OAAO;AACZ,WAAK,SAAS;IAChB;IAEA,OAAO,OAA8B;AACnC,YAAM,gBAAgB,OAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC,cAAc;AAChE,cAAM,aAAa,KAAK,OAAO,SAAS;AACxC,cAAM,aAAa,MAAM,SAAS;AAElC,YAAI,EAAE,sBAAsB,gBAAgB,cAAc,MAAM;AAC9D,gBAAM,IAAIG;YACRC,UAAU;YACV,WAAW,KAAK,gBAAgB;UAClC;QACF;AAEA,cAAM,UAAU,WAAW,OAAO,UAAU;AAE5C,YAAI,CAAC,qBAAqB,QAAQ,MAAM,GAAG;AACzC,iBAAO,mBAAmB,OAAO;QACnC;AAEA,eAAO;MACT,CAAC;AAED,aAAO,sBAAsB,CAAC,sBAAsB,aAAa,CAAC,CAAC;IACrE;IAEA,OAAO,MAAkB,QAAmD;AAC1E,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAID,UAAUC,UAAU,cAAc,2BAA2B;MACzE;AAEA,UAAI,YAAY;AAChB,YAAM,eAAe,OAAO,KAAK,KAAK,MAAM,EAAE,OAAO,CAAC,KAAK,cAAc;AACvE,cAAM,aAAa,KAAK,OAAO,SAAS;AACxC,YAAI;AACJ,SAAC,SAAS,SAAS,IAAI,WAAW,OAAO,MAAM,SAAS;AAExD,YAAI,CAAC,qBAAqB,SAAS,GAAG;AACpC,uBAAa,mBAAmB,SAAS;QAC3C;AAGA,YAAI,SAA0C,IAAI;AAClD,eAAO;MACT,GAAG,CAAC,CAA4B;AAEhC,aAAO,CAAC,cAAc,SAAS;IACjC;EACF;ACjEO,MAAM,aAAN,cAAkD,MAGvD;IACA;IAEA,YAAY,QAAiB;AAC3B,YAAM,gBAAgB,OAAO,OAAO,CAAC,KAAK,UAAU,MAAM,MAAM,eAAe,CAAC;AAChF,YAAM,SAAS,IAAI,OAAO,IAAI,CAAC,UAAU,MAAM,IAAI,EAAE,KAAK,IAAI,MAAM,aAAa;AACjF,WAAK,SAAS;IAChB;IAEA,OAAO,OAA0C;AAC/C,UAAI,KAAK,OAAO,WAAW,MAAM,QAAQ;AACvC,cAAM,IAAID,UAAUC,UAAU,cAAc,+BAA+B;MAC7E;AAEA,aAAO;QACL,KAAK,OAAO,IAAI,CAAC,OAAO,MAAM;AAC5B,gBAAM,UAAU,MAAM,OAAO,MAAM,CAAC,CAAC;AACrC,cAAI,CAAC,qBAAqB,QAAQ,MAAM,GAAG;AACzC,mBAAO,mBAAmB,OAAO;UACnC;AACA,iBAAO;QACT,CAAC;MACH;IACF;IAEA,OAAO,MAAkB,QAAmD;AAC1E,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAID,UAAUC,UAAU,cAAc,0BAA0B;MACxE;AAEA,UAAI,YAAY;AAChB,YAAM,eAAe,KAAK,OAAO,IAAI,CAAC,UAAU;AAC9C,YAAI;AACJ,SAAC,SAAS,SAAS,IAAI,MAAM,OAAO,MAAM,SAAS;AAEnD,YAAI,CAAC,qBAAqB,SAAS,GAAG;AACpC,uBAAa,mBAAmB,SAAS;QAC3C;AAEA,eAAO;MACT,CAAC;AAED,aAAO,CAAC,cAAyC,SAAS;IAC5D;EACF;ACnDO,MAAM,WAAN,cAA6C,MAGlD;IACA;IAEA,YAAY,OAAe;AACzB,YAAM,UAAU,cAAc,MAAM,gBAAgB,kBAAkB;AACtE,WAAK,QAAQ;IACf;IAEA,OAAO,OAAyC;AAC9C,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,IAAID,UAAUC,UAAU,cAAc,uBAAuB;MACrE;AAEA,YAAM,QAAsB,CAAC;AAG7B,YAAM,UAAqC,IAAI,eAAe,KAAK,EAAE,OAAO,kBAAkB;AAE9F,cAAQ,cAAc;QACpB,GAAG,sBAAsB,MAAM,KAAK,KAAK,EAAE,IAAI,CAAC,MAAM,KAAK,MAAM,OAAO,CAAC,CAAC,CAAC;MAC7E;AAEA,YAAM,KAAK,OAAO;AAGlB,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AAGzD,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AAEzD,aAAO,sBAAsB,KAAK;IACpC;IAEA,OAAO,MAAkB,QAAkD;AACzE,UAAI,KAAK,SAAS,sBAAsB,KAAK,SAAS,WAAW;AAC/D,cAAM,IAAID,UAAUC,UAAU,cAAc,wBAAwB;MACtE;AAEA,YAAM,MAAM,KAAK,MAAM,IAAI,EAAE;AAC7B,YAAM,gBAAgBG,GAAG,IAAI,eAAe,KAAK,EAAE,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS;AAC/E,YAAM,sBAAsB,gBAAgB,KAAK,MAAM;AACvD,YAAM,gBAAgB,KAAK,MAAM,oBAAoB,qBAAqB,mBAAmB;AAE7F,UAAI,cAAc,WAAW,qBAAqB;AAChD,cAAM,IAAIJ,UAAUC,UAAU,cAAc,6BAA6B;MAC3E;AAEA,aAAO;QACL,cAAc,eAAe,KAAK,MAAM,aAAa,EAAE;UACrD,CAAC,UAAU,KAAK,MAAM,OAAO,OAAO,CAAC,EAAE,CAAC;QAC1C;QACA,SAAS;MACX;IACF;EACF;AEjEO,MAAM,kBAAN,MAAsB;IAClB;IACT;IACS;IACA;IACA;IAET,YAAY,KAAc,UAA2B;AACnD,WAAK,MAAM;AACX,YAAMF,QAAO;QACX,IAAI;QACJ,CAAC,MAAM,EAAE,WAAW,SAAS;QAC7B,MAAM;AACJ,gBAAM,IAAIC;YACRC,UAAU;YACV,4CAA4C,KAAK,UAAU;cACzD;cACA,KAAK,KAAK;YACZ,CAAC;UACH;QACF;MACF;AAEA,WAAK,OAAO,SAAS;AAErB,WAAK,OAAOF,MAAK;AACjB,WAAK,wBAAwB,SAAS;AACtC,WAAK,aAAa,gBAAgB;QAChC;QACA;QACAA,MAAK;QACLA,MAAK,kBAAkB,gBAAgB,iCAAiC,KAAKA,MAAK,UAAU;MAC9F;IACF;IAEA,OAAe,6BACb,KACA,KACA,YACA,gBACA;AACA,UAAI,eAAe,MAAM;AACvB,eAAO;MACT;AACA,UAAI,mBAAmB,QAAQ,eAAe,WAAW,GAAG;AAC1D,eAAO,WAAW,IAAI,CAAC,MAAM,IAAI,gBAAgB,KAAK,CAAC,CAAC;MAC1D;AAEA,YAAM,2BAA2B,eAAe;QAC9C,CAAC,KAAK,eAAe,uBAAuB;AAC1C,gBAAM,IAAqC,EAAE,GAAG,IAAI;AACpD,YAAE,aAAa,IAAI;YACjB,IAAI,gBAAgB,kBAAkB;UACxC;AACA,iBAAO;QACT;QACA,CAAC;MACH;AAEA,YAAM,qBAAqB,KAAK;QAC9B;QACA;QACA;MACF;AAEA,aAAO,mBAAmB,IAAI,CAAC,MAAM,IAAI,gBAAgB,KAAK,CAAC,CAAC;IAClE;IAEA,OAAe,uBACb,KACA,MACA,0BAC4B;AAC5B,aAAO,KAAK,IAAI,CAAC,QAAQ;AACvB,YAAI,yBAAyB,IAAI,IAAI,MAAM,QAAW;AACpD,iBAAO;YACL,GAAG,yBAAyB,IAAI,IAAI;YACpC,MAAM,IAAI;UACZ;QACF;AAEA,YAAI,IAAI,eAAe;AACrB,iBAAO;YACL,GAAG,gBAAgB,GAAG;YACtB,eAAe,KAAK;cAClB;cACA,IAAI;cACJ;YACF;UACF;QACF;AAEA,cAAM,UAAU,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE,WAAW,IAAI,IAAI;AACnE,cAAM,yBAAyB,KAAK,iCAAiC,KAAK,QAAQ,UAAU;AAE5F,YAAI,0BAA0B,uBAAuB,SAAS,GAAG;AAC/D,iBAAO;YACL,GAAG,gBAAgB,GAAG;YACtB,eAAe,uBAAuB,IAAI,CAAC,QAAQ,yBAAyB,GAAG,CAAC;UAClF;QACF;AAEA,eAAO;MACT,CAAC;IACH;IAEA,OAAe,iCACb,KACA,MACA,gCACA;AACA,UAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,eAAO;MACT;AAEA,YAAM,4BAAsC,kCAAkC,CAAC;AAE/E,WAAK,QAAQ,CAAC,MAAM;AAClB,cAAM,UAAU,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI;AAEjE,YAAI,aAAa,KAAK,QAAQ,IAAI,GAAG;AACnC,oCAA0B,KAAK,QAAQ,MAAM;AAC7C;QACF;AAEA,YAAI,CAAC,MAAM,QAAQ,EAAE,aAAa,GAAG;AACnC;QACF;AACA,aAAK,iCAAiC,KAAK,EAAE,eAAe,yBAAyB;MACvF,CAAC;AAED,aAAO,0BAA0B,SAAS,IAAI,4BAA4B;IAC5E;IAEA,eAAuB;AACrB,YAAM,SAAS,KAAK,sBAAsB;AAC1C,YAAM,UAAU,KAAK,uBAAuB;AAE5C,aAAO,GAAG,SAAS;IACrB;IAEQ,wBAAgC;AACtC,YAAM,cAAc,YAAY,KAAK,KAAK,IAAI;AAC9C,UAAI,aAAa;AACf,eAAO;MACT;AAEA,YAAM,aAAa,WAAW,KAAK,KAAK,IAAI;AAC5C,UAAI,YAAY;AACd,eAAO;MACT;AAEA,YAAM,YAAY,UAAU,KAAK,KAAK,IAAI;AAC1C,UAAI,WAAW;AACb,eAAO;MACT;AAEA,aAAO;IACT;IAEQ,yBAAiC;AACvC,UAAI,KAAK,SAAS,mBAAmB;AACnC,eAAO;MACT;AAEA,UAAI,KAAK,SAAS,qBAAqB;AACrC,eAAO;MACT;AAEA,YAAM,WAAW,YAAY,KAAK,KAAK,IAAI,GAAG;AAC9C,UAAI,UAAU;AACZ,eAAO,OAAO,SAAS;MACzB;AAEA,UAAI,KAAK,eAAe,MAAM;AAC5B,eAAO,KAAK;MACd;AAEA,YAAM,aAAa,WAAW,KAAK,KAAK,IAAI,GAAG;AAE/C,UAAI,YAAY;AACd,eAAO,IAAI,KAAK,WAAW,CAAC,EAAE,aAAa,KAAK,WAAW;MAC7D;AAEA,YAAM,yBACJ,KAAK,0BAA0B,OAC3B,IAAI,KAAK,sBACN,IAAI,CAAC,MAAM,IAAI,gBAAgB,KAAK,KAAK,CAAC,EAAE,aAAa,CAAC,EAC1D,KAAK,GAAG,OACX;AAEN,YAAM,sBAAsB,IAAI,KAAK,WAAW,IAAI,CAAC,MAAM,EAAE,aAAa,CAAC,EAAE,KAAK,GAAG;AAErF,aAAO,GAAG,yBAAyB;IACrC;EACF;AG/LO,WAAS,UACd,YACA,SACA;AACA,UAAM,EAAE,UAAAkB,UAAS,IAAI;AACrB,WAAO,WAAW,OAAO,CAAC,KAAK,cAAc;AAC3C,YAAM,IAA2B;AAEjC,QAAE,UAAU,IAAI,IAAIA,UAAS,WAAW,OAAO;AAC/C,aAAO;IACT,GAAG,CAAC,CAAC;EACP;ADkCO,MAAM,WAAuB,CAClC,iBACA,YACU;AACV,YAAQ,gBAAgB,MAAM;MAC5B,KAAK;MACL,KAAK;MACL,KAAK;AACH,eAAO,IAAI,YAAY,gBAAgB,MAAM,OAAO;MACtD,KAAK;MACL,KAAK;AACH,eAAO,IAAI,eAAe,KAAK;MACjC,KAAK;AACH,eAAO,IAAI,eAAe,MAAM;MAClC,KAAK;AACH,eAAO,IAAI,cAAc;MAC3B,KAAK;AACH,eAAO,IAAI,aAAa,OAAO;MACjC,KAAK;AACH,eAAO,IAAI,UAAU;MACvB,KAAK;AACH,eAAO,IAAI,UAAU;MACvB,KAAK;AACH,eAAO,IAAI,UAAU;MACvB,KAAK;AACH,eAAO,IAAI,eAAe;MAC5B;AACE;IACJ;AAEA,UAAM,cAAc,YAAY,KAAK,gBAAgB,IAAI,GAAG;AAC5D,QAAI,aAAa;AACf,YAAM,SAAS,SAAS,YAAY,QAAQ,EAAE;AAE9C,aAAO,IAAI,YAAY,MAAM;IAC/B;AAKA,UAAM,aAAa,gBAAgB;AAEnC,UAAM,aAAa,WAAW,KAAK,gBAAgB,IAAI,GAAG;AAC1D,QAAI,YAAY;AACd,YAAM,SAAS,SAAS,WAAW,QAAQ,EAAE;AAC7C,YAAM,MAAM,WAAW,CAAC;AACxB,UAAI,CAAC,KAAK;AACR,cAAM,IAAIjB;UACRC,UAAU;UACV;QACF;MACF;AAEA,YAAM,oBAAoB,SAAS,KAAK,EAAE,cAAc,KAAK,CAAC;AAC9D,aAAO,IAAI,WAAW,mBAA4B,MAAM;IAC1D;AAEA,QAAI,gBAAgB,SAAS,gBAAgB;AAC3C,YAAM,MAAM,YAAY,YAAY,CAAC,MAAM,EAAE,SAAS,KAAK,EAAE,wBAAwB,CAAC;AACtF,UAAI,CAAC,KAAK;AACR,cAAM,IAAID;UACRC,UAAU;UACV;QACF;MACF;AACA,YAAM,UAAU,IAAI,gBAAgB,gBAAgB,KAAK,GAAG;AAE5D,YAAM,YAAY,SAAS,SAAS,EAAE,cAAc,MAAM,UAAU,YAAY,CAAC;AACjF,aAAO,IAAI,SAAS,SAAkB;IACxC;AAEA,UAAM,cAAc,YAAY,KAAK,gBAAgB,IAAI,GAAG;AAC5D,QAAI,aAAa;AACf,YAAM,SAAS,UAAU,YAAY,EAAE,eAAe,MAAM,SAAS,CAAC;AACtE,aAAO,IAAI,YAAY,YAAY,MAAM,MAAM;IACjD;AAEA,UAAM,YAAY,UAAU,KAAK,gBAAgB,IAAI,GAAG;AACxD,QAAI,WAAW;AACb,YAAM,SAAS,UAAU,YAAY,EAAE,SAAS,CAAC;AAEjD,YAAM,eAAe,gBAAgB,SAAS;AAC9C,UAAI,cAAc;AAChB,eAAO,IAAI,YAAY,UAAU,MAAM,MAAM;MAC/C;AACA,aAAO,IAAI,UAAU,UAAU,MAAM,MAAM;IAC7C;AAEA,UAAM,aAAa,WAAW,KAAK,gBAAgB,IAAI,GAAG;AAC1D,QAAI,YAAY;AACd,YAAM,SAAS,WAAW;QAAI,CAAC,cAC7B,SAAS,WAAW,EAAE,eAAe,MAAM,UAAU,YAAY,CAAC;MACpE;AACA,aAAO,IAAI,WAAW,MAAiB;IACzC;AAEA,QAAI,gBAAgB,SAAS,sBAAsB;AACjD,YAAM,IAAID;QACRC,UAAU;QACV;MACF;IACF;AAEA,UAAM,IAAID;MACRC,UAAU;MACV,oBAAoB,KAAK,UAAU,eAAe;IACpD;EACF;AG7JO,MAAMiB,gBAAN,cAA2B,MAAwB;IACxD,cAAc;AACZ,YAAM,WAAW,WAAW,CAAC;IAC/B;IAEA,OAAO,OAA4B;AACjC,YAAM,aAAa,UAAU,QAAQ,UAAU;AAE/C,UAAI,CAAC,YAAY;AACf,cAAM,IAAIlB,UAAUC,UAAU,cAAc,wBAAwB;MACtE;AAEA,aAAOH,SAAQ,QAAQ,IAAI,GAAG,KAAK,aAAa;IAClD;IAEA,OAAO,MAAkB,QAAmC;AAC1D,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIE,UAAUC,UAAU,cAAc,4BAA4B;MAC1E;AAEA,YAAMJ,SAAQO,GAAG,KAAK,MAAM,QAAQ,SAAS,KAAK,aAAa,CAAC;AAEhE,UAAIP,OAAM,OAAO,GAAG;AAClB,eAAO,CAAC,OAAO,SAAS,KAAK,aAAa;MAC5C;AAEA,UAAI,CAACA,OAAM,GAAGO,GAAG,CAAC,CAAC,GAAG;AACpB,cAAM,IAAIJ,UAAUC,UAAU,cAAc,wBAAwB;MACtE;AAEA,aAAO,CAAC,MAAM,SAAS,KAAK,aAAa;IAC3C;EACF;AC9BO,MAAMkB,aAAN,cAAwB,MAA4B;IAEzD,cAAc;AACZ,YAAM,UAAU,gBAAgB,SAAS;IAC3C;IAEA,OAAO,OAA6B;AAClC,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,IAAInB,UAAUC,UAAU,cAAc,uBAAuB;MACrE;AAEA,YAAMJ,SAAQ,IAAI,WAAW,KAAK;AAClC,YAAM,cAAc,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM;AAEjE,aAAO,IAAI,WAAW,CAAC,GAAG,aAAa,GAAGA,MAAK,CAAC;IAClD;IAEA,OAAO,MAAkB,QAAsC;AAC7D,UAAI,KAAK,SAAS,WAAW;AAC3B,cAAM,IAAIG,UAAUC,UAAU,cAAc,yBAAyB;MACvE;AAEA,YAAM,kBAAkB,SAAS;AACjC,YAAM,cAAc,KAAK,MAAM,QAAQ,eAAe;AACtD,YAAM,SAASG,GAAG,IAAI,eAAe,KAAK,EAAE,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS;AAEhF,YAAM,YAAY,KAAK,MAAM,iBAAiB,kBAAkB,MAAM;AAEtE,UAAI,UAAU,WAAW,QAAQ;AAC/B,cAAM,IAAIJ,UAAUC,UAAU,cAAc,+BAA+B;MAC7E;AAEA,aAAO,CAAC,WAAW,kBAAkB,MAAM;IAC7C;EACF;AAjCE,EAAAS,eADWS,YACJ,cAAa,CAAA;ACStB,MAAMC,qBAAoB,CAAC,eACzB,OAAO,OAAO,UAAU,EAAE;;IAExB,CAAC,EAAE,MAAArB,OAAM,OAAO,MAAMA,UAAS,QAAQ,KAAK,UAAU,MAAM,MAAM,KAAK,UAAU,CAAC,CAAC;EACrF;AAEK,MAAMsB,aAAN,cAA+D,MAGpE;IACA;IACA;IACA;IACA;IAEA,YAAY,MAAc,QAAiB;AACzC,YAAM,iBAAiB,IAAI,eAAe,KAAK;AAC/C,YAAM,mBAAmB,OAAO,OAAO,MAAM,EAAE;QAC7C,CAACV,MAAK,UAAU,KAAK,IAAIA,MAAK,MAAM,aAAa;QACjD;MACF;AACA,YAAM,QAAQ,QAAQ,QAAQ,eAAe,gBAAgB,gBAAgB;AAC7E,WAAK,OAAO;AACZ,WAAK,SAAS;AACd,WAAK,kBAAkB;AACvB,WAAK,oBAAoB;IAC3B;IAEA,kBAAkB,OAA2B;AAC3C,YAAM,aAAa,KAAK,OAAO,KAAK;AACpC,YAAM,eAAe,WAAW,OAAO,CAAC,CAAC;AACzC,YAAM,YAAY,OAAO,KAAK,KAAK,MAAM,EAAE,QAAQ,KAAK;AAExD,YAAM,UAAU,IAAI,WAAW,KAAK,oBAAoB,WAAW,aAAa;AAChF,aAAOF,OAAO,CAAC,KAAK,gBAAgB,OAAO,SAAS,GAAG,SAAS,YAAY,CAAC;IAC/E;IAEA,OAAO,OAA0C;AAC/C,UAAI,OAAO,UAAU,YAAY,KAAK,OAAO,KAAK,GAAG;AACnD,eAAO,KAAK,kBAAkB,KAAK;MACrC;AAEA,YAAM,CAAC,SAAS,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK;AAC7C,UAAI,CAAC,SAAS;AACZ,cAAM,IAAIT,UAAUC,UAAU,sBAAsB,wCAAwC;MAC9F;AACA,UAAI,MAAM,WAAW,GAAG;AACtB,cAAM,IAAID,UAAUC,UAAU,sBAAsB,kCAAkC;MACxF;AACA,YAAM,aAAa,KAAK,OAAO,OAAO;AACtC,YAAM,YAAY,OAAO,KAAK,KAAK,MAAM,EAAE,QAAQ,OAAO;AAC1D,YAAM,eAAe,WAAW,OAAO,MAAM,OAAO,CAAC;AAErD,aAAO,IAAI,WAAW,CAAC,GAAG,KAAK,gBAAgB,OAAO,SAAS,GAAG,GAAG,YAAY,CAAC;IACpF;IAEA,kBAAkB,SAAiB,WAAsD;AACvF,aAAO,CAAC,SAA+C,SAAS;IAClE;IAEA,OAAO,MAAkB,QAAmD;AAC1E,UAAI,KAAK,SAAS,KAAK,mBAAmB;AACxC,cAAM,IAAID,UAAUC,UAAU,cAAc,yBAAyB;MACvE;AAEA,YAAM,YAAY,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,EAAE,CAAC;AAClE,YAAM,YAAYW,UAAS,SAAS;AACpC,YAAM,UAAU,OAAO,KAAK,KAAK,MAAM,EAAE,SAAS;AAClD,UAAI,CAAC,SAAS;AACZ,cAAM,IAAIZ;UACRC,UAAU;UACV,sBAAsB,4BAA4B,OAAO,KAAK,KAAK,MAAM;QAC3E;MACF;AAEA,YAAM,aAAa,KAAK,OAAO,OAAO;AACtC,YAAM,gBAAgB,SAAS;AAE/B,YAAM,CAAC,SAAS,SAAS,IAAI,WAAW,OAAO,MAAM,aAAa;AAElE,UAAImB,mBAAkB,KAAK,MAAM,GAAG;AAClC,eAAO,KAAK,kBAAkB,SAAS,SAAS;MAClD;AAEA,aAAO,CAAC,EAAE,CAAC,OAAO,GAAG,QAAQ,GAA8B,SAAS;IACtE;EACF;AChGA,MAAM,YAAY,CAAC,aAAsC;AACvD,YAAQ,UAAU;MAChB,KAAK;AACH,eAAO;MACT,KAAK;AACH,eAAO;MACT,KAAK;AACH,eAAO;MACT;AACE,cAAM,IAAIpB,UAAUC,UAAU,oBAAoB,wBAAwB,UAAU;IACxF;EACF;AAEO,MAAMqB,eAAN,cAA0B,MAAsB;IACrD;IACA;IAEA,YAAY,UAA2B;AACrC,YAAM,SAAS,UAAU,QAAQ;AACjC,YAAM,UAAU,UAAU,MAAM;AAChC,WAAK,WAAW;AAChB,WAAK,SAAS;IAChB;IAEA,OAAO,OAAoC;AACzC,UAAIzB;AAEJ,UAAI;AACF,QAAAA,SAAQC,SAAQ,KAAK;MACvB,SAAS,OAAT;AACE,cAAM,IAAIE,UAAUC,UAAU,cAAc,WAAW,KAAK,WAAW;MACzE;AAEA,UAAIJ,OAAM,SAAS,KAAK,QAAQ;AAC9B,cAAM,IAAIG,UAAUC,UAAU,cAAc,WAAW,KAAK,2BAA2B;MACzF;AAEA,aAAOH,SAAQD,QAAO,KAAK,MAAM;IACnC;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIG,UAAUC,UAAU,cAAc,2BAA2B;MACzE;AAEA,YAAMJ,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,MAAM;AAErD,UAAIA,OAAM,WAAW,KAAK,eAAe;AACvC,cAAM,IAAIG,UAAUC,UAAU,cAAc,gCAAgC;MAC9E;AAEA,aAAO,CAACW,UAASf,MAAK,GAAG,SAAS,KAAK,MAAM;IAC/C;EACF;AClDO,MAAM0B,iBAAN,cAA4B,MAA0B;IAC3D,cAAc;AACZ,YAAM,qBAAqB,qBAAqB,SAAS;IAC3D;IAEA,OAAO,OAA6B;AAClC,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,IAAIvB,UAAUC,UAAU,cAAc,uBAAuB;MACrE;AAEA,YAAM,gBAAgB,IAAI,WAAW,IAAIqB,aAAY,IAAI,GAAG,MAAM,MAAM;AACxE,YAAMzB,SAAQ,cAAc,OAAO,KAAK;AACxC,YAAM,cAAc,IAAI,eAAe,KAAK,EAAE,OAAOA,OAAM,MAAM;AAEjE,aAAO,IAAI,WAAW,CAAC,GAAG,aAAa,GAAGA,MAAK,CAAC;IAClD;IAEA,OAAO,MAAkB,QAAoC;AAC3D,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIG,UAAUC,UAAU,cAAc,8BAA8B;MAC5E;AAEA,YAAM,kBAAkB,SAAS;AACjC,YAAM,cAAc,KAAK,MAAM,QAAQ,eAAe;AACtD,YAAM,SAASG,GAAG,IAAI,eAAe,KAAK,EAAE,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS;AAChF,YAAM,YAAY,KAAK,MAAM,iBAAiB,kBAAkB,MAAM;AAEtE,UAAI,UAAU,WAAW,QAAQ;AAC/B,cAAM,IAAIJ,UAAUC,UAAU,cAAc,mCAAmC;MACjF;AAEA,YAAM,gBAAgB,IAAI,WAAW,IAAIqB,aAAY,IAAI,GAAG,MAAM;AAClE,YAAM,CAAC,YAAY,IAAI,cAAc,OAAO,WAAW,CAAC;AAExD,aAAO,CAAC,cAAc,kBAAkB,MAAM;IAChD;EACF;ACtCO,MAAME,kBAAN,cAA6B,MAAsB;IAExD,cAAc;AACZ,YAAM,UAAU,iBAAiB,SAAS;IAC5C;IAEA,OAAO,OAA2B;AAChC,YAAM3B,SAAQkB,YAAY,KAAK;AAC/B,YAAM,cAAc,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM;AAEjE,aAAO,IAAI,WAAW,CAAC,GAAG,aAAa,GAAGlB,MAAK,CAAC;IAClD;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIG,UAAUC,UAAU,cAAc,+BAA+B;MAC7E;AAEA,YAAM,kBAAkB,SAAS;AACjC,YAAM,cAAc,KAAK,MAAM,QAAQ,eAAe;AACtD,YAAM,SAASG,GAAG,IAAI,eAAe,KAAK,EAAE,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS;AAChF,YAAM,YAAY,KAAK,MAAM,iBAAiB,kBAAkB,MAAM;AAEtE,UAAI,UAAU,WAAW,QAAQ;AAC/B,cAAM,IAAIJ,UAAUC,UAAU,cAAc,oCAAoC;MAClF;AAEA,aAAO,CAACe,aAAa,SAAS,GAAG,kBAAkB,MAAM;IAC3D;EACF;AA5BE,EAAAN,eADWc,iBACJ,cAAa,CAAA;ACJf,MAAMC,eAAN,cAA2D,MAAsB;IACtF,YAAY,QAAiB;AAC3B,YAAM,UAAU,OAAO,WAAW,MAAM;IAC1C;IAEA,OAAO,OAA2B;AAChC,UAAI,MAAM,WAAW,KAAK,eAAe;AACvC,cAAM,IAAIzB,UAAUC,UAAU,cAAc,sCAAsC;MACpF;AAEA,aAAOc,YAAY,KAAK;IAC1B;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIf,UAAUC,UAAU,cAAc,2BAA2B;MACzE;AAEA,YAAMJ,SAAQ,KAAK,MAAM,QAAQ,SAAS,KAAK,aAAa;AAE5D,UAAIA,OAAM,WAAW,KAAK,eAAe;AACvC,cAAM,IAAIG,UAAUC,UAAU,cAAc,gCAAgC;MAC9E;AAEA,aAAO,CAACe,aAAanB,MAAK,GAAG,SAAS,KAAK,aAAa;IAC1D;EACF;ACjBO,MAAM6B,eAAN,cAAiE,MAGtE;IACA;IACA;IAEA,YAAY,MAAc,QAAiB;AACzC,YAAM,gBAAgB,OAAO,OAAO,MAAM,EAAE;QAC1C,CAAC,KAAK,UAAU,MAAM,MAAM;QAC5B;MACF;AACA,YAAM,UAAU,UAAU,QAAQ,aAAa;AAC/C,WAAK,OAAO;AACZ,WAAK,SAAS;IAChB;IAEA,OAAO,OAA0C;AAC/C,aAAOxB;QACL,OAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC,cAAc;AAC1C,gBAAM,aAAa,KAAK,OAAO,SAAS;AACxC,gBAAM,aAAa,MAAM,SAAS;AAElC,cAAI,EAAE,sBAAsB,gBAAgB,cAAc,MAAM;AAC9D,kBAAM,IAAIF;cACRC,UAAU;cACV,WAAW,KAAK,gBAAgB;YAClC;UACF;AAEA,iBAAO,WAAW,OAAO,UAAU;QACrC,CAAC;MACH;IACF;IAEA,OAAO,MAAkB,QAAmD;AAC1E,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAID,UAAUC,UAAU,cAAc,2BAA2B;MACzE;AAEA,UAAI,YAAY;AAChB,YAAM,eAAe,OAAO,KAAK,KAAK,MAAM,EAAE,OAAO,CAAC,KAAK,cAAc;AACvE,cAAM,aAAa,KAAK,OAAO,SAAS;AACxC,YAAI;AACJ,SAAC,SAAS,SAAS,IAAI,WAAW,OAAO,MAAM,SAAS;AAGxD,YAAI,SAA0C,IAAI;AAClD,eAAO;MACT,GAAG,CAAC,CAA4B;AAEhC,aAAO,CAAC,cAAc,SAAS;IACjC;EACF;ACtDO,MAAM0B,cAAN,cAAkD,MAGvD;IACA;IAEA,YAAY,QAAiB;AAC3B,YAAM,gBAAgB,OAAO,OAAO,CAAC,KAAK,UAAU,MAAM,MAAM,eAAe,CAAC;AAChF,YAAM,SAAS,IAAI,OAAO,IAAI,CAAC,UAAU,MAAM,IAAI,EAAE,KAAK,IAAI,MAAM,aAAa;AACjF,WAAK,SAAS;IAChB;IAEA,OAAO,OAA0C;AAC/C,UAAI,KAAK,OAAO,WAAW,MAAM,QAAQ;AACvC,cAAM,IAAI3B,UAAUC,UAAU,cAAc,+BAA+B;MAC7E;AAEA,aAAOC,aAAY,KAAK,OAAO,IAAI,CAAC,OAAO,MAAM,MAAM,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1E;IAEA,OAAO,MAAkB,QAAmD;AAC1E,UAAI,KAAK,SAAS,KAAK,eAAe;AACpC,cAAM,IAAIF,UAAUC,UAAU,cAAc,0BAA0B;MACxE;AAEA,UAAI,YAAY;AAChB,YAAM,eAAe,KAAK,OAAO,IAAI,CAAC,UAAU;AAC9C,YAAI;AACJ,SAAC,SAAS,SAAS,IAAI,MAAM,OAAO,MAAM,SAAS;AAEnD,eAAO;MACT,CAAC;AAED,aAAO,CAAC,cAAyC,SAAS;IAC5D;EACF;ACnCO,MAAM2B,YAAN,cAA6C,MAGlD;IACA;IAEA,YAAY,OAAe;AACzB,YAAM,UAAU,cAAc,MAAM,gBAAgB,SAAS;AAC7D,WAAK,QAAQ;IACf;IAEA,OAAO,OAAyC;AAC9C,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,IAAI5B,UAAUC,UAAU,cAAc,uBAAuB;MACrE;AAEA,YAAMJ,SAAQ,MAAM,IAAI,CAAC,MAAM,KAAK,MAAM,OAAO,CAAC,CAAC;AACnD,YAAM,cAAc,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM;AAEjE,aAAO,IAAI,WAAW,CAAC,GAAG,aAAa,GAAGK,aAAYL,MAAK,CAAC,CAAC;IAC/D;IAEA,OAAO,MAAkB,QAAkD;AACzE,UAAI,KAAK,SAAS,KAAK,iBAAiB,KAAK,SAAS,WAAW;AAC/D,cAAM,IAAIG,UAAUC,UAAU,cAAc,wBAAwB;MACtE;AAEA,YAAM,kBAAkB,SAAS;AACjC,YAAM,cAAc,KAAK,MAAM,QAAQ,eAAe;AACtD,YAAM,SAASG,GAAG,IAAI,eAAe,KAAK,EAAE,OAAO,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS;AAChF,YAAMyB,cAAa,SAAS,KAAK,MAAM;AACvC,YAAM,YAAY,KAAK,MAAM,iBAAiB,kBAAkBA,WAAU;AAE1E,UAAI,UAAU,WAAWA,aAAY;AACnC,cAAM,IAAI7B,UAAUC,UAAU,cAAc,6BAA6B;MAC3E;AAEA,aAAO;QACL,cAAc,WAAW,KAAK,MAAM,aAAa,EAAE;UACjD,CAAC,UAAU,KAAK,MAAM,OAAO,OAAO,CAAC,EAAE,CAAC;QAC1C;QACA,kBAAkB4B;MACpB;IACF;EACF;AVFO,MAAMZ,YAAuB,CAClC,iBACA,aACU;AACV,YAAQ,gBAAgB,MAAM;MAC5B,KAAK;MACL,KAAK;MACL,KAAK;AACH,eAAO,IAAIK,aAAY,gBAAgB,IAAI;MAC7C,KAAK;MACL,KAAK;AACH,eAAO,IAAI,eAAe,KAAK;MACjC,KAAK;AACH,eAAO,IAAI,eAAe,MAAM;MAClC,KAAK;AACH,eAAO,IAAIC,eAAc;MAC3B,KAAK;AACH,eAAO,IAAIL,cAAa;MAC1B,KAAK;AACH,eAAO,IAAI,UAAU;MACvB,KAAK;AACH,eAAO,IAAI,UAAU;MACvB,KAAK;AACH,eAAO,IAAIC,WAAU;MACvB,KAAK;AACH,eAAO,IAAIK,gBAAe;MAC5B;AACE;IACJ;AAEA,UAAM,cAAc,YAAY,KAAK,gBAAgB,IAAI,GAAG;AAC5D,QAAI,aAAa;AACf,YAAM,SAAS,SAAS,YAAY,QAAQ,EAAE;AAE9C,aAAO,IAAIC,aAAY,MAAM;IAC/B;AAKA,UAAM,aAAa,gBAAgB;AAEnC,UAAM,aAAa,WAAW,KAAK,gBAAgB,IAAI,GAAG;AAC1D,QAAI,YAAY;AACd,YAAM,SAAS,SAAS,WAAW,QAAQ,EAAE;AAC7C,YAAM,MAAM,WAAW,CAAC;AACxB,UAAI,CAAC,KAAK;AACR,cAAM,IAAIzB;UACRC,UAAU;UACV;QACF;MACF;AAEA,YAAM,oBAAoBgB,UAAS,KAAK,EAAE,cAAc,KAAK,CAAC;AAC9D,aAAO,IAAI,WAAW,mBAA4B,MAAM;IAC1D;AAEA,QAAI,gBAAgB,SAAS,gBAAgB;AAC3C,YAAM,MAAM,YAAY,YAAY,CAAC,MAAM,EAAE,SAAS,KAAK,EAAE,wBAAwB,CAAC;AACtF,UAAI,CAAC,KAAK;AACR,cAAM,IAAIjB;UACRC,UAAU;UACV;QACF;MACF;AACA,YAAM,UAAU,IAAI,gBAAgB,gBAAgB,KAAK,GAAG;AAE5D,YAAM,YAAYgB,UAAS,SAAS,EAAE,cAAc,MAAM,UAAU,YAAY,CAAC;AACjF,aAAO,IAAIW,UAAS,SAAkB;IACxC;AAEA,UAAM,cAAc,YAAY,KAAK,gBAAgB,IAAI,GAAG;AAC5D,QAAI,aAAa;AACf,YAAM,SAAS,UAAU,YAAY,EAAE,eAAe,MAAM,UAAAX,UAAS,CAAC;AACtE,aAAO,IAAIS,aAAY,YAAY,MAAM,MAAM;IACjD;AAEA,UAAM,YAAY,UAAU,KAAK,gBAAgB,IAAI,GAAG;AACxD,QAAI,WAAW;AACb,YAAM,SAAS,UAAU,YAAY,EAAE,UAAAT,UAAS,CAAC;AAEjD,YAAM,eAAe,gBAAgB,SAAS;AAC9C,UAAI,cAAc;AAChB,eAAO,IAAI,YAAY,UAAU,MAAM,MAAM;MAC/C;AACA,aAAO,IAAII,WAAU,UAAU,MAAM,MAAM;IAC7C;AAEA,UAAM,aAAa,WAAW,KAAK,gBAAgB,IAAI,GAAG;AAC1D,QAAI,YAAY;AACd,YAAM,SAAS,WAAW;QAAI,CAAC,cAC7BJ,UAAS,WAAW,EAAE,eAAe,MAAM,UAAU,YAAY,CAAC;MACpE;AACA,aAAO,IAAIU,YAAW,MAAiB;IACzC;AAEA,QAAI,gBAAgB,SAAS,sBAAsB;AACjD,YAAM,IAAI3B;QACRC,UAAU;QACV;MACF;IACF;AAEA,UAAM,IAAID;MACRC,UAAU;MACV,oBAAoB,KAAK,UAAU,eAAe;IACpD;EACF;AHnJO,WAAS,oBAAoB,WAAmB,aAAyB;AAC9E,YAAQ,UAAU;MAChB,KAAK;AACH,eAAOgB;MACT,KAAK;AACH,eAAO;MACT;AACE,cAAM,IAAIjB;UACRC,UAAU;UACV,oBAAoB;QACtB;IACJ;EACF;AcrBO,MAAe,WAAf,MAAwB;IAC7B,OAAO,SACL,KACA,UACA,UAA2B;MACzB,cAAc;IAChB,GACO;AACP,YAAM,kBAAkB,IAAI,gBAAgB,KAAK,QAAQ;AACzD,aAAO,oBAAoB,QAAQ,QAAQ,EAAE,iBAAiB,OAAO;IACvE;IAEA,OAAO,OACL,KACA,UACA,OACA,SACA;AACA,aAAO,KAAK,SAAS,KAAK,UAAU,OAAO,EAAE,OAAO,KAAK;IAC3D;IAEA,OAAO,OACL,KACA,UACA,MACA,QACA,SACoC;AACpC,aAAO,KAAK,SAAS,KAAK,UAAU,OAAO,EAAE,OAAO,MAAM,MAAM;IAIlE;EACF;AChBO,MAAM,mBAAN,MAGL;IACS;IACA;IACA;IACA;IACA;IACA;IACA;IAKQ;IAEjB,YAAY,SAAkB,MAAc;AAC1C,WAAK,UAAU;AACf,WAAK,SAAS,YAAY,KAAK,QAAQ,WAAW,CAAC6B,OAAMA,GAAE,SAAS,IAAI;AACxE,WAAK,OAAO;AACZ,WAAK,YAAY,iBAAiB,aAAa,KAAK,SAAS,KAAK,MAAM;AACxE,WAAK,WAAW,iBAAiB,oBAAoB,KAAK,SAAS;AACnE,WAAK,qBAAqB,KAAK,oBAAoB;AACnD,WAAK,iBAAiB;QACpB,YAAY,KAAK,kBAAkB;QACnC,eAAe,KAAK,wBAAwB;MAC9C;AAEA,WAAK,aAAa,KAAK,OAAO,cAAc,CAAC;IAC/C;IAEA,OAAe,aAAa,KAAc,IAA6B;AACrE,YAAM,mBAAmB,GAAG,OAAO;QAAI,CAAC,UACtC,IAAI,gBAAgB,KAAK,KAAK,EAAE,aAAa;MAC/C;AACA,aAAO,GAAG,GAAG,QAAQ,iBAAiB,KAAK,GAAG;IAChD;IAEA,OAAe,oBAAoB,mBAA2B;AAC5D,YAAM,0BAA0BC,QAAO,kBAAiB,mBAAmB,OAAO,CAAC;AAEnF,aAAO3B,GAAG,wBAAwB,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC;IACzD;IAEA,sBAA+B;AAC7B,YAAM,aAAa,KAAK,OAAO,OAAO;QAAI,CAAC,MACzC,KAAK,QAAQ,MAAM,KAAK,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI;MACpD;AAEA,aAAO,KAAK,OAAO,OAAO,SAAS,KAAK,cAAc,WAAW,CAAC,GAAG,QAAQ,EAAE;IACjF;IAEA,oBAA6B;AAC3B,YAAM,aAAa,YAAY,KAAK,QAAQ,OAAO,CAAC,MAAM,EAAE,WAAW,KAAK,OAAO,OAAO,IAAI;AAE9F,aAAO,WAAW,YAAY,QAAQ,EAAE;IAC1C;IAEA,0BAAkC;AAChC,UAAI;AACF,cAAM,YAAY,SAAS,SAAS,KAAK,SAAS,KAAK,OAAO,MAAM;AACpE,YAAI,qBAAqB,UAAU;AACjC,iBAAO,UAAU,MAAM;QACzB;AACA,YAAI,qBAAqB,WAAW;AAClC,iBAAO,UAAU;QACnB;AAEA,eAAO,UAAU;MACnB,SAAS,GAAT;AACE,eAAO;MACT;IACF;IAEA,gBAAgB,QAAsB,SAAS,GAAe;AAC5D,uBAAiB,yBAAyB,QAAQ,KAAK,OAAO,QAAQ,KAAK,OAAO;AAElF,YAAM,oBAAoB,OAAO,MAAM;AAEvC,YAAM,iBAAiB,KAAK,OAAO,OAAO;QACxC,CAAC,MAAM,YAAY,KAAK,QAAQ,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS;MAC9E;AAEA,UAAI,MAAM,QAAQ,MAAM,KAAK,eAAe,WAAW,OAAO,QAAQ;AACpE,0BAAkB,SAAS,KAAK,OAAO,OAAO;AAC9C,0BAAkB,KAAK,QAAoC,OAAO,MAAM;MAC1E;AAEA,YAAM,SAAS,eAAe;QAAI,CAAC,MACjC,SAAS,SAAS,KAAK,SAAS,GAAG;UACjC,eAAe,eAAe,SAAS;QACzC,CAAC;MACH;AAEA,YAAM,QAAQ,IAAI,WAAW,MAAM;AACnC,YAAM,UAAqC,MAAM,OAAO,iBAAiB;AAEzE,aAAO,kBAAkB,SAAS,QAAQ,QAAQ,UAAU;IAC9D;IAEA,OAAe,yBACb,MACA,QACA,KACA;AACA,UAAI,KAAK,WAAW,OAAO,QAAQ;AACjC;MACF;AAEA,YAAM,aAAa,OAAO,IAAI,CAAC,MAAM,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC;AACvF,YAAM,iBAAiB,WAAW;QAChC,CAAC,MAAM,EAAE,SAAS,qBAAqB,EAAE,SAAS;MACpD;AACA,UAAI,eAAe,WAAW,WAAW,QAAQ;AAC/C;MACF;AACA,UAAI,WAAW,SAAS,eAAe,WAAW,KAAK,QAAQ;AAC7D;MACF;AAEA,YAAM,WAAW,yEACf,KAAK,kCACqB,OAAO,SAAS,eAAe,qBACzD,eAAe;AAGjB,YAAM,IAAIJ,UAAUC,UAAU,+BAA+B,QAAQ;IACvE;IAEA,gBAAgB,MAAiB;AAC/B,YAAMJ,SAAQM,SAAS,IAAI;AAC3B,YAAM,iBAAiB,KAAK,OAAO,OAAO;QACxC,CAAC,MAAM,YAAY,KAAK,QAAQ,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS;MAC9E;AAEA,UAAI,eAAe,WAAW,GAAG;AAE/B,YAAIN,OAAM,WAAW,GAAG;AACtB,iBAAO;QACT;AAEA,cAAM,IAAIG;UACRC,UAAU;UACV,+CAA+C,KAAK,UAAU;YAC5D,OAAO;cACL,OAAO,KAAK,OAAO,OAAO;cAC1B,gBAAgB,eAAe;cAC/B,QAAQJ,OAAM;YAChB;YACA,OAAO;cACL,MAAM,KAAK,OAAO;cAClB;cACA,QAAQA;YACV;UACF,CAAC;QACH;MACF;AAEA,YAAM,SAAS,eAAe;QAC5B,CAAC,KAA6C,UAAU;AACtD,gBAAM,QAAQ,SAAS,SAAS,KAAK,SAAS,KAAK;AACnD,gBAAM,CAAC,cAAc,oBAAoB,IAAI,MAAM,OAAOA,QAAO,IAAI,MAAM;AAE3E,iBAAO;YACL,SAAS,CAAC,GAAG,IAAI,SAAS,YAAY;YACtC,QAAQ,IAAI,SAAS;UACvB;QACF;QACA,EAAE,SAAS,CAAC,GAAG,QAAQ,EAAE;MAC3B;AAEA,aAAO,OAAO;IAChB;IAEA,aAAa,MAAqD;AAChE,YAAM,gBAAgB;QACpB,KAAK,QAAQ;QACb,CAAC,MAAM,EAAE,WAAW,KAAK,OAAO,OAAO;MACzC;AACA,UAAI,cAAc,SAAS,MAAM;AAC/B,eAAO,CAAC,QAAW,CAAC;MACtB;AAEA,YAAMA,SAAQM,SAAS,IAAI;AAC3B,YAAM,QAAQ,SAAS,SAAS,KAAK,SAAS,KAAK,OAAO,MAAM;AAEhE,aAAO,MAAM,OAAON,QAAO,CAAC;IAC9B;EACF;AjBzMO,MAAM,YAAN,MAAgD;IAC5C;IAEA;IAEA;IAET,YAAY,SAAe;AACzB,WAAK,UAAU;AAEf,WAAK,YAAY,OAAO;QACtB,KAAK,QAAQ,UAAU,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,IAAI,iBAAiB,KAAK,SAAS,EAAE,IAAI,CAAC,CAAC;MACxF;AAEA,WAAK,gBAAgB,OAAO,YAAY,KAAK,QAAQ,cAAc,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IAC5F;;;;;IAMA,YAAY,2BAAqD;AAC/D,YAAM,KAAK,OAAO,OAAyB,KAAK,SAAS,EAAE;QACzD,CAACiC,OACCA,GAAE,SAAS,6BACXA,GAAE,cAAc,6BAChBA,GAAE,aAAa;MACnB;AAEA,UAAI,OAAO,QAAW;AACpB,eAAO;MACT;AAEA,YAAM,IAAI9B;QACRC,UAAU;QACV,YAAY,wCAAwC,KAAK,UAAU,EAAE;MACvE;IACF;IAEA,mBAAmB,kBAA6C,MAAsB;AACpF,YAAM,WACJ,OAAO,qBAAqB,WAAW,KAAK,YAAY,gBAAgB,IAAI;AAE9E,UAAI,CAAC,UAAU;AACb,cAAM,IAAID,UAAUC,UAAU,oBAAoB,qBAAqB;MACzE;AAEA,aAAO,SAAS,gBAAgB,IAAI;IACtC;IAEA,mBACE,kBACA,QACA,SAAS,GACG;AACZ,YAAM,WACJ,OAAO,qBAAqB,WAAW,KAAK,YAAY,gBAAgB,IAAI;AAE9E,UAAI,CAAC,UAAU;AACb,cAAM,IAAID,UAAUC,UAAU,oBAAoB,qBAAqB;MACzE;AAEA,aAAO,SAAS,gBAAgB,QAAQ,MAAM;IAChD;;IAGA,qBAAqB,kBAA6C,MAAsB;AACtF,YAAM,WACJ,OAAO,qBAAqB,WAAW,KAAK,YAAY,gBAAgB,IAAI;AAE9E,aAAO,SAAS,aAAa,IAAI;IACnC;IAEA,UAAU,MAAiB,OAAoB;AAC7C,YAAM,EAAE,WAAW,IAAI,YAAY,KAAK,QAAQ,aAAa,CAACF,UAASA,MAAK,UAAU,KAAK;AAE3F,aAAO,SAAS,OAAO,KAAK,SAAS,YAAYI,SAAS,IAAI,GAAG,GAAG;QAClE,UAAU,KAAK,QAAQ;MACzB,CAAC;IACH;IAEA,mBAAmB,MAAc,OAAmB;AAClD,YAAM,eAAe;QACnB,KAAK,QAAQ;QACb,CAAC,MAAM,EAAE,SAAS;QAClB,MAAM;AACJ,gBAAM,IAAIH;YACRC,UAAU;YACV,4BAA4B;UAC9B;QACF;MACF;AAEA,aAAO,SAAS,OAAO,KAAK,SAAS,aAAa,kBAAkB,OAAO;QACzE,eAAe;MACjB,CAAC;IACH;IAEA,YAAY,QAAgB;AAC1B,aAAO;QACL,KAAK,QAAQ;QACb,CAAC,MAAM,EAAE,WAAW;QACpB,MAAM;AACJ,gBAAM,IAAID;YACRC,UAAU;YACV,qBAAqB;UACvB;QACF;MACF;IACF;EACF;;;AmBrHO,MAAM,iBAAN,cAA6B,MAAyB;IAC3D;IACA;IAEA,YAAY,QAAgB;AAC1B,YAAM,iBAAiB,IAAK,SAAS,KAAM;AAC3C,YAAM,gBAAgB,SAAS;AAC/B;QACE;;;;;QAKA,SAAS,gBAAgB;QACzB;MACF;AACA,WAAK,SAAS;AACd,WAAK,iBAAiB;IACxB;IAEA,OAAO,OAA8B;AACnC,YAAM,QAAsB,CAAC;AAE7B,YAAM,OAAO,SAAS,KAAK;AAC3B,YAAM,KAAK,IAAI;AAEf,UAAI,KAAK,gBAAgB;AACvB,cAAM,KAAK,IAAI,WAAW,KAAK,cAAc,CAAC;MAChD;AAEA,aAAO,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,KAAK,MAAM,GAAG,IAAI,KAAK,MAAM,CAAC,GAAG,IAAI,KAAK,MAAM;AACxE,YAAM,QAAQ;AAEd,UAAI,KAAK,gBAAgB;AACvB,SAAC,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,cAAc;MAC/C;AAEA,aAAO,CAAC,OAAO,CAAC;IAClB;EACF;ACxCO,MAAM,iBAAN,cAA6B,YAGjC;IACD,cAAc;AACZ,YAAM,aAAa;QACjB,aAAa,IAAI,YAAY,KAAK;QAClC,SAAS,IAAI,YAAY,KAAK;MAChC,CAAC;IACH;EACF;AFRO,MAAK,YAAL,kBAAK+B,eAAL;AACLA,eAAAA,WAAA,MAAA,IAAO,CAAA,IAAP;AACAA,eAAAA,WAAA,UAAA,IAAW,CAAA,IAAX;AACAA,eAAAA,WAAA,SAAA,IAAU,CAAA,IAAV;AAHU,WAAAA;EAAA,GAAA,aAAA,CAAA,CAAA;AAiDL,MAAM,iBAAN,cAA6BC,MAA4B;IAC9D,cAAc;AACZ,YAAM,aAAa,oBAAoB,CAAC;IAC1C;IAEA,OAAO,OAA8B;AACnC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAI,UAAU,EAAE,OAAO,MAAM,IAAI,CAAC;AAC7C,YAAM,KAAK,IAAIC,YAAY,IAAI,EAAE,OAAO,MAAM,WAAW,CAAC;AAC1D,YAAM,KAAK,IAAI,UAAU,EAAE,OAAO,MAAM,KAAK,CAAC;AAC9C,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AACzD,YAAM,KAAK,IAAI,UAAU,EAAE,OAAO,MAAM,OAAO,CAAC;AAChD,YAAM,KAAK,IAAI,eAAe,EAAE,OAAO,MAAM,SAAS,CAAC;AACvD,YAAM,KAAK,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,YAAY,CAAC;AAC3D,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,QAAQ,CAAC;AACxD,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,gBAAgB,CAAC;AACnE,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,eAAe,CAAC;AAC/D,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,mBAAmB,CAAC;AACnE,YAAM,KAAK,IAAI,eAAe,MAAM,eAAe,EAAE,OAAO,MAAM,SAAS,CAAC;AAC5E,YAAM,KAAK,IAAI,eAAe,MAAM,mBAAmB,EAAE,OAAO,MAAM,aAAa,CAAC;AAEpF,aAAOC,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAqC;AAC5D,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,OAAO;AACb,OAAC,SAAS,CAAC,IAAI,IAAID,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,QAAQ;AACd,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,UAAU;AAChB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,EAAE,OAAO,MAAM,CAAC;AAClD,YAAM,YAAY;AAClB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,eAAe,OAAO,OAAO;AACnC,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,WAAW;AACjB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,mBAAmB;AACzB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,kBAAkB;AACxB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,sBAAsB;AAC5B,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,eAAe,EAAE,OAAO,MAAM,CAAC;AACjE,YAAM,YAAY;AAClB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,mBAAmB,EAAE,OAAO,MAAM,CAAC;AACrE,YAAM,gBAAgB;AAEtB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AAwBO,MAAM,qBAAN,cAAiCD,MAAoC;IAC1E,cAAc;AACZ,YAAM,iBAAiB,wBAAwB,CAAC;IAClD;IAEA,OAAO,OAAkC;AACvC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAI,UAAU,EAAE,OAAO,MAAM,IAAI,CAAC;AAC7C,YAAM,KAAK,IAAIC,YAAY,IAAI,EAAE,OAAO,MAAM,WAAW,CAAC;AAC1D,YAAM,KAAK,IAAI,UAAU,EAAE,OAAO,MAAM,WAAW,CAAC;AACpD,YAAM,KAAK,IAAI,UAAU,EAAE,OAAO,MAAM,SAAS,CAAC;AAClD,YAAM,KAAK,IAAI,eAAe,EAAE,OAAO,MAAM,SAAS,CAAC;AACvD,YAAM,KAAK,IAAI,UAAU,EAAE,OAAO,MAAM,UAAU,CAAC;AAEnD,aAAOC,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAyC;AAChE,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,OAAO;AACb,OAAC,SAAS,CAAC,IAAI,IAAID,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,YAAY;AAClB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,EAAE,OAAO,MAAM,CAAC;AAClD,YAAM,YAAY;AAClB,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,aAAa;AAEnB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;UACA;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AA0CO,MAAM,oBAAN,cAAgCD,MAAkC;IACvE,cAAc;AACZ,YAAM,gBAAgB,uBAAuB,CAAC;IAChD;IAEA,OAAO,aACL,OACQ;AACR,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,MAAM,CAAC;AACtD,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,SAAS,CAAC;AACzD,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,KAAK,CAAC;AACrD,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AACzD,YAAM,KAAKG,SAAS,MAAM,QAAQ,IAAI,CAAC;AAEvC,aAAOC,QAAOF,OAAO,KAAK,CAAC;IAC7B;IAEA,OAAO,WAAW,aAAqC;AACrD,YAAMG,SAAQF,SAAS,eAAe,IAAI;AAC1C,YAAMG,cAAaD,OAAM;AACzB,aAAO,IAAI,eAAeC,WAAU,EAAE,OAAOD,MAAK;IACpD;IAEA,OAAO,OAAiC;AACtC,YAAM,QAAsB,CAAC;AAC7B,YAAM,OAAO,kBAAkB,WAAW,MAAM,IAAI;AAEpD,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,MAAM,CAAC;AACtD,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,SAAS,CAAC;AACzD,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AACzD,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,KAAK,CAAC;AACrD,YAAM,KAAK,IAAIJ,YAAY,IAAI,EAAE,OAAO,MAAM,YAAY,CAAC;AAC3D,YAAM,KAAK,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,gBAAgB,CAAC;AACnE,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,KAAK,MAAM,CAAC;AACrD,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,eAAe,CAAC;AAC/D,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,mBAAmB,CAAC;AACnE,YAAM,KAAK,IAAI,eAAe,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC;AACvD,YAAM,KAAK,IAAI,eAAe,MAAM,eAAe,EAAE,OAAO,MAAM,SAAS,CAAC;AAC5E,YAAM,KAAK,IAAI,eAAe,MAAM,mBAAmB,EAAE,OAAO,MAAM,aAAa,CAAC;AAEpF,aAAOC,OAAO,KAAK;IACrB;IAEA,OAAO,WAAW,aAAoC;AACpD,YAAMG,SAAQF,SAAS,WAAW;AAClC,YAAMG,cAAaD,OAAM;AACzB,YAAM,CAAC,IAAI,IAAI,IAAI,eAAeC,WAAU,EAAE,OAAOD,QAAO,CAAC;AAE7D,aAAOF,SAAS,IAAI;IACtB;IAEA,OAAO,MAAkB,QAAwC;AAC/D,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,YAAY;AAClB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,QAAQ;AACd,OAAC,SAAS,CAAC,IAAI,IAAIF,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,eAAe,OAAO,OAAO;AACnC,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,mBAAmB;AACzB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAMK,cAAa;AACnB,OAAC,SAAS,CAAC,IAAI,IAAIL,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,kBAAkB;AACxB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,sBAAsB;AAC5B,OAAC,SAAS,CAAC,IAAI,IAAI,eAAeK,WAAU,EAAE,OAAO,MAAM,CAAC;AAC5D,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,eAAe,EAAE,OAAO,MAAM,CAAC;AACjE,YAAM,YAAY;AAClB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,mBAAmB,EAAE,OAAO,MAAM,CAAC;AACrE,YAAM,gBAAgB;AAEtB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;UACA;UACA;UACA;UACA,YAAAA;UACA;UACA;UACA,MAAM;UACN;UACA;QACF;QACA;MACF;IACF;EACF;AAIO,MAAM,aAAN,cAAyBN,MAAoB;IAClD,cAAc;AACZ,YAAM,SAAS,gBAAgB,CAAC;IAClC;IAEA,OAAO,OAA0B;AAC/B,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIC,YAAY,IAAI,EAAE,OAAO,MAAM,IAAI,CAAC;AAEnD,YAAM,EAAE,MAAAM,MAAK,IAAI;AAEjB,cAAQA,OAAM;QACZ,KAAK,GAAgB;AACnB,gBAAM,KAAK,IAAI,eAAe,EAAE,OAAO,KAAK,CAAC;AAC7C;QACF;QACA,KAAK,GAAoB;AACvB,gBAAM,KAAK,IAAI,mBAAmB,EAAE,OAAO,KAAK,CAAC;AACjD;QACF;QACA,KAAK,GAAmB;AACtB,gBAAM,KAAK,IAAI,kBAAkB,EAAE,OAAO,KAAK,CAAC;AAChD;QACF;QACA,SAAS;AACP,gBAAM,IAAI;YACR,UAAU;YACV,mCAAmCA;UACrC;QACF;MACF;AAEA,aAAOL,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAiC;AACxD,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAID,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAMM,QAAO;AACb,cAAQA,OAAM;QACZ,KAAK,GAAgB;AACnB,WAAC,SAAS,CAAC,IAAI,IAAI,eAAe,EAAE,OAAO,MAAM,CAAC;AAClD,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,KAAK,GAAoB;AACvB,WAAC,SAAS,CAAC,IAAI,IAAI,mBAAmB,EAAE,OAAO,MAAM,CAAC;AACtD,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,KAAK,GAAmB;AACtB,WAAC,SAAS,CAAC,IAAI,IAAI,kBAAkB,EAAE,OAAO,MAAM,CAAC;AACrD,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,SAAS;AACP,gBAAM,IAAI;YACR,UAAU;YACV,mCAAmCA;UACrC;QACF;MACF;IACF;EACF;AG7ZO,MAAK,aAAL,kBAAKC,gBAAL;AACLA,gBAAAA,YAAA,MAAA,IAAO,CAAA,IAAP;AACAA,gBAAAA,YAAA,UAAA,IAAW,CAAA,IAAX;AACAA,gBAAAA,YAAA,QAAA,IAAS,CAAA,IAAT;AACAA,gBAAAA,YAAA,UAAA,IAAW,CAAA,IAAX;AACAA,gBAAAA,YAAA,iBAAA,IAAkB,CAAA,IAAlB;AALU,WAAAA;EAAA,GAAA,cAAA,CAAA,CAAA;AAkBL,MAAM,kBAAN,cAA8BR,MAA8B;IACjE,cAAc;AACZ,YAAM,cAAc,qBAAqB,CAAC;IAC5C;IAEA,OAAO,OAA+B;AACpC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIS,UAAU,EAAE,OAAO,MAAM,EAAE,CAAC;AAC3C,YAAM,KAAK,IAAIC,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AACzD,YAAM,KAAK,IAAID,UAAU,EAAE,OAAO,MAAM,OAAO,CAAC;AAEhD,aAAOP,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAsC;AAC7D,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAIO,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,KAAK;AACX,OAAC,SAAS,CAAC,IAAI,IAAIC,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAID,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,UAAU;AAEhB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AAYO,MAAM,sBAAN,cAAkCT,MAAsC;IAC7E,cAAc;AACZ,YAAM,kBAAkB,yBAAyB,CAAC;IACpD;IAEA,OAAO,OAAmC;AACxC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIC,YAAY,IAAI,EAAE,OAAO,MAAM,UAAU,CAAC;AACzD,YAAM,KAAK,IAAIQ,UAAU,EAAE,OAAO,MAAM,WAAW,CAAC;AACpD,YAAM,KAAK,IAAIA,UAAU,EAAE,OAAO,MAAM,SAAS,CAAC;AAElD,aAAOP,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAA0C;AACjE,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAID,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,aAAa;AACnB,OAAC,SAAS,CAAC,IAAI,IAAIQ,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAIA,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,YAAY;AAElB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AAYO,MAAM,oBAAN,cAAgCT,MAAkC;IACvE,cAAc;AACZ,YAAM,gBAAgB,uBAAuB,CAAC;IAChD;IAEA,OAAO,OAAiC;AACtC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIS,UAAU,EAAE,OAAO,MAAM,EAAE,CAAC;AAC3C,YAAM,KAAK,IAAIC,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AACzD,YAAM,KAAK,IAAID,UAAU,EAAE,OAAO,MAAM,OAAO,CAAC;AAEhD,aAAOP,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAwC;AAC/D,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAIO,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,KAAK;AACX,OAAC,SAAS,CAAC,IAAI,IAAIC,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAID,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,UAAU;AAEhB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AAYO,MAAM,sBAAN,cAAkCT,MAAsC;IAC7E,cAAc;AACZ,YAAM,kBAAkB,yBAAyB,CAAC;IACpD;IAEA,OAAO,OAAmC;AACxC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIS,UAAU,EAAE,OAAO,MAAM,EAAE,CAAC;AAC3C,YAAM,KAAK,IAAIC,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AACzD,YAAM,KAAK,IAAID,UAAU,EAAE,OAAO,MAAM,OAAO,CAAC;AAEhD,aAAOP,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAA0C;AACjE,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAIO,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,KAAK;AACX,OAAC,SAAS,CAAC,IAAI,IAAIC,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAID,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,UAAU;AAEhB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AAUO,MAAM,6BAAN,cAAyCT,MAG9C;IACA,cAAc;AACZ,YAAM,yBAAyB,gCAAgC,CAAC;IAClE;IAEA,OAAO,OAA0C;AAC/C,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIS,UAAU,EAAE,OAAO,MAAM,UAAU,CAAC;AACnD,YAAM,KAAK,IAAIA,UAAU,EAAE,OAAO,MAAM,SAAS,CAAC;AAElD,aAAOP,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAiD;AACxE,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAIO,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,aAAa;AACnB,OAAC,SAAS,CAAC,IAAI,IAAIA,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,YAAY;AAElB,aAAO;QACL;UACE,MAAM;UACN;UACA;QACF;QACA;MACF;IACF;EACF;AASO,MAAM,cAAN,cAA0BT,MAAsB;IACrD,cAAc;AACZ,YAAM,UAAU,kBAAkB,CAAC;IACrC;IAEA,OAAO,OAA2B;AAChC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIC,YAAY,IAAI,EAAE,OAAO,MAAM,IAAI,CAAC;AAEnD,YAAM,EAAE,MAAAM,MAAK,IAAI;AAEjB,cAAQA,OAAM;QACZ,KAAK,GAAiB;AACpB,gBAAM,KAAK,IAAI,gBAAgB,EAAE,OAAO,KAAK,CAAC;AAC9C;QACF;QACA,KAAK,GAAqB;AACxB,gBAAM,KAAK,IAAI,oBAAoB,EAAE,OAAO,KAAK,CAAC;AAClD;QACF;QACA,KAAK,GAAmB;AACtB,gBAAM,KAAK,IAAI,kBAAkB,EAAE,OAAO,KAAK,CAAC;AAChD;QACF;QACA,KAAK,GAAqB;AACxB,gBAAM,KAAK,IAAI,oBAAoB,EAAE,OAAO,KAAK,CAAC;AAClD;QACF;QACA,KAAK,GAA4B;AAC/B,gBAAM,KAAK,IAAI,2BAA2B,EAAE,OAAO,KAAK,CAAC;AACzD;QACF;QACA,SAAS;AACP,gBAAM,IAAII;YACRC,UAAU;YACV,oCAAoCL;UACtC;QACF;MACF;AAEA,aAAOL,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAkC;AACzD,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAID,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAMM,QAAO;AACb,cAAQA,OAAM;QACZ,KAAK,GAAiB;AACpB,WAAC,SAAS,CAAC,IAAI,IAAI,gBAAgB,EAAE,OAAO,MAAM,CAAC;AACnD,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,KAAK,GAAqB;AACxB,WAAC,SAAS,CAAC,IAAI,IAAI,oBAAoB,EAAE,OAAO,MAAM,CAAC;AACvD,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,KAAK,GAAmB;AACtB,WAAC,SAAS,CAAC,IAAI,IAAI,kBAAkB,EAAE,OAAO,MAAM,CAAC;AACrD,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,KAAK,GAAqB;AACxB,WAAC,SAAS,CAAC,IAAI,IAAI,oBAAoB,EAAE,OAAO,MAAM,CAAC;AACvD,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,KAAK,GAA4B;AAC/B,WAAC,SAAS,CAAC,IAAI,IAAI,2BAA2B,EAAE,OAAO,MAAM,CAAC;AAC9D,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,SAAS;AACP,gBAAM,IAAII;YACRC,UAAU;YACV,oCAAoCL;UACtC;QACF;MACF;IACF;EACF;AC3UO,MAAK,aAAL,kBAAKM,gBAAL;AACLA,gBAAAA,YAAA,UAAA,IAAW,CAAA,IAAX;AACAA,gBAAAA,YAAA,cAAA,IAAe,CAAA,IAAf;AACAA,gBAAAA,YAAA,UAAA,IAAW,CAAA,IAAX;AACAA,gBAAAA,YAAA,QAAA,IAAS,CAAA,IAAT;AAJU,WAAAA;EAAA,GAAA,cAAA,CAAA,CAAA;AA6BL,MAAM,eAAe,CAAC,aAC3B,SAAS,KAAK,CAAC,GAAG,MAAM,EAAE,OAAO,EAAE,IAAI;AAEzC,WAAS,2BAA2B,UAA0B;AAC5D,UAAM,YAAY,oBAAI,IAAgB;AAEtC,aAAS,QAAQ,CAAC,WAAW;AAC3B,UAAI,UAAU,IAAI,OAAO,IAAI,GAAG;AAC9B,cAAM,IAAIF;UACRC,UAAU;UACV,gCAAgC;QAClC;MACF;AACA,gBAAU,IAAI,OAAO,IAAI;IAC3B,CAAC;EACH;AAEO,MAAM,gBAAN,cAA4BZ,MAA0B;IAC3D,cAAc;AACZ,YAAM,YAAY,gBAAgB,CAAC;IACrC;IAEA,OAAO,UAAgC;AACrC,iCAA2B,QAAQ;AACnC,YAAM,iBAAiB,aAAa,QAAQ;AAE5C,YAAM,QAAsB,CAAC;AAE7B,qBAAe,QAAQ,CAAC,EAAE,MAAM,MAAAO,MAAK,MAAM;AACzC,gBAAQA,OAAM;UACZ,KAAK;UACL,KAAK;UACL,KAAK;AACH,kBAAM,KAAK,IAAIG,eAAe,KAAK,EAAE,OAAO,IAAI,CAAC;AACjD;UAEF,KAAK;AACH,kBAAM,KAAK,IAAIT,YAAY,KAAK,EAAE,OAAO,IAAI,CAAC;AAC9C;UAEF,SAAS;AACP,kBAAM,IAAIU,UAAUC,UAAU,qBAAqB,wBAAwBL,OAAM;UACnF;QACF;MACF,CAAC;AAED,aAAOL,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAgB,aAAyC;AAChF,UAAI,IAAI;AACR,YAAM,WAAqB,CAAC;AAE5B,UAAI,cAAc,GAAqB;AACrC,cAAM,CAAC,UAAU,UAAU,IAAI,IAAIQ,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvE,YAAI;AACJ,iBAAS,KAAK,EAAE,MAAM,GAAqB,MAAM,SAAS,CAAC;MAC7D;AAEA,UAAI,cAAc,GAAyB;AACzC,cAAM,CAAC,cAAc,UAAU,IAAI,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AAC3E,YAAI;AACJ,iBAAS,KAAK,EAAE,MAAM,GAAyB,MAAM,aAAa,CAAC;MACrE;AAEA,UAAI,cAAc,GAAqB;AACrC,cAAM,CAAC,UAAU,UAAU,IAAI,IAAIT,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpE,YAAI;AACJ,iBAAS,KAAK,EAAE,MAAM,GAAqB,MAAM,SAAS,CAAC;MAC7D;AAEA,UAAI,cAAc,GAAmB;AACnC,cAAM,CAAC,QAAQ,UAAU,IAAI,IAAIS,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACrE,YAAI;AACJ,iBAAS,KAAK,EAAE,MAAM,GAAmB,MAAM,OAAO,CAAC;MACzD;AAEA,aAAO,CAAC,UAAU,CAAC;IACrB;EACF;ACzGO,MAAK,cAAL,kBAAKI,iBAAL;AACLA,iBAAAA,aAAA,MAAA,IAAO,CAAA,IAAP;AACAA,iBAAAA,aAAA,QAAA,IAAS,CAAA,IAAT;AACAA,iBAAAA,aAAA,YAAA,IAAa,CAAA,IAAb;AACAA,iBAAAA,aAAA,OAAA,IAAQ,CAAA,IAAR;AACAA,iBAAAA,aAAA,QAAA,IAAS,CAAA,IAAT;AACAA,iBAAAA,aAAA,KAAA,IAAM,CAAA,IAAN;AACAA,iBAAAA,aAAA,SAAA,IAAU,CAAA,IAAV;AACAA,iBAAAA,aAAA,UAAA,IAAW,CAAA,IAAX;AACAA,iBAAAA,aAAA,aAAA,IAAc,CAAA,IAAd;AACAA,iBAAAA,aAAA,cAAA,IAAe,CAAA,IAAf;AACAA,iBAAAA,aAAA,YAAA,IAAa,EAAA,IAAb;AACAA,iBAAAA,aAAA,MAAA,IAAO,EAAA,IAAP;AACAA,iBAAAA,aAAA,MAAA,IAAO,EAAA,IAAP;AAbU,WAAAA;EAAA,GAAA,eAAA,CAAA,CAAA;AAoqBL,MAAM,yBAAN,cAAqCC,MAA4C;IACtF,cAAc;AACZ,YAAM,qBAAqB,4BAA4B,CAAC;IAC1D;IAEA,OAAO,aACL,OACQ;AACR,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,MAAM,CAAC;AACtD,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,SAAS,CAAC;AACzD,YAAM,KAAK,IAAI,eAAe,EAAE,EAAE,OAAO,MAAM,KAAK,CAAC;AACrD,YAAM,KAAK,IAAIC,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AACzD,YAAM,KAAKC,SAAS,MAAM,QAAQ,IAAI,CAAC;AAEvC,aAAOC,QAAOC,OAAO,KAAK,CAAC;IAC7B;IAEA,OAAO,OAAyD;AAC9D,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIC,UAAU,EAAE,OAAO,MAAM,MAAM,CAAC;AAC/C,YAAM,KAAK,IAAIA,UAAU,EAAE,OAAO,MAAM,SAAS,CAAC;AAClD,YAAM,KAAK,IAAIJ,eAAe,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AACzD,YAAM,KAAK,IAAII,UAAU,EAAE,OAAO,MAAM,KAAK,CAAC;AAC9C,YAAM,KAAK,IAAIC,YAAY,KAAK,EAAE,OAAO,MAAM,KAAK,MAAM,CAAC;AAC3D,YAAM,KAAK,IAAID,UAAU,EAAE,OAAO,MAAM,MAAM,CAAC;AAC/C,YAAM,KAAK,IAAI,eAAe,MAAM,KAAK,MAAM,EAAE,OAAO,MAAM,IAAI,CAAC;AAEnE,aAAOD,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAA6C;AACpE,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAIC,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAIA,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,YAAY;AAClB,OAAC,SAAS,CAAC,IAAI,IAAIJ,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAII,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,QAAQ;AACd,OAAC,SAAS,CAAC,IAAI,IAAIC,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,MAAM;AACZ,OAAC,SAAS,CAAC,IAAI,IAAID,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,GAAG,EAAE,OAAO,MAAM,CAAC;AACrD,YAAM,cAAcH,SAAS,OAAO;AAEpC,YAAM,oBAAuC;QAC3C,MAAM;QACN,WAAW;QACX;QACA;QACA;QACA;QACA;QACA,MAAM;MACR;AACA,wBAAkB,YAAY,uBAAuB,aAAa,iBAAiB;AAEnF,aAAO,CAAC,mBAAmB,CAAC;IAC9B;EACF;AAkBO,MAAM,aAAa,CAAC,YAAoB,UAA0B;AACvE,UAAM,kBAAkBA,SAAS,UAAU;AAC3C,UAAM,aAAaA,SAAS,KAAK;AAEjC,WAAOC,QAAOC,OAAO,CAAC,iBAAiB,UAAU,CAAC,CAAC;EACrD;AAEO,MAAM,mBAAN,cAA+BJ,MAAgC;IACpE,cAAc;AACZ,YAAM,eAAe,sBAAsB,CAAC;IAC9C;IAEA,OAAO,WAAW,YAAoB,OAAuB;AAC3D,aAAO,WAAW,YAAY,KAAK;IACrC;IAEA,OAAO,OAAgC;AACrC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIK,UAAU,EAAE,OAAO,MAAM,KAAK,CAAC;AAC9C,YAAM,KAAK,IAAIA,UAAU,EAAE,OAAO,MAAM,UAAU,CAAC;AACnD,YAAM,KAAK,IAAIJ,eAAe,KAAK,EAAE,OAAO,MAAM,GAAG,CAAC;AACtD,YAAM,KAAK,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,EAAE,CAAC;AACrD,YAAM,KAAK,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,EAAE,CAAC;AAErD,aAAOG,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAuC;AAC9D,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAIC,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,QAAQ;AACd,OAAC,SAAS,CAAC,IAAI,IAAIA,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,aAAa;AACnB,OAAC,SAAS,CAAC,IAAI,IAAIJ,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,MAAM;AACZ,OAAC,SAAS,CAAC,IAAI,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,KAAK;AACX,OAAC,SAAS,CAAC,IAAI,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,KAAK;AAEX,YAAM,UAAU,iBAAiB,WAAW,YAAY,KAAK;AAE7D,YAAM,cAA2B;QAC/B,MAAM;QACN;QACA;QACA;QACA;QACA;QACA;MACF;AAEA,aAAO,CAAC,aAAa,CAAC;IACxB;EACF;AAkBO,MAAM,mBAAN,cAA+BD,MAAgC;IACpE,cAAc;AACZ,YAAM,eAAe,sBAAsB,CAAC;IAC9C;IAEA,OAAO,WAAW,YAAoB,OAAuB;AAC3D,aAAO,WAAW,YAAY,KAAK;IACrC;IAEA,OAAO,OAAgC;AACrC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIK,UAAU,EAAE,OAAO,MAAM,KAAK,CAAC;AAC9C,YAAM,KAAK,IAAIA,UAAU,EAAE,OAAO,MAAM,UAAU,CAAC;AACnD,YAAM,KAAK,IAAIJ,eAAe,KAAK,EAAE,OAAO,MAAM,GAAG,CAAC;AACtD,YAAM,KAAK,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,EAAE,CAAC;AACrD,YAAM,KAAK,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,EAAE,CAAC;AAErD,aAAOG,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAuC;AAC9D,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAIC,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,QAAQ;AACd,OAAC,SAAS,CAAC,IAAI,IAAIA,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,aAAa;AACnB,OAAC,SAAS,CAAC,IAAI,IAAIJ,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,MAAM;AACZ,OAAC,SAAS,CAAC,IAAI,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,KAAK;AACX,OAAC,SAAS,CAAC,IAAI,IAAIA,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,KAAK;AAEX,YAAM,UAAU,iBAAiB,WAAW,YAAY,KAAK;AAE7D,YAAM,cAA2B;QAC/B,MAAM;QACN;QACA;QACA;QACA;QACA;QACA;MACF;AAEA,aAAO,CAAC,aAAa,CAAC;IACxB;EACF;ACr3BO,MAAM,mBAAN,cAA+BM,YAGnC;IACD,cAAc;AACZ,YAAM,eAAe;QACnB,KAAK,IAAIC,UAAU;QACnB,OAAO,IAAIA,UAAU;MACvB,CAAC;IACH;EACF;AEPO,MAAM,eAAN,cAA2BC,MAAwB;IACxD,cAAc;AACZ;QACE;;QAEA;QACA;MACF;IACF;IAEA,OAAO,OAA4B;AACjC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIC,YAAY,KAAK,EAAE,OAAO,MAAM,UAAU,CAAC;AAC1D,YAAM,KAAK,IAAI,eAAe,MAAM,UAAU,EAAE,OAAO,MAAM,IAAI,CAAC;AAElE,aAAOC,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAmC;AAC1D,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAID,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAME,cAAa;AACnB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAeA,WAAU,EAAE,OAAO,MAAM,CAAC;AAC5D,YAAM,cAAc;AAEpB,aAAO;QACL;UACE,YAAAA;UACA,MAAM;QACR;QACA;MACF;IACF;EACF;AD3BO,MAAK,kBAAL,kBAAKC,qBAAL;AACLA,qBAAAA,iBAAA,QAAA,IAAS,CAAA,IAAT;AACAA,qBAAAA,iBAAA,QAAA,IAAS,CAAA,IAAT;AACAA,qBAAAA,iBAAA,MAAA,IAAO,CAAA,IAAP;AAHU,WAAAA;EAAA,GAAA,mBAAA,CAAA,CAAA;AAoDL,MAAM,yBAAN,cAAqCJ,MAA4C;IACtF,cAAc;AACZ,YAAM,qBAAqB,4BAA4B,CAAC;IAC1D;IAEA,OAAO,OAAsC;AAC3C,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIK,eAAe,KAAK,EAAE,OAAO,MAAM,cAAc,CAAC;AACjE,YAAM,KAAK,IAAIJ,YAAY,KAAK,EAAE,OAAO,MAAM,YAAY,CAAC;AAC5D,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,gBAAgB,CAAC;AAChE,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,WAAW,CAAC;AAC3D,YAAM,KAAK,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,WAAW,CAAC;AAC1D,YAAM,KAAK,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,YAAY,CAAC;AAC3D,YAAM,KAAK,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,cAAc,CAAC;AAC7D,YAAM,KAAK,IAAIF,UAAU,EAAE,OAAO,MAAM,YAAY,CAAC;AACrD,YAAM,KAAK,IAAI,eAAe,MAAM,YAAY,EAAE,OAAO,MAAM,MAAM,CAAC;AACtE,YAAM,KAAK,IAAI,eAAe,MAAM,gBAAgB,EAAE,OAAO,MAAM,UAAU,CAAC;AAC9E,YAAM,KAAK,IAAI,cAAc,EAAE,OAAO,MAAM,QAAQ,CAAC;AACrD,YAAM,KAAK,IAAI,WAAW,IAAI,WAAW,GAAG,MAAM,WAAW,EAAE,OAAO,MAAM,MAAM,CAAC;AACnF,YAAM,KAAK,IAAI,WAAW,IAAI,YAAY,GAAG,MAAM,YAAY,EAAE,OAAO,MAAM,OAAO,CAAC;AACtF,YAAM,KAAK,IAAI,WAAW,IAAI,aAAa,GAAG,MAAM,cAAc,EAAE,OAAO,MAAM,SAAS,CAAC;AAE3F,aAAOG,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAA6C;AACpE,UAAI;AACJ,UAAI,IAAI;AACR,OAAC,SAAS,CAAC,IAAI,IAAIG,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,iBAAiB;AACvB,OAAC,SAAS,CAAC,IAAI,IAAIJ,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,eAAe;AACrB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,mBAAmB;AACzB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,eAAe;AACrB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,iBAAiB;AACvB,OAAC,SAAS,CAAC,IAAI,IAAIF,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,eAAe;AACrB,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,YAAY,EAAE,OAAO,MAAM,CAAC;AAC9D,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,gBAAgB,EAAE,OAAO,MAAM,CAAC;AAClE,YAAM,aAAa;AACnB,OAAC,SAAS,CAAC,IAAI,IAAI,cAAc,EAAE,OAAO,MAAM,GAAG,WAAW;AAC9D,YAAM,WAAW;AACjB,OAAC,SAAS,CAAC,IAAI,IAAI,WAAW,IAAI,WAAW,GAAG,WAAW,EAAE,OAAO,MAAM,CAAC;AAC3E,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAI,WAAW,IAAI,YAAY,GAAG,YAAY,EAAE,OAAO,MAAM,CAAC;AAC7E,YAAM,UAAU;AAChB,OAAC,SAAS,CAAC,IAAI,IAAI,WAAW,IAAI,aAAa,GAAG,cAAc,EAAE,OAAO,MAAM,CAAC;AAChF,YAAM,YAAY;AAElB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AA6CO,MAAM,yBAAN,cAAqCC,MAA4C;IACtF,cAAc;AACZ,YAAM,qBAAqB,4BAA4B,CAAC;IAC1D;IAEA,OAAO,OAAsC;AAC3C,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIC,YAAY,KAAK,EAAE,OAAO,MAAM,cAAc,CAAC;AAC9D,YAAM,KAAK,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,oBAAoB,CAAC;AACnE,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,WAAW,CAAC;AAC3D,YAAM,KAAK,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,iBAAiB,CAAC;AACjE,YAAM,KAAK,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,WAAW,CAAC;AAC1D,YAAM,KAAK,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,YAAY,CAAC;AAC3D,YAAM,KAAK,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,cAAc,CAAC;AAC7D,YAAM,KAAK,IAAIF,UAAU,EAAE,OAAO,MAAM,IAAI,CAAC;AAC7C,YAAM,KAAK,IAAI,cAAc,EAAE,OAAO,MAAM,QAAQ,CAAC;AACrD,YAAM;QACJ,IAAI,WAAW,IAAI,iBAAiB,GAAG,MAAM,iBAAiB,EAAE,OAAO,MAAM,YAAY;MAC3F;AACA,YAAM,KAAK,IAAI,WAAW,IAAI,WAAW,GAAG,MAAM,WAAW,EAAE,OAAO,MAAM,MAAM,CAAC;AACnF,YAAM,KAAK,IAAI,WAAW,IAAI,YAAY,GAAG,MAAM,YAAY,EAAE,OAAO,MAAM,OAAO,CAAC;AACtF,YAAM,KAAK,IAAI,WAAW,IAAI,aAAa,GAAG,MAAM,cAAc,EAAE,OAAO,MAAM,SAAS,CAAC;AAE3F,aAAOG,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAA6C;AACpE,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAID,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,iBAAiB;AACvB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,uBAAuB;AAC7B,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,KAAK,EAAE,OAAO,MAAM,CAAC;AACpD,YAAM,oBAAoB;AAC1B,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,cAAc;AACpB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,eAAe;AACrB,OAAC,SAAS,CAAC,IAAI,IAAIA,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAM,iBAAiB;AACvB,OAAC,SAAS,CAAC,IAAI,IAAIF,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,OAAO;AACb,OAAC,SAAS,CAAC,IAAI,IAAI,cAAc,EAAE,OAAO,MAAM,GAAG,WAAW;AAC9D,YAAM,WAAW;AACjB,OAAC,SAAS,CAAC,IAAI,IAAI,WAAW,IAAI,iBAAiB,GAAG,iBAAiB,EAAE,OAAO,MAAM,CAAC;AACvF,YAAM,eAAe;AACrB,OAAC,SAAS,CAAC,IAAI,IAAI,WAAW,IAAI,WAAW,GAAG,WAAW,EAAE,OAAO,MAAM,CAAC;AAC3E,YAAM,SAAS;AACf,OAAC,SAAS,CAAC,IAAI,IAAI,WAAW,IAAI,YAAY,GAAG,YAAY,EAAE,OAAO,MAAM,CAAC;AAC7E,YAAM,UAAU;AAChB,OAAC,SAAS,CAAC,IAAI,IAAI,WAAW,IAAI,aAAa,GAAG,cAAc,EAAE,OAAO,MAAM,CAAC;AAChF,YAAM,YAAY;AAElB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AAqBO,MAAM,uBAAN,cAAmCC,MAAwC;IAChF,cAAc;AACZ,YAAM,mBAAmB,0BAA0B,CAAC;IACtD;IAEA,OAAO,OAAoC;AACzC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAI,eAAe,EAAE,OAAO,MAAM,SAAS,CAAC;AACvD,YAAM,KAAK,IAAI,mBAAmB,EAAE,OAAO,MAAM,aAAa,CAAC;AAC/D,YAAM,KAAK,IAAI,oBAAoB,EAAE,OAAO,MAAM,cAAc,CAAC;AACjE,YAAM,KAAK,IAAIK,eAAe,KAAK,EAAE,OAAO,MAAM,UAAU,CAAC;AAC7D,YAAM,KAAK,IAAIN,UAAU,EAAE,OAAO,MAAM,WAAW,CAAC;AAEpD,aAAOG,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAA2C;AAClE,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAI,eAAe,EAAE,OAAO,MAAM,CAAC;AAClD,YAAM,YAAY;AAClB,OAAC,SAAS,CAAC,IAAI,IAAI,mBAAmB,EAAE,OAAO,MAAM,CAAC;AACtD,YAAM,gBAAgB;AACtB,OAAC,SAAS,CAAC,IAAI,IAAI,oBAAoB,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,iBAAiB;AACvB,OAAC,SAAS,CAAC,IAAI,IAAIG,eAAe,KAAK,EAAE,OAAO,MAAM,CAAC;AACvD,YAAM,aAAa;AACnB,OAAC,SAAS,CAAC,IAAI,IAAIN,UAAU,EAAE,OAAO,MAAM,CAAC;AAC7C,YAAM,cAAc;AAEpB,aAAO;QACL;UACE,MAAM;UACN;UACA;UACA;UACA;UACA;QACF;QACA;MACF;IACF;EACF;AAUO,MAAM,mBAAN,cAA+BC,MAAgC;IACpE,cAAc;AACZ,YAAM,eAAe,sBAAsB,CAAC;IAC9C;IAEA,OAAO,OAAgC;AACrC,YAAM,QAAsB,CAAC;AAE7B,YAAM,KAAK,IAAIC,YAAY,IAAI,EAAE,OAAO,MAAM,IAAI,CAAC;AAEnD,YAAM,EAAE,MAAAK,MAAK,IAAI;AAEjB,cAAQ,MAAM,MAAM;QAClB,KAAK,GAAwB;AAC3B,gBAAM;YACJ,IAAI,uBAAuB,EAAE,OAAO,KAA4C;UAClF;AACA;QACF;QACA,KAAK,GAAwB;AAC3B,gBAAM;YACJ,IAAI,uBAAuB,EAAE,OAAO,KAA4C;UAClF;AACA;QACF;QACA,KAAK,GAAsB;AACzB,gBAAM,KAAK,IAAI,qBAAqB,EAAE,OAAO,KAA0C,CAAC;AACxF;QACF;QACA,SAAS;AACP,gBAAM,IAAIC;YACRC,UAAU;YACV,6BAA6BF;UAC/B;QACF;MACF;AAEA,aAAOJ,OAAO,KAAK;IACrB;IAEA,OAAO,MAAkB,QAAuC;AAC9D,UAAI;AACJ,UAAI,IAAI;AAER,OAAC,SAAS,CAAC,IAAI,IAAID,YAAY,IAAI,EAAE,OAAO,MAAM,CAAC;AACnD,YAAMK,QAAO;AAEb,cAAQA,OAAM;QACZ,KAAK,GAAwB;AAC3B,WAAC,SAAS,CAAC,IAAI,IAAI,uBAAuB,EAAE,OAAO,MAAM,CAAC;AAC1D,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,KAAK,GAAwB;AAC3B,WAAC,SAAS,CAAC,IAAI,IAAI,uBAAuB,EAAE,OAAO,MAAM,CAAC;AAC1D,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,KAAK,GAAsB;AACzB,WAAC,SAAS,CAAC,IAAI,IAAI,qBAAqB,EAAE,OAAO,MAAM,CAAC;AACxD,iBAAO,CAAC,SAAS,CAAC;QACpB;QACA,SAAS;AACP,gBAAM,IAAIC;YACRC,UAAU;YACV,6BAA6BF;UAC/B;QACF;MACF;IACF;EACF;;;AGlaA;;;;;;;;;uBAAAG;IAAA;;;;;mBAAAC;IAAA;;;;uBAAAC;IAAA;;AAKA,MAAMC,OAAM,OAAO,CAAC;AACpB,MAAMC,OAAM,OAAO,CAAC;AACpB,MAAMC,OAAM,OAAO,CAAC;AAWd,WAAUJ,SAAQ,GAAU;AAChC,WACE,aAAa,cACZ,KAAK,QAAQ,OAAO,MAAM,YAAY,EAAE,YAAY,SAAS;EAElE;AAGA,MAAMK,SAAwB,sBAAM,KAAK,EAAE,QAAQ,IAAG,GAAI,CAAC,GAAG,MAC5D,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC;AAK3B,WAAU,WAAWC,QAAiB;AAC1C,QAAI,CAACN,SAAQM,MAAK;AAAG,YAAM,IAAI,MAAM,qBAAqB;AAE1D,QAAI,MAAM;AACV,aAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ,KAAK;AACrC,aAAOD,OAAMC,OAAM,CAAC,CAAC;IACvB;AACA,WAAO;EACT;AAEM,WAAU,oBAAoB,KAAoB;AACtD,UAAM,MAAM,IAAI,SAAS,EAAE;AAC3B,WAAO,IAAI,SAAS,IAAI,IAAI,QAAQ;EACtC;AAEM,WAAU,YAAY,KAAW;AACrC,QAAI,OAAO,QAAQ;AAAU,YAAM,IAAI,MAAM,8BAA8B,OAAO,GAAG;AAErF,WAAO,OAAO,QAAQ,KAAK,MAAM,KAAK,KAAK;EAC7C;AAGA,MAAM,SAAS,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAG;AAChE,WAAS,cAAc,MAAY;AACjC,QAAI,QAAQ,OAAO,MAAM,QAAQ,OAAO;AAAI,aAAO,OAAO,OAAO;AACjE,QAAI,QAAQ,OAAO,MAAM,QAAQ,OAAO;AAAI,aAAO,QAAQ,OAAO,KAAK;AACvE,QAAI,QAAQ,OAAO,MAAM,QAAQ,OAAO;AAAI,aAAO,QAAQ,OAAO,KAAK;AACvE;EACF;AAKM,WAAU,WAAW,KAAW;AACpC,QAAI,OAAO,QAAQ;AAAU,YAAM,IAAI,MAAM,8BAA8B,OAAO,GAAG;AACrF,UAAM,KAAK,IAAI;AACf,UAAM,KAAK,KAAK;AAChB,QAAI,KAAK;AAAG,YAAM,IAAI,MAAM,4DAA4D,EAAE;AAC1F,UAAM,QAAQ,IAAI,WAAW,EAAE;AAC/B,aAAS,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,MAAM,MAAM,GAAG;AAC/C,YAAM,KAAK,cAAc,IAAI,WAAW,EAAE,CAAC;AAC3C,YAAM,KAAK,cAAc,IAAI,WAAW,KAAK,CAAC,CAAC;AAC/C,UAAI,OAAO,UAAa,OAAO,QAAW;AACxC,cAAM,OAAO,IAAI,EAAE,IAAI,IAAI,KAAK,CAAC;AACjC,cAAM,IAAI,MAAM,iDAAiD,OAAO,gBAAgB,EAAE;MAC5F;AACA,YAAM,EAAE,IAAI,KAAK,KAAK;IACxB;AACA,WAAO;EACT;AAGM,WAAU,gBAAgBA,QAAiB;AAC/C,WAAO,YAAY,WAAWA,MAAK,CAAC;EACtC;AACM,WAAU,gBAAgBA,QAAiB;AAC/C,QAAI,CAACN,SAAQM,MAAK;AAAG,YAAM,IAAI,MAAM,qBAAqB;AAC1D,WAAO,YAAY,WAAW,WAAW,KAAKA,MAAK,EAAE,QAAO,CAAE,CAAC;EACjE;AAEM,WAAU,gBAAgB,GAAoB,KAAW;AAC7D,WAAO,WAAW,EAAE,SAAS,EAAE,EAAE,SAAS,MAAM,GAAG,GAAG,CAAC;EACzD;AACM,WAAU,gBAAgB,GAAoB,KAAW;AAC7D,WAAO,gBAAgB,GAAG,GAAG,EAAE,QAAO;EACxC;AAEM,WAAU,mBAAmB,GAAkB;AACnD,WAAO,WAAW,oBAAoB,CAAC,CAAC;EAC1C;AAWM,WAAU,YAAY,OAAe,KAAU,gBAAuB;AAC1E,QAAI;AACJ,QAAI,OAAO,QAAQ,UAAU;AAC3B,UAAI;AACF,cAAM,WAAW,GAAG;MACtB,SAAS,GAAP;AACA,cAAM,IAAI,MAAM,GAAG,wCAAwC,gBAAgB,GAAG;MAChF;IACF,WAAWN,SAAQ,GAAG,GAAG;AAGvB,YAAM,WAAW,KAAK,GAAG;IAC3B,OAAO;AACL,YAAM,IAAI,MAAM,GAAG,wCAAwC;IAC7D;AACA,UAAM,MAAM,IAAI;AAChB,QAAI,OAAO,mBAAmB,YAAY,QAAQ;AAChD,YAAM,IAAI,MAAM,GAAG,kBAAkB,6BAA6B,KAAK;AACzE,WAAO;EACT;AAKM,WAAUD,gBAAe,QAAoB;AACjD,QAAI,MAAM;AACV,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAM,IAAI,OAAO,CAAC;AAClB,UAAI,CAACC,SAAQ,CAAC;AAAG,cAAM,IAAI,MAAM,qBAAqB;AACtD,aAAO,EAAE;IACX;AACA,QAAI,MAAM,IAAI,WAAW,GAAG;AAC5B,QAAIO,OAAM;AACV,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAM,IAAI,OAAO,CAAC;AAClB,UAAI,IAAI,GAAGA,IAAG;AACd,MAAAA,QAAO,EAAE;IACX;AACA,WAAO;EACT;AAGM,WAAU,WAAW,GAAe,GAAa;AACrD,QAAI,EAAE,WAAW,EAAE;AAAQ,aAAO;AAClC,QAAI,OAAO;AACX,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ;AAAK,cAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;AACrD,WAAO,SAAS;EAClB;AASM,WAAUN,aAAY,KAAW;AACrC,QAAI,OAAO,QAAQ;AAAU,YAAM,IAAI,MAAM,oCAAoC,OAAO,KAAK;AAC7F,WAAO,IAAI,WAAW,IAAI,YAAW,EAAG,OAAO,GAAG,CAAC;EACrD;AAQM,WAAU,OAAO,GAAS;AAC9B,QAAI;AACJ,SAAK,MAAM,GAAG,IAAIC,MAAK,MAAMC,MAAK,OAAO;AAAE;AAC3C,WAAO;EACT;AAOM,WAAU,OAAO,GAAW,KAAW;AAC3C,WAAQ,KAAK,OAAO,GAAG,IAAKA;EAC9B;AAKO,MAAM,SAAS,CAAC,GAAW,KAAa,UAAkB;AAC/D,WAAO,KAAM,QAAQA,OAAMD,SAAQ,OAAO,GAAG;EAC/C;AAMO,MAAM,UAAU,CAAC,OAAeE,QAAO,OAAO,IAAI,CAAC,KAAKD;AAI/D,MAAM,MAAM,CAAC,SAAe,IAAI,WAAW,IAAI;AAC/C,MAAM,OAAO,CAAC,QAAa,WAAW,KAAK,GAAG;AASxC,WAAU,eACd,SACA,UACA,QAAkE;AAElE,QAAI,OAAO,YAAY,YAAY,UAAU;AAAG,YAAM,IAAI,MAAM,0BAA0B;AAC1F,QAAI,OAAO,aAAa,YAAY,WAAW;AAAG,YAAM,IAAI,MAAM,2BAA2B;AAC7F,QAAI,OAAO,WAAW;AAAY,YAAM,IAAI,MAAM,2BAA2B;AAE7E,QAAI,IAAI,IAAI,OAAO;AACnB,QAAI,IAAI,IAAI,OAAO;AACnB,QAAI,IAAI;AACR,UAAM,QAAQ,MAAK;AACjB,QAAE,KAAK,CAAC;AACR,QAAE,KAAK,CAAC;AACR,UAAI;IACN;AACA,UAAM,IAAI,IAAI,MAAoB,OAAO,GAAG,GAAG,GAAG,CAAC;AACnD,UAAM,SAAS,CAAC,OAAO,IAAG,MAAM;AAE9B,UAAI,EAAE,KAAK,CAAC,CAAI,CAAC,GAAG,IAAI;AACxB,UAAI,EAAC;AACL,UAAI,KAAK,WAAW;AAAG;AACvB,UAAI,EAAE,KAAK,CAAC,CAAI,CAAC,GAAG,IAAI;AACxB,UAAI,EAAC;IACP;AACA,UAAMK,OAAM,MAAK;AAEf,UAAI,OAAO;AAAM,cAAM,IAAI,MAAM,yBAAyB;AAC1D,UAAI,MAAM;AACV,YAAM,MAAoB,CAAA;AAC1B,aAAO,MAAM,UAAU;AACrB,YAAI,EAAC;AACL,cAAM,KAAK,EAAE,MAAK;AAClB,YAAI,KAAK,EAAE;AACX,eAAO,EAAE;MACX;AACA,aAAOT,aAAY,GAAG,GAAG;IAC3B;AACA,UAAM,WAAW,CAAC,MAAkB,SAAoB;AACtD,YAAK;AACL,aAAO,IAAI;AACX,UAAI,MAAqB;AACzB,aAAO,EAAE,MAAM,KAAKS,KAAG,CAAE;AAAI,eAAM;AACnC,YAAK;AACL,aAAO;IACT;AACA,WAAO;EACT;AAIA,MAAM,eAAe;IACnB,QAAQ,CAAC,QAAa,OAAO,QAAQ;IACrC,UAAU,CAAC,QAAa,OAAO,QAAQ;IACvC,SAAS,CAAC,QAAa,OAAO,QAAQ;IACtC,QAAQ,CAAC,QAAa,OAAO,QAAQ;IACrC,oBAAoB,CAAC,QAAa,OAAO,QAAQ,YAAYR,SAAQ,GAAG;IACxE,eAAe,CAAC,QAAa,OAAO,cAAc,GAAG;IACrD,OAAO,CAAC,QAAa,MAAM,QAAQ,GAAG;IACtC,OAAO,CAAC,KAAU,WAAiB,OAAe,GAAG,QAAQ,GAAG;IAChE,MAAM,CAAC,QAAa,OAAO,QAAQ,cAAc,OAAO,cAAc,IAAI,SAAS;;AAM/E,WAAU,eACd,QACA,YACA,gBAA2B,CAAA,GAAE;AAE7B,UAAM,aAAa,CAAC,WAAoBS,OAAiB,eAAuB;AAC9E,YAAM,WAAW,aAAaA,KAAI;AAClC,UAAI,OAAO,aAAa;AACtB,cAAM,IAAI,MAAM,sBAAsBA,2BAA0B;AAElE,YAAM,MAAM,OAAO,SAAgC;AACnD,UAAI,cAAc,QAAQ;AAAW;AACrC,UAAI,CAAC,SAAS,KAAK,MAAM,GAAG;AAC1B,cAAM,IAAI,MACR,iBAAiB,OAAO,SAAS,KAAK,QAAQ,OAAO,kBAAkBA,OAAM;MAEjF;IACF;AACA,eAAW,CAAC,WAAWA,KAAI,KAAK,OAAO,QAAQ,UAAU;AAAG,iBAAW,WAAWA,OAAO,KAAK;AAC9F,eAAW,CAAC,WAAWA,KAAI,KAAK,OAAO,QAAQ,aAAa;AAAG,iBAAW,WAAWA,OAAO,IAAI;AAChG,WAAO;EACT;;;ACnSA,+BAA8B;;;AChBf,WAAR,eAAgC,GAAG;AACxC,WAAO,KAAK,QAAQ,OAAO,MAAM,YAAY,EAAE,0BAA0B,MAAM;AAAA,EACjF;;;ACQe,WAAR,QAAyB,IAAI;AAClC,WAAO,SAAS,GAAG,GAAG;AACpB,UAAI,UAAU,WAAW,KAAK,eAAe,CAAC,GAAG;AAC/C,eAAO;AAAA,MACT,OAAO;AACL,eAAO,GAAG,MAAM,MAAM,SAAS;AAAA,MACjC;AAAA,IACF;AAAA,EACF;;;ACNA,MAAO,kBAAQ,MAAM,WAAW,SAAS,SAAS,KAAK;AACrD,WAAO,OAAO,QAAQ,IAAI,UAAU,KAAK,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM;AAAA,EACnF;;;ACaA,MAAI,OAEJ,wBAAQ,SAASC,MAAK,KAAK;AACzB,WAAO,QAAQ,OAAO,SAAS,QAAQ,SAAY,cAAc,OAAO,UAAU,SAAS,KAAK,GAAG,EAAE,MAAM,GAAG,EAAE;AAAA,EAClH,CAAC;AAED,MAAO,eAAQ;;;AC9Bf,MAAI,MAAM,SAASC,KAAI,GAAG;AACxB,YAAQ,IAAI,KAAK,MAAM,MAAM;AAAA,EAC/B;AAEA,MAAI,eAAe,OAAO,KAAK,UAAU,gBAAgB,aAAa,SAASC,cAAa,GAAG;AAC7F,WAAO,EAAE,YAAY;AAAA,EACvB,IAAI,SAASA,cAAa,GAAG;AAC3B,WAAO,EAAE,eAAe,IAAI,MAAM,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,MAAM,IAAI,EAAE,WAAW,CAAC,IAAI,MAAM,IAAI,EAAE,YAAY,CAAC,IAAI,MAAM,IAAI,EAAE,cAAc,CAAC,IAAI,MAAM,IAAI,EAAE,cAAc,CAAC,IAAI,OAAO,EAAE,mBAAmB,IAAI,KAAM,QAAQ,CAAC,EAAE,MAAM,GAAG,CAAC,IAAI;AAAA,EACrP;;;ACHA,MAAO,oBAAQ,OAAO,aAAa,SAAS,WAAW,GAAG;AACxD,WAAO,KAAK,MAAM;AAAA,EACpB;;;ACVe,WAAR,aAA8B,SAAS;AAC5C,WAAO,IAAI,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,SAAS,MAAM,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,YAAY,MAAM,OAAO,QAAQ,SAAS,MAAM,OAAO,QAAQ,UAAU,MAAM,OAAO,QAAQ,SAAS,MAAM,GAAG;AAAA,EAC7P;;;ACSe,WAAR,OAAwB,OAAO,MAAM,KAAK;AAC/C,YAAQ,MAAM,IAAI,WAAW;AAE7B,QAAI,aAAa,KAAK,GAAG;AACvB,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,SAASC,MAAK,aAAa;AAEpC,UAAI,aAAa,IAAI,IAAI,KAAK;AAE9B,UAAI,YAAY;AACd,eAAO;AAAA,MACT;AAEA,UAAI,IAAI,OAAO,WAAW;AAE1B,eAAS,OAAO,OAAO;AACrB,YAAI,OAAO,UAAU,eAAe,KAAK,OAAO,GAAG,GAAG;AACpD,sBAAY,GAAG,IAAI,OAAO,OAAO,MAAM,GAAG,GAAG,MAAM,GAAG,IAAI,MAAM,GAAG;AAAA,QACrE;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,YAAQ,aAAK,KAAK,GAAG;AAAA,MACnB,KAAK;AACH,eAAO,KAAK,OAAO,OAAO,OAAO,eAAe,KAAK,CAAC,CAAC;AAAA,MAEzD,KAAK;AACH,eAAO,KAAK,CAAC,CAAC;AAAA,MAEhB,KAAK;AACH,eAAO,IAAI,KAAK,MAAM,QAAQ,CAAC;AAAA,MAEjC,KAAK;AACH,eAAO,aAAa,KAAK;AAAA,MAE3B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO,MAAM,MAAM;AAAA,MAErB;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,WAAS,aAAa,OAAO;AAC3B,QAAIC,QAAO,OAAO;AAClB,WAAO,SAAS,QAAQA,SAAQ,YAAYA,SAAQ;AAAA,EACtD;AAEA,MAAI,aAEJ,2BAAY;AACV,aAASC,cAAa;AACpB,WAAK,MAAM,CAAC;AACZ,WAAK,SAAS;AAAA,IAChB;AAEA,IAAAA,YAAW,UAAU,MAAM,SAAU,KAAK,OAAO;AAC/C,YAAM,YAAY,KAAK,KAAK,GAAG;AAC/B,UAAI,SAAS,KAAK,IAAI,SAAS;AAE/B,UAAI,CAAC,QAAQ;AACX,aAAK,IAAI,SAAS,IAAI,SAAS,CAAC;AAAA,MAClC;AAEA,aAAO,KAAK,CAAC,KAAK,KAAK,CAAC;AACxB,WAAK,UAAU;AAAA,IACjB;AAEA,IAAAA,YAAW,UAAU,OAAO,SAAU,KAAK;AACzC,UAAI,YAAY,CAAC;AAEjB,eAAS,SAAS,KAAK;AACrB,kBAAU,KAAK,OAAO,UAAU,SAAS,KAAK,IAAI,KAAK,CAAC,CAAC;AAAA,MAC3D;AAEA,aAAO,UAAU,KAAK;AAAA,IACxB;AAEA,IAAAA,YAAW,UAAU,MAAM,SAAU,KAAK;AAKxC,UAAI,KAAK,UAAU,KAAK;AACtB,mBAAW,KAAK,KAAK,KAAK;AACxB,gBAAMC,UAAS,KAAK,IAAI,CAAC;AAEzB,mBAAS,IAAI,GAAG,IAAIA,QAAO,QAAQ,KAAK,GAAG;AACzC,kBAAM,UAAUA,QAAO,CAAC;AAExB,gBAAI,QAAQ,CAAC,MAAM,KAAK;AACtB,qBAAO,QAAQ,CAAC;AAAA,YAClB;AAAA,UACF;AAAA,QACF;AAEA;AAAA,MACF;AAEA,YAAM,YAAY,KAAK,KAAK,GAAG;AAC/B,YAAM,SAAS,KAAK,IAAI,SAAS;AAEjC,UAAI,CAAC,QAAQ;AACX;AAAA,MACF;AAEA,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAG;AACzC,cAAM,UAAU,OAAO,CAAC;AAExB,YAAI,QAAQ,CAAC,MAAM,KAAK;AACtB,iBAAO,QAAQ,CAAC;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAEA,WAAOD;AAAA,EACT,EAAE;;;AC/GF,MAAIE,SAEJ,wBAAQ,SAASA,OAAM,OAAO;AAC5B,WAAO,SAAS,QAAQ,OAAO,MAAM,UAAU,aAAa,MAAM,MAAM,IAAI,OAAO,OAAO,IAAI;AAAA,EAChG,CAAC;AAED,MAAO,gBAAQA;;;ACjCf,MAAI,eAAe,OAAO,OAAO,UAAU,SAAS;;;AC4B7C,MAAI,WAAW,WAAW;AAC/B,eAAW,OAAO,UAAU,SAASC,UAAS,GAAG;AAC7C,eAAS,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,YAAI,UAAU,CAAC;AACf,iBAAS,KAAK;AAAG,cAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC;AAAG,cAAE,CAAC,IAAI,EAAE,CAAC;AAAA,MAC/E;AACA,aAAO;AAAA,IACX;AACA,WAAO,SAAS,MAAM,MAAM,SAAS;AAAA,EACvC;;;ACxCO,WAAS,UAAU,WAAW,SAAS;AAC5C,UAAM,mBAAmB,QAAQ,SAAS;AAE1C,QAAI,CAAC,kBAAkB;AACrB,YAAM,IAAI,MAAM,OAAO;AAAA,IACzB;AAAA,EACF;;;ACFO,WAAS,aAAa,OAAO;AAClC,WAAO,OAAO,SAAS,YAAY,UAAU;AAAA,EAC/C;;;ACNO,WAAS,UAAU,WAAW,SAAS;AAC5C,UAAM,mBAAmB,QAAQ,SAAS;AAE1C,QAAI,CAAC,kBAAkB;AACrB,YAAM,IAAI;AAAA,QACR,WAAW,OAAO,UAAU;AAAA,MAC9B;AAAA,IACF;AAAA,EACF;;;ACPA,MAAM,aAAa;AASZ,WAAS,YAAY,QAAQ,UAAU;AAC5C,QAAI,gBAAgB;AACpB,QAAI,OAAO;AAEX,eAAW,SAAS,OAAO,KAAK,SAAS,UAAU,GAAG;AACpD,aAAO,MAAM,UAAU,YAAY,UAAU,KAAK;AAElD,UAAI,MAAM,SAAS,UAAU;AAC3B;AAAA,MACF;AAEA,sBAAgB,MAAM,QAAQ,MAAM,CAAC,EAAE;AACvC,cAAQ;AAAA,IACV;AAEA,WAAO;AAAA,MACL;AAAA,MACA,QAAQ,WAAW,IAAI;AAAA,IACzB;AAAA,EACF;;;ACxBO,WAAS,cAAc,UAAU;AACtC,WAAO;AAAA,MACL,SAAS;AAAA,MACT,YAAY,SAAS,QAAQ,SAAS,KAAK;AAAA,IAC7C;AAAA,EACF;AAKO,WAAS,oBAAoB,QAAQ,gBAAgB;AAC1D,UAAM,wBAAwB,OAAO,eAAe,SAAS;AAC7D,UAAM,OAAO,GAAG,SAAS,qBAAqB,IAAI,OAAO;AACzD,UAAM,YAAY,eAAe,OAAO;AACxC,UAAM,aAAa,OAAO,eAAe,OAAO;AAChD,UAAM,UAAU,eAAe,OAAO;AACtC,UAAM,eAAe,eAAe,SAAS,IAAI,wBAAwB;AACzE,UAAM,YAAY,eAAe,SAAS;AAC1C,UAAM,cAAc,GAAG,OAAO,QAAQ,WAAW;AAAA;AACjD,UAAM,QAAQ,KAAK,MAAM,cAAc;AACvC,UAAM,eAAe,MAAM,SAAS;AAEpC,QAAI,aAAa,SAAS,KAAK;AAC7B,YAAM,eAAe,KAAK,MAAM,YAAY,EAAE;AAC9C,YAAM,mBAAmB,YAAY;AACrC,YAAM,WAAW,CAAC;AAElB,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK,IAAI;AAChD,iBAAS,KAAK,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;AAAA,MAC7C;AAEA,aACE,cACA,mBAAmB;AAAA,QACjB,CAAC,GAAG,aAAa,SAAS,CAAC,CAAC;AAAA,QAC5B,GAAG,SAAS,MAAM,GAAG,eAAe,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,OAAO,CAAC;AAAA,QACtE,CAAC,KAAK,IAAI,SAAS,gBAAgB,CAAC;AAAA,QACpC,CAAC,KAAK,SAAS,eAAe,CAAC,CAAC;AAAA,MAClC,CAAC;AAAA,IAEL;AAEA,WACE,cACA,mBAAmB;AAAA;AAAA,MAEjB,CAAC,GAAG,UAAU,OAAO,MAAM,YAAY,CAAC,CAAC;AAAA,MACzC,CAAC,GAAG,aAAa,YAAY;AAAA,MAC7B,CAAC,KAAK,IAAI,SAAS,SAAS,CAAC;AAAA,MAC7B,CAAC,GAAG,UAAU,OAAO,MAAM,YAAY,CAAC,CAAC;AAAA,IAC3C,CAAC;AAAA,EAEL;AAEA,WAAS,mBAAmB,OAAO;AACjC,UAAM,gBAAgB,MAAM,OAAO,CAAC,CAAC,GAAG,IAAI,MAAM,SAAS,MAAS;AACpE,UAAM,SAAS,KAAK,IAAI,GAAG,cAAc,IAAI,CAAC,CAAC,MAAM,MAAM,OAAO,MAAM,CAAC;AACzE,WAAO,cACJ,IAAI,CAAC,CAAC,QAAQ,IAAI,MAAM,OAAO,SAAS,MAAM,KAAK,OAAO,MAAM,OAAO,GAAG,EAC1E,KAAK,IAAI;AAAA,EACd;;;AC1DA,WAAS,oBAAoB,MAAM;AACjC,UAAM,WAAW,KAAK,CAAC;AAEvB,QAAI,YAAY,QAAQ,UAAU,YAAY,YAAY,UAAU;AAClE,aAAO;AAAA,QACL,OAAO;AAAA,QACP,QAAQ,KAAK,CAAC;AAAA,QACd,WAAW,KAAK,CAAC;AAAA,QACjB,MAAM,KAAK,CAAC;AAAA,QACZ,eAAe,KAAK,CAAC;AAAA,QACrB,YAAY,KAAK,CAAC;AAAA,MACpB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAQO,MAAM,eAAN,cAA2B,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA8CtC,YAAY,YAAY,SAAS;AAC/B,UAAI,aAAa,iBAAiB;AAElC,YAAM,EAAE,OAAO,QAAQ,WAAW,MAAM,eAAe,WAAW,IAChE,oBAAoB,OAAO;AAC7B,YAAM,OAAO;AACb,WAAK,OAAO;AACZ,WAAK,OAAO,SAAS,QAAQ,SAAS,SAAS,OAAO;AACtD,WAAK,gBACH,kBAAkB,QAAQ,kBAAkB,SACxC,gBACA;AAEN,WAAK,QAAQ;AAAA,QACX,MAAM,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,KAAK,IAAI;AAAA,MACnD;AACA,YAAM,gBAAgB;AAAA,SACnB,cAAc,KAAK,WAAW,QAAQ,gBAAgB,SACnD,SACA,YAAY,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE,OAAO,CAAC,QAAQ,OAAO,IAAI;AAAA,MACrE;AAEA,WAAK,SACH,WAAW,QAAQ,WAAW,SAC1B,SACA,kBAAkB,QAAQ,kBAAkB,SAC5C,UACC,kBAAkB,cAAc,CAAC,OAAO,QACzC,oBAAoB,SACpB,SACA,gBAAgB;AACtB,WAAK,YACH,cAAc,QAAQ,cAAc,SAChC,YACA,kBAAkB,QAAQ,kBAAkB,SAC5C,SACA,cAAc,IAAI,CAAC,QAAQ,IAAI,KAAK;AAC1C,WAAK,YACH,aAAa,SACT,UAAU,IAAI,CAAC,QAAQ,YAAY,QAAQ,GAAG,CAAC,IAC/C,kBAAkB,QAAQ,kBAAkB,SAC5C,SACA,cAAc,IAAI,CAAC,QAAQ,YAAY,IAAI,QAAQ,IAAI,KAAK,CAAC;AACnE,YAAM,qBAAqB;AAAA,QACzB,kBAAkB,QAAQ,kBAAkB,SACxC,SACA,cAAc;AAAA,MACpB,IACI,kBAAkB,QAAQ,kBAAkB,SAC1C,SACA,cAAc,aAChB;AACJ,WAAK,cACF,OACC,eAAe,QAAQ,eAAe,SAClC,aACA,wBAAwB,QAAQ,SAAS,SAC3C,OACA,uBAAO,OAAO,IAAI;AAGxB,aAAO,iBAAiB,MAAM;AAAA,QAC5B,SAAS;AAAA,UACP,UAAU;AAAA,UACV,YAAY;AAAA,QACd;AAAA,QACA,MAAM;AAAA,UACJ,YAAY;AAAA,QACd;AAAA,QACA,OAAO;AAAA,UACL,YAAY;AAAA,QACd;AAAA,QACA,QAAQ;AAAA,UACN,YAAY;AAAA,QACd;AAAA,QACA,WAAW;AAAA,UACT,YAAY;AAAA,QACd;AAAA,QACA,eAAe;AAAA,UACb,YAAY;AAAA,QACd;AAAA,MACF,CAAC;AAKD,UACE,kBAAkB,QAClB,kBAAkB,UAClB,cAAc,OACd;AACA,eAAO,eAAe,MAAM,SAAS;AAAA,UACnC,OAAO,cAAc;AAAA,UACrB,UAAU;AAAA,UACV,cAAc;AAAA,QAChB,CAAC;AAAA,MACH,WAAW,MAAM,mBAAmB;AAClC,cAAM,kBAAkB,MAAM,YAAY;AAAA,MAC5C,OAAO;AACL,eAAO,eAAe,MAAM,SAAS;AAAA,UACnC,OAAO,MAAM,EAAE;AAAA,UACf,UAAU;AAAA,UACV,cAAc;AAAA,QAChB,CAAC;AAAA,MACH;AAAA,IAEF;AAAA,IAEA,KAAK,OAAO,WAAW,IAAI;AACzB,aAAO;AAAA,IACT;AAAA,IAEA,WAAW;AACT,UAAIC,UAAS,KAAK;AAElB,UAAI,KAAK,OAAO;AACd,mBAAW,QAAQ,KAAK,OAAO;AAC7B,cAAI,KAAK,KAAK;AACZ,YAAAA,WAAU,SAAS,cAAc,KAAK,GAAG;AAAA,UAC3C;AAAA,QACF;AAAA,MACF,WAAW,KAAK,UAAU,KAAK,WAAW;AACxC,mBAAW,YAAY,KAAK,WAAW;AACrC,UAAAA,WAAU,SAAS,oBAAoB,KAAK,QAAQ,QAAQ;AAAA,QAC9D;AAAA,MACF;AAEA,aAAOA;AAAA,IACT;AAAA,IAEA,SAAS;AACP,YAAM,iBAAiB;AAAA,QACrB,SAAS,KAAK;AAAA,MAChB;AAEA,UAAI,KAAK,aAAa,MAAM;AAC1B,uBAAe,YAAY,KAAK;AAAA,MAClC;AAEA,UAAI,KAAK,QAAQ,MAAM;AACrB,uBAAe,OAAO,KAAK;AAAA,MAC7B;AAEA,UAAI,KAAK,cAAc,QAAQ,OAAO,KAAK,KAAK,UAAU,EAAE,SAAS,GAAG;AACtE,uBAAe,aAAa,KAAK;AAAA,MACnC;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AAEA,WAAS,iBAAiB,OAAO;AAC/B,WAAO,UAAU,UAAa,MAAM,WAAW,IAAI,SAAY;AAAA,EACjE;;;AC/NO,WAAS,YAAY,QAAQ,UAAU,aAAa;AACzD,WAAO,IAAI,aAAa,iBAAiB,eAAe;AAAA,MACtD;AAAA,MACA,WAAW,CAAC,QAAQ;AAAA,IACtB,CAAC;AAAA,EACH;;;ACPO,MAAM,WAAN,MAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAoBpB,YAAY,YAAY,UAAU,QAAQ;AACxC,WAAK,QAAQ,WAAW;AACxB,WAAK,MAAM,SAAS;AACpB,WAAK,aAAa;AAClB,WAAK,WAAW;AAChB,WAAK,SAAS;AAAA,IAChB;AAAA,IAEA,KAAK,OAAO,WAAW,IAAI;AACzB,aAAO;AAAA,IACT;AAAA,IAEA,SAAS;AACP,aAAO;AAAA,QACL,OAAO,KAAK;AAAA,QACZ,KAAK,KAAK;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAMO,MAAM,QAAN,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiCjB,YAAY,MAAM,OAAO,KAAK,MAAM,QAAQ,OAAO;AACjD,WAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,MAAM;AACX,WAAK,OAAO;AACZ,WAAK,SAAS;AAEd,WAAK,QAAQ;AACb,WAAK,OAAO;AACZ,WAAK,OAAO;AAAA,IACd;AAAA,IAEA,KAAK,OAAO,WAAW,IAAI;AACzB,aAAO;AAAA,IACT;AAAA,IAEA,SAAS;AACP,aAAO;AAAA,QACL,MAAM,KAAK;AAAA,QACX,OAAO,KAAK;AAAA,QACZ,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK;AAAA,MACf;AAAA,IACF;AAAA,EACF;AAQO,MAAM,oBAAoB;AAAA,IAC/B,MAAM,CAAC;AAAA,IACP,UAAU,CAAC,aAAa;AAAA,IACxB,qBAAqB;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,oBAAoB,CAAC,YAAY,QAAQ,gBAAgB,YAAY;AAAA,IACrE,UAAU,CAAC,MAAM;AAAA,IACjB,cAAc,CAAC,YAAY;AAAA,IAC3B,OAAO,CAAC,SAAS,QAAQ,aAAa,cAAc,cAAc;AAAA,IAClE,UAAU,CAAC,QAAQ,OAAO;AAAA,IAC1B,gBAAgB,CAAC,QAAQ,YAAY;AAAA,IACrC,gBAAgB,CAAC,iBAAiB,cAAc,cAAc;AAAA,IAC9D,oBAAoB;AAAA,MAClB;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,UAAU,CAAC;AAAA,IACX,YAAY,CAAC;AAAA,IACb,aAAa,CAAC;AAAA,IACd,cAAc,CAAC;AAAA,IACf,WAAW,CAAC;AAAA,IACZ,WAAW,CAAC;AAAA,IACZ,WAAW,CAAC,QAAQ;AAAA,IACpB,aAAa,CAAC,QAAQ;AAAA,IACtB,aAAa,CAAC,QAAQ,OAAO;AAAA,IAC7B,WAAW,CAAC,QAAQ,WAAW;AAAA,IAC/B,WAAW,CAAC,MAAM;AAAA,IAClB,UAAU,CAAC,MAAM;AAAA,IACjB,aAAa,CAAC,MAAM;AAAA,IACpB,kBAAkB,CAAC,eAAe,cAAc,gBAAgB;AAAA,IAChE,yBAAyB,CAAC,MAAM;AAAA,IAChC,sBAAsB,CAAC,eAAe,QAAQ,YAAY;AAAA,IAC1D,sBAAsB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,iBAAiB,CAAC,eAAe,QAAQ,aAAa,QAAQ,YAAY;AAAA,IAC1E,sBAAsB;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,yBAAyB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,qBAAqB,CAAC,eAAe,QAAQ,cAAc,OAAO;AAAA,IAClE,oBAAoB,CAAC,eAAe,QAAQ,cAAc,QAAQ;AAAA,IAClE,qBAAqB,CAAC,eAAe,QAAQ,YAAY;AAAA,IACzD,2BAA2B,CAAC,eAAe,QAAQ,cAAc,QAAQ;AAAA,IACzE,qBAAqB,CAAC,eAAe,QAAQ,aAAa,WAAW;AAAA,IACrE,iBAAiB,CAAC,cAAc,gBAAgB;AAAA,IAChD,qBAAqB,CAAC,QAAQ,YAAY;AAAA,IAC1C,qBAAqB,CAAC,QAAQ,cAAc,cAAc,QAAQ;AAAA,IAClE,wBAAwB,CAAC,QAAQ,cAAc,cAAc,QAAQ;AAAA,IACrE,oBAAoB,CAAC,QAAQ,cAAc,OAAO;AAAA,IAClD,mBAAmB,CAAC,QAAQ,cAAc,QAAQ;AAAA,IAClD,0BAA0B,CAAC,QAAQ,cAAc,QAAQ;AAAA,EAC3D;AACA,MAAM,aAAa,IAAI,IAAI,OAAO,KAAK,iBAAiB,CAAC;AAKlD,WAAS,OAAO,WAAW;AAChC,UAAM,YACJ,cAAc,QAAQ,cAAc,SAAS,SAAS,UAAU;AAClE,WAAO,OAAO,cAAc,YAAY,WAAW,IAAI,SAAS;AAAA,EAClE;AAGA,MAAI;AAEJ,GAAC,SAAUC,oBAAmB;AAC5B,IAAAA,mBAAkB,OAAO,IAAI;AAC7B,IAAAA,mBAAkB,UAAU,IAAI;AAChC,IAAAA,mBAAkB,cAAc,IAAI;AAAA,EACtC,GAAG,sBAAsB,oBAAoB,CAAC,EAAE;;;AC1MhD,MAAI;AAEJ,GAAC,SAAUC,oBAAmB;AAC5B,IAAAA,mBAAkB,OAAO,IAAI;AAC7B,IAAAA,mBAAkB,UAAU,IAAI;AAChC,IAAAA,mBAAkB,cAAc,IAAI;AACpC,IAAAA,mBAAkB,OAAO,IAAI;AAC7B,IAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,IAAAA,mBAAkB,iBAAiB,IAAI;AACvC,IAAAA,mBAAkB,iBAAiB,IAAI;AACvC,IAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,IAAAA,mBAAkB,QAAQ,IAAI;AAC9B,IAAAA,mBAAkB,QAAQ,IAAI;AAC9B,IAAAA,mBAAkB,QAAQ,IAAI;AAC9B,IAAAA,mBAAkB,kBAAkB,IAAI;AACxC,IAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,IAAAA,mBAAkB,WAAW,IAAI;AACjC,IAAAA,mBAAkB,OAAO,IAAI;AAC7B,IAAAA,mBAAkB,MAAM,IAAI;AAC5B,IAAAA,mBAAkB,YAAY,IAAI;AAClC,IAAAA,mBAAkB,cAAc,IAAI;AACpC,IAAAA,mBAAkB,wBAAwB,IAAI;AAAA,EAChD,GAAG,sBAAsB,oBAAoB,CAAC,EAAE;;;ACtBhD,MAAI;AAEJ,GAAC,SAAUC,OAAM;AACf,IAAAA,MAAK,MAAM,IAAI;AACf,IAAAA,MAAK,UAAU,IAAI;AACnB,IAAAA,MAAK,sBAAsB,IAAI;AAC/B,IAAAA,MAAK,qBAAqB,IAAI;AAC9B,IAAAA,MAAK,eAAe,IAAI;AACxB,IAAAA,MAAK,OAAO,IAAI;AAChB,IAAAA,MAAK,UAAU,IAAI;AACnB,IAAAA,MAAK,iBAAiB,IAAI;AAC1B,IAAAA,MAAK,iBAAiB,IAAI;AAC1B,IAAAA,MAAK,qBAAqB,IAAI;AAC9B,IAAAA,MAAK,UAAU,IAAI;AACnB,IAAAA,MAAK,KAAK,IAAI;AACd,IAAAA,MAAK,OAAO,IAAI;AAChB,IAAAA,MAAK,QAAQ,IAAI;AACjB,IAAAA,MAAK,SAAS,IAAI;AAClB,IAAAA,MAAK,MAAM,IAAI;AACf,IAAAA,MAAK,MAAM,IAAI;AACf,IAAAA,MAAK,MAAM,IAAI;AACf,IAAAA,MAAK,QAAQ,IAAI;AACjB,IAAAA,MAAK,cAAc,IAAI;AACvB,IAAAA,MAAK,WAAW,IAAI;AACpB,IAAAA,MAAK,YAAY,IAAI;AACrB,IAAAA,MAAK,WAAW,IAAI;AACpB,IAAAA,MAAK,eAAe,IAAI;AACxB,IAAAA,MAAK,mBAAmB,IAAI;AAC5B,IAAAA,MAAK,2BAA2B,IAAI;AACpC,IAAAA,MAAK,wBAAwB,IAAI;AACjC,IAAAA,MAAK,wBAAwB,IAAI;AACjC,IAAAA,MAAK,kBAAkB,IAAI;AAC3B,IAAAA,MAAK,wBAAwB,IAAI;AACjC,IAAAA,MAAK,2BAA2B,IAAI;AACpC,IAAAA,MAAK,uBAAuB,IAAI;AAChC,IAAAA,MAAK,sBAAsB,IAAI;AAC/B,IAAAA,MAAK,uBAAuB,IAAI;AAChC,IAAAA,MAAK,8BAA8B,IAAI;AACvC,IAAAA,MAAK,sBAAsB,IAAI;AAC/B,IAAAA,MAAK,kBAAkB,IAAI;AAC3B,IAAAA,MAAK,uBAAuB,IAAI;AAChC,IAAAA,MAAK,uBAAuB,IAAI;AAChC,IAAAA,MAAK,0BAA0B,IAAI;AACnC,IAAAA,MAAK,sBAAsB,IAAI;AAC/B,IAAAA,MAAK,qBAAqB,IAAI;AAC9B,IAAAA,MAAK,6BAA6B,IAAI;AAAA,EACxC,GAAG,SAAS,OAAO,CAAC,EAAE;;;ACzCf,WAAS,aAAa,MAAM;AACjC,WAAO,SAAS,KAAU,SAAS;AAAA,EACrC;AASO,WAAS,QAAQ,MAAM;AAC5B,WAAO,QAAQ,MAAU,QAAQ;AAAA,EACnC;AAYO,WAAS,SAAS,MAAM;AAC7B,WACG,QAAQ,MAAU,QAAQ;AAAA,IAC1B,QAAQ,MAAU,QAAQ;AAAA,EAE/B;AAUO,WAAS,YAAY,MAAM;AAChC,WAAO,SAAS,IAAI,KAAK,SAAS;AAAA,EACpC;AAWO,WAAS,eAAe,MAAM;AACnC,WAAO,SAAS,IAAI,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,EACrD;;;ACrDO,WAAS,uBAAuB,OAAO;AAC5C,QAAI;AAEJ,QAAI,eAAe,OAAO;AAC1B,QAAI,oBAAoB;AACxB,QAAI,mBAAmB;AAEvB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,UAAI;AAEJ,YAAM,OAAO,MAAM,CAAC;AACpB,YAAMC,UAAS,kBAAkB,IAAI;AAErC,UAAIA,YAAW,KAAK,QAAQ;AAC1B;AAAA,MACF;AAEA,2BACG,qBAAqB,uBAAuB,QAC7C,uBAAuB,SACnB,qBACA;AACN,yBAAmB;AAEnB,UAAI,MAAM,KAAKA,UAAS,cAAc;AACpC,uBAAeA;AAAA,MACjB;AAAA,IACF;AAEA,WAAO,MACJ,IAAI,CAAC,MAAM,MAAO,MAAM,IAAI,OAAO,KAAK,MAAM,YAAY,CAAE,EAC5D;AAAA,OACE,sBAAsB,uBAAuB,QAC5C,wBAAwB,SACtB,sBACA;AAAA,MACJ,mBAAmB;AAAA,IACrB;AAAA,EACJ;AAEA,WAAS,kBAAkB,KAAK;AAC9B,QAAI,IAAI;AAER,WAAO,IAAI,IAAI,UAAU,aAAa,IAAI,WAAW,CAAC,CAAC,GAAG;AACxD,QAAE;AAAA,IACJ;AAEA,WAAO;AAAA,EACT;AAgFO,WAAS,iBAAiB,OAAO,SAAS;AAC/C,UAAM,eAAe,MAAM,QAAQ,QAAQ,OAAO;AAElD,UAAM,QAAQ,aAAa,MAAM,cAAc;AAC/C,UAAM,eAAe,MAAM,WAAW;AAEtC,UAAM,sBACJ,MAAM,SAAS,KACf,MACG,MAAM,CAAC,EACP,MAAM,CAAC,SAAS,KAAK,WAAW,KAAK,aAAa,KAAK,WAAW,CAAC,CAAC,CAAC;AAE1E,UAAM,0BAA0B,aAAa,SAAS,OAAO;AAE7D,UAAM,mBAAmB,MAAM,SAAS,GAAG,KAAK,CAAC;AACjD,UAAM,mBAAmB,MAAM,SAAS,IAAI;AAC5C,UAAM,uBAAuB,oBAAoB;AACjD,UAAM,uBACJ,EAAE,YAAY,QAAQ,YAAY,UAAU,QAAQ;AAAA,KACnD,CAAC,gBACA,MAAM,SAAS,MACf,wBACA,uBACA;AACJ,QAAI,SAAS;AAEb,UAAM,qBAAqB,gBAAgB,aAAa,MAAM,WAAW,CAAC,CAAC;AAE3E,QAAK,wBAAwB,CAAC,sBAAuB,qBAAqB;AACxE,gBAAU;AAAA,IACZ;AAEA,cAAU;AAEV,QAAI,wBAAwB,sBAAsB;AAChD,gBAAU;AAAA,IACZ;AAEA,WAAO,QAAQ,SAAS;AAAA,EAC1B;;;AC7KA,MAAI;AAEJ,GAAC,SAAUC,YAAW;AACpB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,WAAW,IAAI;AACzB,IAAAA,WAAU,WAAW,IAAI;AACzB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,cAAc,IAAI;AAC5B,IAAAA,WAAU,SAAS,IAAI;AAAA,EACzB,GAAG,cAAc,YAAY,CAAC,EAAE;;;ACfzB,MAAM,QAAN,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgBjB,YAAY,QAAQ;AAClB,YAAM,mBAAmB,IAAI,MAAM,UAAU,KAAK,GAAG,GAAG,GAAG,CAAC;AAC5D,WAAK,SAAS;AACd,WAAK,YAAY;AACjB,WAAK,QAAQ;AACb,WAAK,OAAO;AACZ,WAAK,YAAY;AAAA,IACnB;AAAA,IAEA,KAAK,OAAO,WAAW,IAAI;AACzB,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU;AACR,WAAK,YAAY,KAAK;AACtB,YAAM,QAAS,KAAK,QAAQ,KAAK,UAAU;AAC3C,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,YAAY;AACV,UAAI,QAAQ,KAAK;AAEjB,UAAI,MAAM,SAAS,UAAU,KAAK;AAChC,WAAG;AACD,cAAI,MAAM,MAAM;AACd,oBAAQ,MAAM;AAAA,UAChB,OAAO;AAEL,kBAAM,YAAY,cAAc,MAAM,MAAM,GAAG;AAE/C,kBAAM,OAAO;AAEb,sBAAU,OAAO;AACjB,oBAAQ;AAAA,UACV;AAAA,QACF,SAAS,MAAM,SAAS,UAAU;AAAA,MACpC;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AAKO,WAAS,sBAAsB,MAAM;AAC1C,WACE,SAAS,UAAU,QACnB,SAAS,UAAU,UACnB,SAAS,UAAU,OACnB,SAAS,UAAU,WACnB,SAAS,UAAU,WACnB,SAAS,UAAU,UACnB,SAAS,UAAU,SACnB,SAAS,UAAU,UACnB,SAAS,UAAU,MACnB,SAAS,UAAU,aACnB,SAAS,UAAU,aACnB,SAAS,UAAU,WACnB,SAAS,UAAU,QACnB,SAAS,UAAU;AAAA,EAEvB;AAUA,WAAS,qBAAqB,MAAM;AAClC,WACG,QAAQ,KAAU,QAAQ,SAAY,QAAQ,SAAU,QAAQ;AAAA,EAErE;AAUA,WAAS,yBAAyB,MAAM,UAAU;AAChD,WACE,mBAAmB,KAAK,WAAW,QAAQ,CAAC,KAC5C,oBAAoB,KAAK,WAAW,WAAW,CAAC,CAAC;AAAA,EAErD;AAEA,WAAS,mBAAmB,MAAM;AAChC,WAAO,QAAQ,SAAU,QAAQ;AAAA,EACnC;AAEA,WAAS,oBAAoB,MAAM;AACjC,WAAO,QAAQ,SAAU,QAAQ;AAAA,EACnC;AASA,WAAS,iBAAiB,OAAO,UAAU;AACzC,UAAM,OAAO,MAAM,OAAO,KAAK,YAAY,QAAQ;AAEnD,QAAI,SAAS,QAAW;AACtB,aAAO,UAAU;AAAA,IACnB,WAAW,QAAQ,MAAU,QAAQ,KAAQ;AAE3C,YAAM,OAAO,OAAO,cAAc,IAAI;AACtC,aAAO,SAAS,MAAM,QAAS,IAAI;AAAA,IACrC;AAEA,WAAO,OAAO,KAAK,SAAS,EAAE,EAAE,YAAY,EAAE,SAAS,GAAG,GAAG;AAAA,EAC/D;AAKA,WAAS,YAAY,OAAO,MAAM,OAAO,KAAK,OAAO;AACnD,UAAM,OAAO,MAAM;AACnB,UAAM,MAAM,IAAI,QAAQ,MAAM;AAC9B,WAAO,IAAI,MAAM,MAAM,OAAO,KAAK,MAAM,KAAK,KAAK;AAAA,EACrD;AASA,WAAS,cAAc,OAAO,OAAO;AACnC,UAAM,OAAO,MAAM,OAAO;AAC1B,UAAM,aAAa,KAAK;AACxB,QAAI,WAAW;AAEf,WAAO,WAAW,YAAY;AAC5B,YAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,cAAQ,MAAM;AAAA,QAeZ,KAAK;AAAA,QAEL,KAAK;AAAA,QAEL,KAAK;AAAA,QAEL,KAAK;AAEH,YAAE;AACF;AAAA,QAMF,KAAK;AAEH,YAAE;AACF,YAAE,MAAM;AACR,gBAAM,YAAY;AAClB;AAAA,QAEF,KAAK;AAEH,cAAI,KAAK,WAAW,WAAW,CAAC,MAAM,IAAQ;AAC5C,wBAAY;AAAA,UACd,OAAO;AACL,cAAE;AAAA,UACJ;AAEA,YAAE,MAAM;AACR,gBAAM,YAAY;AAClB;AAAA,QAGF,KAAK;AAEH,iBAAO,YAAY,OAAO,QAAQ;AAAA,QAUpC,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,MAAM,UAAU,WAAW,CAAC;AAAA,QAElE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,QAAQ,UAAU,WAAW,CAAC;AAAA,QAEpE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,KAAK,UAAU,WAAW,CAAC;AAAA,QAEjE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,SAAS,UAAU,WAAW,CAAC;AAAA,QAErE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,SAAS,UAAU,WAAW,CAAC;AAAA,QAErE,KAAK;AAEH,cACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,mBAAO,YAAY,OAAO,UAAU,QAAQ,UAAU,WAAW,CAAC;AAAA,UACpE;AAEA;AAAA,QAEF,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,OAAO,UAAU,WAAW,CAAC;AAAA,QAEnE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,QAAQ,UAAU,WAAW,CAAC;AAAA,QAEpE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,IAAI,UAAU,WAAW,CAAC;AAAA,QAEhE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,WAAW,UAAU,WAAW,CAAC;AAAA,QAEvE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,WAAW,UAAU,WAAW,CAAC;AAAA,QAEvE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,SAAS,UAAU,WAAW,CAAC;AAAA,QAErE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,MAAM,UAAU,WAAW,CAAC;AAAA,QAElE,KAAK;AAEH,iBAAO,YAAY,OAAO,UAAU,SAAS,UAAU,WAAW,CAAC;AAAA,QAGrE,KAAK;AAEH,cACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,mBAAO,gBAAgB,OAAO,QAAQ;AAAA,UACxC;AAEA,iBAAO,WAAW,OAAO,QAAQ;AAAA,MACrC;AAEA,UAAI,QAAQ,IAAI,KAAK,SAAS,IAAQ;AACpC,eAAO,WAAW,OAAO,UAAU,IAAI;AAAA,MACzC;AAEA,UAAI,YAAY,IAAI,GAAG;AACrB,eAAO,SAAS,OAAO,QAAQ;AAAA,MACjC;AAEA,YAAM;AAAA,QACJ,MAAM;AAAA,QACN;AAAA,QACA,SAAS,KACL,mFACA,qBAAqB,IAAI,KAAK,yBAAyB,MAAM,QAAQ,IACrE,yBAAyB,iBAAiB,OAAO,QAAQ,OACzD,sBAAsB,iBAAiB,OAAO,QAAQ;AAAA,MAC5D;AAAA,IACF;AAEA,WAAO,YAAY,OAAO,UAAU,KAAK,YAAY,UAAU;AAAA,EACjE;AAWA,WAAS,YAAY,OAAO,OAAO;AACjC,UAAM,OAAO,MAAM,OAAO;AAC1B,UAAM,aAAa,KAAK;AACxB,QAAI,WAAW,QAAQ;AAEvB,WAAO,WAAW,YAAY;AAC5B,YAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,UAAI,SAAS,MAAU,SAAS,IAAQ;AACtC;AAAA,MACF;AAEA,UAAI,qBAAqB,IAAI,GAAG;AAC9B,UAAE;AAAA,MACJ,WAAW,yBAAyB,MAAM,QAAQ,GAAG;AACnD,oBAAY;AAAA,MACd,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,MACL;AAAA,MACA,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA,KAAK,MAAM,QAAQ,GAAG,QAAQ;AAAA,IAChC;AAAA,EACF;AA+BA,WAAS,WAAW,OAAO,OAAO,WAAW;AAC3C,UAAM,OAAO,MAAM,OAAO;AAC1B,QAAI,WAAW;AACf,QAAI,OAAO;AACX,QAAI,UAAU;AAEd,QAAI,SAAS,IAAQ;AACnB,aAAO,KAAK,WAAW,EAAE,QAAQ;AAAA,IACnC;AAEA,QAAI,SAAS,IAAQ;AACnB,aAAO,KAAK,WAAW,EAAE,QAAQ;AAEjC,UAAI,QAAQ,IAAI,GAAG;AACjB,cAAM;AAAA,UACJ,MAAM;AAAA,UACN;AAAA,UACA,6CAA6C;AAAA,YAC3C;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF,OAAO;AACL,iBAAW,WAAW,OAAO,UAAU,IAAI;AAC3C,aAAO,KAAK,WAAW,QAAQ;AAAA,IACjC;AAEA,QAAI,SAAS,IAAQ;AACnB,gBAAU;AACV,aAAO,KAAK,WAAW,EAAE,QAAQ;AACjC,iBAAW,WAAW,OAAO,UAAU,IAAI;AAC3C,aAAO,KAAK,WAAW,QAAQ;AAAA,IACjC;AAEA,QAAI,SAAS,MAAU,SAAS,KAAQ;AACtC,gBAAU;AACV,aAAO,KAAK,WAAW,EAAE,QAAQ;AAEjC,UAAI,SAAS,MAAU,SAAS,IAAQ;AACtC,eAAO,KAAK,WAAW,EAAE,QAAQ;AAAA,MACnC;AAEA,iBAAW,WAAW,OAAO,UAAU,IAAI;AAC3C,aAAO,KAAK,WAAW,QAAQ;AAAA,IACjC;AAEA,QAAI,SAAS,MAAU,YAAY,IAAI,GAAG;AACxC,YAAM;AAAA,QACJ,MAAM;AAAA,QACN;AAAA,QACA,2CAA2C;AAAA,UACzC;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,MACL;AAAA,MACA,UAAU,UAAU,QAAQ,UAAU;AAAA,MACtC;AAAA,MACA;AAAA,MACA,KAAK,MAAM,OAAO,QAAQ;AAAA,IAC5B;AAAA,EACF;AAKA,WAAS,WAAW,OAAO,OAAO,WAAW;AAC3C,QAAI,CAAC,QAAQ,SAAS,GAAG;AACvB,YAAM;AAAA,QACJ,MAAM;AAAA,QACN;AAAA,QACA,2CAA2C;AAAA,UACzC;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,UAAM,OAAO,MAAM,OAAO;AAC1B,QAAI,WAAW,QAAQ;AAEvB,WAAO,QAAQ,KAAK,WAAW,QAAQ,CAAC,GAAG;AACzC,QAAE;AAAA,IACJ;AAEA,WAAO;AAAA,EACT;AAsBA,WAAS,WAAW,OAAO,OAAO;AAChC,UAAM,OAAO,MAAM,OAAO;AAC1B,UAAM,aAAa,KAAK;AACxB,QAAI,WAAW,QAAQ;AACvB,QAAI,aAAa;AACjB,QAAI,QAAQ;AAEZ,WAAO,WAAW,YAAY;AAC5B,YAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,UAAI,SAAS,IAAQ;AACnB,iBAAS,KAAK,MAAM,YAAY,QAAQ;AACxC,eAAO,YAAY,OAAO,UAAU,QAAQ,OAAO,WAAW,GAAG,KAAK;AAAA,MACxE;AAEA,UAAI,SAAS,IAAQ;AACnB,iBAAS,KAAK,MAAM,YAAY,QAAQ;AACxC,cAAM,SACJ,KAAK,WAAW,WAAW,CAAC,MAAM,MAC9B,KAAK,WAAW,WAAW,CAAC,MAAM,MAChC,gCAAgC,OAAO,QAAQ,IAC/C,6BAA6B,OAAO,QAAQ,IAC9C,qBAAqB,OAAO,QAAQ;AAC1C,iBAAS,OAAO;AAChB,oBAAY,OAAO;AACnB,qBAAa;AACb;AAAA,MACF;AAEA,UAAI,SAAS,MAAU,SAAS,IAAQ;AACtC;AAAA,MACF;AAEA,UAAI,qBAAqB,IAAI,GAAG;AAC9B,UAAE;AAAA,MACJ,WAAW,yBAAyB,MAAM,QAAQ,GAAG;AACnD,oBAAY;AAAA,MACd,OAAO;AACL,cAAM;AAAA,UACJ,MAAM;AAAA,UACN;AAAA,UACA,oCAAoC;AAAA,YAClC;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,UAAM,YAAY,MAAM,QAAQ,UAAU,sBAAsB;AAAA,EAClE;AAEA,WAAS,gCAAgC,OAAO,UAAU;AACxD,UAAM,OAAO,MAAM,OAAO;AAC1B,QAAI,QAAQ;AACZ,QAAI,OAAO;AAEX,WAAO,OAAO,IAAI;AAChB,YAAM,OAAO,KAAK,WAAW,WAAW,MAAM;AAE9C,UAAI,SAAS,KAAQ;AAEnB,YAAI,OAAO,KAAK,CAAC,qBAAqB,KAAK,GAAG;AAC5C;AAAA,QACF;AAEA,eAAO;AAAA,UACL,OAAO,OAAO,cAAc,KAAK;AAAA,UACjC;AAAA,QACF;AAAA,MACF;AAEA,cAAS,SAAS,IAAK,aAAa,IAAI;AAExC,UAAI,QAAQ,GAAG;AACb;AAAA,MACF;AAAA,IACF;AAEA,UAAM;AAAA,MACJ,MAAM;AAAA,MACN;AAAA,MACA,qCAAqC,KAAK;AAAA,QACxC;AAAA,QACA,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAEA,WAAS,6BAA6B,OAAO,UAAU;AACrD,UAAM,OAAO,MAAM,OAAO;AAC1B,UAAM,OAAO,iBAAiB,MAAM,WAAW,CAAC;AAEhD,QAAI,qBAAqB,IAAI,GAAG;AAC9B,aAAO;AAAA,QACL,OAAO,OAAO,cAAc,IAAI;AAAA,QAChC,MAAM;AAAA,MACR;AAAA,IACF;AAGA,QAAI,mBAAmB,IAAI,GAAG;AAE5B,UACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,KAClC;AACA,cAAM,eAAe,iBAAiB,MAAM,WAAW,CAAC;AAExD,YAAI,oBAAoB,YAAY,GAAG;AAOrC,iBAAO;AAAA,YACL,OAAO,OAAO,cAAc,MAAM,YAAY;AAAA,YAC9C,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,UAAM;AAAA,MACJ,MAAM;AAAA,MACN;AAAA,MACA,qCAAqC,KAAK,MAAM,UAAU,WAAW,CAAC;AAAA,IACxE;AAAA,EACF;AASA,WAAS,iBAAiB,MAAM,UAAU;AAGxC,WACG,aAAa,KAAK,WAAW,QAAQ,CAAC,KAAK,KAC3C,aAAa,KAAK,WAAW,WAAW,CAAC,CAAC,KAAK,IAC/C,aAAa,KAAK,WAAW,WAAW,CAAC,CAAC,KAAK,IAChD,aAAa,KAAK,WAAW,WAAW,CAAC,CAAC;AAAA,EAE9C;AAgBA,WAAS,aAAa,MAAM;AAC1B,WAAO,QAAQ,MAAU,QAAQ,KAC7B,OAAO,KACP,QAAQ,MAAU,QAAQ,KAC1B,OAAO,KACP,QAAQ,MAAU,QAAQ,MAC1B,OAAO,KACP;AAAA,EACN;AAcA,WAAS,qBAAqB,OAAO,UAAU;AAC7C,UAAM,OAAO,MAAM,OAAO;AAC1B,UAAM,OAAO,KAAK,WAAW,WAAW,CAAC;AAEzC,YAAQ,MAAM;AAAA,MACZ,KAAK;AAEH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MAEF,KAAK;AAEH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MAEF,KAAK;AAEH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MAEF,KAAK;AAEH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MAEF,KAAK;AAEH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MAEF,KAAK;AAEH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MAEF,KAAK;AAEH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MAEF,KAAK;AAEH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,IACJ;AAEA,UAAM;AAAA,MACJ,MAAM;AAAA,MACN;AAAA,MACA,uCAAuC,KAAK;AAAA,QAC1C;AAAA,QACA,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAcA,WAAS,gBAAgB,OAAO,OAAO;AACrC,UAAM,OAAO,MAAM,OAAO;AAC1B,UAAM,aAAa,KAAK;AACxB,QAAI,YAAY,MAAM;AACtB,QAAI,WAAW,QAAQ;AACvB,QAAI,aAAa;AACjB,QAAI,cAAc;AAClB,UAAM,aAAa,CAAC;AAEpB,WAAO,WAAW,YAAY;AAC5B,YAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,UACE,SAAS,MACT,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,uBAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,mBAAW,KAAK,WAAW;AAC3B,cAAM,QAAQ;AAAA,UACZ;AAAA,UACA,UAAU;AAAA,UACV;AAAA,UACA,WAAW;AAAA;AAAA,UACX,uBAAuB,UAAU,EAAE,KAAK,IAAI;AAAA,QAC9C;AACA,cAAM,QAAQ,WAAW,SAAS;AAClC,cAAM,YAAY;AAClB,eAAO;AAAA,MACT;AAEA,UACE,SAAS,MACT,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,uBAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,qBAAa,WAAW;AAExB,oBAAY;AACZ;AAAA,MACF;AAEA,UAAI,SAAS,MAAU,SAAS,IAAQ;AACtC,uBAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,mBAAW,KAAK,WAAW;AAE3B,YAAI,SAAS,MAAU,KAAK,WAAW,WAAW,CAAC,MAAM,IAAQ;AAC/D,sBAAY;AAAA,QACd,OAAO;AACL,YAAE;AAAA,QACJ;AAEA,sBAAc;AACd,qBAAa;AACb,oBAAY;AACZ;AAAA,MACF;AAEA,UAAI,qBAAqB,IAAI,GAAG;AAC9B,UAAE;AAAA,MACJ,WAAW,yBAAyB,MAAM,QAAQ,GAAG;AACnD,oBAAY;AAAA,MACd,OAAO;AACL,cAAM;AAAA,UACJ,MAAM;AAAA,UACN;AAAA,UACA,oCAAoC;AAAA,YAClC;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,UAAM,YAAY,MAAM,QAAQ,UAAU,sBAAsB;AAAA,EAClE;AAUA,WAAS,SAAS,OAAO,OAAO;AAC9B,UAAM,OAAO,MAAM,OAAO;AAC1B,UAAM,aAAa,KAAK;AACxB,QAAI,WAAW,QAAQ;AAEvB,WAAO,WAAW,YAAY;AAC5B,YAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,UAAI,eAAe,IAAI,GAAG;AACxB,UAAE;AAAA,MACJ,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,MACL;AAAA,MACA,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA,KAAK,MAAM,OAAO,QAAQ;AAAA,IAC5B;AAAA,EACF;;;ACr4BA,MAAM,mBAAmB;AACzB,MAAM,sBAAsB;AAKrB,WAAS,QAAQ,OAAO;AAC7B,WAAO,YAAY,OAAO,CAAC,CAAC;AAAA,EAC9B;AAEA,WAAS,YAAY,OAAO,YAAY;AACtC,YAAQ,OAAO,OAAO;AAAA,MACpB,KAAK;AACH,eAAO,KAAK,UAAU,KAAK;AAAA,MAE7B,KAAK;AACH,eAAO,MAAM,OAAO,aAAa,MAAM,UAAU;AAAA,MAEnD,KAAK;AACH,eAAO,kBAAkB,OAAO,UAAU;AAAA,MAE5C;AACE,eAAO,OAAO,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,WAAS,kBAAkB,OAAO,sBAAsB;AACtD,QAAI,UAAU,MAAM;AAClB,aAAO;AAAA,IACT;AAEA,QAAI,qBAAqB,SAAS,KAAK,GAAG;AACxC,aAAO;AAAA,IACT;AAEA,UAAM,aAAa,CAAC,GAAG,sBAAsB,KAAK;AAElD,QAAI,WAAW,KAAK,GAAG;AACrB,YAAM,YAAY,MAAM,OAAO;AAE/B,UAAI,cAAc,OAAO;AACvB,eAAO,OAAO,cAAc,WACxB,YACA,YAAY,WAAW,UAAU;AAAA,MACvC;AAAA,IACF,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,aAAO,YAAY,OAAO,UAAU;AAAA,IACtC;AAEA,WAAO,aAAa,OAAO,UAAU;AAAA,EACvC;AAEA,WAAS,WAAW,OAAO;AACzB,WAAO,OAAO,MAAM,WAAW;AAAA,EACjC;AAEA,WAAS,aAAa,QAAQ,YAAY;AACxC,UAAM,UAAU,OAAO,QAAQ,MAAM;AAErC,QAAI,QAAQ,WAAW,GAAG;AACxB,aAAO;AAAA,IACT;AAEA,QAAI,WAAW,SAAS,qBAAqB;AAC3C,aAAO,MAAM,aAAa,MAAM,IAAI;AAAA,IACtC;AAEA,UAAM,aAAa,QAAQ;AAAA,MACzB,CAAC,CAAC,KAAK,KAAK,MAAM,MAAM,OAAO,YAAY,OAAO,UAAU;AAAA,IAC9D;AACA,WAAO,OAAO,WAAW,KAAK,IAAI,IAAI;AAAA,EACxC;AAEA,WAAS,YAAY,OAAO,YAAY;AACtC,QAAI,MAAM,WAAW,GAAG;AACtB,aAAO;AAAA,IACT;AAEA,QAAI,WAAW,SAAS,qBAAqB;AAC3C,aAAO;AAAA,IACT;AAEA,UAAM,MAAM,KAAK,IAAI,kBAAkB,MAAM,MAAM;AACnD,UAAM,YAAY,MAAM,SAAS;AACjC,UAAM,QAAQ,CAAC;AAEf,aAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAM,KAAK,YAAY,MAAM,CAAC,GAAG,UAAU,CAAC;AAAA,IAC9C;AAEA,QAAI,cAAc,GAAG;AACnB,YAAM,KAAK,iBAAiB;AAAA,IAC9B,WAAW,YAAY,GAAG;AACxB,YAAM,KAAK,OAAO,sBAAsB;AAAA,IAC1C;AAEA,WAAO,MAAM,MAAM,KAAK,IAAI,IAAI;AAAA,EAClC;AAEA,WAAS,aAAa,QAAQ;AAC5B,UAAM,MAAM,OAAO,UAAU,SAC1B,KAAK,MAAM,EACX,QAAQ,cAAc,EAAE,EACxB,QAAQ,MAAM,EAAE;AAEnB,QAAI,QAAQ,YAAY,OAAO,OAAO,gBAAgB,YAAY;AAChE,YAAM,OAAO,OAAO,YAAY;AAEhC,UAAI,OAAO,SAAS,YAAY,SAAS,IAAI;AAC3C,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;;;AC1GO,MAAM;AAAA;AAAA;AAAA;AAAA,IAIX,QAAQ,IAAI,aAAa,eACrB,SAASC,YAAW,OAAO,aAAa;AACtC,aAAO,iBAAiB;AAAA,IAC1B,IACA,SAASA,YAAW,OAAO,aAAa;AACtC,UAAI,iBAAiB,aAAa;AAChC,eAAO;AAAA,MACT;AAEA,UAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAC/C,YAAI;AAGJ,cAAM,YAAY,YAAY,UAAU,OAAO,WAAW;AAC1D,cAAM;AAAA;AAAA,UACJ,OAAO,eAAe,QAClB,MAAM,OAAO,WAAW,KACvB,qBAAqB,MAAM,iBAAiB,QAC7C,uBAAuB,SACvB,SACA,mBAAmB;AAAA;AAEzB,YAAI,cAAc,gBAAgB;AAChC,gBAAM,mBAAmB,QAAQ,KAAK;AACtC,gBAAM,IAAI,MAAM,cAAc,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWtC;AAAA,QACR;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;;;ACzCC,MAAM,SAAN,MAAa;AAAA,IAClB,YACE,MACA,OAAO,mBACP,iBAAiB;AAAA,MACf,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,GACA;AACA,aAAO,SAAS,YACd,UAAU,OAAO,oCAAoC,QAAQ,IAAI,IAAI;AACvE,WAAK,OAAO;AACZ,WAAK,OAAO;AACZ,WAAK,iBAAiB;AACtB,WAAK,eAAe,OAAO,KACzB;AAAA,QACE;AAAA,QACA;AAAA,MACF;AACF,WAAK,eAAe,SAAS,KAC3B;AAAA,QACE;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAAA,IAEA,KAAK,OAAO,WAAW,IAAI;AACzB,aAAO;AAAA,IACT;AAAA,EACF;AAOO,WAAS,SAAS,QAAQ;AAC/B,WAAO,WAAW,QAAQ,MAAM;AAAA,EAClC;;;AClCO,WAAS,MAAM,QAAQ,SAAS;AACrC,UAAM,SAAS,IAAI,OAAO,QAAQ,OAAO;AACzC,WAAO,OAAO,cAAc;AAAA,EAC9B;AA6DO,MAAM,SAAN,MAAa;AAAA,IAClB,YAAY,QAAQ,UAAU,CAAC,GAAG;AAChC,YAAM,YAAY,SAAS,MAAM,IAAI,SAAS,IAAI,OAAO,MAAM;AAC/D,WAAK,SAAS,IAAI,MAAM,SAAS;AACjC,WAAK,WAAW;AAChB,WAAK,gBAAgB;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA,IAKA,YAAY;AACV,YAAM,QAAQ,KAAK,YAAY,UAAU,IAAI;AAC7C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX,OAAO,MAAM;AAAA,MACf,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,gBAAgB;AACd,aAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,QAClC,MAAM,KAAK;AAAA,QACX,aAAa,KAAK;AAAA,UAChB,UAAU;AAAA,UACV,KAAK;AAAA,UACL,UAAU;AAAA,QACZ;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAyBA,kBAAkB;AAChB,UAAI,KAAK,KAAK,UAAU,OAAO,GAAG;AAChC,eAAO,KAAK,yBAAyB;AAAA,MACvC;AAEA,YAAM,iBAAiB,KAAK,gBAAgB;AAC5C,YAAM,eAAe,iBACjB,KAAK,OAAO,UAAU,IACtB,KAAK,OAAO;AAEhB,UAAI,aAAa,SAAS,UAAU,MAAM;AACxC,gBAAQ,aAAa,OAAO;AAAA,UAC1B,KAAK;AACH,mBAAO,KAAK,sBAAsB;AAAA,UAEpC,KAAK;AACH,mBAAO,KAAK,0BAA0B;AAAA,UAExC,KAAK;AACH,mBAAO,KAAK,0BAA0B;AAAA,UAExC,KAAK;AACH,mBAAO,KAAK,6BAA6B;AAAA,UAE3C,KAAK;AACH,mBAAO,KAAK,yBAAyB;AAAA,UAEvC,KAAK;AACH,mBAAO,KAAK,wBAAwB;AAAA,UAEtC,KAAK;AACH,mBAAO,KAAK,+BAA+B;AAAA,UAE7C,KAAK;AACH,mBAAO,KAAK,yBAAyB;AAAA,QACzC;AAEA,YAAI,gBAAgB;AAClB,gBAAM;AAAA,YACJ,KAAK,OAAO;AAAA,YACZ,KAAK,OAAO,MAAM;AAAA,YAClB;AAAA,UACF;AAAA,QACF;AAEA,gBAAQ,aAAa,OAAO;AAAA,UAC1B,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,KAAK,yBAAyB;AAAA,UAEvC,KAAK;AACH,mBAAO,KAAK,wBAAwB;AAAA,UAEtC,KAAK;AACH,mBAAO,KAAK,yBAAyB;AAAA,QACzC;AAAA,MACF;AAEA,YAAM,KAAK,WAAW,YAAY;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,2BAA2B;AACzB,YAAM,QAAQ,KAAK,OAAO;AAE1B,UAAI,KAAK,KAAK,UAAU,OAAO,GAAG;AAChC,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,KAAK;AAAA,UACX,WAAW,kBAAkB;AAAA,UAC7B,MAAM;AAAA,UACN,qBAAqB,CAAC;AAAA,UACtB,YAAY,CAAC;AAAA,UACb,cAAc,KAAK,kBAAkB;AAAA,QACvC,CAAC;AAAA,MACH;AAEA,YAAM,YAAY,KAAK,mBAAmB;AAC1C,UAAI;AAEJ,UAAI,KAAK,KAAK,UAAU,IAAI,GAAG;AAC7B,eAAO,KAAK,UAAU;AAAA,MACxB;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA,qBAAqB,KAAK,yBAAyB;AAAA,QACnD,YAAY,KAAK,gBAAgB,KAAK;AAAA,QACtC,cAAc,KAAK,kBAAkB;AAAA,MACvC,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,qBAAqB;AACnB,YAAM,iBAAiB,KAAK,YAAY,UAAU,IAAI;AAEtD,cAAQ,eAAe,OAAO;AAAA,QAC5B,KAAK;AACH,iBAAO,kBAAkB;AAAA,QAE3B,KAAK;AACH,iBAAO,kBAAkB;AAAA,QAE3B,KAAK;AACH,iBAAO,kBAAkB;AAAA,MAC7B;AAEA,YAAM,KAAK,WAAW,cAAc;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA,IAKA,2BAA2B;AACzB,aAAO,KAAK;AAAA,QACV,UAAU;AAAA,QACV,KAAK;AAAA,QACL,UAAU;AAAA,MACZ;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,0BAA0B;AACxB,aAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,QAClC,MAAM,KAAK;AAAA,QACX,UAAU,KAAK,cAAc;AAAA,QAC7B,OAAO,KAAK,YAAY,UAAU,KAAK,GAAG,KAAK,mBAAmB;AAAA,QAClE,cAAc,KAAK,oBAAoB,UAAU,MAAM,IACnD,KAAK,uBAAuB,IAC5B;AAAA,QACJ,YAAY,KAAK,qBAAqB;AAAA,MACxC,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,gBAAgB;AACd,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,YAAY,UAAU,MAAM;AACjC,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX,MAAM,KAAK,UAAU;AAAA,MACvB,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,oBAAoB;AAClB,aAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,QAClC,MAAM,KAAK;AAAA,QACX,YAAY,KAAK;AAAA,UACf,UAAU;AAAA,UACV,KAAK;AAAA,UACL,UAAU;AAAA,QACZ;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,iBAAiB;AACf,aAAO,KAAK,KAAK,UAAU,MAAM,IAC7B,KAAK,cAAc,IACnB,KAAK,WAAW;AAAA,IACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,aAAa;AACX,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,UAAU;AACnC,UAAI;AACJ,UAAI;AAEJ,UAAI,KAAK,oBAAoB,UAAU,KAAK,GAAG;AAC7C,gBAAQ;AACR,eAAO,KAAK,UAAU;AAAA,MACxB,OAAO;AACL,eAAO;AAAA,MACT;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA,WAAW,KAAK,eAAe,KAAK;AAAA,QACpC,YAAY,KAAK,gBAAgB,KAAK;AAAA,QACtC,cAAc,KAAK,KAAK,UAAU,OAAO,IACrC,KAAK,kBAAkB,IACvB;AAAA,MACN,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,eAAe,SAAS;AACtB,YAAM,OAAO,UAAU,KAAK,qBAAqB,KAAK;AACtD,aAAO,KAAK,aAAa,UAAU,SAAS,MAAM,UAAU,OAAO;AAAA,IACrE;AAAA;AAAA;AAAA;AAAA,IAKA,cAAc,UAAU,OAAO;AAC7B,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,OAAO,KAAK,UAAU;AAC5B,WAAK,YAAY,UAAU,KAAK;AAChC,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA,OAAO,KAAK,kBAAkB,OAAO;AAAA,MACvC,CAAC;AAAA,IACH;AAAA,IAEA,qBAAqB;AACnB,aAAO,KAAK,cAAc,IAAI;AAAA,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,gBAAgB;AACd,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,YAAY,UAAU,MAAM;AACjC,YAAM,mBAAmB,KAAK,sBAAsB,IAAI;AAExD,UAAI,CAAC,oBAAoB,KAAK,KAAK,UAAU,IAAI,GAAG;AAClD,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,KAAK;AAAA,UACX,MAAM,KAAK,kBAAkB;AAAA,UAC7B,YAAY,KAAK,gBAAgB,KAAK;AAAA,QACxC,CAAC;AAAA,MACH;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX,eAAe,mBAAmB,KAAK,eAAe,IAAI;AAAA,QAC1D,YAAY,KAAK,gBAAgB,KAAK;AAAA,QACtC,cAAc,KAAK,kBAAkB;AAAA,MACvC,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,0BAA0B;AACxB,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,cAAc,UAAU;AAI7B,UAAI,KAAK,SAAS,iCAAiC,MAAM;AACvD,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,KAAK;AAAA,UACX,MAAM,KAAK,kBAAkB;AAAA,UAC7B,qBAAqB,KAAK,yBAAyB;AAAA,UACnD,gBAAgB,KAAK,cAAc,IAAI,GAAG,KAAK,eAAe;AAAA,UAC9D,YAAY,KAAK,gBAAgB,KAAK;AAAA,UACtC,cAAc,KAAK,kBAAkB;AAAA,QACvC,CAAC;AAAA,MACH;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX,MAAM,KAAK,kBAAkB;AAAA,QAC7B,gBAAgB,KAAK,cAAc,IAAI,GAAG,KAAK,eAAe;AAAA,QAC9D,YAAY,KAAK,gBAAgB,KAAK;AAAA,QACtC,cAAc,KAAK,kBAAkB;AAAA,MACvC,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,oBAAoB;AAClB,UAAI,KAAK,OAAO,MAAM,UAAU,MAAM;AACpC,cAAM,KAAK,WAAW;AAAA,MACxB;AAEA,aAAO,KAAK,UAAU;AAAA,IACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqBA,kBAAkB,SAAS;AACzB,YAAM,QAAQ,KAAK,OAAO;AAE1B,cAAQ,MAAM,MAAM;AAAA,QAClB,KAAK,UAAU;AACb,iBAAO,KAAK,UAAU,OAAO;AAAA,QAE/B,KAAK,UAAU;AACb,iBAAO,KAAK,YAAY,OAAO;AAAA,QAEjC,KAAK,UAAU;AACb,eAAK,aAAa;AAClB,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,KAAK;AAAA,YACX,OAAO,MAAM;AAAA,UACf,CAAC;AAAA,QAEH,KAAK,UAAU;AACb,eAAK,aAAa;AAClB,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,KAAK;AAAA,YACX,OAAO,MAAM;AAAA,UACf,CAAC;AAAA,QAEH,KAAK,UAAU;AAAA,QACf,KAAK,UAAU;AACb,iBAAO,KAAK,mBAAmB;AAAA,QAEjC,KAAK,UAAU;AACb,eAAK,aAAa;AAElB,kBAAQ,MAAM,OAAO;AAAA,YACnB,KAAK;AACH,qBAAO,KAAK,KAAK,OAAO;AAAA,gBACtB,MAAM,KAAK;AAAA,gBACX,OAAO;AAAA,cACT,CAAC;AAAA,YAEH,KAAK;AACH,qBAAO,KAAK,KAAK,OAAO;AAAA,gBACtB,MAAM,KAAK;AAAA,gBACX,OAAO;AAAA,cACT,CAAC;AAAA,YAEH,KAAK;AACH,qBAAO,KAAK,KAAK,OAAO;AAAA,gBACtB,MAAM,KAAK;AAAA,cACb,CAAC;AAAA,YAEH;AACE,qBAAO,KAAK,KAAK,OAAO;AAAA,gBACtB,MAAM,KAAK;AAAA,gBACX,OAAO,MAAM;AAAA,cACf,CAAC;AAAA,UACL;AAAA,QAEF,KAAK,UAAU;AACb,cAAI,SAAS;AACX,iBAAK,YAAY,UAAU,MAAM;AAEjC,gBAAI,KAAK,OAAO,MAAM,SAAS,UAAU,MAAM;AAC7C,oBAAM,UAAU,KAAK,OAAO,MAAM;AAClC,oBAAM;AAAA,gBACJ,KAAK,OAAO;AAAA,gBACZ,MAAM;AAAA,gBACN,yBAAyB;AAAA,cAC3B;AAAA,YACF,OAAO;AACL,oBAAM,KAAK,WAAW,KAAK;AAAA,YAC7B;AAAA,UACF;AAEA,iBAAO,KAAK,cAAc;AAAA,QAE5B;AACE,gBAAM,KAAK,WAAW;AAAA,MAC1B;AAAA,IACF;AAAA,IAEA,yBAAyB;AACvB,aAAO,KAAK,kBAAkB,IAAI;AAAA,IACpC;AAAA,IAEA,qBAAqB;AACnB,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,aAAa;AAClB,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX,OAAO,MAAM;AAAA,QACb,OAAO,MAAM,SAAS,UAAU;AAAA,MAClC,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,UAAU,SAAS;AACjB,YAAM,OAAO,MAAM,KAAK,kBAAkB,OAAO;AAEjD,aAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,QAClC,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK,IAAI,UAAU,WAAW,MAAM,UAAU,SAAS;AAAA,MACjE,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,YAAY,SAAS;AACnB,YAAM,OAAO,MAAM,KAAK,iBAAiB,OAAO;AAEhD,aAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,QAClC,MAAM,KAAK;AAAA,QACX,QAAQ,KAAK,IAAI,UAAU,SAAS,MAAM,UAAU,OAAO;AAAA,MAC7D,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,iBAAiB,SAAS;AACxB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,OAAO,KAAK,UAAU;AAC5B,WAAK,YAAY,UAAU,KAAK;AAChC,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA,OAAO,KAAK,kBAAkB,OAAO;AAAA,MACvC,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,gBAAgB,SAAS;AACvB,YAAM,aAAa,CAAC;AAEpB,aAAO,KAAK,KAAK,UAAU,EAAE,GAAG;AAC9B,mBAAW,KAAK,KAAK,eAAe,OAAO,CAAC;AAAA,MAC9C;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,uBAAuB;AACrB,aAAO,KAAK,gBAAgB,IAAI;AAAA,IAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,eAAe,SAAS;AACtB,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,YAAY,UAAU,EAAE;AAC7B,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX,MAAM,KAAK,UAAU;AAAA,QACrB,WAAW,KAAK,eAAe,OAAO;AAAA,MACxC,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,qBAAqB;AACnB,YAAM,QAAQ,KAAK,OAAO;AAC1B,UAAIC;AAEJ,UAAI,KAAK,oBAAoB,UAAU,SAAS,GAAG;AACjD,cAAM,YAAY,KAAK,mBAAmB;AAC1C,aAAK,YAAY,UAAU,SAAS;AACpC,QAAAA,QAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,KAAK;AAAA,UACX,MAAM;AAAA,QACR,CAAC;AAAA,MACH,OAAO;AACL,QAAAA,QAAO,KAAK,eAAe;AAAA,MAC7B;AAEA,UAAI,KAAK,oBAAoB,UAAU,IAAI,GAAG;AAC5C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,KAAK;AAAA,UACX,MAAAA;AAAA,QACF,CAAC;AAAA,MACH;AAEA,aAAOA;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,iBAAiB;AACf,aAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,QAClC,MAAM,KAAK;AAAA,QACX,MAAM,KAAK,UAAU;AAAA,MACvB,CAAC;AAAA,IACH;AAAA;AAAA,IAEA,kBAAkB;AAChB,aAAO,KAAK,KAAK,UAAU,MAAM,KAAK,KAAK,KAAK,UAAU,YAAY;AAAA,IACxE;AAAA;AAAA;AAAA;AAAA,IAKA,mBAAmB;AACjB,UAAI,KAAK,gBAAgB,GAAG;AAC1B,eAAO,KAAK,mBAAmB;AAAA,MACjC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,wBAAwB;AACtB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,WAAK,cAAc,QAAQ;AAC3B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,iBAAiB,KAAK;AAAA,QAC1B,UAAU;AAAA,QACV,KAAK;AAAA,QACL,UAAU;AAAA,MACZ;AACA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,+BAA+B;AAC7B,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,YAAY,KAAK,mBAAmB;AAC1C,WAAK,YAAY,UAAU,KAAK;AAChC,YAAMA,QAAO,KAAK,eAAe;AACjC,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA,MAAAA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,4BAA4B;AAC1B,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,WAAK,cAAc,QAAQ;AAC3B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,4BAA4B;AAC1B,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,WAAK,cAAc,MAAM;AACzB,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,0BAA0B;AAClD,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,SAAS,KAAK,sBAAsB;AAC1C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,4BAA4B;AAC1B,aAAO,KAAK,sBAAsB,YAAY,IAC1C,KAAK,cAAc,UAAU,KAAK,KAAK,cAAc,IACrD,CAAC;AAAA,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,wBAAwB;AACtB,aAAO,KAAK;AAAA,QACV,UAAU;AAAA,QACV,KAAK;AAAA,QACL,UAAU;AAAA,MACZ;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,uBAAuB;AACrB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,OAAO,KAAK,kBAAkB;AACpC,WAAK,YAAY,UAAU,KAAK;AAChC,YAAMA,QAAO,KAAK,mBAAmB;AACrC,YAAM,aAAa,KAAK,qBAAqB;AAC7C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA,WAAW;AAAA,QACX,MAAAA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,oBAAoB;AAClB,aAAO,KAAK;AAAA,QACV,UAAU;AAAA,QACV,KAAK;AAAA,QACL,UAAU;AAAA,MACZ;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,qBAAqB;AACnB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,YAAM,OAAO,KAAK,UAAU;AAC5B,WAAK,YAAY,UAAU,KAAK;AAChC,YAAMA,QAAO,KAAK,mBAAmB;AACrC,UAAI;AAEJ,UAAI,KAAK,oBAAoB,UAAU,MAAM,GAAG;AAC9C,uBAAe,KAAK,uBAAuB;AAAA,MAC7C;AAEA,YAAM,aAAa,KAAK,qBAAqB;AAC7C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA,MAAAA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,+BAA+B;AAC7B,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,WAAK,cAAc,WAAW;AAC9B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,0BAA0B;AAClD,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,SAAS,KAAK,sBAAsB;AAC1C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,2BAA2B;AACzB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,WAAK,cAAc,OAAO;AAC1B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,QAAQ,KAAK,sBAAsB;AACzC,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,wBAAwB;AACtB,aAAO,KAAK,oBAAoB,UAAU,MAAM,IAC5C,KAAK,cAAc,UAAU,MAAM,KAAK,cAAc,IACtD,CAAC;AAAA,IACP;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,0BAA0B;AACxB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,WAAK,cAAc,MAAM;AACzB,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,SAAS,KAAK,0BAA0B;AAC9C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,4BAA4B;AAC1B,aAAO,KAAK;AAAA,QACV,UAAU;AAAA,QACV,KAAK;AAAA,QACL,UAAU;AAAA,MACZ;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,2BAA2B;AACzB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,YAAM,OAAO,KAAK,mBAAmB;AACrC,YAAM,aAAa,KAAK,qBAAqB;AAC7C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,qBAAqB;AACnB,UACE,KAAK,OAAO,MAAM,UAAU,UAC5B,KAAK,OAAO,MAAM,UAAU,WAC5B,KAAK,OAAO,MAAM,UAAU,QAC5B;AACA,cAAM;AAAA,UACJ,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO,MAAM;AAAA,UAClB,GAAG;AAAA,YACD,KAAK,OAAO;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAEA,aAAO,KAAK,UAAU;AAAA,IACxB;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,iCAAiC;AAC/B,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,WAAK,cAAc,OAAO;AAC1B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,SAAS,KAAK,2BAA2B;AAC/C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,6BAA6B;AAC3B,aAAO,KAAK;AAAA,QACV,UAAU;AAAA,QACV,KAAK;AAAA,QACL,UAAU;AAAA,MACZ;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeA,2BAA2B;AACzB,YAAM,eAAe,KAAK,OAAO,UAAU;AAE3C,UAAI,aAAa,SAAS,UAAU,MAAM;AACxC,gBAAQ,aAAa,OAAO;AAAA,UAC1B,KAAK;AACH,mBAAO,KAAK,qBAAqB;AAAA,UAEnC,KAAK;AACH,mBAAO,KAAK,yBAAyB;AAAA,UAEvC,KAAK;AACH,mBAAO,KAAK,yBAAyB;AAAA,UAEvC,KAAK;AACH,mBAAO,KAAK,4BAA4B;AAAA,UAE1C,KAAK;AACH,mBAAO,KAAK,wBAAwB;AAAA,UAEtC,KAAK;AACH,mBAAO,KAAK,uBAAuB;AAAA,UAErC,KAAK;AACH,mBAAO,KAAK,8BAA8B;AAAA,QAC9C;AAAA,MACF;AAEA,YAAM,KAAK,WAAW,YAAY;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,uBAAuB;AACrB,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,cAAc,QAAQ;AAC3B,WAAK,cAAc,QAAQ;AAC3B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,iBAAiB,KAAK;AAAA,QAC1B,UAAU;AAAA,QACV,KAAK;AAAA,QACL,UAAU;AAAA,MACZ;AAEA,UAAI,WAAW,WAAW,KAAK,eAAe,WAAW,GAAG;AAC1D,cAAM,KAAK,WAAW;AAAA,MACxB;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,2BAA2B;AACzB,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,cAAc,QAAQ;AAC3B,WAAK,cAAc,QAAQ;AAC3B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,qBAAqB;AAE7C,UAAI,WAAW,WAAW,GAAG;AAC3B,cAAM,KAAK,WAAW;AAAA,MACxB;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,2BAA2B;AACzB,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,cAAc,QAAQ;AAC3B,WAAK,cAAc,MAAM;AACzB,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,0BAA0B;AAClD,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,SAAS,KAAK,sBAAsB;AAE1C,UACE,WAAW,WAAW,KACtB,WAAW,WAAW,KACtB,OAAO,WAAW,GAClB;AACA,cAAM,KAAK,WAAW;AAAA,MACxB;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,8BAA8B;AAC5B,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,cAAc,QAAQ;AAC3B,WAAK,cAAc,WAAW;AAC9B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,0BAA0B;AAClD,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,SAAS,KAAK,sBAAsB;AAE1C,UACE,WAAW,WAAW,KACtB,WAAW,WAAW,KACtB,OAAO,WAAW,GAClB;AACA,cAAM,KAAK,WAAW;AAAA,MACxB;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,0BAA0B;AACxB,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,cAAc,QAAQ;AAC3B,WAAK,cAAc,OAAO;AAC1B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,QAAQ,KAAK,sBAAsB;AAEzC,UAAI,WAAW,WAAW,KAAK,MAAM,WAAW,GAAG;AACjD,cAAM,KAAK,WAAW;AAAA,MACxB;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,yBAAyB;AACvB,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,cAAc,QAAQ;AAC3B,WAAK,cAAc,MAAM;AACzB,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,SAAS,KAAK,0BAA0B;AAE9C,UAAI,WAAW,WAAW,KAAK,OAAO,WAAW,GAAG;AAClD,cAAM,KAAK,WAAW;AAAA,MACxB;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gCAAgC;AAC9B,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,cAAc,QAAQ;AAC3B,WAAK,cAAc,OAAO;AAC1B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,aAAa,KAAK,qBAAqB;AAC7C,YAAM,SAAS,KAAK,2BAA2B;AAE/C,UAAI,WAAW,WAAW,KAAK,OAAO,WAAW,GAAG;AAClD,cAAM,KAAK,WAAW;AAAA,MACxB;AAEA,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,2BAA2B;AACzB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,cAAc,KAAK,iBAAiB;AAC1C,WAAK,cAAc,WAAW;AAC9B,WAAK,YAAY,UAAU,EAAE;AAC7B,YAAM,OAAO,KAAK,UAAU;AAC5B,YAAM,OAAO,KAAK,kBAAkB;AACpC,YAAM,aAAa,KAAK,sBAAsB,YAAY;AAC1D,WAAK,cAAc,IAAI;AACvB,YAAM,YAAY,KAAK,wBAAwB;AAC/C,aAAO,KAAK,KAAK,OAAO;AAAA,QACtB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,0BAA0B;AACxB,aAAO,KAAK,cAAc,UAAU,MAAM,KAAK,sBAAsB;AAAA,IACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA6BA,yBAAyB;AACvB,YAAM,QAAQ,KAAK,OAAO;AAC1B,YAAM,OAAO,KAAK,UAAU;AAE5B,UAAI,OAAO,UAAU,eAAe,KAAK,mBAAmB,KAAK,KAAK,GAAG;AACvE,eAAO;AAAA,MACT;AAEA,YAAM,KAAK,WAAW,KAAK;AAAA,IAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,KAAK,YAAY,MAAM;AACrB,UAAI,KAAK,SAAS,eAAe,MAAM;AACrC,aAAK,MAAM,IAAI;AAAA,UACb;AAAA,UACA,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO;AAAA,QACd;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,KAAK,MAAM;AACT,aAAO,KAAK,OAAO,MAAM,SAAS;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,YAAY,MAAM;AAChB,YAAM,QAAQ,KAAK,OAAO;AAE1B,UAAI,MAAM,SAAS,MAAM;AACvB,aAAK,aAAa;AAClB,eAAO;AAAA,MACT;AAEA,YAAM;AAAA,QACJ,KAAK,OAAO;AAAA,QACZ,MAAM;AAAA,QACN,YAAY,iBAAiB,IAAI,YAAY,aAAa,KAAK;AAAA,MACjE;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,oBAAoB,MAAM;AACxB,YAAM,QAAQ,KAAK,OAAO;AAE1B,UAAI,MAAM,SAAS,MAAM;AACvB,aAAK,aAAa;AAClB,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,cAAc,OAAO;AACnB,YAAM,QAAQ,KAAK,OAAO;AAE1B,UAAI,MAAM,SAAS,UAAU,QAAQ,MAAM,UAAU,OAAO;AAC1D,aAAK,aAAa;AAAA,MACpB,OAAO;AACL,cAAM;AAAA,UACJ,KAAK,OAAO;AAAA,UACZ,MAAM;AAAA,UACN,aAAa,iBAAiB,aAAa,KAAK;AAAA,QAClD;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,sBAAsB,OAAO;AAC3B,YAAM,QAAQ,KAAK,OAAO;AAE1B,UAAI,MAAM,SAAS,UAAU,QAAQ,MAAM,UAAU,OAAO;AAC1D,aAAK,aAAa;AAClB,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW,SAAS;AAClB,YAAM,QACJ,YAAY,QAAQ,YAAY,SAAS,UAAU,KAAK,OAAO;AACjE,aAAO;AAAA,QACL,KAAK,OAAO;AAAA,QACZ,MAAM;AAAA,QACN,cAAc,aAAa,KAAK;AAAA,MAClC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,IAAI,UAAU,SAAS,WAAW;AAChC,WAAK,YAAY,QAAQ;AACzB,YAAM,QAAQ,CAAC;AAEf,aAAO,CAAC,KAAK,oBAAoB,SAAS,GAAG;AAC3C,cAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,MAC/B;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,aAAa,UAAU,SAAS,WAAW;AACzC,UAAI,KAAK,oBAAoB,QAAQ,GAAG;AACtC,cAAM,QAAQ,CAAC;AAEf,WAAG;AACD,gBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,QAC/B,SAAS,CAAC,KAAK,oBAAoB,SAAS;AAE5C,eAAO;AAAA,MACT;AAEA,aAAO,CAAC;AAAA,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,KAAK,UAAU,SAAS,WAAW;AACjC,WAAK,YAAY,QAAQ;AACzB,YAAM,QAAQ,CAAC;AAEf,SAAG;AACD,cAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,MAC/B,SAAS,CAAC,KAAK,oBAAoB,SAAS;AAE5C,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,cAAc,eAAe,SAAS;AACpC,WAAK,oBAAoB,aAAa;AACtC,YAAM,QAAQ,CAAC;AAEf,SAAG;AACD,cAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,MAC/B,SAAS,KAAK,oBAAoB,aAAa;AAE/C,aAAO;AAAA,IACT;AAAA,IAEA,eAAe;AACb,YAAM,EAAE,UAAU,IAAI,KAAK;AAE3B,YAAM,QAAQ,KAAK,OAAO,QAAQ;AAElC,UAAI,cAAc,UAAa,MAAM,SAAS,UAAU,KAAK;AAC3D,UAAE,KAAK;AAEP,YAAI,KAAK,gBAAgB,WAAW;AAClC,gBAAM;AAAA,YACJ,KAAK,OAAO;AAAA,YACZ,MAAM;AAAA,YACN,+BAA+B;AAAA,UACjC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAKA,WAAS,aAAa,OAAO;AAC3B,UAAM,QAAQ,MAAM;AACpB,WAAO,iBAAiB,MAAM,IAAI,KAAK,SAAS,OAAO,KAAK,WAAW;AAAA,EACzE;AAKA,WAAS,iBAAiB,MAAM;AAC9B,WAAO,sBAAsB,IAAI,IAAI,IAAI,UAAU;AAAA,EACrD;;;AC/+CO,WAAS,YAAY,KAAK;AAC/B,WAAO,IAAI,IAAI,QAAQ,eAAe,eAAe;AAAA,EACvD;AAEA,MAAM,gBAAgB;AAEtB,WAAS,gBAAgB,KAAK;AAC5B,WAAO,gBAAgB,IAAI,WAAW,CAAC,CAAC;AAAA,EAC1C;AAEA,MAAM,kBAAkB;AAAA,IACttKO,MAAM,QAAQ,OAAO,OAAO,CAAC,CAAC;AAgF9B,WAAS,MAAM,MAAM,SAAS,cAAc,mBAAmB;AACpE,UAAM,gBAAgB,oBAAI,IAAI;AAE9B,eAAW,QAAQ,OAAO,OAAO,IAAI,GAAG;AACtC,oBAAc,IAAI,MAAM,qBAAqB,SAAS,IAAI,CAAC;AAAA,IAC7D;AAGA,QAAI,QAAQ;AACZ,QAAI,UAAU,MAAM,QAAQ,IAAI;AAChC,QAAI,OAAO,CAAC,IAAI;AAChB,QAAI,QAAQ;AACZ,QAAI,QAAQ,CAAC;AACb,QAAI,OAAO;AACX,QAAI,MAAM;AACV,QAAI,SAAS;AACb,UAAM,OAAO,CAAC;AACd,UAAM,YAAY,CAAC;AAGnB,OAAG;AACD;AACA,YAAM,YAAY,UAAU,KAAK;AACjC,YAAM,WAAW,aAAa,MAAM,WAAW;AAE/C,UAAI,WAAW;AACb,cAAM,UAAU,WAAW,IAAI,SAAY,KAAK,KAAK,SAAS,CAAC;AAC/D,eAAO;AACP,iBAAS,UAAU,IAAI;AAEvB,YAAI,UAAU;AACZ,cAAI,SAAS;AACX,mBAAO,KAAK,MAAM;AAClB,gBAAI,aAAa;AAEjB,uBAAW,CAAC,SAAS,SAAS,KAAK,OAAO;AACxC,oBAAM,WAAW,UAAU;AAE3B,kBAAI,cAAc,MAAM;AACtB,qBAAK,OAAO,UAAU,CAAC;AACvB;AAAA,cACF,OAAO;AACL,qBAAK,QAAQ,IAAI;AAAA,cACnB;AAAA,YACF;AAAA,UACF,OAAO;AACL,mBAAO,OAAO;AAAA,cACZ,CAAC;AAAA,cACD,OAAO,0BAA0B,IAAI;AAAA,YACvC;AAEA,uBAAW,CAAC,SAAS,SAAS,KAAK,OAAO;AACxC,mBAAK,OAAO,IAAI;AAAA,YAClB;AAAA,UACF;AAAA,QACF;AAEA,gBAAQ,MAAM;AACd,eAAO,MAAM;AACb,gBAAQ,MAAM;AACd,kBAAU,MAAM;AAChB,gBAAQ,MAAM;AAAA,MAChB,WAAW,QAAQ;AACjB,cAAM,UAAU,QAAQ,KAAK,KAAK;AAClC,eAAO,OAAO,GAAG;AAEjB,YAAI,SAAS,QAAQ,SAAS,QAAW;AACvC;AAAA,QACF;AAEA,aAAK,KAAK,GAAG;AAAA,MACf;AAEA,UAAI;AAEJ,UAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,YAAI,oBAAoB;AAExB,eAAO,IAAI,KAAK,UAAU,OAAO,qBAAqB,QAAQ,IAAI,IAAI;AACtE,cAAM,UAAU,aACX,qBAAqB,cAAc,IAAI,KAAK,IAAI,OAAO,QACxD,uBAAuB,SACrB,SACA,mBAAmB,SACpB,sBAAsB,cAAc,IAAI,KAAK,IAAI,OAAO,QACzD,wBAAwB,SACxB,SACA,oBAAoB;AACxB,iBACE,YAAY,QAAQ,YAAY,SAC5B,SACA,QAAQ,KAAK,SAAS,MAAM,KAAK,QAAQ,MAAM,SAAS;AAE9D,YAAI,WAAW,OAAO;AACpB;AAAA,QACF;AAEA,YAAI,WAAW,OAAO;AACpB,cAAI,CAAC,WAAW;AACd,iBAAK,IAAI;AACT;AAAA,UACF;AAAA,QACF,WAAW,WAAW,QAAW;AAC/B,gBAAM,KAAK,CAAC,KAAK,MAAM,CAAC;AAExB,cAAI,CAAC,WAAW;AACd,gBAAI,OAAO,MAAM,GAAG;AAClB,qBAAO;AAAA,YACT,OAAO;AACL,mBAAK,IAAI;AACT;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,UAAI,WAAW,UAAa,UAAU;AACpC,cAAM,KAAK,CAAC,KAAK,IAAI,CAAC;AAAA,MACxB;AAEA,UAAI,WAAW;AACb,aAAK,IAAI;AAAA,MACX,OAAO;AACL,YAAI;AAEJ,gBAAQ;AAAA,UACN;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,MAAM;AAAA,QACR;AACA,kBAAU,MAAM,QAAQ,IAAI;AAC5B,eAAO,UACH,QACC,aAAa,YAAY,KAAK,IAAI,OAAO,QAC1C,eAAe,SACf,aACA,CAAC;AACL,gBAAQ;AACR,gBAAQ,CAAC;AAET,YAAI,QAAQ;AACV,oBAAU,KAAK,MAAM;AAAA,QACvB;AAEA,iBAAS;AAAA,MACX;AAAA,IACF,SAAS,UAAU;AAEnB,QAAI,MAAM,WAAW,GAAG;AAEtB,aAAO,MAAM,MAAM,SAAS,CAAC,EAAE,CAAC;AAAA,IAClC;AAEA,WAAO;AAAA,EACT;AAoFO,WAAS,qBAAqB,SAAS,MAAM;AAClD,UAAM,cAAc,QAAQ,IAAI;AAEhC,QAAI,OAAO,gBAAgB,UAAU;AAEnC,aAAO;AAAA,IACT,WAAW,OAAO,gBAAgB,YAAY;AAE5C,aAAO;AAAA,QACL,OAAO;AAAA,QACP,OAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,MACL,OAAO,QAAQ;AAAA,MACf,OAAO,QAAQ;AAAA,IACjB;AAAA,EACF;;;ACnVO,WAAS,MAAM,KAAK;AACzB,WAAO,MAAM,KAAK,kBAAkB;AAAA,EACtC;AACA,MAAM,kBAAkB;AACxB,MAAM,qBAAqB;AAAA,IACzB,MAAM;AAAA,MACJ,OAAO,CAAC,SAAS,KAAK;AAAA,IACxB;AAAA,IACA,UAAU;AAAA,MACR,OAAO,CAAC,SAAS,MAAM,KAAK;AAAA,IAC9B;AAAA;AAAA,IAEA,UAAU;AAAA,MACR,OAAO,CAAC,SAAS,KAAK,KAAK,aAAa,MAAM;AAAA,IAChD;AAAA,IACA,qBAAqB;AAAA,MACnB,MAAM,MAAM;AACV,cAAM,UAAU,KAAK,KAAK,KAAK,KAAK,qBAAqB,IAAI,GAAG,GAAG;AACnE,cAAM,SAAS;AAAA,UACb;AAAA,YACE,KAAK;AAAA,YACL,KAAK,CAAC,KAAK,MAAM,OAAO,CAAC;AAAA,YACzB,KAAK,KAAK,YAAY,GAAG;AAAA,UAC3B;AAAA,UACA;AAAA,QACF;AAGA,gBAAQ,WAAW,UAAU,KAAK,SAAS,OAAO,KAAK;AAAA,MACzD;AAAA,IACF;AAAA,IACA,oBAAoB;AAAA,MAClB,OAAO,CAAC,EAAE,UAAU,MAAAC,OAAM,cAAc,WAAW,MACjD,WACA,OACAA,QACA,KAAK,OAAO,YAAY,IACxB,KAAK,KAAK,KAAK,YAAY,GAAG,CAAC;AAAA,IACnC;AAAA,IACA,cAAc;AAAA,MACZ,OAAO,CAAC,EAAE,WAAW,MAAM,MAAM,UAAU;AAAA,IAC7C;AAAA,IACA,OAAO;AAAA,MACL,MAAM,EAAE,OAAO,MAAM,WAAW,MAAM,YAAY,aAAa,GAAG;AAChE,cAAM,SAAS,KAAK,IAAI,OAAO,IAAI,IAAI;AACvC,YAAI,WAAW,SAAS,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG,GAAG;AAEvD,YAAI,SAAS,SAAS,iBAAiB;AACrC,qBAAW,SAAS,KAAK,OAAO,OAAO,KAAK,MAAM,IAAI,CAAC,GAAG,KAAK;AAAA,QACjE;AAEA,eAAO,KAAK,CAAC,UAAU,KAAK,YAAY,GAAG,GAAG,YAAY,GAAG,GAAG;AAAA,MAClE;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR,OAAO,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,OAAO;AAAA,IAC5C;AAAA;AAAA,IAEA,gBAAgB;AAAA,MACd,OAAO,CAAC,EAAE,MAAM,WAAW,MACzB,QAAQ,OAAO,KAAK,KAAK,KAAK,YAAY,GAAG,CAAC;AAAA,IAClD;AAAA,IACA,gBAAgB;AAAA,MACd,OAAO,CAAC,EAAE,eAAe,YAAY,aAAa,MAChD;AAAA,QACE;AAAA,UACE;AAAA,UACA,KAAK,OAAO,aAAa;AAAA,UACzB,KAAK,YAAY,GAAG;AAAA,UACpB;AAAA,QACF;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAAA,IACA,oBAAoB;AAAA,MAClB,OAAO,CACL,EAAE,MAAM,eAAe,qBAAqB,YAAY,aAAa;AAAA;AAAA,QAGrE,YAAY,OAAO,KAAK,KAAK,KAAK,qBAAqB,IAAI,GAAG,GAAG,QAC3D,iBAAiB,KAAK,IAAI,KAAK,YAAY,GAAG,GAAG,GAAG,MAC1D;AAAA;AAAA,IACJ;AAAA;AAAA,IAEA,UAAU;AAAA,MACR,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,IACxB;AAAA,IACA,YAAY;AAAA,MACV,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,IACxB;AAAA,IACA,aAAa;AAAA,MACX,OAAO,CAAC,EAAE,OAAO,OAAO,cAAc,MACpC,gBAAgB,iBAAiB,KAAK,IAAI,YAAY,KAAK;AAAA,IAC/D;AAAA,IACA,cAAc;AAAA,MACZ,OAAO,CAAC,EAAE,MAAM,MAAO,QAAQ,SAAS;AAAA,IAC1C;AAAA,IACA,WAAW;AAAA,MACT,OAAO,MAAM;AAAA,IACf;AAAA,IACA,WAAW;AAAA,MACT,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,IACxB;AAAA,IACA,WAAW;AAAA,MACT,OAAO,CAAC,EAAE,OAAO,MAAM,MAAM,KAAK,QAAQ,IAAI,IAAI;AAAA,IACpD;AAAA,IACA,aAAa;AAAA,MACX,OAAO,CAAC,EAAE,OAAO,MAAM,MAAM,KAAK,QAAQ,IAAI,IAAI;AAAA,IACpD;AAAA,IACA,aAAa;AAAA,MACX,OAAO,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,OAAO;AAAA,IAC5C;AAAA;AAAA,IAEA,WAAW;AAAA,MACT,OAAO,CAAC,EAAE,MAAM,WAAW,KAAK,MAC9B,MAAM,OAAO,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG,GAAG;AAAA,IAChD;AAAA;AAAA,IAEA,WAAW;AAAA,MACT,OAAO,CAAC,EAAE,KAAK,MAAM;AAAA,IACvB;AAAA,IACA,UAAU;AAAA,MACR,OAAO,CAAC,EAAE,MAAAA,MAAK,MAAM,MAAMA,QAAO;AAAA,IACpC;AAAA,IACA,aAAa;AAAA,MACX,OAAO,CAAC,EAAE,MAAAA,MAAK,MAAMA,QAAO;AAAA,IAC9B;AAAA;AAAA,IAEA,kBAAkB;AAAA,MAChB,OAAO,CAAC,EAAE,aAAa,YAAY,eAAe,MAChD,KAAK,IAAI,aAAa,IAAI,IAC1B,KAAK,CAAC,UAAU,KAAK,YAAY,GAAG,GAAG,MAAM,cAAc,CAAC,GAAG,GAAG;AAAA,IACtE;AAAA,IACA,yBAAyB;AAAA,MACvB,OAAO,CAAC,EAAE,WAAW,MAAAA,MAAK,MAAM,YAAY,OAAOA;AAAA,IACrD;AAAA,IACA,sBAAsB;AAAA,MACpB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MACtC,KAAK,IAAI,aAAa,IAAI,IAC1B,KAAK,CAAC,UAAU,MAAM,KAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,IACrD;AAAA,IACA,sBAAsB;AAAA,MACpB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,YAAY,OAAO,MAC1D,KAAK,IAAI,aAAa,IAAI,IAC1B;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA,KAAK,eAAe,KAAK,YAAY,KAAK,CAAC;AAAA,UAC3C,KAAK,YAAY,GAAG;AAAA,UACpB,MAAM,MAAM;AAAA,QACd;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAAA,IACA,iBAAiB;AAAA,MACf,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MAAM,MAAAA,OAAM,WAAW,MAC7D,KAAK,IAAI,aAAa,IAAI,IAC1B,QACC,kBAAkB,IAAI,IACnB,KAAK,OAAO,OAAO,KAAK,MAAM,IAAI,CAAC,GAAG,KAAK,IAC3C,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG,GAAG,KACnC,OACAA,QACA,KAAK,KAAK,KAAK,YAAY,GAAG,CAAC;AAAA,IACnC;AAAA,IACA,sBAAsB;AAAA,MACpB,OAAO,CAAC,EAAE,aAAa,MAAM,MAAAA,OAAM,cAAc,WAAW,MAC1D,KAAK,IAAI,aAAa,IAAI,IAC1B;AAAA,QACE,CAAC,OAAO,OAAOA,OAAM,KAAK,MAAM,YAAY,GAAG,KAAK,YAAY,GAAG,CAAC;AAAA,QACpE;AAAA,MACF;AAAA,IACJ;AAAA,IACA,yBAAyB;AAAA,MACvB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,YAAY,OAAO,MAC1D,KAAK,IAAI,aAAa,IAAI,IAC1B;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA,KAAK,eAAe,KAAK,YAAY,KAAK,CAAC;AAAA,UAC3C,KAAK,YAAY,GAAG;AAAA,UACpB,MAAM,MAAM;AAAA,QACd;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAAA,IACA,qBAAqB;AAAA,MACnB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,MAAM,MAC7C,KAAK,IAAI,aAAa,IAAI,IAC1B;AAAA,QACE,CAAC,SAAS,MAAM,KAAK,YAAY,GAAG,GAAG,KAAK,MAAM,KAAK,OAAO,KAAK,CAAC,CAAC;AAAA,QACrE;AAAA,MACF;AAAA,IACJ;AAAA,IACA,oBAAoB;AAAA,MAClB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,OAAO,MAC9C,KAAK,IAAI,aAAa,IAAI,IAC1B,KAAK,CAAC,QAAQ,MAAM,KAAK,YAAY,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,IAClE;AAAA,IACA,qBAAqB;AAAA,MACnB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MACtC,KAAK,IAAI,aAAa,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,IACzE;AAAA,IACA,2BAA2B;AAAA,MACzB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,OAAO,MAC9C,KAAK,IAAI,aAAa,IAAI,IAC1B,KAAK,CAAC,SAAS,MAAM,KAAK,YAAY,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,IACnE;AAAA,IACA,qBAAqB;AAAA,MACnB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MAAM,YAAY,UAAU,MAClE,KAAK,IAAI,aAAa,IAAI,IAC1B,gBACA,QACC,kBAAkB,IAAI,IACnB,KAAK,OAAO,OAAO,KAAK,MAAM,IAAI,CAAC,GAAG,KAAK,IAC3C,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG,GAAG,MAClC,aAAa,gBAAgB,MAC9B,SACA,KAAK,WAAW,KAAK;AAAA,IACzB;AAAA,IACA,iBAAiB;AAAA,MACf,OAAO,CAAC,EAAE,YAAY,eAAe,MACnC;AAAA,QACE,CAAC,iBAAiB,KAAK,YAAY,GAAG,GAAG,MAAM,cAAc,CAAC;AAAA,QAC9D;AAAA,MACF;AAAA,IACJ;AAAA,IACA,qBAAqB;AAAA,MACnB,OAAO,CAAC,EAAE,MAAM,WAAW,MACzB,KAAK,CAAC,iBAAiB,MAAM,KAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,IAC5D;AAAA,IACA,qBAAqB;AAAA,MACnB,OAAO,CAAC,EAAE,MAAM,YAAY,YAAY,OAAO,MAC7C;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA,KAAK,eAAe,KAAK,YAAY,KAAK,CAAC;AAAA,UAC3C,KAAK,YAAY,GAAG;AAAA,UACpB,MAAM,MAAM;AAAA,QACd;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAAA,IACA,wBAAwB;AAAA,MACtB,OAAO,CAAC,EAAE,MAAM,YAAY,YAAY,OAAO,MAC7C;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA,KAAK,eAAe,KAAK,YAAY,KAAK,CAAC;AAAA,UAC3C,KAAK,YAAY,GAAG;AAAA,UACpB,MAAM,MAAM;AAAA,QACd;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAAA,IACA,oBAAoB;AAAA,MAClB,OAAO,CAAC,EAAE,MAAM,YAAY,MAAM,MAChC;AAAA,QACE;AAAA,UACE;AAAA,UACA;AAAA,UACA,KAAK,YAAY,GAAG;AAAA,UACpB,KAAK,MAAM,KAAK,OAAO,KAAK,CAAC;AAAA,QAC/B;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAAA,IACA,mBAAmB;AAAA,MACjB,OAAO,CAAC,EAAE,MAAM,YAAY,OAAO,MACjC,KAAK,CAAC,eAAe,MAAM,KAAK,YAAY,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,IACzE;AAAA,IACA,0BAA0B;AAAA,MACxB,OAAO,CAAC,EAAE,MAAM,YAAY,OAAO,MACjC,KAAK,CAAC,gBAAgB,MAAM,KAAK,YAAY,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,IAC1E;AAAA,EACF;AAMA,WAAS,KAAK,YAAY,YAAY,IAAI;AACxC,QAAI;AAEJ,YAAQ,wBACN,eAAe,QAAQ,eAAe,SAClC,SACA,WAAW,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,SAAS,OAAO,QACrD,0BAA0B,SACxB,wBACA;AAAA,EACN;AAKA,WAAS,MAAM,OAAO;AACpB,WAAO,KAAK,OAAO,OAAO,KAAK,OAAO,IAAI,CAAC,GAAG,KAAK;AAAA,EACrD;AAKA,WAAS,KAAK,OAAO,aAAa,MAAM,IAAI;AAC1C,WAAO,eAAe,QAAQ,gBAAgB,KAC1C,QAAQ,cAAc,MACtB;AAAA,EACN;AAEA,WAAS,OAAO,KAAK;AACnB,WAAO,KAAK,MAAM,IAAI,QAAQ,OAAO,MAAM,CAAC;AAAA,EAC9C;AAEA,WAAS,kBAAkB,YAAY;AACrC,QAAI;AAKJ,YAAQ,mBACN,eAAe,QAAQ,eAAe,SAClC,SACA,WAAW,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,CAAC,OAAO,QACtD,qBAAqB,SACnB,mBACA;AAAA,EACN;;;ACzUA,MAAM,WAAW,oBAAI,IAAG;AAGxB,MAAM,oBAAoB,oBAAI,IAAG;AAEjC,MAAI,wBAAwB;AAC5B,MAAI,gCAAgC;AAIpC,WAAS,UAAU,QAAc;AAC/B,WAAO,OAAO,QAAQ,WAAW,GAAG,EAAE,KAAI;EAC5C;AAEA,WAAS,gBAAgB,KAAa;AACpC,WAAO,UAAU,IAAI,OAAO,KAAK,UAAU,IAAI,OAAO,IAAI,GAAG,CAAC;EAChE;AAKA,WAAS,iBAAiB,KAAiB;AACzC,QAAM,WAAW,oBAAI,IAAG;AACxB,QAAM,cAAgC,CAAA;AAEtC,QAAI,YAAY,QAAQ,SAAA,oBAAkB;AACxC,UAAI,mBAAmB,SAAS,sBAAsB;AACpD,YAAI,eAAe,mBAAmB,KAAK;AAC3C,YAAI,YAAY,gBAAgB,mBAAmB,GAAI;AAGvD,YAAI,eAAe,kBAAkB,IAAI,YAAY;AACrD,YAAI,gBAAgB,CAAC,aAAa,IAAI,SAAS,GAAG;AAGhD,cAAI,uBAAuB;AACzB,oBAAQ,KAAK,iCAAiC,eAAe,+LAEqB;;mBAE3E,CAAC,cAAc;AACxB,4BAAkB,IAAI,cAAc,eAAe,oBAAI,KAAG;;AAG5D,qBAAa,IAAI,SAAS;AAE1B,YAAI,CAAC,SAAS,IAAI,SAAS,GAAG;AAC5B,mBAAS,IAAI,SAAS;AACtB,sBAAY,KAAK,kBAAkB;;aAEhC;AACL,oBAAY,KAAK,kBAAkB;;IAEvC,CAAC;AAED,WAAA,SAAA,SAAA,CAAA,GACK,GAAG,GAAA,EACN,YAAW,CAAA;EAEf;AAEA,WAAS,SAAS,KAAiB;AACjC,QAAM,UAAU,IAAI,IAAyB,IAAI,WAAW;AAE5D,YAAQ,QAAQ,SAAA,MAAI;AAClB,UAAI,KAAK;AAAK,eAAO,KAAK;AAC1B,aAAO,KAAK,IAAI,EAAE,QAAQ,SAAA,KAAG;AAC3B,YAAM,QAAQ,KAAK,GAAG;AACtB,YAAI,SAAS,OAAO,UAAU,UAAU;AACtC,kBAAQ,IAAI,KAAK;;MAErB,CAAC;IACH,CAAC;AAED,QAAM,MAAM,IAAI;AAChB,QAAI,KAAK;AACP,aAAO,IAAI;AACX,aAAO,IAAI;;AAGb,WAAO;EACT;AAEA,WAAS,cAAc,QAAc;AACnC,QAAI,WAAW,UAAU,MAAM;AAC/B,QAAI,CAAC,SAAS,IAAI,QAAQ,GAAG;AAC3B,UAAM,SAAS,MAAM,QAAQ;QAC3B;QACA,8BAA8B;OACxB;AACR,UAAI,CAAC,UAAU,OAAO,SAAS,YAAY;AACzC,cAAM,IAAI,MAAM,+BAA+B;;AAEjD,eAAS,IACP,UAGA,SAAS,iBAAiB,MAAM,CAAC,CAAC;;AAGtC,WAAO,SAAS,IAAI,QAAQ;EAC9B;AAGM,WAAU,IACd,UAAoC;AACpC,QAAA,OAAA,CAAA;aAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAc;AAAd,WAAA,KAAA,CAAA,IAAA,UAAA,EAAA;;AAGA,QAAI,OAAO,aAAa,UAAU;AAChC,iBAAW,CAAC,QAAQ;;AAGtB,QAAI,SAAS,SAAS,CAAC;AAEvB,SAAK,QAAQ,SAAC,KAAK,GAAC;AAClB,UAAI,OAAO,IAAI,SAAS,YAAY;AAClC,kBAAU,IAAI,IAAI,OAAO;aACpB;AACL,kBAAU;;AAEZ,gBAAU,SAAS,IAAI,CAAC;IAC1B,CAAC;AAED,WAAO,cAAc,MAAM;EAC7B;AAEM,WAAU,cAAW;AACzB,aAAS,MAAK;AACd,sBAAkB,MAAK;EACzB;AAEM,WAAU,0BAAuB;AACrC,4BAAwB;EAC1B;AAEM,WAAU,sCAAmC;AACjD,oCAAgC;EAClC;AAEM,WAAU,uCAAoC;AAClD,oCAAgC;EAClC;AAEA,MAAM,SAAS;IACb;IACA;IACA;IACA;IACA;;AAGF,GAAA,SAAiB,OAAG;AAEhB,UAAA,MAKE,OAAM,KAJR,MAAA,cAIE,OAAM,aAHR,MAAA,0BAGE,OAAM,yBAFR,MAAA,sCAEE,OAAM,qCADR,MAAA,uCACE,OAAM;EACZ,GARiB,QAAA,MAAG,CAAA,EAAA;AAUpB,MAAI,SAAO,IAAG;AAEd,MAAAC,eAAe;;;ACgpCR,MAAM,6BAA6BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCnC,MAAM,uCAAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4B7C,MAAM,iCAAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYxC;AAAA,EACJ;AACK,MAAM,6CAA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnD,MAAM,mDAAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1D;AACC,MAAM,0BAA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYhC,MAAM,iCAAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWvC,MAAM,6BAA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnC,MAAM,kCAAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCxC,MAAM,6BAA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOnC,MAAM,2BAA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYjC,MAAM,kCAAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASxC,MAAM,yCAAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ/C,MAAM,sCAAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM5C,MAAM,wCAAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM9C,MAAM,mCAAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMzC,MAAM,mCAAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAazyJrC;AACC,MAAM,yCAAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAuBhD;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACK,MAAM,+BAA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWtC;AAAA,EACJ;AACK,MAAM,qCAAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3C,MAAM,8BAA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQpC,MAAM,8BAA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBpC,MAAM,qBAAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3B,MAAM,sBAAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM7B;AACC,MAAM,mBAAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1B;AACC,MAAM,yBAAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMhC;AACC,MAAM,qCAAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAS5C;AAAA,EACJ;AACK,MAAM,0BAA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUjC;AACC,MAAM,iCAAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBxC;AAAA,EACJ;AACK,MAAM,6BAA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMpC;AACC,MAAM,mBAAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM1B;AACC,MAAM,mCAAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAS1C;AAAA,EACJ;AACK,MAAM,oBAAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAU3B;AACC,MAAM,kBAAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMzB;AACC,MAAM,mBAAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgB1B;AACC,MAAM,0BAA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWjC;AAAA,EACJ;AACK,MAAM,sBAAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ5B,MAAM,6BAA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMpC;AACC,MAAM,qBAAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM5B;AACC,MAAM,sBAAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgB7B;AACC,MAAM,sBAAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgB7B;AACC,MAAM,0BAA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWjC;AACC,MAAM,2BAA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOjC,MAAM,iBAAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMxB;AACC,MAAM,iBAAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOvB,MAAM,wBAAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ9B,MAAM,yBAAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMhC;AACC,MAAM,uBAAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM9B;AAEC,WAAS,OAAa,WAA4B;AACvD,WAAO;AAAA,MACL,WAAW,WAAyC,SAA0C;AAC5F,eAAO,UAA2D,oBAAoB,WAAW,OAAO;AAAA,MAC1G;AAAA,MACA,YAAY,WAA0C,SAA2C;AAC/F,eAAO,UAA6D,qBAAqB,WAAW,OAAO;AAAA,MAC7G;AAAA,MACA,SAAS,WAAuC,SAAwC;AACtF,eAAO,UAAuD,kBAAkB,WAAW,OAAO;AAAA,MACpG;AAAA,MACA,eAAe,WAA4C,SAA8C;AACvG,eAAO,UAAmE,wBAAwB,WAAW,OAAO;AAAA,MACtH;AAAA,MACA,2BAA2B,WAAwD,SAA0D;AAC3I,eAAO,UAA2F,oCAAoC,WAAW,OAAO;AAAA,MAC1J;AAAA,MACA,gBAAgB,WAA8C,SAA+C;AAC3G,eAAO,UAAqE,yBAAyB,WAAW,OAAO;AAAA,MACzH;AAAA,MACA,uBAAuB,WAAoD,SAAsD;AAC/H,eAAO,UAAmF,gCAAgC,WAAW,OAAO;AAAA,MAC9I;AAAA,MACA,mBAAmB,WAAgD,SAAkD;AACnH,eAAO,UAA2E,4BAA4B,WAAW,OAAO;AAAA,MAClI;AAAA,MACA,SAAS,WAAuC,SAAwC;AACtF,eAAO,UAAuD,kBAAkB,WAAW,OAAO;AAAA,MACpG;AAAA,MACA,yBAAyB,WAAuD,SAAwD;AACtI,eAAO,UAAuF,kCAAkC,WAAW,OAAO;AAAA,MACpJ;AAAA,MACA,UAAU,WAAwC,SAAyC;AACzF,eAAO,UAAyD,mBAAmB,WAAW,OAAO;AAAA,MACvG;AAAA,MACA,QAAQ,WAAqC,SAAuC;AAClF,eAAO,UAAqD,iBAAiB,WAAW,OAAO;AAAA,MACjG;AAAA,MACA,SAAS,WAAsC,SAAwC;AACrF,eAAO,UAAuD,kBAAkB,WAAW,OAAO;AAAA,MACpG;AAAA,MACA,gBAAgB,WAA6C,SAA+C;AAC1G,eAAO,UAAqE,yBAAyB,WAAW,OAAO;AAAA,MACzH;AAAA,MACA,YAAY,WAAyC,SAA2C;AAC9F,eAAO,UAA6D,qBAAqB,WAAW,OAAO;AAAA,MAC7G;AAAA,MACA,mBAAmB,WAAgD,SAAkD;AACnH,eAAO,UAA2E,4BAA4B,WAAW,OAAO;AAAA,MAClI;AAAA,MACA,WAAW,WAAwC,SAA0C;AAC3F,eAAO,UAA2D,oBAAoB,WAAW,OAAO;AAAA,MAC1G;AAAA,MACA,YAAY,WAAyC,SAA2C;AAC9F,eAAO,UAA6D,qBAAqB,WAAW,OAAO;AAAA,MAC7G;AAAA,MACA,YAAY,WAAyC,SAA2C;AAC9F,eAAO,UAA6D,qBAAqB,WAAW,OAAO;AAAA,MAC7G;AAAA,MACA,gBAAgB,WAA6C,SAA+C;AAC1G,eAAO,UAAqE,yBAAyB,WAAW,OAAO;AAAA,MACzH;AAAA,MACA,iBAAiB,WAA8C,SAAgD;AAC7G,eAAO,UAAuE,0BAA0B,WAAW,OAAO;AAAA,MAC5H;AAAA,MACA,OAAO,WAAuC,SAAyC;AACrF,eAAO,UAAyD,gBAAgB,WAAW,OAAO;AAAA,MACpG;AAAA,MACA,OAAO,WAAuC,SAAyC;AACrF,eAAO,UAAyD,gBAAgB,WAAW,OAAO;AAAA,MACpG;AAAA,MACA,cAAc,WAA8C,SAAgD;AAC1G,eAAO,UAAuE,uBAAuB,WAAW,OAAO;AAAA,MACzH;AAAA,MACA,eAAe,WAAmD,SAA2D;AAC3H,eAAO,UAAiF,wBAAwB,WAAW,OAAO;AAAA,MACpI;AAAA,MACA,aAAa,WAAiD,SAAyD;AACrH,eAAO,UAA6E,sBAAsB,WAAW,OAAO;AAAA,MAC9H;AAAA,IACF;AAAA,EACF;;;ACplEO,MAAM,yBAAN,MAA8D;AAAA,IAI5D,YAAoB,SAAuC;AAAvC;AAAA,IAAwC;AAAA,IAH3D;AAAA,IAKR,MAAc,YAAY;AACxB,YAAM,EAAE,KAAK,OAAO,WAAW,QAAQ,IAAI,KAAK;AAEhD,YAAM,WAAW,MAAM,QAAQ,GAAG,WAAW;AAAA,QAC3C,QAAQ;AAAA,QACR,MAAM,KAAK,UAAU;AAAA,UACnB,OAAO,MAAM,KAAK;AAAA,UAClB;AAAA,QACF,CAAC;AAAA,QACD,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,QAAQ;AAAA,QACV;AAAA,MACF,CAAC;AAGD,WAAK,SAAS,SAAS,KAAM,UAAU;AAAA,IACzC;AAAA,IAEA,MAAM,OAAkD;AACtD,UAAI,CAAC,KAAK,QAAQ;AAChB,cAAM,KAAK,UAAU;AAAA,MACvB;AAGA,aAAO,MAAM;AACX,cAAM,EAAE,OAAO,KAAK,IAAI,MAAM,KAAK,OAAO,KAAK;AAC/C,YAAI,MAAM;AACR,iBAAO,EAAE,OAAO,KAAK;AAAA,QACvB;AAEA,cAAM,OAAO,uBAAsB,YAAY,OAAO,KAAK;AAU3D,YAAI,CAAC,KAAK,WAAW,OAAO,GAAG;AAE7B;AAAA,QACF;AAEA,YAAI;AACJ,YAAI;AAEJ,YAAI;AACF,WAAC,EAAE,MAAM,OAAO,IAAI,KAAK,MAAM,KAAK,QAAQ,UAAU,EAAE,CAAC;AAAA,QAC3D,SAAS,GAAP;AACA,gBAAM,IAAI;AAAA,YACR,UAAU;AAAA,YACV,6CAA6C;AAAA,UAC/C;AAAA,QACF;AAEA,YAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,gBAAM,IAAI;AAAA,YACR,UAAU,MAAM;AAAA,YAChB,OAAO,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE,KAAK,MAAM;AAAA,UAC9C;AAAA,QACF;AAEA,eAAO,EAAE,OAAO,MAAM,MAAM,MAAM;AAAA,MACpC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,SAAsD;AAC1D,YAAM,KAAK,OAAO,OAAO;AACzB,WAAK,OAAO,YAAY;AACxB,aAAO,EAAE,MAAM,MAAM,OAAO,OAAU;AAAA,IACxC;AAAA,IAEA,CAAC,OAAO,aAAa,IAAgD;AACnE,aAAO;AAAA,IACT;AAAA,EACF;AAvFO,MAAM,wBAAN;AAEL,gBAFW,uBAEI,eAAc,IAAI,YAAY;;;ACH/C,MAAM,QAAe,CAAC;AAEtB,MAAM,oBAAoB,KAAK;AAExB,MAAM,cAAN,MAAkB;AAAA,IACvB;AAAA,IACA,YAAY,UAAkB,mBAAmB;AAC/C,WAAK,MAAM;AAEX,UAAI,OAAO,YAAY,YAAY,KAAK,OAAO,GAAG;AAChD,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,gBAAgB,KAAK;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAAA,IAEA,IAAI,OAAkB,iBAAiB,MAA6B;AAClE,YAAM,MAAM,QAAQ,KAAK;AACzB,UAAI,MAAM,GAAG,GAAG;AACd,YAAI,CAAC,kBAAkB,MAAM,GAAG,EAAE,UAAU,KAAK,IAAI,GAAG;AACtD,iBAAO,MAAM,GAAG,EAAE;AAAA,QACpB;AAEA,aAAK,IAAI,KAAK;AAAA,MAChB;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,OAA0B;AAC5B,YAAM,YAAY,KAAK,IAAI,IAAI,KAAK;AACpC,YAAM,MAAM,QAAQ,KAAK;AACzB,YAAM,GAAG,IAAI;AAAA,QACX,SAAS;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,aAA0B;AACxB,aAAO,OAAO,KAAK,KAAK,EAAE,OAAO,CAAC,MAAM,QAAQ;AAC9C,cAAM,OAAO,KAAK,IAAI,KAAK,KAAK;AAChC,YAAI,MAAM;AACR,eAAK,KAAK,IAAI;AAAA,QAChB;AAEA,eAAO;AAAA,MACT,GAAG,CAAC,CAAgB;AAAA,IACtB;AAAA,IAEA,gBAA6B;AAC3B,aAAO,OAAO,KAAK,KAAK,EAAE,OAAO,CAAC,MAAM,QAAQ;AAC9C,cAAM,OAAO,KAAK,IAAI,GAAG;AACzB,YAAI,MAAM;AACR,eAAK,KAAK,IAAI;AAAA,QAChB;AAEA,eAAO;AAAA,MACT,GAAG,CAAC,CAAgB;AAAA,IACtB;AAAA,IAEA,IAAI,OAAkB;AACpB,YAAM,MAAM,QAAQ,KAAK;AACzB,aAAO,MAAM,GAAG;AAAA,IAClB;AAAA,EACF;;;ACYO,MAAM,WAAW,CAAC,UAA0C;AACjE,UAAM,EAAE,MAAAC,MAAK,IAAI;AAEjB,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK,UAAU,MAAM;AACnB,cAAM,YAAY,SAAS,MAAM,aAAa,IAAI;AAClD,cAAM,gBAAgB,SAAS,MAAM,iBAAiB,IAAI;AAC1D,eAAO;AAAA,UACL,MAAM,UAAU;AAAA,UAChB,MAAM,QAAQ,SAAS,MAAM,EAAE,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,UAC7C,aAAa,SAAS,MAAM,EAAE,EAAE,EAAE;AAAA,UAClC,OAAO,QAAQ,MAAM,KAAK;AAAA,UAC1B,QAAQ,GAAG,MAAM,MAAM;AAAA,UACvB,SAAS,QAAQ,MAAM,OAAO;AAAA,UAC9B,WAAW;AAAA,YACT,aAAaC,UAAS,SAAS,MAAM,SAAS,EAAE,MAAM,GAAG,CAAC,CAAC;AAAA,YAC3D,SAASA,UAAS,SAAS,MAAM,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,UAC1D;AAAA,UACA,cAAc,MAAM;AAAA,UACpB,UAAU,MAAM,YAAY;AAAA,UAC5B,kBAAkB,GAAG,MAAM,gBAAgB;AAAA,UAC3C,iBAAiB,UAAU;AAAA,UAC3B,qBAAqB,cAAc;AAAA,UACnC,WAAW,QAAQ,SAAS;AAAA,UAC5B,eAAe,QAAQ,aAAa;AAAA,QACtC;AAAA,MACF;AAAA,MACA,KAAK,UAAU,UAAU;AACvB,eAAO;AAAA,UACL,MAAM,UAAU;AAAA,UAChB,MAAM;AAAA,UACN,aAAa;AAAA,UACb,aAAa;AAAA,UACb,WAAW;AAAA,UACX,WAAW;AAAA,YACT,aAAaA,UAAS,SAAS,MAAM,SAAS,EAAE,MAAM,GAAG,CAAC,CAAC;AAAA,YAC3D,SAASA,UAAS,SAAS,MAAM,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,UAC1D;AAAA,UACA,YAAY,QAAQ,MAAM,UAAU;AAAA,QACtC;AAAA,MACF;AAAA,MACA,KAAK,UAAU,SAAS;AACtB,cAAM,YAAY,SAAS,MAAM,aAAa,IAAI;AAClD,cAAM,gBAAgB,SAAS,MAAM,iBAAiB,IAAI;AAC1D,cAAM,OAAO,SAAS,MAAM,QAAQ,IAAI;AACxC,eAAO;AAAA,UACL,MAAM,UAAU;AAAA,UAChB,QAAQ,QAAQ,MAAM,MAAM;AAAA,UAC5B,WAAW,QAAQ,MAAM,SAAS;AAAA,UAClC,QAAQ,GAAG,MAAM,MAAM;AAAA,UACvB,OAAO,QAAQ,MAAM,KAAK;AAAA,UAC1B,cAAc,MAAM;AAAA,UACpB,kBAAkB,GAAG,MAAM,gBAAgB;AAAA,UAC3C,iBAAiB,UAAU;AAAA,UAC3B,qBAAqB,cAAc;AAAA,UACnC,WAAW,QAAQ,SAAS;AAAA,UAC5B,eAAe,QAAQ,aAAa;AAAA,UACpC,MAAM,QAAQ,IAAI;AAAA,UAClB,YAAY,KAAK;AAAA,QACnB;AAAA,MACF;AAAA,MACA,SAAS;AACP,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,mCAAmCD;AAAA,QACrC;AAAA,MACF;AAAA,IACF;AAAA,EACF;;;AC7GO,MAAM,YAAY,CAAC,UAA4C;AACpE,UAAM,EAAE,MAAAE,MAAK,IAAI;AAEjB,YAAQA,OAAM;AAAA,MACZ,KAAK,WAAW,MAAM;AACpB,eAAO;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,IAAI,QAAQ,MAAM,EAAE;AAAA,UACpB,QAAQ,GAAG,MAAM,MAAM;AAAA,UACvB,SAAS,QAAQ,MAAM,OAAO;AAAA,QAChC;AAAA,MACF;AAAA,MACA,KAAK,WAAW,UAAU;AACxB,eAAO;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,YAAY,MAAM;AAAA,UAClB,aAAa;AAAA,UACb,WAAW;AAAA,QACb;AAAA,MACF;AAAA,MACA,KAAK,WAAW,QAAQ;AACtB,eAAO;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,IAAI,QAAQ,MAAM,EAAE;AAAA,UACpB,QAAQ,GAAG,CAAC;AAAA,UACZ,SAAS,QAAQ,MAAM,OAAO;AAAA,QAChC;AAAA,MACF;AAAA,MACA,KAAK,WAAW,UAAU;AACxB,eAAO;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,IAAI;AAAA,UACJ,QAAQ,GAAG,CAAC;AAAA,UACZ,SAAS;AAAA,QACX;AAAA,MACF;AAAA,MACA,KAAK,WAAW,iBAAiB;AAC/B,eAAO;AAAA,UACL,MAAM,WAAW;AAAA,UACjB,YAAY,QAAQ,MAAM,UAAU;AAAA,UACpC,WAAW,QAAQ,MAAM,SAAS;AAAA,QACpC;AAAA,MACF;AAAA,MACA,SAAS;AACP,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,oCAAoCA;AAAA,QACtC;AAAA,MACF;AAAA,IACF;AAAA,EACF;;;AC/DO,MAAM,YAAY,CAAC,aAA+C,YAAY;AAE9E,MAAM,eAAe,CAAC,aAC3B,eAAe;AAEV,MAAM,SAAS,CAAC,aAAyC,QAAQ;AAEjE,MAAM,YAAY,CAAC,aAAgD,eAAe;;;ACzClF,MAAM,oBAAoB,KAAK;AAa/B,MAAM,oBAAoB,OAAO,OAAO;AAIxC,MAAM,yBAAyB,OAAO,OAAO;AAO7C,MAAM,uBAAuB,OAAO;AAIpC,MAAM,4BAA4B,OAAO;AAMzC,MAAM,oCAAoC;;;ACHjD,MAAM,wCAAwC,CAC5C,YAEA,QAAQ,SAAS,YAAY,UAC7B,QAAQ,IAAI,SAAS,KAAK,MAAM;AAGlC,MAAM,mCAAmC,CACvC,YAEA,QAAQ,SAAS,YAAY,SAC7B,QAAQ,eAAe;AAGlB,MAAM,6BAA6B,CAAC,aACzC,SAAS;AAAA,IAIP,CAAC,MAAM,YAAY;AACjB,UAAI,sCAAsC,OAAO,GAAG;AAClD,aAAK,uBAAuB,KAAK,OAAO;AAAA,MAC1C;AACA,UAAI,iCAAiC,OAAO,GAAG;AAC7C,aAAK,yBAAyB,KAAK,OAAO;AAAA,MAC5C;AACA,aAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,wBAAwB,CAAC;AAAA,MACzB,0BAA0B,CAAC;AAAA,IAC7B;AAAA,EACF;AAEF,MAAM,YAAY,CAAC,QAAwB,OAAO;AAE3C,WAAS,sBAAsB,SAAqC;AACzE,UAAM,EAAE,YAAY,IAAI;AAExB,YAAQ,aAAa;AAAA,MACnB,wBAA0B;AACxB,cAAM,cAA2B;AAAA,UAC/B,MAAM,YAAY;AAAA,UAClB,MAAM,UAAU,QAAQ,UAAU,EAAE;AAAA,UACpC,IAAI,UAAU,SAAS,IAAI,EAAE;AAAA,UAC7B,QAAQ,GAAG,QAAQ,MAAM;AAAA,UACzB,SAAS,UAAU,QAAQ,OAAO;AAAA,UAClC,KAAK,GAAG,QAAQ,GAAG;AAAA,UACnB,QAAQ,GAAG,QAAQ,MAAM;AAAA,UACzB,QAAQ,GAAG,QAAQ,MAAM;AAAA,UACzB,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,4BAA4B;AAC1B,cAAM,gBAA+B;AAAA,UACnC,MAAM,YAAY;AAAA,UAClB,IAAI,UAAU,QAAQ,UAAU,EAAE;AAAA,UAClC,KAAK,GAAG,QAAQ,GAAG;AAAA,UACnB,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,qCAAgC;AAC9B,cAAM,oBAAuC;AAAA,UAC3C,MAAM,YAAY;AAAA,UAClB,IAAI,UAAU,QAAQ,UAAU,EAAE;AAAA,UAClC,KAAK,GAAG,QAAQ,GAAG;AAAA,UACnB,KAAK,GAAG,QAAQ,GAAG;AAAA,UACnB,QAAQ,UAAU,QAAQ,MAAM;AAAA,UAChC,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,0BAA2B;AACzB,cAAM,eAA6B;AAAA,UACjC,MAAM,YAAY;AAAA,UAClB,IAAI,UAAU,QAAQ,UAAU,EAAE;AAAA,UAClC,QAAQ,GAAG,QAAQ,MAAM;AAAA,UACzB,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,YAAY,UAAU,QAAQ,UAAU;AAAA,QAC1C;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,4BAA4B;AAC1B,cAAM,gBAA+B;AAAA,UACnC,MAAM,YAAY;AAAA,UAClB,IAAI,UAAU,QAAQ,UAAU,EAAE;AAAA,UAClC,KAAK,GAAG,QAAQ,EAAE;AAAA,UAClB,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AACA,eAAO;AAAA,MACT;AAAA,MAEA,sBAAyB;AACvB,cAAM,aAAyB;AAAA,UAC7B,MAAM,YAAY;AAAA,UAClB,IAAI,UAAU,QAAQ,UAAU,EAAE;AAAA,UAClC,MAAM,GAAG,QAAQ,EAAE;AAAA,UACnB,MAAM,GAAG,QAAQ,EAAE;AAAA,UACnB,MAAM,GAAG,QAAQ,EAAE;AAAA,UACnB,MAAM,GAAG,QAAQ,EAAE;AAAA,UACnB,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,+BAA6B;AAC3B,cAAM,iBAAiC;AAAA,UACrC,MAAM,YAAY;AAAA,UAClB,IAAI,UAAU,QAAQ,UAAU,EAAE;AAAA,UAClC,MAAM,GAAG,QAAQ,EAAE;AAAA,UACnB,MAAM,GAAG,QAAQ,EAAE;AAAA,UACnB,KAAK,GAAG,QAAQ,GAAG;AAAA,UACnB,KAAK,GAAG,QAAQ,GAAG;AAAA,UACnB,QAAQ,UAAU,QAAQ,MAAM;AAAA,UAChC,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AACA,eAAO;AAAA,MACT;AAAA,MAEA,gCAA8B;AAC5B,cAAM,kBAAmC;AAAA,UACvC,MAAM,YAAY;AAAA,UAClB,MAAM,UAAU,QAAQ,UAAU,EAAE;AAAA,UACpC,IAAI,UAAU,QAAQ,aAAa,SAAS,IAAI,EAAE;AAAA,UAClD,QAAQ,GAAG,QAAQ,MAAM;AAAA,UACzB,SAAS,UAAU,QAAQ,OAAO;AAAA,UAClC,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,uCAAiC;AAC/B,cAAM,qBAAyC;AAAA,UAC7C,MAAM,YAAY;AAAA,UAClB,MAAM,UAAU,QAAQ,UAAU,EAAE;AAAA,UACpC,IAAI,UAAU,QAAQ,aAAa,QAAQ,IAAI,EAAE;AAAA,UACjD,QAAQ,GAAG,QAAQ,MAAM;AAAA,UACzB,SAAS,UAAU,QAAQ,OAAO;AAAA,UAClC,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AACA,eAAO;AAAA,MACT;AAAA,MAEA,yCAAkC;AAChC,cAAM,sBAA2C;AAAA,UAC/C,MAAM,YAAY;AAAA,UAClB,QAAQ,GAAG,QAAQ,MAAM;AAAA,UACzB,SAAS,GAAG,QAAQ,OAAO;AAAA,QAC7B;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,qCAAgC;AAC9B,cAAM,SAAS,UAAU,QAAQ,MAAM;AACvC,cAAM,YAAY,UAAU,QAAQ,SAAS;AAC7C,cAAM,QAAQ,UAAU,QAAQ,KAAK;AACrC,cAAM,SAAS,GAAG,QAAQ,MAAM;AAChC,cAAM,OAAO,QAAQ,OAAO,SAAS,QAAQ,IAAI,IAAI,WAAW,KAAK,CAAC,CAAC;AACvE,cAAM,SAAS,UAAU,QAAQ,MAAM;AAEvC,cAAM,YAAY,uBAAuB,aAAa;AAAA,UACpD;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAED,cAAM,oBAAuC;AAAA,UAC3C,MAAM,YAAY;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,wBAA0B;AACxB,cAAM,aAAa,UAAU,QAAQ,UAAU,EAAE;AACjD,cAAM,QAAQ,UAAU,QAAQ,KAAK;AACrC,cAAM,UAAU,iBAAiB,WAAW,YAAY,KAAK;AAE7D,cAAM,cAA2B;AAAA,UAC/B,MAAM,YAAY;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA,KAAK,GAAG,QAAQ,GAAG;AAAA,UACnB,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,wBAA0B;AACxB,cAAM,aAAa,UAAU,QAAQ,UAAU,EAAE;AACjD,cAAM,QAAQ,UAAU,QAAQ,KAAK;AACrC,cAAM,UAAU,iBAAiB,WAAW,YAAY,KAAK;AAE7D,cAAM,cAA2B;AAAA,UAC/B,MAAM,YAAY;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA,KAAK,GAAG,QAAQ,GAAG;AAAA,UACnB,IAAI,GAAG,QAAQ,EAAE;AAAA,UACjB,IAAI,GAAG,QAAQ,EAAE;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAAA,MAEA;AACE,cAAM,IAAI,UAAU,UAAU,sBAAsB,yBAAyB,cAAc;AAAA,IAC/F;AAAA,EACF;;;ACjRA,MAAM,6BAA6B;AAGnC,MAAM,mBAAmB,CACvB,KACA,UACG;AACH,UAAM,UAAU;AAAA,MACd,SAAS;AAAA,MACT,MAAM;AAAA,MACN,aAAa;AAAA,IACf;AACA,UAAM,OAAO,QAAQ,GAAG,KAAK;AAC7B,WAAO,GAAG,QAAQ;AAAA,EACpB;AASO,MAAM,wBAAwB,CACnC,UAOI,CAAC,MACF;AACH,UAAM,EAAE,kBAAkB,MAAM,aAAa,SAAS,MAAM,YAAY,IAAI;AAC5E,UAAM,cAAc,oBAAoB;AAGxC,UAAM,oBAAoB;AAAA,MACxB;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF;AAEA,UAAM,gBAAgB,kBACnB,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,EAC/B,IAAI,CAAC,EAAE,KAAK,MAAM,OAAO;AAAA,MACxB;AAAA,MACA;AAAA,IACF,EAAE;AAEJ,UAAM,sBAAsB,cAAc,SAAS;AAEnD,QAAI,cAAc,SAAS,GAAG;AAC5B,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV,wEAAwE,kBACrE,IAAI,CAAC,UAAU,MAAM,GAAG,EACxB,KAAK,IAAI;AAAA,MACd;AAAA,IACF;AAEA,QAAI,QAAQ,cAAc,SAAS,GAAG;AACpC,YAAM,YAAY,kBAAkB,IAAI,CAAC,EAAE,IAAI,MAAM,GAAG,EAAE,KAAK,IAAI;AACnE,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV,yFAAyF;AAAA,MAC3F;AAAA,IACF;AAEA,UAAM,+BAA+B,sBACjC;AAAA,MACE,cAAc,CAAC,EAAE;AAAA,MACjB,cAAc,CAAC,EAAE;AAAA,IACnB,IACA;AAGJ,UAAM,cAAc;AACpB,UAAM,YAAY,OAAO,KAAK,QAAQ,aAAa,EAAE,IAAI;AACzD,UAAM,wBAAwB,YAAY,QAAQ,aAAa,EAAE;AACjE,UAAM,mBAAmB,aAAa,QAAQ,aAAa,EAAE;AAC7D,UAAM,qBAAqB,mBAAmB,mBAAmB,gBAAgB,IAAI;AAGrF,UAAM,WAAW,sBAAsB,MAAM,cAAc,IAAI,KAAK;AACpE,UAAM,sBAAsB,kBAAkB,MAAM,cAAc,IAAI,KAAK;AAE3E,UAAM,MAAM,GAAG,WAAW,yBAAyB,YACjD,qBAAqB,gBAAgB,sBAAsB,uBAAuB;AAGpF,WAAO;AAAA,EACT;;;AC1FO,MAAM,2BAA2B,CAAC,KAAS,UAAc,gBAC9D,GAAG,KAAK,KAAK,IAAI,IAAI,QAAQ,EAAE,SAAS,IAAI,YAAY,SAAS,CAAC,CAAC;AAG9D,MAAM,yBAAyB,CAAC,aAAkD;AACvF,UAAM,eAAe,SAAS;AAAA,MAC5B,CAAC,YAAY,QAAQ,SAAS,YAAY;AAAA,IAC5C;AAEA,UAAM,UAAU,aAAa,OAAO,CAAC,MAAM,YAAY,KAAK,IAAI,QAAQ,OAAO,GAAG,GAAG,CAAC,CAAC;AAEvF,WAAO;AAAA,EACT;AAEO,WAAS,yBAAyB,UAAmB,kBAAoC;AAC9F,UAAM,OAAO,GAAG,iBAAiB,IAAI;AACrC,QAAI,iBAAiB,GAAG,CAAC;AACzB,QAAI,iBAAiB,eAAe,kBAAkB;AACpD,uBAAiB,GAAG,QAAQ,EAAE,IAAI,GAAG,iBAAiB,WAAW,CAAC;AAAA,IACpE;AACA,QAAI,iBAAiB,eAAe,kBAAkB;AACpD,uBAAiB,GAAG,QAAQ,EAAE,IAAI,GAAG,iBAAiB,UAAU,CAAC;AAAA,IACnE;AACA,WAAO,KAAK,IAAI,cAAc;AAAA,EAChC;AAEO,WAAS,gBACd,QACA,aACA,UACA;AACA,UAAM,eAA8B,CAAC;AACrC,UAAM,WAAW,OAAO,OAAO,CAAC,OAAO,UAAU;AAC/C,UAAI,eAAe,SAAS,MAAM,aAAa,MAAM,cAAc,MAAM;AACvE,eAAO,MAAM;AAAA,UACX,yBAAyB,aAAa,SAAS,gBAAgB,EAC5D,IAAI,yBAAyB,SAAS,MAAM,SAAS,EAAE,QAAQ,SAAS,YAAY,CAAC,EACrF,IAAI,GAAG,MAAM,gBAAgB,CAAC;AAAA,QACnC;AAAA,MACF;AACA,UAAI,kBAAkB,SAAS,CAAC,aAAa,SAAS,MAAM,YAAY,GAAG;AACzE,qBAAa,KAAK,MAAM,YAAY;AACpC,eAAO,MAAM,IAAI,SAAS,IAAI;AAAA,MAChC;AACA,aAAO;AAAA,IACT,GAAG,GAAG,CAAC;AAEP,WAAO;AAAA,EACT;AAUO,WAAS,UAAU,QAA0B;AAClD,UAAM,EAAE,UAAU,YAAY,QAAQ,aAAa,YAAY,IAAI;AAEnE,UAAM,YAAY,yBAAyB,aAAa,SAAS,gBAAgB;AACjF,UAAM,WAAW,GAAG,WAAW,EAAE,IAAI,UAAU;AAC/C,UAAM,YAAY,gBAAgB,QAAQ,aAAa,QAAQ;AAE/D,UAAM,SAAS,UAAU,IAAI,QAAQ,EAAE,IAAI,SAAS,EAAE,IAAI,WAAW,EAAE,OAAO;AAE9E,WAAO;AAAA,EACT;AAUO,WAAS,UAAU,QAA0B;AAClD,UAAM,EAAE,YAAY,iBAAiB,cAAc,QAAQ,WAAW,GAAG,CAAC,EAAE,IAAI;AAEhF,QAAI,6BAA6B,GAAG,CAAC;AAErC,QAAI,cAAc,GAAG,CAAC,KAAK,aAAa,IAAI,eAAe,GAAG;AAC5D,mCAA6B,GAAG,YAAY,EAAE,IAAI,eAAe,EAAE,IAAI,UAAU;AAAA,IACnF;AAEA,WAAO,2BAA2B,IAAI,MAAM,EAAE,IAAI,QAAQ;AAAA,EAC5D;AAEO,WAAS,gCAAgC;AAAA,IAC9C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAKG;AACD,UAAM,kBAAkB,yBAAyB,mBAAmB,SAAS,YAAY;AACzF,UAAM,eAAe,yBAAyB,eAAe,SAAS,SAAS;AAC/E,UAAM,UAAU,yBAAyB,aAAa,SAAS,IAAI;AAEnE,UAAM,sBAAsB,GAAG,IAAI,KAAK,KAAK,EAAE;AAC/C,UAAM,gBAAgB,yBAAyB,qBAAqB,SAAS,IAAI;AACjF,UAAM,cAAc,gBAAgB,IAAI,YAAY,EAAE,IAAI,OAAO,EAAE,IAAI,aAAa;AACpF,WAAO,YAAY,OAAO;AAAA,EAC5B;AAEO,WAAS,gCAAgC;AAAA,IAC9C;AAAA,IACA;AAAA,EACF,GAGG;AACD,WAAO,yBAAyB,aAAa,SAAS,IAAI;AAAA,EAC5D;;;AC1HA,WAASC,WAAU,QAAa;AAC9B,WAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,QAAQ;AACnC,cAAQ,OAAO,GAAG,GAAG,YAAY,MAAM;AAAA,QACrC,KAAK;AACH,iBAAO,GAAG,IAAI,QAAQ,OAAO,GAAG,CAAC;AACjC;AAAA,QACF,KAAK;AACH,iBAAO,GAAG,IAAIA,WAAU,OAAO,GAAG,CAAC;AACnC;AAAA,QACF,KAAK;AACH,iBAAO,GAAG,IAAI,OAAO,GAAG,EAAE,MAAM;AAChC;AAAA,QACF,KAAK;AACH,iBAAO,GAAG,IAAI,OAAO,GAAG,EAAE,OAAO;AACjC;AAAA,QACF,KAAK;AACH,iBAAO,GAAG,IAAIA,WAAU,OAAO,GAAG,CAAC;AACnC;AAAA,QACF;AACE;AAAA,MACJ;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAOO,WAAS,cAAc,MAAW;AAIvC,WAAOA,WAAU,cAAM,IAAI,CAAC;AAAA,EAC9B;;;AC5CO,WAAS,MAAM,MAAc;AAClC,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,iBAAW,MAAM;AACf,gBAAQ,IAAI;AAAA,MACd,GAAG,IAAI;AAAA,IACT,CAAC;AAAA,EACH;;;ACDO,MAAM,6BAAN,cAAyC,MAAM;AAAA,IACpD,OAAO;AAAA,IACP,UAAU;AAAA,EACZ;AAKO,MAAM,wBAAN,cAAoC,MAAM;AAAA,IAE/C,YAA4B,OAAe;AACzC,YAAM;AADoB;AAE1B,WAAK,UAAU,qBAAqB;AAAA,IACtC;AAAA,IAJA,OAAO;AAAA,EAKT;AAKO,MAAM,wBAAN,cAAoC,MAAM;AAAA,IAE/C,YAA4B,OAAwB;AAClD,YAAM;AADoB;AAE1B,WAAK,UAAU,kCAAkC;AAAA,IACnD;AAAA,IAJA,OAAO;AAAA,EAKT;;;ACzBO,MAAM,aAAa,CAAC,UAA8C;AACvE,UAAM,OAAO,SAAS,KAAK;AAE3B,WAAO;AAAA,MACL,MAAM,QAAQ,IAAI;AAAA,MAClB,YAAY,KAAK;AAAA,IACnB;AAAA,EACF;;;AC6EO,MAAe,yBAAf,MAA4E;AAAA;AAAA,IAIjF;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA,SAAoC,CAAC;AAAA;AAAA,IAErC,UAAsC,CAAC;AAAA;AAAA,IAEvC,YAAyC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAO1C,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAgC,CAAC,GAAG;AAClC,WAAK,WAAW,GAAG,QAAQ;AAC3B,WAAK,WAAW,YAAY;AAC5B,WAAK,eAAe,eAAe,GAAG,YAAY,IAAI;AACtD,WAAK,SAAS,SAAS,GAAG,MAAM,IAAI;AACpC,WAAK,SAAS,UAAU,CAAC;AACzB,WAAK,UAAU,WAAW,CAAC;AAC3B,WAAK,YAAY,aAAa,CAAC;AAAA,IACjC;AAAA,IAEA,OAAO,cAAc,KAA6B;AAChD,UAAI,cAAc;AAClB,YAAM,WAAqB,CAAC;AAE5B,UAAI,IAAI,UAAU;AAChB,uBAAe,WAAW;AAC1B,iBAAS,KAAK,EAAE,MAAM,IAAI,UAAU,MAAM,WAAW,SAAS,CAAC;AAAA,MACjE;AACA,UAAI,IAAI,cAAc;AACpB,uBAAe,WAAW;AAC1B,iBAAS,KAAK,EAAE,MAAM,IAAI,cAAc,MAAM,WAAW,aAAa,CAAC;AAAA,MACzE;AACA,UAAI,IAAI,WAAW,GAAG;AACpB,uBAAe,WAAW;AAC1B,iBAAS,KAAK,EAAE,MAAM,IAAI,UAAU,MAAM,WAAW,SAAS,CAAC;AAAA,MACjE;AACA,UAAI,IAAI,QAAQ;AACd,uBAAe,WAAW;AAC1B,iBAAS,KAAK,EAAE,MAAM,IAAI,QAAQ,MAAM,WAAW,OAAO,CAAC;AAAA,MAC7D;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQU,qBAAgD;AACxD,YAAM,SAAS,KAAK,QAAQ,IAAI,QAAQ,KAAK,CAAC;AAC9C,YAAM,UAAU,KAAK,SAAS,IAAI,SAAS,KAAK,CAAC;AACjD,YAAM,YAAY,KAAK,WAAW,IAAI,UAAU,KAAK,CAAC;AAEtD,YAAM,EAAE,aAAa,SAAS,IAAI,uBAAuB,cAAc,IAAI;AAE3E,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa,OAAO;AAAA,QACpB,cAAc,QAAQ;AAAA,QACtB,gBAAgB,UAAU;AAAA,MAC5B;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,qBAAiC;AAC/B,aAAO,IAAI,iBAAiB,EAAE,OAAO,KAAK,cAAc,CAAC;AAAA,IAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOU,UAAU,OAAwC;AAC1D,WAAK,OAAO,KAAK,KAAK;AACtB,aAAO,KAAK,OAAO,SAAS;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOU,WAAWC,SAA0C;AAC7D,WAAK,QAAQ,KAAKA,OAAM;AACxB,aAAO,KAAK,QAAQ,SAAS;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,WAAW,WAAsB;AAC/B,WAAK,UAAU,KAAK,SAAS;AAC7B,aAAO,KAAK,UAAU,SAAS;AAAA,IACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASU,kBAA0B;AAElC,WAAK,WAAW,OAAO,CAAC,aAAa,WAAW,CAAC,CAAC;AAClD,aAAO,KAAK,UAAU,SAAS;AAAA,IACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,qBAAqB,SAAmC,WAAsB;AAC5E,YAAM,eAAe,QAAQ,oBAAoB,OAAO;AACxD,YAAM,eAAe,KAAK,gCAAgC,YAAY;AACtE,UAAI,OAAO,iBAAiB,UAAU;AACpC,aAAK,cAAc,cAAc,SAAS;AAAA,MAC5C;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,cAAc,OAAe,SAAoC;AAC/D,UAAI,CAAC,KAAK,UAAU,KAAK,GAAG;AAC1B,cAAM,IAAI,sBAAsB,KAAK;AAAA,MACvC;AACA,WAAK,UAAU,KAAK,IAAI;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,oBAAoB,SAA8B;AACtD,YAAM,WAAW,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAC5D,YAAM,QAAQ;AAAA,QACZ,SAAS,IAAI,OAAO,QAAQ;AAC1B,eAAK,WAAW,MAAM,IAAI,gBAAwC,IAAI,CAAC;AAAA,QACzE,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gBAA+C;AAC7C,aAAO,KAAK,OAAO;AAAA,QACjB,CAAC,UAAgD,MAAM,SAAS,UAAU;AAAA,MAC5E;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,iBAAiD;AAC/C,aAAO,KAAK,QAAQ;AAAA,QAClB,CAACA,YAAmDA,QAAO,SAAS,WAAW;AAAA,MACjF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,mBAAqD;AACnD,aAAO,KAAK,QAAQ;AAAA,QAClB,CAACA,YAAqDA,QAAO,SAAS,WAAW;AAAA,MACnF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gCAAgC,OAAwC;AACtE,YAAM,eAAe,WAAW,KAAK;AAErC,YAAM,QAAQ,KAAK,OAAO,KAAK,CAAC,UAAU;AACxC,gBAAQ,MAAM,MAAM;AAAA,UAClB,KAAK,UAAU;AACb,mBAAO,QAAsC,MAAO,KAAK,MAAM,aAAa,OAAO;AAAA,UACrF,KAAK,UAAU;AACb,mBACE,QAAyC,MAAO,SAAS,MAAM,aAAa,OAAO;AAAA,UAEvF;AACE,mBAAO;AAAA,QACX;AAAA,MACF,CAAC;AAED,aAAqC,OAAQ;AAAA,IAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,aAAa,MAAY,WAAqC;AAC5D,YAAM,EAAE,SAAS,OAAO,OAAO,IAAI;AAEnC,UAAI;AAEJ,UAAI,WAAW;AACb,uBAAe;AAAA,MACjB,OAAO;AACL,uBAAe,KAAK,gCAAgC,KAAK;AAGzD,YAAI,OAAO,iBAAiB,UAAU;AACpC,yBAAe,KAAK,gBAAgB;AAAA,QACtC;AAAA,MACF;AAEA,YAAM,QAAqC;AAAA,QACzC,GAAG;AAAA,QACH,MAAM,UAAU;AAAA,QAChB,OAAO,MAAM,OAAO;AAAA,QACpB;AAAA,QACA;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QACA,WAAW,WAAW;AAAA,QACtB,eAAe,WAAW;AAAA,MAC5B;AAGA,WAAK,UAAU,KAAK;AAGpB,WAAK,gBAAgB,OAAO,OAAO;AAAA,IACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,gBAAgB,SAAsB,WAAqC;AACzE,YAAM,EAAE,WAAW,QAAQ,OAAO,IAAI;AAEtC,YAAM,UAAU;AAEhB,UAAI;AAEJ,UAAI,WAAW;AACb,uBAAe;AAAA,MACjB,OAAO;AACL,uBAAe,KAAK,gCAAgC,SAAS;AAG7D,YAAI,OAAO,iBAAiB,UAAU;AACpC,yBAAe,KAAK,gBAAgB;AAAA,QACtC;AAAA,MACF;AAEA,YAAM,QAAwC;AAAA,QAC5C,GAAG;AAAA,QACH,MAAM,UAAU;AAAA,QAChB,QAAQ,OAAO,OAAO;AAAA,QACtB,WAAW,UAAU,OAAO;AAAA,QAC5B;AAAA,QACA;AAAA,QACA,WAAW,WAAW;AAAA,QACtB,eAAe,WAAW;AAAA,MAC5B;AAGA,WAAK,UAAU,KAAK;AAGpB,WAAK,gBAAgB,WAAW,OAAO;AAAA,IACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,YAAY,UAAoB;AAC9B,UAAI,OAAO,QAAQ,GAAG;AACpB,aAAK,aAAa,QAAQ;AAAA,MAC5B,OAAO;AACL,aAAK,gBAAgB,QAAQ;AAAA,MAC/B;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,aAAa,WAAoC;AAC/C,gBAAU,QAAQ,CAAC,aAAa,KAAK,YAAY,QAAQ,CAAC;AAE1D,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,qBAAqB,UAAoB,WAAoC;AAC3E,UAAI,OAAO,QAAQ,GAAG;AACpB,aAAK,aAAa,UAAU,SAAS;AAAA,MACvC,OAAO;AACL,aAAK,gBAAgB,UAAU,SAAS;AAAA,MAC1C;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,sBAAsB,WAAuB,WAAoC;AAC/E,gBAAU,QAAQ,CAAC,aAAa,KAAK,qBAAqB,UAAU,SAAS,CAAC;AAE9E,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,cAAc,IAAiB,QAAsB,UAAqB,aAAa;AACrF,WAAK,WAAW;AAAA,QACd,MAAM,WAAW;AAAA,QACjB,IAAI,WAAW,EAAE,EAAE,OAAO;AAAA,QAC1B;AAAA,QACA;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,eAAe,IAAiB,YAAgC;AAC9D,iBAAW,IAAI,cAAc,EAAE,QAAQ,CAAC,aAAa;AACnD,aAAK,WAAW;AAAA,UACd,MAAM,WAAW;AAAA,UACjB,IAAI,WAAW,EAAE,EAAE,OAAO;AAAA,UAC1B,QAAQ,SAAS;AAAA,UACjB,SAAS,SAAS;AAAA,QACpB,CAAC;AAAA,MACH,CAAC;AAED,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,gBAAgB,IAAiB,UAAqB,aAAa;AAEjE,YAAM,eAAe,KAAK,iBAAiB,EAAE;AAAA,QAC3C,CAACA,YAAW,QAAQA,QAAO,OAAO,MAAM;AAAA,MAC1C;AAGA,UAAI,CAAC,cAAc;AACjB,aAAK,WAAW;AAAA,UACd,MAAM,WAAW;AAAA,UACjB,IAAI,WAAW,EAAE,EAAE,OAAO;AAAA,UAC1B;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW;AACT,aAAO,KAAK,mBAAmB,EAAE;AAAA,IACnC;AAAA;AAAA;AAAA;AAAA,IAKA,YAAY,WAA4B;AACtC,YAAM,IAAI,MAAM,iBAAiB;AAAA,IACnC;AAAA;AAAA;AAAA;AAAA,IAKA,gBAAgB,WAA0B;AACxC,YAAM,EAAE,UAAU,oBAAoB,IAAI;AAC1C,YAAM,EAAE,WAAW,IAAI;AACvB,aAAO,UAAU;AAAA,QACf;AAAA,QACA;AAAA,QACA,QAAQ,KAAK;AAAA,QACb,aAAa,KAAK,SAAS;AAAA,QAC3B,aAAa,KAAK,YAAY,QAAQ;AAAA,MACxC,CAAC;AAAA,IACH;AAAA,IAEA,gBAAgB,WAAsB,QAAgB;AACpD,YAAM,EAAE,oBAAoB,IAAI;AAChC,YAAM,EAAE,WAAW,IAAI;AAEvB,YAAM,kBAAkB,KAAK,cAAc,EAAE,UAAU;AAAA,QACrD,CAAC,KAAK,QAAQ,MAAM,IAAI;AAAA,QACxB;AAAA,MACF;AACA,aAAO,UAAU;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAc,KAAK;AAAA,MACrB,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,kBAAkB,YAA4B,gBAAkC;AAC9E,UAAI,YAAY;AAChB,YAAM,aAAa,MAAc;AAC/B,cAAM,gBAAgB,OAAO,WAAW;AACxC,cAAM,KAAK,YAAY,MAAM,GAAG,CAAC,cAAc,MAAM,EAAE,OAAO,aAAa;AAC3E,eAAO;AAAA,MACT;AAEA,YAAM,iBAAiB,CAAC,YACtB,KAAK,OAAO,KAAK,CAAC,UAAU;AAC1B,YAAI,aAAa,OAAO;AACtB,iBAAO,MAAM,YAAY;AAAA,QAC3B;AACA,eAAO;AAAA,MACT,CAAC;AAEH,YAAM,mBAAmB,CAAC,SAAiB,aAAiB;AAC1D,cAAM,aAAa,eAAe,OAAO;AAEzC,YAAI,cAAc,aAAa,YAAY;AACzC,qBAAW,KAAK,WAAW;AAC3B,qBAAW,SAAS;AAAA,QACtB,OAAO;AACL,eAAK,aAAa;AAAA,YAChB;AAAA,cACE,IAAI,WAAW;AAAA,cACf,QAAQ;AAAA,cACR;AAAA,cACA,OAAO,kBAAkB,QAAQ,WAAW;AAAA,cAC5C,UAAU;AAAA,cACV,cAAc,GAAG,CAAC;AAAA,cAClB,cAAc,GAAG,CAAC;AAAA,YACpB;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAEA,uBAAiB,aAAa,GAAG,IAAe,CAAC;AACjD,iBAAW,QAAQ,CAAC,MAAM,iBAAiB,EAAE,SAAS,EAAE,MAAM,CAAC;AAAA,IACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,2BAA2C;AACzC,YAAM,kBAAkB,KAAK,eAAe,EAAE,IAAI,CAAC,EAAE,QAAQ,QAAQ,OAAO;AAAA,QAC1E,QAAQ,GAAG,MAAM;AAAA,QACjB,SAAS,QAAQ,SAAS;AAAA,MAC5B,EAAE;AAEF,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiBA,SAAS;AACP,aAAO,cAAc,IAAI;AAAA,IAC3B;AAAA,IAEA,sBAAsB,QAAmC;AACvD,WAAK,OAAO,QAAQ,CAAC,MAAM;AACzB,YAAI;AACJ,gBAAQ,EAAE,MAAM;AAAA,UACd,KAAK,UAAU;AACb,iCAAqB,OAAO,KAAK,CAAC,MAAM,EAAE,SAAS,UAAU,QAAQ,EAAE,UAAU,EAAE,KAAK;AACxF;AAAA,UACF,KAAK,UAAU;AACb,iCAAqB,OAAO;AAAA,cAC1B,CAAC,MAAM,EAAE,SAAS,UAAU,WAAW,EAAE,WAAW,EAAE;AAAA,YACxD;AACA;AAAA,UACF;AACE;AAAA,QACJ;AACA,YACE,sBACA,sBAAsB,sBACtB,GAAG,mBAAmB,gBAAgB,EAAE,GAAG,CAAC,GAC5C;AAEA,YAAE,YAAY,mBAAmB;AAEjC,YAAE,gBAAgB,mBAAmB;AAErC,YAAE,mBAAmB,mBAAmB;AAAA,QAC1C;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;;;AChrBO,WAAS,gBAAgB,oBAAwC,SAAiB;AACvF,UAAM,cAAc,mBAAmB,cAAc;AAErD,QAAI,YAAY,SAAS,gBAAgB,QAAQ;AAC/C,kBAAY,eAAe;AAAA,IAC7B;AAGA,gBAAY,SAAS,YAAY,OAAO,IAAI,CAAC,UAAU;AACrD,YAAM,aAAa,cAAM,KAAK;AAE9B,cAAQ,WAAW,MAAM;AAAA,QAEvB,KAAK,UAAU,MAAM;AACnB,qBAAW,YAAY;AAAA,YACrB,aAAa;AAAA,YACb,SAAS;AAAA,UACX;AACA,qBAAW,mBAAmB,GAAG,CAAC;AAClC,iBAAO;AAAA,QACT;AAAA,QAEA,KAAK,UAAU,SAAS;AACtB,qBAAW,mBAAmB,GAAG,CAAC;AAClC,iBAAO;AAAA,QACT;AAAA,QAEA,KAAK,UAAU,UAAU;AACvB,qBAAW,YAAY;AAAA,YACrB,aAAa;AAAA,YACb,SAAS;AAAA,UACX;AACA,qBAAW,OAAO;AAClB,qBAAW,cAAc;AACzB,qBAAW,cAAc;AACzB,qBAAW,YAAY;AACvB,iBAAO;AAAA,QACT;AAAA,QACA;AACE,iBAAO;AAAA,MACX;AAAA,IACF,CAAC;AAED,gBAAY,UAAU,YAAY,QAAQ,IAAI,CAACC,YAAW;AACxD,YAAM,cAAc,cAAMA,OAAM;AAEhC,cAAQ,YAAY,MAAM;AAAA,QAExB,KAAK,WAAW,UAAU;AACxB,sBAAY,cAAc;AAC1B,sBAAY,YAAY;AACxB,iBAAO;AAAA,QACT;AAAA,QAEA,KAAK,WAAW,QAAQ;AACtB,sBAAY,SAAS,GAAG,CAAC;AACzB,iBAAO;AAAA,QACT;AAAA,QAEA,KAAK,WAAW,UAAU;AACxB,sBAAY,KAAK;AACjB,sBAAY,SAAS,GAAG,CAAC;AACzB,sBAAY,UAAU;AACtB,iBAAO;AAAA,QACT;AAAA,QACA;AACE,iBAAO;AAAA,MACX;AAAA,IACF,CAAC;AACD,gBAAY,iBAAiB;AAC7B,gBAAY,YAAY,CAAC;AAEzB,UAAM,eAAe,gBAAgB,OAAO;AAC5C,UAAM,mBAAmB,OAAO,CAAC,cAAc,IAAI,iBAAiB,EAAE,OAAO,WAAW,CAAC,CAAC;AAC1F,WAAOC,QAAO,gBAAgB;AAAA,EAChC;;;AC5EA,MAAM,kBAAkB,CAAC,UAAiC;AACxD,UAAM,IAAI,IAAI,WAAW,EAAE;AAC3B,MAAE,IAAI,SAAS,KAAK,CAAC;AACrB,WAAO;AAAA,EACT;AAEO,MAAM,iBAAiB,CAAC,gBAA4D;AACzF,QAAI;AACJ,QAAI;AAEJ,QAAI,MAAM,QAAQ,WAAW,GAAG;AAC9B,YAAM,YAAY,CAAC;AACnB,cAAQ,YAAY,CAAC;AAAA,IACvB,OAAO;AACL,YAAM,YAAY;AAClB,cAAQ,YAAY;AAAA,IACtB;AAEA,WAAO;AAAA,MACL,KAAK,QAAQ,GAAG;AAAA,MAChB,OAAO,QAAQ,gBAAgB,KAAK,CAAC;AAAA,IACvC;AAAA,EACF;;;ACJO,MAAM,2BAAN,cAAuC,uBAAuB;AAAA,IACnE,OAAO,KAAK,KAAmC;AAC7C,UAAI,eAAe,MAAM;AACvB,eAAO;AAAA,MACT;AACA,aAAO,IAAI,KAAK,GAAG;AAAA,IACrB;AAAA;AAAA,IAGA,OAAO,gBAAgB;AAAA;AAAA,IAEvB;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACL,IAAkC,CAAC,GAAG;AACpC,YAAM,IAAI;AACV,WAAK,uBAAuB,wBAAwB;AACpD,WAAK,OAAO,QAAQ,QAAQ,WAAW;AACvC,WAAK,eAAe,CAAC,GAAI,gBAAgB,CAAC,CAAE;AAAA,IAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gBAAmC;AACjC,YAAM,kBAAkB,KAAK,mBAAmB;AAChD,YAAM,uBAAuB,KAAK;AAClC,YAAM,eAAe,KAAK,cAAc,IAAI,cAAc,KAAK,CAAC;AAChE,aAAO;AAAA,QACL,MAAM,gBAAgB;AAAA,QACtB,GAAG;AAAA,QACH,gBAAgB,gBAAgB,UAAU,oBAAoB,EAAE,aAAa;AAAA,QAC7E;AAAA,QACA,mBAAmB,aAAa;AAAA,QAChC,MAAM,KAAK,OAAO,QAAQ,KAAK,IAAI,IAAI;AAAA,QACvC;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,4BAAuE;AACrE,aAAO,KAAK,QAAQ;AAAA,QAClB,CAACC,YACCA,QAAO,SAAS,WAAW;AAAA,MAC/B;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,iBAAiB,SAAyB;AACxC,aAAO,gBAAgB,MAAM,OAAO;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,yBAEE,YAEA,WACA;AACA,WAAK,WAAW;AAAA,QACd,MAAM,WAAW;AAAA,QACjB;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA,IAEA,YAAY,UAA2B;AACrC,aAAO,gCAAgC;AAAA,QACrC,mBAAmB,GAAG,SAAS,KAAK,UAAU,KAAK,oBAAoB,KAAK,IAAI,EAAE,MAAM;AAAA,QACxF;AAAA,QACA,eAAe,KAAK,aAAa;AAAA,QACjC,aAAa,KAAK,SAAS;AAAA,MAC7B,CAAC;AAAA,IACH;AAAA,EACF;;;AClIO,MAAM,mBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAM3D,OAAO,SAAS,YAAY;AAAA,IAC5B,kBAAkB,MAAM,IAAI,WAAW,CAAC;AAAA,EAC1C;AAGO,MAAM,iBAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWzD,OAAO,SAAS,oCAAoC;AAAA,IACpD,kBAAkB,MAAM,IAAI,WAAW,CAAC;AAAA,EAC1C;;;ACUO,MAAM,2BAAN,cAAuC,uBAAuB;AAAA,IACnE,OAAO,KAAK,KAAmC;AAC7C,UAAI,eAAe,MAAM;AACvB,eAAO;AAAA,MACT;AACA,aAAO,IAAI,KAAK,GAAG;AAAA,IACrB;AAAA;AAAA,IAGA,OAAO,gBAAgB;AAAA;AAAA,IAEvB;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,YAAY,EAAE,QAAQ,YAAY,UAAU,GAAG,KAAK,IAAkC,CAAC,GAAG;AACxF,YAAM,IAAI;AACV,WAAK,WAAW,GAAG,QAAQ;AAC3B,WAAK,SAAS,SAAS,UAAU,iBAAiB,KAAK;AACvD,WAAK,aAAa,SAAS,cAAc,iBAAiB,iBAAiB,CAAC;AAC5E,WAAK,OAAO,KAAK;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gBAAmC;AACjC,YAAM,SAAS,SAAS,KAAK,UAAU,IAAI;AAC3C,YAAM,aAAa,SAAS,KAAK,cAAc,IAAI;AACnD,aAAO;AAAA,QACL,MAAM,gBAAgB;AAAA,QACtB,gBAAgB,KAAK;AAAA,QACrB,GAAG,MAAM,mBAAmB;AAAA,QAC5B,cAAc,OAAO;AAAA,QACrB,kBAAkB,WAAW;AAAA,QAC7B,cAAc;AAAA,QACd,QAAQ,QAAQ,MAAM;AAAA,QACtB,YAAY,QAAQ,UAAU;AAAA,MAChC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,oBAAuD;AACrD,aAAO,KAAK,OAAO;AAAA,QACjB,CAAC,UAAoD,MAAM,SAAS,UAAU;AAAA,MAChF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,qBAAyD;AACvD,aAAO,KAAK,QAAQ;AAAA,QAClB,CAACC,YAAuDA,QAAO,SAAS,WAAW;AAAA,MACrF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,qBAAyD;AACvD,aAAO,KAAK,QAAQ;AAAA,QAClB,CAACA,YAAuDA,QAAO,SAAS,WAAW;AAAA,MACrF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,UAAa,QAAkC,MAAS;AACtD,WAAK,aAAa,OAAO,iBAAiB,IAAI;AAC9C,WAAK,SAAS,OAAO;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,mBAAmB,oBAA4B,GAAG;AAChD,UAAI,gBAAgB;AAEpB,aAAO,eAAe;AACpB,aAAK,WAAW;AAAA,UACd,MAAM,WAAW;AAAA,QACnB,CAAC;AACD,yBAAiB;AAAA,MACnB;AAEA,aAAO,KAAK,QAAQ,SAAS;AAAA,IAC/B;AAAA,IAEA,gBAAgB,WAAsB,QAAgB;AACpD,YAAM,EAAE,oBAAoB,IAAI;AAChC,YAAM,EAAE,WAAW,IAAI;AAEvB,YAAM,kBAAkB,KAAK,cAAc,EAAE,UAAU;AAAA,QACrD,CAAC,KAAK,QAAQ,MAAM,IAAI;AAAA,QACxB;AAAA,MACF;AAEA,aAAO,UAAU;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAc,KAAK;AAAA,QACnB,UAAU,KAAK;AAAA,MACjB,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,0BAA0B,UAAoD;AAC5E,YAAM,kBAAkB,WAAW,QAAQ;AAG3C,UAAI,KAAK,kBAAkB,EAAE,KAAK,CAAC,MAAM,EAAE,eAAe,gBAAgB,OAAO,CAAC,GAAG;AACnF,eAAO;AAAA,MACT;AAEA,YAAM,aAAa,MAAM,UAAU;AAAA,QACjC,MAAM,UAAU;AAAA,QAChB,YAAY,gBAAgB,OAAO;AAAA,QACnC,WAAW;AAAA,MACb,CAAC;AAED,WAAK,WAAW;AAAA,QACd,MAAM,WAAW;AAAA,QACjB;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,iBAAiB,SAAyB;AACxC,aAAO,gBAAgB,MAAM,OAAO;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,QAAQ,KAAc,MAA8C;AAClE,YAAM,eAAe,IAAI,UAAU,GAAG;AACtC,WAAK,aAAa,aAAa,UAAU,KAAK,gBAAgB,IAAI;AAClE,aAAO;AAAA,IACT;AAAA,IAEA,YAAY,UAA2B;AACrC,aAAO,gCAAgC;AAAA,QACrC;AAAA,QACA,aAAa,KAAK,SAAS;AAAA,MAC7B,CAAC;AAAA,IACH;AAAA,EACF;;;AC/NO,MAAM,wBAAwB,CAAC,QAAoD;AACxF,QAAI,eAAe,4BAA4B,eAAe,0BAA0B;AACtF,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,MAAAC,MAAK,IAAI;AAEjB,YAAQ,IAAI,MAAM;AAAA,MAChB,KAAK,gBAAgB,QAAQ;AAC3B,eAAO,yBAAyB,KAAK,GAAG;AAAA,MAC1C;AAAA,MACA,KAAK,gBAAgB,QAAQ;AAC3B,eAAO,yBAAyB,KAAK,GAAG;AAAA,MAC1C;AAAA,MACA,SAAS;AACP,cAAM,IAAI,UAAU,UAAU,0BAA0B,6BAA6BA,QAAO;AAAA,MAC9F;AAAA,IACF;AAAA,EACF;;;ACEO,MAAM,0BAA0B,CAAC,WAA0C;AAChF,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA,qBAAqB,EAAE,UAAU,UAAU;AAAA,IAC7C,IAAI;AAEJ,UAAM,aAAa,GAAG,UAAU,UAAU;AAC1C,UAAM,iBAAiB,GAAG,UAAU,cAAc;AAElD,UAAM,mBAAmB,SAAS,UAAU;AAE5C,UAAM,CAAC,WAAW,IAAI,IAAI,iBAAiB,EAAE,OAAO,kBAAkB,CAAC;AAEvE,QAAI,YAAY,SAAS,gBAAgB,MAAM;AAC7C,aAAO;AAAA,QACL,KAAK,GAAG,CAAC;AAAA,QACT,QAAQ,GAAG,CAAC;AAAA,QACZ,QAAQ,GAAG,CAAC;AAAA,QACZ,gBAAgB,GAAG,CAAC;AAAA,MACtB;AAAA,IACF;AAEA,UAAM,EAAE,MAAAC,OAAM,WAAW,QAAQ,SAAS,IAAI;AAI9C,QAAI,cAAc,GAAG,CAAC;AACtB,QAAI,WAAW,GAAG,CAAC;AAEnB,QAAIA,UAAS,gBAAgB,QAAQ;AACnC,YAAM,EAAE,sBAAsB,aAAa,IAAI;AAE/C,YAAM,oBAAoB,GAAG,SAAS,UAAU,oBAAoB,EAAE,IAAI,EAAE,MAAM;AAElF,oBAAc,gCAAgC;AAAA,QAC5C;AAAA,QACA;AAAA,QACA,eAAe,aAAa,UAAU;AAAA,QACtC,aAAa,iBAAiB;AAAA,MAChC,CAAC;AAAA,IACH,OAAO;AACL,YAAM,EAAE,eAAe,IAAI;AAE3B,UAAI,gBAAgB;AAClB,mBAAW;AAAA,MACb;AAEA,oBAAc,gCAAgC;AAAA,QAC5C;AAAA,QACA,aAAa,iBAAiB;AAAA,MAChC,CAAC;AAAA,IACH;AAEA,UAAM,SAAS,UAAU;AAAA,MACvB;AAAA,MACA,YAAY,GAAG,UAAU;AAAA,MACzB;AAAA,MACA;AAAA,MACA,aAAa,iBAAiB;AAAA,IAChC,CAAC;AAED,UAAM,WAAW,GAAG,SAAS,KAAK,CAAC,WAAW,OAAO,SAAS,WAAW,QAAQ,GAAG,IAAI;AACxF,UAAM,eAAe,SAAS,KAAK,CAAC,WAAW,OAAO,SAAS,WAAW,YAAY,GAAG;AAIzF,UAAM,kBAAkB,UAAU,OAAO,CAAC,KAAK,QAAQ,MAAM,IAAI,YAAY,CAAC;AAE9E,UAAM,SAAS,UAAU;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,UAAM,iBAAiB,yBAAyB,SAAS,UAAU,cAAc;AACjF,UAAM,SAAS,yBAAyB,QAAQ,UAAU,cAAc;AACxE,UAAM,SAAS,yBAAyB,QAAQ,UAAU,cAAc;AACxE,UAAM,MAAM,OAAO,IAAI,cAAc;AAErC,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;;;ACxGO,MAAM,kBAAkB,CAAC,EAAE,KAAK,SAAS,YAAY,UAAU,MAA4B;AAChG,UAAM,eAAe,IAAI,UAAU,GAAG;AACtC,UAAM,uBAAuB,QAAQ,OAAO,MAAM,CAAC;AACnD,UAAM,mBAAmB,aAAa,YAAY,oBAAoB;AACtE,UAAM,SAAS,iBAAiB,OAAO;AAEvC,QAAI;AAGJ,QAAI,iBAAiB,oBAAoB;AACvC,UAAI,YAAY;AAEd,cAAM,aAAa,GAAG,QAAQ,MAAM,EACjC,IAAI,oBAAoB,EAAE,WAAW,UAAU,SAAS,EAAE,CAAC,CAAC,EAC5D,SAAS;AAGZ,sBAAc,KAAK,WAAW,MAAM,CAAC,EAAE,MAAM,aAAa,CAAC;AAAA,MAC7D;AAAA,IACF,OAAO;AAEL,oBAAc,QAAQ,OAAO,MAAM;AAAA,IACrC;AAEA,QAAI;AACJ,QAAI,aAAa;AAEf,YAAM,OAAO,iBAAiB,gBAAgB,WAAW;AACzD,UAAI,MAAM;AAER,4BAAoB,OAAO,OAAO,CAAC,MAAM,OAAO,UAAU;AACxD,gBAAM,QAAQ,KAAK,KAAK;AACxB,gBAAM,OAAO,MAAM;AAEnB,cAAI,MAAM;AACR,mBAAO;AAAA,cACL,GAAG;AAAA;AAAA,cAEH,CAAC,IAAI,GAAG,KAAK,MAAM,KAAK,UAAU,KAAK,CAAC;AAAA,YAC1C;AAAA,UACF;AAEA,iBAAO;AAAA,QACT,GAAG,CAAC,CAAC;AAAA,MACP;AAAA,IACF;AAEA,UAAM,OAAO;AAAA,MACX,mBAAmB,iBAAiB;AAAA,MACpC,cAAc,iBAAiB;AAAA,MAC/B;AAAA,MACA,GAAI,QAAQ,QAAQ,OAAO,IAAI,CAAC,IAAI,EAAE,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,QAAQ;AAAA,IACzF;AAEA,WAAO;AAAA,EACT;;;AC9DO,WAAS,iBAA4B,QAAiB,OAAyB;AACpF,WAAO,OAAO,OAAO,CAAC,MAAM,MAAM,SAAS,EAAE,IAAI,CAAC;AAAA,EACpD;AAGO,WAAS,gBAA2B,QAAiBC,OAAiB;AAC3E,WAAO,OAAO,OAAO,CAAC,MAAM,EAAE,SAASA,KAAI;AAAA,EAC7C;AAGO,WAAS,cAAc,QAAiB;AAC7C,WAAO,gBAA2B,QAAQ,UAAU,IAAI;AAAA,EAC1D;AAGO,WAAS,iBAAiB,QAAiB;AAChD,WAAO,gBAA8B,QAAQ,UAAU,OAAO;AAAA,EAChE;AAGO,WAAS,wBAAwB,QAAiB;AACvD,WAAO,iBAA2C,QAAQ,CAAC,UAAU,MAAM,UAAU,OAAO,CAAC;AAAA,EAC/F;AAGO,WAAS,kBAAkB,QAAiB;AACjD,WAAO,gBAA+B,QAAQ,UAAU,QAAQ;AAAA,EAClE;AAGO,WAAS,oBAAoB,QAAiB,SAAiB;AACpE,UAAM,aAAa,cAAc,MAAM;AACvC,UAAM,gBAAgB,iBAAiB,MAAM;AAC7C,UAAM,YAAY,WAAW,KAAK,CAAC,MAAM,EAAE,YAAY,OAAO;AAE9D,UAAM,eAAe,cAAc;AAAA,MACjC,CAAC,MAAM,YAAY;AAAA,IACrB;AAEA,WAAO,aAAa;AAAA,EACtB;AAGO,WAAS,0BACd,QACA,YAC2B;AAC3B,QAAI,cAAc,MAAM;AACtB,aAAO;AAAA,IACT;AAEA,UAAM,gBAAgB,SAAS,UAAU;AAEzC,QAAI,CAAC,eAAe;AAClB,aAAO;AAAA,IACT;AACA,QAAI,cAAc,SAAS,UAAU,UAAU;AAC7C,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGO,WAAS,uBAAuB,OAAc;AACnD,QAAI,MAAM,SAAS,UAAU,MAAM;AACjC,aAAO,MAAM,MAAM,SAAS;AAAA,IAC9B;AAEA,QAAI,MAAM,SAAS,UAAU,SAAS;AACpC,aAAO,MAAM,UAAU,SAAS;AAAA,IAClC;AAEA,WAAO;AAAA,EACT;;;ACvEO,WAAS,iBAA6B,SAAmBC,OAAkB;AAChF,WAAO,QAAQ,OAAO,CAAC,MAAM,EAAE,SAASA,KAAI;AAAA,EAC9C;AAGO,WAAS,0BAA0B,SAAmB;AAC3D,WAAO,iBAAwC,SAAS,WAAW,eAAe;AAAA,EACpF;AAGO,WAAS,eAAe,SAAmB;AAChD,WAAO,iBAA6B,SAAS,WAAW,IAAI;AAAA,EAC9D;AAGO,WAAS,iBAAiB,SAAmB;AAClD,WAAO,iBAA+B,SAAS,WAAW,MAAM;AAAA,EAClE;AAGO,WAAS,mBAAmB,SAAmB;AACpD,WAAO,iBAAiC,SAAS,WAAW,QAAQ;AAAA,EACtE;AAGO,WAAS,mBAAmB,SAAmB;AACpD,WAAO,iBAAiC,SAAS,WAAW,QAAQ;AAAA,EACtE;;;ACVO,MAAK,sBAAL,kBAAKC,yBAAL;AACL,IAAAA,qBAAA,YAAS;AACT,IAAAA,qBAAA,UAAO;AACP,IAAAA,qBAAA,YAAS;AAHC,WAAAA;AAAA,KAAA;AASL,MAAK,oBAAL,kBAAKC,uBAAL;AACL,IAAAA,mBAAA,eAAY;AACZ,IAAAA,mBAAA,aAAU;AACV,IAAAA,mBAAA,iBAAc;AACd,IAAAA,mBAAA,aAAU;AAJA,WAAAA;AAAA,KAAA;AAmBL,MAAK,gBAAL,kBAAKC,mBAAL;AACL,IAAAA,eAAA,sBAAmB;AACnB,IAAAA,eAAA,qBAAkB;AAClB,IAAAA,eAAA,cAAW;AACX,IAAAA,eAAA,kBAAe;AACf,IAAAA,eAAA,aAAU;AACV,IAAAA,eAAA,UAAO;AACP,IAAAA,eAAA,mBAAgB;AAChB,IAAAA,eAAA,YAAS;AACT,IAAAA,eAAA,UAAO;AACP,IAAAA,eAAA,sBAAmB;AAVT,WAAAA;AAAA,KAAA;AAmCL,MAAK,cAAL,kBAAKC,iBAAL;AACL,IAAAA,0BAAA;AACA,IAAAA,0BAAA;AAFU,WAAAA;AAAA,KAAA;AAQL,MAAK,YAAL,kBAAKC,eAAL;AACL,IAAAA,WAAA,cAAW;AACX,IAAAA,WAAA,UAAO;AAFG,WAAAA;AAAA,KAAA;;;AC1DL,WAAS,kBACd,UACAC,OACA;AACA,YAAQ,YAAY,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,SAASA,KAAI;AAAA,EACvD;AAGO,WAAS,uBAAuB,iBAAuD;AAC5F,YAAQ,iBAAiB;AAAA,MACvB,KAAK,gBAAgB;AACnB;AAAA,MACF,KAAK,gBAAgB;AACnB;AAAA,MACF,KAAK,gBAAgB;AACnB;AAAA,MACF;AACE,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,6BAA6B;AAAA,QAC/B;AAAA,IACJ;AAAA,EACF;AAGO,WAAS,OAAO,iBAAkCA,OAA2B;AAClF,UAAM,SAAS,uBAAuB,eAAe;AAErD,WAAO,WAAWA;AAAA,EACpB;AAGO,WAAS,WAAW,iBAAkC;AAC3D,WAAO,OAAO,kCAAyC;AAAA,EACzD;AAGO,WAAS,aAAa,iBAAkC;AAC7D,WAAO,OAAO,sCAA2C;AAAA,EAC3D;AAGO,WAAS,aAAa,iBAAkC;AAC7D,WAAO,OAAO,sCAA2C;AAAA,EAC3D;AAGO,WAAS,eAAe,GAAkB;AAC/C,WAAO,CAAC,MAAqB,EAAE,YAAY,EAAE;AAAA,EAC/C;AAGO,WAAS,gBAAgB,UAAsC;AACpE,WAAO,kBAAgD,UAAU,YAAY,IAAI;AAAA,EACnF;AAGO,WAAS,sBAAsB,UAAsC;AAC1E,WAAO,kBAAsD,UAAU,YAAY,UAAU;AAAA,EAC/F;AAGA,MAAM,cAAc,CAAC,KAAgB,QAAmB;AACtD,UAAM,UAAU,IAAI,cAAc,CAAC;AACnC,UAAM,UAAU,IAAI,cAAc,CAAC;AAGnC,UAAM,iBAAiB,QAAQ;AAAA,MAC7B,CAAC,WAAW,CAAC,QAAQ,KAAK,CAAC,WAAW,OAAO,YAAY,OAAO,OAAO;AAAA,IACzE;AAGA,UAAM,eAAe,QAAQ,IAAI,CAAC,WAAW;AAE3C,YAAM,gBAAgB,QAAQ,KAAK,CAAC,WAAW,OAAO,YAAY,OAAO,OAAO;AAChF,UAAI,CAAC,eAAe;AAElB,eAAO;AAAA,MACT;AAEA,YAAM,eAAe,GAAG,OAAO,MAAM,EAAE,IAAI,cAAc,MAAM;AAC/D,aAAO,EAAE,GAAG,QAAQ,QAAQ,aAAa;AAAA,IAC3C,CAAC;AAGD,WAAO,aAAa,OAAO,cAAc;AAAA,EAC3C;AAGA,WAAS,gBAAgB,GAAc,GAAc;AACnD,WACE,EAAE,SAAS,EAAE,QACb,EAAE,MAAM,YAAY,EAAE,MAAM,WAC5B,EAAE,IAAI,YAAY,EAAE,IAAI,WACxB,EAAE,MAAM,SAAS,EAAE,MAAM,QACzB,EAAE,IAAI,SAAS,EAAE,IAAI;AAAA,EAEzB;AAGO,WAAS,aAAa,YAAyB,OAAkB;AACtE,UAAM,gBAAgB,CAAC,GAAG,UAAU;AAGpC,UAAM,QAAQ,cAAc,UAAU,CAAC,OAAO,gBAAgB,IAAI,KAAK,CAAC;AAExE,QAAI,cAAc,KAAK,GAAG;AAExB,YAAM,oBAAoB,EAAE,GAAG,cAAc,KAAK,EAAE;AAEpD,UAAI,MAAM,YAAY,QAAQ;AAK5B,0BAAkB,aAAa,kBAAkB,YAAY,SACzD,YAAY,mBAAmB,KAAK,IACpC,MAAM;AAAA,MACZ;AAEA,UAAI,MAAM,OAAO,QAAQ;AAEvB,0BAAkB,QAAQ,CAAC,GAAI,kBAAkB,SAAS,CAAC,GAAI,GAAG,MAAM,KAAK;AAAA,MAC/E;AAEA,oBAAc,KAAK,IAAI;AAAA,IACzB,OAAO;AAEL,oBAAc,KAAK,KAAK;AAAA,IAC1B;AAEA,WAAO;AAAA,EACT;AAGO,WAAS,uBAAuB,UAAsC;AAC3E,WAAO,kBAAuD,UAAU,YAAY,WAAW;AAAA,EACjG;AAGO,WAAS,8BAA8B;AAAA,IAC5C;AAAA,IACA;AAAA,EACF,GAA2C;AACzC,UAAM,qBAAqB,sBAAsB,QAAQ;AAEzD,UAAM,6BAA6B,mBAAmB;AAAA,MACpD,CAAC,yBAAyB,YAAY;AAEpC,cAAM,UAAU;AAChB,cAAM,QAAQ,oBAAoB,QAAQ,OAAO;AACjD,YAAI,OAAO;AACT,gBAAM,eAAe,uBAAuB,KAAK;AACjD,gBAAM,yBAAyB,aAAa,yBAAyB;AAAA,YACnE;AAAA,YACA,MAAM;AAAA,cACJ;AAAA,cACA,SAAS;AAAA,YACX;AAAA,YACA,IAAI;AAAA,cACF;AAAA,cACA,SAAS,QAAQ,UAAU,SAAS;AAAA,cACpC;AAAA,YACF;AAAA,YACA,YAAY;AAAA,cACV;AAAA,gBACE,QAAQ,QAAQ;AAAA,gBAChB;AAAA,cACF;AAAA,YACF;AAAA,UACF,CAAC;AAED,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAAA,MACA,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT;AAGO,WAAS,0BAA0B;AAAA,IACxC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAGgC;AAC9B,UAAM,uBAAuB,gBAAgB,QAAQ;AACrD,UAAM,kBAAkB,mBAAmB,OAAO;AAElD,UAAM,yBAAyB,gBAAgB,OAAO,CAAC,mBAAmBC,YAAW;AACnF,YAAM,gBAAgB,0BAA0B,QAAQA,QAAO,UAAU;AAEzE,UAAI,eAAe;AACjB,cAAM,aAAa,qBAAqB,OAAO,CAAC,qBAAqB,YAAY;AAC/E,cAAI,QAAQ,OAAO,cAAc,YAAY;AAC3C,kBAAM,QAAQ,oBAAoB,QAAQ,QAAQ,OAAO;AACzD,gBAAI,OAAO;AACT,oBAAM,eAAe,uBAAuB,KAAK;AACjD,oBAAM,QAAQ,CAAC;AAEf,oBAAM,MAAM,SAAS,cAAc,UAAU;AAC7C,kBAAI,KAAK;AACP,sBAAM;AAAA,kBACJ,gBAAgB;AAAA,oBACd;AAAA,oBACA;AAAA,oBACA;AAAA,oBACA;AAAA,kBACF,CAAC;AAAA,gBACH;AAAA,cACF;AAEA,oBAAM,qBAAqB,aAAa,qBAAqB;AAAA,gBAC3D;AAAA,gBACA,MAAM;AAAA,kBACJ;AAAA,kBACA,SAAS;AAAA,gBACX;AAAA,gBACA,IAAI;AAAA,kBACF;AAAA,kBACA,SAAS,QAAQ;AAAA,gBACnB;AAAA;AAAA,gBAEA,YAAY,QAAQ,QAAQ,OAAO,IAC/B,SACA;AAAA,kBACE;AAAA,oBACE,QAAQ,QAAQ;AAAA,oBAChB,SAAS,QAAQ;AAAA,kBACnB;AAAA,gBACF;AAAA,gBACJ;AAAA,cACF,CAAC;AAED,qBAAO;AAAA,YACT;AAAA,UACF;AACA,iBAAO;AAAA,QACT,GAAG,iBAAgC;AAEnC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT,GAAG,CAAC,CAAgB;AAEpB,WAAO;AAAA,EACT;AAGA,WAAS,oCACP,SACA,gBACA,eACA;AACA,UAAM,EAAE,IAAI,WAAW,SAAS,OAAO,IAAI;AAC3C,QAAI,EAAE,MAAM,YAAY,IAAI;AAE5B,UAAM,SAAS,eAAe,KAAK,CAAC,UAAU,MAAM,eAAe,SAAS;AAI5E,QAAI,gBAAgB,aAAa;AAC/B,YAAM,SAAS,cAAc,KAAK,CAACA,YAAWA,QAAO,YAAY,OAAO;AAExE,oBAAc,QAAQ,MAAM;AAAA,IAC9B;AAEA,UAAM,WAAW,eAAe,KAAK,CAAC,UAAU,MAAM,eAAe,WAAW;AAIhF,WAAO;AAAA,MACL;AAAA,MACA,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,IAAI;AAAA,QACF,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA,YAAY;AAAA,QACV;AAAA,UACE,SAAS,QAAQ,SAAS;AAAA,UAC1B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGO,WAAS,sBAAsB;AAAA,IACpC;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAA6C;AAC3C,QAAI,aAA0B,CAAC;AAE/B,UAAM,cAAc,eAAe,OAAO;AAC1C,UAAM,iBAAiB,kBAAkB,MAAM;AAC/C,UAAM,gBAAgB,iBAAiB,OAAO;AAK9C,gBAAY,QAAQ,CAACA,YAAW;AAC9B,YAAM,EAAE,QAAQ,SAAS,GAAG,IAAIA;AAEhC,YAAM,eAAe,cAAc,KAAK,CAAC,WAAW,OAAO,YAAY,OAAO;AAE9E,UAAI,cAAc;AAChB,qBAAa,aAAa,YAAY;AAAA,UACpC;AAAA,UACA,MAAM;AAAA,YACJ;AAAA,YACA,SAAS,aAAa;AAAA,UACxB;AAAA,UACA,IAAI;AAAA,YACF;AAAA,YACA,SAAS;AAAA,UACX;AAAA,UACA,YAAY;AAAA,YACV;AAAA,cACE;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAOD,UAAM,mBAAmB;AAAA,MACvB;AAAA,MACA,YAAY;AAAA,IACd;AAMA,UAAM,sBAAsB;AAAA,MAC1B;AAAA,MACA,YAAY;AAAA,IACd;AAEA,KAAC,GAAG,kBAAkB,GAAG,mBAAmB,EAAE,QAAQ,CAAC,YAAY;AACjE,YAAM,YAAY,oCAAoC,SAAS,gBAAgB,aAAa;AAE5F,mBAAa,aAAa,YAAY,SAAS;AAAA,IACjD,CAAC;AAED,WAAO;AAAA,EACT;AAGO,WAAS,yBAAyB,SAAgC;AACvE,UAAM,cAAc,eAAe,OAAO;AAC1C,UAAM,wBAAwB,YAAY,OAAO,CAAC,MAAMA,YAAW;AACjE,YAAM,aAAa,aAAa,MAAM;AAAA,QACpC;AAAA,QACA,MAAM;AAAA,UACJ;AAAA,UACA,SAAS;AAAA,QACX;AAAA,QACA,IAAI;AAAA,UACF;AAAA,UACA,SAASA,QAAO,GAAG,SAAS;AAAA,QAC9B;AAAA,QACA,YAAY;AAAA,UACV;AAAA,YACE,SAASA,QAAO,QAAQ,SAAS;AAAA,YACjC,QAAQA,QAAO;AAAA,UACjB;AAAA,QACF;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT,GAAG,CAAC,CAAgB;AAEpB,WAAO;AAAA,EACT;AAGO,WAAS,6BAA6B,EAAE,QAAQ,QAAQ,GAAkC;AAC/F,UAAM,yBAAyB,0BAA0B,OAAO;AAChE,UAAM,QAAQ,wBAAwB,MAAM,EAAE,CAAC;AAC/C,UAAM,cAAc,uBAAuB,KAAK;AAChD,UAAM,4BAA4B,uBAAuB,OAAO,CAAC,MAAM,0BAA0B;AAC/F,YAAM,aAAa,aAAa,MAAM;AAAA,QACpC;AAAA,QACA,MAAM;AAAA,UACJ;AAAA,UACA,SAAS;AAAA,QACX;AAAA,QACA,IAAI;AAAA,UACF;AAAA,UACA,SAAS,uBAAuB,cAAc;AAAA,QAChD;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT,GAAG,CAAC,CAAgB;AAEpB,WAAO;AAAA,EACT;AAGO,WAAS,cAAc;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAoC;AAClC,QAAI,aAAa,eAAe,GAAG;AACjC,aAAO;AAAA,QACL,GAAG,6BAA6B,EAAE,QAAQ,QAAQ,CAAC;AAAA,QACnD,GAAG,sBAAsB,EAAE,QAAQ,SAAS,SAAS,CAAC;AAAA,MACxD;AAAA,IACF;AAEA,QAAI,aAAa,eAAe,GAAG;AACjC,aAAO;AAAA,QACL,GAAG,sBAAsB,EAAE,QAAQ,SAAS,SAAS,CAAC;AAAA,QACtD,GAAG,0BAA0B;AAAA,UAC3B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,QACD,GAAG,8BAA8B,EAAE,QAAQ,SAAS,CAAC;AAAA,MACvD;AAAA,IACF;AAEA,WAAO,CAAC,GAAG,yBAAyB,OAAO,CAAC;AAAA,EAC9C;;;ACveO,MAAM,oBAAoB,CAC/B,eAC6B;AAC7B,UAAM,UAAU,sBAAsB,UAAU;AAEhD,YAAQ,QAAQ,MAAM;AAAA,MACpB,KAAK,YAAY,YAAY;AAC3B,eAAO;AAAA,UACL,GAAG;AAAA,UACH,MAAM,WAAW,QAAQ;AAAA,QAC3B;AAAA,MACF;AAAA,MACA,KAAK,YAAY,SAAS;AACxB,eAAO;AAAA,UACL,GAAG;AAAA,UACH,MAAM,WAAW,QAAQ;AAAA,QAC3B;AAAA,MACF;AAAA,MACA;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEO,MAAM,kCAAkC,CAC7C,aACkB;AAClB,UAAM,eAA8B,CAAC;AAErC,aAAS,QAAQ,CAAC,YAAY;AAC5B,UAAI,QAAQ,SAAS,YAAY,MAAM;AACrC,qBAAa,KAAK;AAAA,UAChB,OAAO,QAAQ;AAAA,UACf,YAAY,QAAQ;AAAA,UACpB,SAAS,QAAQ;AAAA,UACjB,QAAQ,QAAQ;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAEO,MAAM,kCAAkC,CAC7C,aACkB;AAClB,UAAM,eAA8B,CAAC;AAErC,aAAS,QAAQ,CAAC,YAAY;AAC5B,UAAI,QAAQ,SAAS,YAAY,MAAM;AACrC,qBAAa,KAAK;AAAA,UAChB,OAAO,QAAQ;AAAA,UACf,YAAY,QAAQ;AAAA,UACpB,SAAS,QAAQ;AAAA,UACjB,QAAQ,QAAQ;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;;;ACvDO,MAAM,2BAA2B,CAAC,cAA2C;AAClF,YAAQ,WAAW;AAAA,MACjB,KAAK;AACH;AAAA,MACF,KAAK;AACH;AAAA,MACF,KAAK;AACH;AAAA,MACF,KAAK;AACH;AAAA,MACF;AACE,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,+BAA+B;AAAA,QACjC;AAAA,IACJ;AAAA,EACF;AAQO,MAAM,uBAAuB,CAAC,yBAAoD;AACvF,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AACtB,QAAI,kBAAkB;AAEtB,QAAI,sBAAsB,MAAM;AAC9B,eAAS,yBAAyB,qBAAqB,IAAI;AAE3D,cAAQ,qBAAqB,MAAM;AAAA,QACjC,KAAK;AACH,iBAAO,qBAAqB;AAC5B,oBAAU,qBAAqB,MAAM;AACrC,4BAAkB;AAClB;AAAA,QAEF,KAAK;AACH,iBAAO,qBAAqB;AAC5B,oBAAU,qBAAqB,MAAM;AACrC,4BAAkB;AAClB;AAAA,QAEF,KAAK;AACH,iBAAO,qBAAqB;AAC5B,4BAAkB;AAClB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,UAAM,yBAAwD;AAAA,MAC5D;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO;AAAA,EACT;;;AC7CO,WAAS,2BACd,QACA;AACA,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAS,CAAC;AAAA,MACV;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,UAAM,UAAU,uBAAuB,QAAQ;AAE/C,UAAM,aAAa,QAAQ,gBAAgB;AAE3C,UAAM,aAAa,cAAc;AAAA,MAC/B,iBAAiB,YAAY;AAAA,MAC7B,QAAQ,YAAY,UAAU,CAAC;AAAA,MAC/B,SAAS,YAAY,WAAW,CAAC;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,UAAM,WAAW,uBAAuB,YAAY,IAAI;AAExD,UAAM,EAAE,IAAI,IAAI,wBAAwB;AAAA,MACtC;AAAA,MACA;AAAA,MACA,qBAAqB;AAAA,QACnB;AAAA,QACA,WAAW;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAED,UAAM,EAAE,iBAAiB,iBAAiB,iBAAiB,SAAS,QAAQ,KAAK,IAC/E,qBAAqB,oBAAoB;AAE3C,UAAM,eAAe,gCAAgC,QAAQ;AAC7D,UAAM,eAAe,gCAAgC,QAAQ;AAE7D,QAAI;AAEJ,QAAI,MAAM;AACR,aAAO,SAAS,UAAU,IAAI;AAAA,IAChC;AAEA,UAAM,qBAA2D;AAAA,MAC/D;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,WAAW,YAAY,IAAI;AAAA,MACvC,cAAc,aAAa,YAAY,IAAI;AAAA,MAC3C,cAAc,aAAa,YAAY,IAAI;AAAA,MAC3C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,WAAO;AAAA,EACT;;;AC1GO,WAAS,eACd,UACA,SACA,eAAwC,CAAC,GACpC;AAiBL,WAAO,SAAS,OAAO,CAAC,MAAW,YAAY;AAC7C,UAAI,QAAQ,SAAS,YAAY,WAAW,QAAQ,SAAS,YAAY,KAAK;AAC5E,cAAM,iBAAiB,IAAI,UAAU,aAAa,QAAQ,EAAE,KAAK,OAAO;AAExE,cAAM,OACJ,QAAQ,SAAS,YAAY,MACzB,IAAI,eAAe,KAAK,EAAE,OAAO,QAAQ,IAAI,IAC7C,QAAQ;AAEd,cAAM,CAAC,UAAU,IAAI,eAAe,UAAU,MAAM,QAAQ,KAAK,SAAS,CAAC;AAC3E,aAAK,KAAK,UAAU;AAAA,MACtB;AAEA,aAAO;AAAA,IACT,GAAG,CAAC,CAAC;AAAA,EACP;;;AC0CO,MAAMC,uBAAN,MAA0B;AAAA;AAAA,IAE/B;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA,UAAc,GAAG,CAAC;AAAA;AAAA,IAElB;AAAA,IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,YAAY,IAAY,UAAoB,MAA6B;AACvE,WAAK,KAAK;AACV,WAAK,WAAW;AAChB,WAAK,OAAO;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,aAAa,OACX,IACA,UACA,MAC8B;AAC9B,YAAM,WAAW,IAAIA,qBAAoB,IAAI,UAAU,IAAI;AAC3D,YAAM,SAAS,MAAM;AACrB,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,QAAiC;AACrC,YAAM,WAAW,MAAM,KAAK,SAAS,WAAW,2BAA2B;AAAA,QACzE,eAAe,KAAK;AAAA,MACtB,CAAC;AAED,UAAI,CAAC,SAAS,aAAa;AACzB,cAAM,eAAe,KAAK,SAAS,WAAW,aAAa;AAAA,UACzD,eAAe,KAAK;AAAA,QACtB,CAAC;AAED,yBAAiB,EAAE,aAAa,KAAK,cAAc;AACjD,cAAI,cAAc;AAChB;AAAA,UACF;AAAA,QACF;AAEA,eAAO,KAAK,MAAM;AAAA,MACpB;AAEA,WAAK,iBAAiB,SAAS;AAE/B,aAAO,SAAS;AAAA,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,kBAA2C,yBAAyC;AAClF,aAAO,IAAI,iBAAiB,EAAE;AAAA,QAC5B,SAAS,wBAAwB,UAAU;AAAA,QAC3C;AAAA,MACF,IAAI,CAAC;AAAA,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,sBACJ,iBAC+C;AAC/C,UAAI,cAAc,KAAK;AAEvB,UAAI,CAAC,aAAa;AAChB,sBAAc,MAAM,KAAK,MAAM;AAAA,MACjC;AAEA,YAAM,qBAAqB,KAAK;AAAA,QAC9B;AAAA,MACF;AAEA,YAAM,WAAW,YAAY,UAAU,IAAI,iBAAiB,KAAK,CAAC;AAElE,YAAM,EAAE,YAAY,gBAAgB,SAAS,IAAI,KAAK,SAAS,aAAa;AAC5E,YAAM,YAAY,KAAK,SAAS,SAAS,EAAE,oBAAoB;AAE/D,YAAM,qBAAqB,2BAA6C;AAAA,QACtE,IAAI,KAAK;AAAA,QACT;AAAA,QACA,aAAa;AAAA,QACb,kBAAkB,SAAS,YAAY,UAAU;AAAA,QACjD,sBAAsB,YAAY;AAAA,QAClC;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR;AAAA,QACA;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAAA,IAEA,MAAc,sBAAsB;AAClC,YAAM,SAAS,KAAK,gBAAgB,QAAQ;AAC5C,UAAI,UAAU,WAAW,mBAAmB;AAC1C;AAAA,MACF;AAEA,YAAM,eAAe,KAAK,SAAS,WAAW,aAAa;AAAA,QACzD,eAAe,KAAK;AAAA,MACtB,CAAC;AAED,uBAAiB,EAAE,aAAa,KAAK,cAAc;AACjD,YAAI,aAAa,SAAS,qBAAqB;AAC7C,gBAAM,IAAI;AAAA,YACR,UAAU;AAAA,YACV,yCAAyC,aAAa;AAAA,UACxD;AAAA,QACF;AACA,YAAI,aAAa,SAAS,mBAAmB;AAC3C;AAAA,QACF;AAAA,MACF;AAEA,YAAM,KAAK,MAAM;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,cACJ,iBAC8C;AAC9C,YAAM,KAAK,oBAAoB;AAE/B,YAAM,qBAAqB,MAAM,KAAK,sBAAwC,eAAe;AAE7F,YAAM,oBAAyD;AAAA,QAC7D,gBAAgB,KAAK;AAAA,QACrB,GAAG;AAAA,MACL;AAEA,UAAI,KAAK,MAAM;AACb,cAAM,OAAO;AAAA,UACX,mBAAmB;AAAA,UACnB,KAAK,KAAK;AAAA,UACV,KAAK,KAAK;AAAA,QACZ;AAEA,0BAAkB,OAAO;AAAA,MAC3B;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,KACJ,iBAC8C;AAC9C,YAAM,SAAS,MAAM,KAAK,cAAgC,eAAe;AAEzE,UAAI,OAAO,iBAAiB;AAC1B,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,uBAAuC,OAAO,eAAe,OAAQ;AAAA,QACvE;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA,EACF;;;AC9PO,WAAS,aAAa,SAAuB,iBAAyB;AAC3E,UAAM,WAAW,QAAQ,aAAa;AAEtC,YAAQ,QAAQ,SAAS;AAAA,MACvB,KAAK;AACH,eAAO,WAAW;AAAA,MACpB,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL;AACE,eAAO,MAAM,kBAAkB,KAAK;AAAA,IACxC;AAAA,EACF;AASO,WAAS,eACd,SACA,SACA,kBAA0B,GACa;AACvC,QAAI,YAAY,QAAW;AACzB,aAAO;AAAA,IACT;AAEA,WAAO,UAAU,SAAS;AACxB,UAAI;AACF,eAAO,MAAM,QAAQ,GAAG,IAAI;AAAA,MAC9B,SAAS,QAAP;AACA,cAAM,QAAQ;AAMd,YAAI,MAAM,OAAO,SAAS,gBAAgB;AACxC,gBAAM;AAAA,QACR;AACA,cAAM,WAAW,kBAAkB;AAEnC,YAAI,WAAW,QAAQ,YAAY;AACjC,gBAAM;AAAA,QACR;AAEA,cAAM,QAAQ,aAAa,SAAS,QAAQ;AAE5C,cAAM,MAAM,KAAK;AAEjB,eAAO,eAAe,SAAS,SAAS,QAAQ,EAAE,GAAG,IAAI;AAAA,MAC3D;AAAA,IACF;AAAA,EACF;;;AClFO,MAAM,kBAAkB,CAAC,MAAsB,SAAyC;AAC7F,UAAM,YAAmC,CAAC;AAE1C,aAAS,SAAS,EAAE,QAAQ,QAAQ,GAAiB;AACnD,UAAI,UAAU,OAAO,GAAG;AACtB,kBAAU,OAAO,IAAI,UAAU,OAAO,EAAE,IAAI,MAAM;AAAA,MACpD,OAAO;AACL,kBAAU,OAAO,IAAI;AAAA,MACvB;AAAA,IACF;AAGA,SAAK,QAAQ,QAAQ;AACrB,SAAK,QAAQ,QAAQ;AAGrB,WAAO,OAAO,QAAQ,SAAS,EAAE,IAAI,CAAC,CAAC,SAAS,MAAM,OAAO,EAAE,SAAS,OAAO,EAAE;AAAA,EACnF;;;AnEmCA,MAAM,cAAc;AAuGpB,MAAM,kBAAkB,CAAC,UAAmD;AAC1E,UAAM,EAAE,MAAM,UAAU,qBAAqB,YAAY,IAAI;AAE7D,UAAM,EAAE,gBAAgB,WAAW,iBAAiB,cAAc,UAAU,SAAS,IACnF;AAEF,WAAO;AAAA,MACL;AAAA,MACA,iBAAiB,GAAG,QAAQ;AAAA,MAC5B,qBAAqB;AAAA,QACnB,iBAAiB,GAAG,eAAe,eAAe;AAAA,QAClD,WAAW,GAAG,SAAS,SAAS;AAAA,QAChC,YAAY,GAAG,SAAS,UAAU;AAAA,QAClC,cAAc,GAAG,SAAS,YAAY;AAAA,QACtC,aAAa,GAAG,SAAS,WAAW;AAAA,QACpC,iBAAiB,GAAG,aAAa,eAAe;AAAA,QAChD,qBAAqB,GAAG,aAAa,mBAAmB;AAAA,QACxD,iBAAiB,GAAG,eAAe,eAAe;AAAA,QAClD,oBAAoB,GAAG,gBAAgB,kBAAkB;AAAA,QACzD,wBAAwB,GAAG,gBAAgB,sBAAsB;AAAA,QACjE,oBAAoB,GAAG,gBAAgB,kBAAkB;AAAA,QACzD,gBAAgB,GAAG,UAAU,cAAc;AAAA,QAC3C,YAAY,GAAG,UAAU,UAAU;AAAA,QACnC,sBAAsB,GAAG,gBAAgB,oBAAoB;AAAA,QAC7D,SAAS,GAAG,oBAAoB,OAAO;AAAA,QACvC;AAAA,MACF;AAAA,MACA;AAAA,MACA,aAAa;AAAA,QACX,IAAI,YAAY;AAAA,QAChB,QAAQ,GAAG,YAAY,OAAO,MAAM;AAAA,QACpC,MAAM,YAAY,OAAO;AAAA,QACzB,cAAc,YAAY,aAAa,IAAI,CAAC,OAAO;AAAA,UACjD,IAAI,EAAE;AAAA,QACR,EAAE;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AApMA;AA+SA,MAAqB,YAArB,MAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA6ClB,YAED,KACP,UAA2B,CAAC,GAC5B;AAFO;AAmOT;AAAA;AAAA;AAAA;AAjRA;AACA;AAUA,qCAA2B;AAAA,QACzB,SAAS;AAAA,QACT,WAAW;AAAA,QACX,OAAO;AAAA,QACP,cAAc;AAAA,MAChB;AAiCE,WAAK,UAAU,EAAE,GAAG,KAAK,SAAS,GAAG,QAAQ;AAC7C,WAAK,MAAM;AAEX,WAAK,aAAa,KAAK,iBAAiB;AACxC,WAAK,QAAQ,QAAQ,YAAY,IAAI,YAAY,QAAQ,SAAS,IAAI;AAAA,IACxE;AAAA,IAnDA,OAAO,0BAA0B;AAC/B,gBAAS,gBAAgB,CAAC;AAC1B,gBAAS,iBAAiB,CAAC;AAAA,IAC7B;AAAA,IAYA,OAAe,WAAW,SAAiE;AACzF,YAAM,EAAE,cAAc,QAAQ,IAAI;AAElC,aAAO,eAAe,UAAU,SAAS;AACvC,cAAM,MAAM,KAAK,CAAC;AAClB,cAAM,UAAU,KAAK,CAAC;AACtB,cAAM,SAAS,UAAU,YAAY,QAAQ,OAAO,IAAI;AAExD,YAAI,cAA2B,EAAE,GAAG,SAAS,OAAO;AAEpD,YAAI,QAAQ,mBAAmB;AAC7B,wBAAc,MAAM,QAAQ,kBAAkB,WAAW;AAAA,QAC3D;AAEA,eAAO,QAAQ,QAAQ,QAAQ,MAAM,KAAK,aAAa,OAAO,IAAI,MAAM,KAAK,WAAW;AAAA,MAC1F,GAAG,YAAY;AAAA,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2BA,aAAa,OAAO,KAAa,UAA2B,CAAC,GAAG;AAC9D,YAAM,WAAW,IAAI,UAAS,KAAK,OAAO;AAC1C,YAAM,SAAS,sBAAsB;AACrC,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,WAAW;AACT,YAAM,QAAQ,UAAS,eAAe,KAAK,GAAG;AAC9C,UAAI,CAAC,OAAO;AACV,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU;AACR,YAAM,OAAO,UAAS,cAAc,KAAK,GAAG;AAC5C,UAAI,CAAC,MAAM;AACT,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,eAAe;AACb,YAAM,EAAE,YAAY,IAAI,KAAK,QAAQ;AACrC,YAAM,EAAE,aAAa,oBAAoB,gBAAgB,YAAY,SAAS,IAC5E,KAAK,SAAS,EAAE;AAClB,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,QAAQ,KAAa,SAA2B;AACpD,WAAK,MAAM;AACX,WAAK,UAAU,WAAW,KAAK;AAC/B,WAAK,aAAa,KAAK,iBAAiB;AACxC,YAAM,KAAK,sBAAsB;AAAA,IACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,wBAAwB;AAC5B,YAAM,QAAQ,MAAM,KAAK,WAAW;AACpC,YAAM,WAAW,MAAM,KAAK,UAAU;AAEtC,gBAAS,+BAA+B,QAAQ;AAEhD,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IAEA,OAAe,+BAA+B,UAAoB;AAChE,YAAM,EAAE,kBAAkB,kBAAkB,iBAAiB,IAC3D,kCAAkC,SAAS,WAAW;AAExD,UAAI,CAAC,oBAAoB,CAAC,kBAAkB;AAC1C,cAAM,IAAI;AAAA,UACR,UAAU,MAAM;AAAA,UAChB,wBAAwB,SAAS,mCAAmC;AAAA,QACtE;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOQ,mBAAmB;AACzB,YAAM,UAAU,UAAS,WAAW,KAAK,OAAO;AAChD,YAAM,YAAY,IAAI,qCAAc,KAAK,KAAK;AAAA,QAC5C,OAAO,CAAC,KAAa,gBAA6B,QAAQ,KAAK,aAAa,KAAK,OAAO;AAAA,MAC1F,CAAC;AAED,YAAM,eAAe,CAAC,OAAqB,SAAkC;AAC3E,cAAM,eAAe,MAAM,YAAY,KAAK,CAAC,MAAM,EAAE,SAAS,qBAAqB;AAGnF,cAAM,iBAAiB,cAAc,cAAc;AAEnD,YAAI,gBAAgB;AAClB,iBAAO,IAAI,sBAAsB;AAAA,YAC/B,KAAK,KAAK;AAAA,YACV;AAAA,YACA,SAAS,CAAC,KAAK,gBAAgB,QAAQ,KAAe,aAAa,KAAK,OAAO;AAAA,YAC/E,WAAW;AAAA,UACb,CAAC;AAAA,QACH;AACA,eAAO,UAAU,QAAQ,OAAO,IAAI;AAAA,MACtC;AAGA,aAAO,OAAiB,YAAY;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,aAA8B;AAClC,YAAM;AAAA,QACJ,UAAU,EAAE,YAAY;AAAA,MAC1B,IAAI,MAAM,KAAK,WAAW,WAAW;AACrC,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,aAA+B;AACnC,YAAM;AAAA,QACJ;AAAA,QACA,qBAAqB,EAAE,QAAQ;AAAA,MACjC,IAAI,MAAM,KAAK,SAAS;AACxB,YAAM,UAAU,IAAI,QAAQ,MAAM,QAAQ,SAAS,CAAC;AACpD,aAAO,QAAQ,QAAQ,OAAO;AAAA,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,iBAA8B;AAClC,YAAM,EAAE,MAAM,IAAI,MAAM,KAAK,WAAW,SAAS;AACjD,aAAO,GAAG,MAAM,YAAY,OAAO,QAAQ,EAAE;AAAA,IAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,YAA+B;AACnC,YAAM,EAAE,SAAS,IAAI,MAAM,KAAK,WAAW,YAAY;AAEvD,YAAM,oBAA8B;AAAA,QAClC,UAAU,GAAG,SAAS,QAAQ;AAAA,QAC9B,OAAO,GAAG,SAAS,KAAK;AAAA,QACxB,aAAa,GAAG,SAAS,WAAW;AAAA,QACpC,aAAa,SAAS;AAAA,QACtB,gBAAgB,SAAS;AAAA,QACzB,aAAa,SAAS;AAAA,QACtB,OAAO,SAAS;AAAA,MAClB;AAEA,gBAAS,cAAc,KAAK,GAAG,IAAI;AAEnC,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,aAAiC;AACrC,YAAM,EAAE,MAAM,IAAI,MAAM,KAAK,WAAW,SAAS;AAEjD,YAAM,iBAAiB,gBAAgB,KAAK;AAE5C,gBAAS,eAAe,KAAK,GAAG,IAAI;AAEpC,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,aAAa;AACX,YAAM;AAAA,QACJ,qBAAqB,EAAE,QAAQ;AAAA,MACjC,IAAI,KAAK,SAAS;AAClB,aAAO,QAAQ,SAAS;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2BA,MAAM,gBACJ,wBACA,EAAE,yBAAyB,MAAM,iBAAiB,MAAM,IAA0B,CAAC,GACrD;AAC9B,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,4BAAK,8BAAL,WAAkB,mBAAmB;AACrC,UAAI,wBAAwB;AAC1B,cAAM,KAAK,uBAAuB,kBAAkB;AAAA,MACtD;AAGA,YAAM,qBAAqB,QAAQ,mBAAmB,mBAAmB,CAAC;AAE1E,UAAI;AAEJ,UAAI,mBAAmB,SAAS,gBAAgB,QAAQ;AACtD,eAAO,mBAAmB;AAAA,MAC5B;AAEA,UAAI,gBAAgB;AAClB,cAAM,eAAe,KAAK,WAAW,eAAe,EAAE,mBAAmB,CAAC;AAC1E,yBAAiB,EAAE,eAAe,KAAK,cAAc;AACnD,cAAI,eAAe,SAAS,qBAAqB;AAC/C,kBAAM,IAAI;AAAA,cACR,UAAU;AAAA,cACV,yCAAyC,eAAe;AAAA,YAC1D;AAAA,UACF;AAEA,cAAI,eAAe,SAAS,mBAAmB;AAC7C;AAAA,UACF;AAAA,QACF;AAEA,cAAMC,iBAAgB,mBAAmB,iBAAiB,KAAK,WAAW,CAAC;AAC3E,cAAM,WAAW,IAAIC,qBAAoBD,gBAAe,MAAM,IAAI;AAClE,cAAM,SAAS,MAAM;AACrB,eAAO;AAAA,MACT;AAEA,YAAM;AAAA,QACJ,QAAQ,EAAE,IAAI,cAAc;AAAA,MAC9B,IAAI,MAAM,KAAK,WAAW,OAAO,EAAE,mBAAmB,CAAC;AAEvD,aAAO,IAAIC,qBAAoB,eAAe,MAAM,IAAI;AAAA,IAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYA,MAAM,KACJ,wBACA,EAAE,gBAAgB,yBAAyB,KAAK,IAAwB,CAAC,GACpD;AACrB,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,UAAI,wBAAwB;AAC1B,eAAO,KAAK,uBAAuB,kBAAkB;AAAA,MACvD;AACA,YAAM,qBAAqB,QAAQ,mBAAmB,mBAAmB,CAAC;AAC1E,YAAM,EAAE,QAAQ,YAAY,IAAI,MAAM,KAAK,WAAW,OAAO;AAAA,QAC3D;AAAA,QACA,gBAAgB,kBAAkB;AAAA,MACpC,CAAC;AACD,YAAM,WAAW,YAAY,IAAI,iBAAiB;AAClD,aAAO;AAAA,QACL;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,mBAAmB,oBAAqE;AAC5F,YAAM,2BAA2B;AAAA,QAC/B,mBAAmB,OAAO;AAAA,UACxB,CAAC,UACC,eAAe,SACf,MAAM,aACN,CAAC,WAAW,SAAS,MAAM,SAAS,GAAG,SAAS,IAAI,CAAC,KACrD,IAAI,GAAG,MAAM,gBAAgB,EAAE,OAAO;AAAA,QAC1C;AAAA,MACF;AACA,UAAI,CAAC,0BAA0B;AAC7B,eAAO;AAAA,MACT;AACA,YAAM,qBAAqB,QAAQ,mBAAmB,mBAAmB,CAAC;AAC1E,YAAM,WAAW,MAAM,KAAK,WAAW,mBAAmB;AAAA,QACxD;AAAA,MACF,CAAC;AAED,YAAM;AAAA,QACJ,oBAAoB,EAAE,OAAO;AAAA,MAC/B,IAAI;AAEJ,UAAI,QAAQ;AACV,eAAO,QAAQ,CAAC,OAAO,UAAU;AAC/B,cAAI,sBAAsB,SAAS,GAAG,MAAM,gBAAgB,EAAE,GAAG,CAAC,GAAG;AAEnE,YAA8B,mBAAmB,OAAO,KAAK,EAAG,mBAC9D,MAAM;AAAA,UACV;AAAA,QACF,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeA,MAAM,uBACJ,oBACwC;AACxC,UAAI,mBAAmB,SAAS,gBAAgB,QAAQ;AACtD,eAAO;AAAA,UACL,UAAU,CAAC;AAAA,UACX,iBAAiB;AAAA,UACjB,oBAAoB,CAAC;AAAA,QACvB;AAAA,MACF;AAEA,YAAM,KAAK,mBAAmB,kBAAkB;AAEhD,UAAI,WAAuC,CAAC;AAC5C,YAAM,qBAA+B,CAAC;AACtC,UAAI,kBAAkB;AAEtB,eAAS,UAAU,GAAG,UAAU,aAAa,WAAW;AACtD,cAAM,EAAE,QAAQ,YAAY,IAAI,MAAM,KAAK,WAAW,OAAO;AAAA,UAC3D,oBAAoB,QAAQ,mBAAmB,mBAAmB,CAAC;AAAA,UACnE,gBAAgB;AAAA,QAClB,CAAC;AACD,mBAAW,YAAY,IAAI,iBAAiB;AAC5C,cAAM,EAAE,wBAAwB,yBAAyB,IACvD,2BAA2B,QAAQ;AAErC,cAAM,oBACJ,uBAAuB,WAAW,KAAK,yBAAyB,WAAW;AAE7E,YAAI,mBAAmB;AACrB,6BAAmB,uBAAuB;AAC1C,6BAAmB,mBAAmB,uBAAuB,MAAM;AACnE,mCAAyB,QAAQ,CAAC,EAAE,WAAW,MAAM;AACnD,+BAAmB,0BAA0B,QAAQ,WAAW,UAAU,CAAC;AAC3E,+BAAmB,KAAK,UAAU;AAAA,UACpC,CAAC;AAAA,QACH,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYA,MAAM,SACJ,wBACA,EAAE,yBAAyB,KAAK,IAA+B,CAAC,GAC3C;AACrB,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,UAAI,wBAAwB;AAC1B,eAAO,KAAK,uBAAuB,kBAAkB;AAAA,MACvD;AACA,YAAM,qBAAqB,QAAQ,mBAAmB,mBAAmB,CAAC;AAC1E,YAAM,EAAE,QAAQ,YAAY,IAAI,MAAM,KAAK,WAAW,OAAO;AAAA,QAC3D;AAAA,QACA,gBAAgB;AAAA,MAClB,CAAC;AACD,YAAM,WAAW,YAAY,IAAI,iBAAiB;AAClD,aAAO;AAAA,QACL;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiBA,MAAM,mBACJ,wBACA,uBAAuC,CAAC,GACxC;AAAA,MACE,yBAAyB;AAAA,MACzB,qBAAqB;AAAA,MACrB;AAAA,MACA;AAAA,IACF,IAA2B,CAAC,GACF;AAC1B,YAAM,iBAAiB,cAAM,sBAAsB,sBAAsB,CAAC;AAC1E,YAAM,YAAY,KAAK,SAAS;AAChC,YAAM,EAAE,gBAAgB,aAAa,YAAY,IAAI,KAAK,aAAa;AACvE,YAAM,WAAW,IAAI,eAAe,UAAU,WAAW;AACzD,YAAM,sBAAsB,eAAe,SAAS,gBAAgB;AAIpE,YAAM,wBAAwB,eAAe,yBAAyB;AAEtE,YAAM,gBAAgB,gBAAgB,uBAAuB,oBAAoB;AAEjF,qBAAe,kBAAkB,eAAe,gBAAgB,OAAO;AAKvE,UAAI,oBAAoB;AAEtB,YAAI,qBAAqB;AACvB,yBAAe,WAAW,GAAG,CAAC;AAAA,QAChC;AAQA,YAAI,kBAAkB,sCAAsC,gBAAgB;AAC1E,UAAC,eAAiC,iCAAiC,cAAc;AAAA,QACnF;AACA,cAAM,KAAK,mBAAmB,cAAc;AAAA,MAC9C;AAEA,UAAI,qBAAqB,qBAAqB;AAC5C,cAAM,kBAAkB,cAAc;AAAA,MACxC;AAKA,YAAM,SAAS,eAAe,gBAAgB,SAAS;AACvD,YAAM,SAAS,eAAe,gBAAgB,WAAW,MAAM;AAM/D,UAAI,WAAuC,CAAC;AAC5C,UAAI,qBAA+B,CAAC;AACpC,UAAI,kBAAkB;AAEtB,UAAI,uBAAuB,wBAAwB;AASjD,uBAAe,WAAW,GAAG,CAAC;AAC9B,uBAAe,WAAW,GAAG,YAAY,IAAI,MAAM,EAAE,SAAS,IAAI,GAAG;AAGrE,cAAM,SAAS,MAAM,KAAK,uBAAuB,cAAc;AAE/D,mBAAW,OAAO;AAClB,0BAAkB,OAAO;AACzB,6BAAqB,OAAO;AAAA,MAC9B;AAGA,YAAM,UAAU,sBAAsB,uBAAuB,QAAQ,IAAI;AAEzE,YAAM,UAAU;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,MACF,EAAE,mBAAmB;AACrB,YAAM,SAAS,yBAAyB,QAAQ,UAAU,cAAc,EAAE,mBAAmB;AAC7F,YAAM,SAAS,yBAAyB,QAAQ,UAAU,cAAc,EAAE,mBAAmB;AAE7F,aAAO;AAAA,QACL,oBAAoB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,iBAAiB,eAAe;AAAA,QAChC;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IAEA,MAAM,2BACJ,OACA,wBACA,uBAAuC,CAAC,GACxC;AACA,YAAM,eAAe,QAAQ,oBAAoB,KAAK;AACtD,YAAM,qBAAqB,sBAAsB,cAAM,sBAAsB,CAAC;AAC9E,YAAM,kBAAkB,MAAM,KAAK,mBAAmB,oBAAoB,oBAAoB;AAG9F,yBAAmB;AAAA,QACjB,MAAM,KAAK,oBAAoB,cAAc,gBAAgB,kBAAkB;AAAA,MACjF;AAOA,YAAM,EAAE,oBAAoB,GAAG,OAAO,IAAI,MAAM,KAAK;AAAA,QACnD;AAAA,QACA;AAAA,MACF;AACA,YAAM,YAAY,MAAM,KAAK,oBAAoB,cAAc,kBAAkB;AAEjF,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,GAAG;AAAA,MACL;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,SAEJ,OAEA,SAEA,gBACiB;AACjB,YAAM,eAAe,QAAQ,oBAAoB,KAAK;AACtD,YAAM,SAAS,MAAM,KAAK,WAAW,SAAS;AAAA,QAC5C,OAAO;AAAA,QACP,GAAG;AAAA,QACH,QAAQ,EAAE,OAAO,aAAa,OAAO,GAAG,SAAS,WAAW,QAAQ,OAAO,EAAE;AAAA,MAC/E,CAAC;AAED,YAAM,QAAQ,OAAO,MAAM,MAAM,IAAI,CAAC,SAAS,KAAK,IAAI;AAExD,aAAO,MAAM,IAAI,CAAC,UAAU;AAAA,QAC1B,IAAI,KAAK;AAAA,QACT,SAAS,KAAK;AAAA,QACd,QAAQ,GAAG,KAAK,MAAM;AAAA,QACtB,OAAO,QAAQ,oBAAoB,KAAK,KAAK;AAAA,QAC7C,UAAU,GAAG,KAAK,QAAQ,EAAE,SAAS;AAAA,QACrC,cAAc,GAAG,KAAK,YAAY;AAAA,QAClC,cAAc,GAAG,KAAK,YAAY;AAAA,MACpC,EAAE;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,MAAM,oBAEJ,OAEA,YAEA,aACqB;AACrB,YAAM,eAAe,QAAQ,oBAAoB,KAAK;AACtD,YAAM,eAAe;AAAA,QACnB,UAAU,aAAa,UAAU,IAAI,CAAC,UAAU,QAAQ,KAAK,CAAC,KAAK,CAAC;AAAA,QACpE,OAAO,aAAa,OAAO,IAAI,CAAC,OAAO,QAAQ,EAAE,CAAC,KAAK,CAAC;AAAA,MAC1D;AAEA,UAAI,KAAK,OAAO;AACd,cAAM,cAAc,IAAI;AAAA,UACtB,aAAa,MAAM,OAAO,KAAK,OAAO,cAAc,EAAE,IAAI,CAAC,OAAO,QAAQ,EAAE,CAAC,CAAC;AAAA,QAChF;AACA,qBAAa,QAAQ,MAAM,KAAK,WAAW;AAAA,MAC7C;AACA,YAAM,aAAa;AAAA,QACjB,OAAO,aAAa,OAAO;AAAA,QAC3B,eAAe,WACZ,IAAI,cAAc,EAClB,IAAI,CAAC,EAAE,SAAS,QAAQ,KAAK,YAAY,OAAO;AAAA,UAC/C,SAAS,QAAQ,OAAO;AAAA,UACxB,QAAQ,OAAO,SAAS,EAAE;AAAA,UAC1B,KAAK,cAAc,YAAY,SAAS,EAAE,IAAI;AAAA,QAChD,EAAE;AAAA,QACJ,aAAa;AAAA,MACf;AAEA,YAAM,SAAS,MAAM,KAAK,WAAW,gBAAgB,UAAU;AAE/D,YAAM,QAAQ,OAAO,aAClB,KAAK,EACL,IAAI,CAAC,SAAS;AACb,gBAAQ,KAAK,YAAY;AAAA,UACvB,KAAK;AACH,mBAAO;AAAA,cACL,QAAQ,GAAG,KAAK,MAAM;AAAA,cACtB,SAAS,KAAK;AAAA,cACd,UAAU,GAAG,KAAK,QAAQ;AAAA,cAC1B,QAAQ,QAAQ,oBAAoB,KAAK,MAAM;AAAA,cAC/C,WAAW,QAAQ,oBAAoB,KAAK,SAAS;AAAA,cACrD,OAAO,KAAK;AAAA,YACd;AAAA,UACF,KAAK;AACH,mBAAO;AAAA,cACL,IAAI,KAAK;AAAA,cACT,QAAQ,GAAG,KAAK,MAAM;AAAA,cACtB,SAAS,KAAK;AAAA,cACd,OAAO,QAAQ,oBAAoB,KAAK,KAAK;AAAA,cAC7C,UAAU,GAAG,KAAK,QAAQ,EAAE,SAAS;AAAA,cACrC,cAAc,GAAG,KAAK,YAAY;AAAA,cAClC,cAAc,GAAG,KAAK,YAAY;AAAA,YACpC;AAAA,UACF;AACE,mBAAO;AAAA,QACX;AAAA,MACF,CAAC,EACA,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAEpB,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,SAEJ,YACuB;AACvB,UAAI;AACJ,UAAI,OAAO,eAAe,UAAU;AAClC,oBAAY,EAAE,QAAQ,GAAG,UAAU,EAAE,SAAS,EAAE,EAAE;AAAA,MACpD,WAAW,eAAe,UAAU;AAClC,oBAAY,EAAE,SAAS,MAAM,KAAK,eAAe,GAAG,SAAS,EAAE,EAAE;AAAA,MACnE,WAAW,WAAW,WAAW,IAAI;AACnC,oBAAY,EAAE,SAAS,WAAW;AAAA,MACpC,OAAO;AACL,oBAAY,EAAE,SAAS,GAAG,UAAU,EAAE,SAAS,EAAE,EAAE;AAAA,MACrD;AAEA,YAAM,EAAE,OAAAC,OAAM,IAAI,MAAM,KAAK,WAAW,SAAS,SAAS;AAE1D,UAAI,CAACA,QAAO;AACV,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,QACL,IAAIA,OAAM;AAAA,QACV,QAAQ,GAAGA,OAAM,OAAO,MAAM;AAAA,QAC9B,MAAMA,OAAM,OAAO;AAAA,QACnB,gBAAgBA,OAAM,aAAa,IAAI,CAAC,OAAO,GAAG,EAAE;AAAA,MACtD;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,UAAU,QAAsD;AACpE,YAAM,EAAE,QAAQ,YAAY,IAAI,MAAM,KAAK,WAAW,UAAU,MAAM;AAEtE,YAAM,SAAkB,YAAY,MAAM,IAAI,CAAC,EAAE,MAAMA,OAAM,OAAO;AAAA,QAClE,IAAIA,OAAM;AAAA,QACV,QAAQ,GAAGA,OAAM,OAAO,MAAM;AAAA,QAC9B,MAAMA,OAAM,OAAO;AAAA,QACnB,gBAAgBA,OAAM,aAAa,IAAI,CAAC,OAAO,GAAG,EAAE;AAAA,MACtD,EAAE;AAEF,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,yBAEJ,YAC2D;AAC3D,UAAI;AACJ,UAAI,OAAO,eAAe,UAAU;AAClC,oBAAY,EAAE,aAAa,GAAG,UAAU,EAAE,SAAS,EAAE,EAAE;AAAA,MACzD,WAAW,eAAe,UAAU;AAClC,oBAAY,EAAE,cAAc,MAAM,KAAK,eAAe,GAAG,SAAS,EAAE;AAAA,MACtE,OAAO;AACL,oBAAY,EAAE,SAAS,WAAW;AAAA,MACpC;AAEA,YAAM,EAAE,OAAAA,OAAM,IAAI,MAAM,KAAK,WAAW,yBAAyB,SAAS;AAE1E,UAAI,CAACA,QAAO;AACV,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,QACL,IAAIA,OAAM;AAAA,QACV,QAAQ,GAAGA,OAAM,OAAO,QAAQ,EAAE;AAAA,QAClC,MAAMA,OAAM,OAAO;AAAA,QACnB,gBAAgBA,OAAM,aAAa,IAAI,CAAC,OAAO,GAAG,EAAE;AAAA,QACpD,cAAcA,OAAM,aAAa;AAAA,UAC/B,CAAC,OAAO,IAAI,iBAAiB,EAAE,OAAO,SAAS,GAAG,UAAU,GAAG,CAAC,IAAI,CAAC;AAAA,QACvE;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,eACJ,eAC+C;AAC/C,YAAM,EAAE,YAAY,IAAI,MAAM,KAAK,WAAW,eAAe,EAAE,cAAc,CAAC;AAC9E,UAAI,CAAC,aAAa;AAChB,eAAO;AAAA,MACT;AACA,aAAO,IAAI,iBAAiB,EAAE;AAAA,QAC5B,SAAS,YAAY,UAAU;AAAA,QAC/B;AAAA,MACF,IAAI,CAAC;AAAA,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,YAAY,YAAoD;AACpE,YAAM,EAAE,SAAS,IAAI,MAAM,KAAK,WAAW,YAAY,EAAE,WAAW,CAAC;AACrE,UAAI,CAAC,UAAU;AACb,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,mBAEJ,YAEA,SACa;AACb,YAAM,EAAE,gBAAgB,IAAI,MAAM,KAAK,WAAW,mBAAmB;AAAA,QACnE,UAAU,QAAQ,oBAAoB,UAAU,EAAE,OAAO;AAAA,QACzD,OAAO,QAAQ,OAAO;AAAA,MACxB,CAAC;AACD,aAAO,GAAG,gBAAgB,QAAQ,EAAE;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,WAEJ,OAEA,SACa;AACb,YAAM,EAAE,QAAQ,IAAI,MAAM,KAAK,WAAW,WAAW;AAAA,QACnD,OAAO,QAAQ,oBAAoB,KAAK,EAAE,OAAO;AAAA,QACjD,SAAS,QAAQ,OAAO;AAAA,MAC1B,CAAC;AACD,aAAO,GAAG,QAAQ,QAAQ,EAAE;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,YAEJ,OAEA,gBACyB;AACzB,YAAM,SAAS,MAAM,KAAK,WAAW,YAAY;AAAA,QAC/C,OAAO;AAAA,QACP,GAAG;AAAA,QACH,QAAQ,EAAE,OAAO,QAAQ,oBAAoB,KAAK,EAAE,OAAO,EAAE;AAAA,MAC/D,CAAC;AAED,YAAM,WAAW,OAAO,SAAS,MAAM,IAAI,CAAC,SAAS,KAAK,IAAI;AAE9D,aAAO,SAAS,IAAI,CAAC,aAAa;AAAA,QAChC,SAAS,QAAQ;AAAA,QACjB,QAAQ,GAAG,QAAQ,MAAM;AAAA,MAC3B,EAAE;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,YAEJ,SAEA,gBACoB;AACpB,YAAM,SAAS,MAAM,KAAK,WAAW,YAAY;AAAA,QAC/C,OAAO;AAAA,QACP,GAAG;AAAA,QACH,OAAO,QAAQ,oBAAoB,OAAO,EAAE,OAAO;AAAA,MACrD,CAAC;AAED,YAAM,WAAW,OAAO,SAAS,MAAM,IAAI,CAAC,SAAS,KAAK,IAAI;AAE9D,aAAO,SAAS,IAAI,CAAC,aAAa;AAAA,QAChC,WAAW,kBAAkB,aAAa;AAAA,UACxC,QAAQ,QAAQ;AAAA,UAChB,WAAW,QAAQ;AAAA,UACnB,OAAO,QAAQ;AAAA,UACf,QAAQ,GAAG,QAAQ,MAAM;AAAA,UACzB,MAAM,QAAQ;AAAA,QAChB,CAAC;AAAA,QACD,QAAQ,QAAQ,oBAAoB,QAAQ,MAAM;AAAA,QAClD,WAAW,QAAQ,oBAAoB,QAAQ,SAAS;AAAA,QACxD,OAAO,QAAQ;AAAA,QACf,QAAQ,GAAG,QAAQ,MAAM;AAAA,QACzB,MAAM,kBAAkB,WAAW,QAAQ,IAAI;AAAA,QAC/C,UAAU,GAAG,QAAQ,QAAQ;AAAA,MAC/B,EAAE;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,MAAM,gBAEJ,eACA,OACA,eACA,mBAC8B;AAC9B,UAAI,cAOA;AAAA,QACF;AAAA,QACA;AAAA,MACF;AAEA,UAAI,iBAAiB,mBAAmB;AACtC,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAEA,UAAI,eAAe;AACjB,sBAAc;AAAA,UACZ,GAAG;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAEA,UAAI,mBAAmB;AACrB,sBAAc;AAAA,UACZ,GAAG;AAAA;AAAA;AAAA,UAGH,mBAAmB,kBAAkB,SAAS,EAAE,SAAS;AAAA,QAC3D;AAAA,MACF;AAEA,YAAM,SAAS,MAAM,KAAK,WAAW,gBAAgB,WAAW;AAEhE,UAAI,CAAC,OAAO,cAAc;AACxB,eAAO;AAAA,MACT;AAEA,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI,OAAO;AAEX,aAAO;AAAA,QACL,cAAc;AAAA,UACZ,YAAY,GAAG,aAAa,UAAU;AAAA,UACtC,UAAU,aAAa;AAAA,QACzB;AAAA,QACA,YAAY;AAAA,UACV,YAAY,GAAG,WAAW,UAAU;AAAA,UACpC,UAAU,WAAW;AAAA,QACvB;AAAA,QACA,oBAAoB;AAAA,UAClB,IAAI,mBAAmB;AAAA,UACvB,UAAU,GAAG,mBAAmB,QAAQ;AAAA,UACxC,mBAAmB,GAAG,mBAAmB,iBAAiB;AAAA,UAC1D,kBAAkB,mBAAmB;AAAA,UACrC,QAAQ,GAAG,mBAAmB,MAAM;AAAA,UACpC,UAAU,mBAAmB;AAAA,UAC7B,MAAM,mBAAmB;AAAA,UACzB,iBAAiB,mBAAmB;AAAA,UACpC,oBAAoB,mBAAmB;AAAA,UACvC,qBAAqB,GAAG,mBAAmB,mBAAmB;AAAA,QAChE;AAAA,QACA,mBAAmB;AAAA,UACjB,IAAI,kBAAkB;AAAA,UACtB,UAAU,GAAG,kBAAkB,QAAQ;AAAA,UACvC,mBAAmB,GAAG,kBAAkB,iBAAiB;AAAA,UACzD,kBAAkB,kBAAkB;AAAA,UACpC,QAAQ,GAAG,kBAAkB,MAAM;AAAA,UACnC,UAAU,kBAAkB;AAAA,UAC5B,MAAM,kBAAkB;AAAA,UACxB,iBAAiB,kBAAkB;AAAA,UACnC,oBAAoB,kBAAkB;AAAA,UACtC,qBAAqB,GAAG,kBAAkB,mBAAmB;AAAA,QAC/D;AAAA,QACA,QAAQ,QAAQ,oBAAoB,MAAM;AAAA,QAC1C,WAAW,QAAQ,oBAAoB,SAAS;AAAA,QAChD;AAAA,QACA,QAAQ,GAAG,MAAM;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,iBAEJ,OACwB;AACxB,YAAM,SAAS,MAAM,KAAK,WAAW,iBAAiB,EAAE,MAAM,CAAC;AAC/D,aAAO,OAAO;AAAA,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,cAAc,QAAgB,WAAoB;AACtD,YAAM,EAAE,eAAe,kBAAkB,IAAI,MAAM,KAAK,WAAW,cAAc;AAAA,QAC/E,iBAAiB,GAAG,MAAM,EAAE,SAAS,EAAE;AAAA,QACvC,gBAAgB,YAAY,SAAS,qBAAqB,SAAS,EAAE,QAAQ,IAAI;AAAA,MACnF,CAAC;AACD,aAAO,GAAG,iBAAiB;AAAA,IAC7B;AAAA;AAAA,IAGA,MAAM,uBAAuB,eAAqD;AAChF,aAAO,IAAID,qBAAoB,eAAe,IAAI;AAAA,IACpD;AAAA,EACF;AAhnCA,MAAqB,WAArB;AAkRE;AAAA,mBAAY,SAAC,QAAyC;AACpD,QAAI,CAAC,KAAK,OAAO;AACf;AAAA,IACF;AAEA,WAAO,QAAQ,CAAC,UAAU;AACxB,UAAI,MAAM,SAAS,UAAU,MAAM;AACjC,aAAK,OAAO,IAAI,MAAM,EAAE;AAAA,MAC1B;AAAA,IACF,CAAC;AAAA,EACH;AAnRA,gBATmB,UASJ,kBAAiC,CAAC;AACjD,gBAVmB,UAUJ,iBAA+B,CAAC;;;AoEjSjD,iBAAsB,sBACpB,QAC4B;AAC5B,UAAM,EAAE,IAAI,UAAU,OAAO,IAAI;AAEjC,UAAM,EAAE,aAAa,eAAe,IAAI,MAAM,SAAS,WAAW,2BAA2B;AAAA,MAC3F,eAAe;AAAA,IACjB,CAAC;AAED,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV,uCAAuC;AAAA,MACzC;AAAA,IACF;AAEA,UAAM,CAAC,kBAAkB,IAAI,IAAI,iBAAiB,EAAE;AAAA,MAClD,SAAS,eAAe,UAAU;AAAA,MAClC;AAAA,IACF;AAEA,UAAM,WAAW,eAAe,UAAU,IAAI,iBAAiB,KAAK,CAAC;AAErE,UAAM;AAAA,MACJ,qBAAqB,EAAE,YAAY,gBAAgB,WAAW,SAAS;AAAA,IACzE,IAAI,SAAS,SAAS;AAEtB,UAAM,kBAAkB,2BAA6C;AAAA,MACnE,IAAI,eAAe;AAAA,MACnB;AAAA,MACA,aAAa;AAAA,MACb,kBAAkB,SAAS,eAAe,UAAU;AAAA,MACpD,sBAAsB,eAAe;AAAA,MACrC,YAAY,GAAG,UAAU;AAAA,MACzB,gBAAgB,GAAG,cAAc;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,WAAO;AAAA,MACL;AAAA,MACA,GAAG;AAAA,IACL;AAAA,EACF;AASA,iBAAsB,iCACpB,QAC+C;AAC/C,UAAM,EAAE,UAAU,oBAAoB,OAAO,IAAI;AAEjD,UAAM,EAAE,SAAS,IAAI,MAAM,SAAS,KAAK,kBAAkB;AAE3D,UAAM,EAAE,YAAY,gBAAgB,SAAS,IAAI,SAAS,aAAa;AACvE,UAAM,YAAY,SAAS,SAAS,EAAE,oBAAoB;AAE1D,UAAM,cAAc,mBAAmB,cAAc;AACrD,UAAM,mBAAmB,mBAAmB,mBAAmB;AAE/D,UAAM,qBAAqB,2BAA6C;AAAA,MACtE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAcA,iBAAsB,yBACpB,QAC0C;AAC1C,UAAM,EAAE,SAAS,UAAU,OAAO,IAAI;AAEtC,UAAM,EAAE,oBAAoB,IAAI,MAAM,SAAS,WAAW,uBAAuB,OAAO;AAExF,UAAM,EAAE,OAAO,SAAS,IAAI;AAE5B,UAAM;AAAA,MACJ,qBAAqB,EAAE,YAAY,gBAAgB,WAAW,SAAS;AAAA,IACzE,IAAI,SAAS,SAAS;AAEtB,UAAM,eAAe,MAAM,IAAI,CAAC,SAAS;AACvC,YAAM,EAAE,MAAM,eAAe,IAAI;AAEjC,YAAM,EAAE,IAAI,YAAY,UAAU,aAAa,OAAO,IAAI;AAE1D,YAAM,CAAC,kBAAkB,IAAI,IAAI,iBAAiB,EAAE,OAAO,SAAS,UAAU,GAAG,CAAC;AAElF,YAAM,WAAW,aAAa,IAAI,iBAAiB,KAAK,CAAC;AAEzD,YAAM,qBAAqB,2BAA2B;AAAA,QACpD;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb,kBAAkB,SAAS,UAAU;AAAA,QACrC,sBAAsB;AAAA,QACtB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAED,YAAME,UAA4B;AAAA,QAChC;AAAA,QACA,GAAG;AAAA,MACL;AAEA,aAAOA;AAAA,IACT,CAAC;AAED,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;;;ACnKO,MAAM,YAAY;AAAA,IACvB,KAAK;AAAA,MACH,SAAS;AAAA,MACT,SAAS;AAAA,IACX;AAAA,IACA,MAAM;AAAA,MACJ,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,EACF;;;ACCO,MAAM,oBAAoB,CAAC,gBAAkD;AAClF,QAAI,gBAAgB,YAAY;AAC9B,aAAO,UAAU,IAAI;AAAA,IACvB;AACA,QAAI,gBAAgB,QAAQ;AAC1B,aAAO,UAAU,KAAK;AAAA,IACxB;AAEA,WAAO;AAAA,EACT;AAYO,MAAM,kBAAkB,CAAqC;AAAA,IAClE;AAAA,IACA;AAAA,IACA;AAAA,EACF,MAAyD;AACvD,UAAM,UAAU,MAAM,SAAS;AAAA,MAC7B,CAAC,SAAS,KAAK,YAAY,WAAW,KAAK,SAAS;AAAA,IACtD;AAEA,WAAO;AAAA,EACT;AAMO,MAAM,sBAAsB,CAAyB;AAAA,IAC1D;AAAA,IACA;AAAA,IACA;AAAA,EACF,MAAkE;AAChE,UAAM,EAAE,UAAU,GAAG,GAAG,UAAU,IAAI;AAEtC,UAAM,eAAe,WAAW,kBAAkB,WAAW;AAE7D,QAAI,iBAAiB,QAAW;AAC9B,aAAO;AAAA,IACT;AAEA,UAAM,eAAe,gBAAgB;AAAA,MACnC;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACF,CAAC;AAED,QAAI,CAAC,cAAc;AACjB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AAKO,MAAM,cAAc,CAAC,OAAc,YACxC,oBAAoB;AAAA,IAClB;AAAA,IACA,aAAa;AAAA,IACb;AAAA,EACF,CAAC;AAKI,MAAM,eAAe,CAAC,OAAc,YACzC,oBAAoB;AAAA,IAClB;AAAA,IACA,aAAa;AAAA,IACb;AAAA,EACF,CAAC;;;AC9FH,MAAM,iBAAiB;AACvB,MAAM,YAAY;AAClB,MAAM,WAAW,CAAC,OAAO,OAAO,KAAK,QAAQ,WAAW,EAAE;AAEnD,WAAS,QAAQ,YAAgC,OAA8B;AACpF,UAAM,aAAa,YAAY,QAAQ,YAAY;AACnD,UAAM,WAAW,UAAU,CAAC,MAAM,OAAO,QAAQ,SAAS;AAC1D,UAAM,WAAW,CAAC,SAAS,GAAG,KAAK,EAAE,OAAO,OAAO,EAAE,IAAI,QAAQ;AACjE,QAAI,YAAY,YAAY;AAC1B,eAAS,QAAQ,EAAE;AAAA,IACrB;AACA,WAAO,SAAS,KAAK,cAAc;AAAA,EACrC;;;ACFO,WAAS,iBAAiBC,SAAgB,WAAW,MAAM;AAChE,WAAOA,QAAO,IAAI,CAAC,WAAW;AAAA,MAC5B,GAAG;AAAA,MACH,MAAM,QAAQ,UAAU,MAAM,IAAI;AAAA,IACpC,EAAE;AAAA,EACJ;;;ACXO,MAAM,SAAiB;AAAA,IAC5B;AAAA,MACE,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,SAAS,UAAU,IAAI;AAAA,UACvB,UAAU;AAAA,QACZ;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,SAAS,UAAU,IAAI;AAAA,UACvB,UAAU;AAAA,QACZ;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,SAAS,UAAU,KAAK;AAAA,UACxB,UAAU;AAAA,UACV,SAAS;AAAA,QACX;AAAA,QACA;AAAA,UACE,MAAM;AAAA,UACN,SAAS,UAAU,KAAK;AAAA,UACxB,UAAU;AAAA,UACV,SAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAAA,EACF;;;AC9BA,YAAqB;AAQd,MAAM,qCAAqC,CAChD,WACG;AACH,UAAM,EAAE,SAAS,kBAAkB,oBAAoB,IAAI;AAE3D,UAAM,cAAc,IAAI,eAAe,KAAK;AAE5C,UAAM,UAAU,YAAY,OAAO,IAAI,GAAG,gBAAgB,EAAE,SAAS,CAAC;AAEtE,UAAM,aAAa,WAAW,KAAK;AAAA,MACjC,GAAG,SAAS,mBAAmB;AAAA,MAC/B,GAAG;AAAA,MACH,GAAG,SAAS,OAAO;AAAA,IACrB,CAAC;AAED,WAAO;AAAA,EACT;AAEO,MAAM,mCAAmC,OAC9C,WACG;AACH,UAAM,aAAa,mCAAmC,MAAM;AAa5D,UAAU,aAAS;AAGnB,UAAMC,OAAU,QAAI,IAAM,GAAU,YAAQ,UAAU;AACtD,UAAMC,QAAW,SAAK,IAAM,IAAM,EAAI;AACtC,UAAMC,MAAS,OAAG,IAAM,IAAM,CAAG;AACjC,UAAMC,SAAY,SAAK,IAAM,IAAM,CAAG;AACtC,UAAMC,MAAS,OAAG,IAAM,IAAM,EAAI;AAClC,UAAMC,OAAU,QAAI,CAAG;AAEvB,UAAM,SAAS,WAAW,KAAK;AAAA,MAC7B,GAAGL,KAAI,SAAS;AAAA,MAChB,GAAGC,MAAK,SAAS;AAAA,MACjB,GAAGC,IAAG,SAAS;AAAA,MACf,GAAGC,OAAM,SAAS;AAAA,MAClB,GAAGC,IAAG,SAAS;AAAA,MACf,GAAGC,KAAI,SAAS;AAAA,IAClB,CAAC;AAED,WAAO,EAAE,QAAQ,WAAW;AAAA,EAC9B;;;ACxBO,MAAM,UAAN,cAAsB,gBAAgB;AAAA;AAAA;AAAA;AAAA,IAIlC;AAAA;AAAA;AAAA;AAAA,IAKC;AAAA,IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQV,YAAY,SAAmC,UAAqB,WAA2B;AAC7F,YAAM;AACN,WAAK,YAAY;AACjB,WAAK,aAAa;AAClB,WAAK,UAAU,QAAQ,iBAAiB,OAAO;AAAA,IACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,IAAI,WAAqB;AACvB,UAAI,CAAC,KAAK,WAAW;AACnB,cAAM,IAAI,UAAU,UAAU,kBAAkB,kBAAkB;AAAA,MACpE;AAEA,aAAO,KAAK;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,IAAI,SAAS,UAAoB;AAC/B,WAAK,YAAY;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,QAAQ,UAA8B;AACpC,WAAK,YAAY;AACjB,aAAO,KAAK;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,oBACJ,YACA,aACqB;AACrB,aAAO,KAAK,SAAS,oBAAoB,KAAK,SAAS,YAAY,WAAW;AAAA,IAChF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,SAAS,SAAsC;AACnD,YAAM,QAAQ,CAAC;AAEf,YAAM,WAAW;AACjB,UAAI;AAEJ,iBAAS;AACP,cAAM,YAAY,MAAM,KAAK,SAAS,SAAS,KAAK,SAAS,SAAS;AAAA,UACpE,OAAO;AAAA,UACP,OAAO;AAAA,QACT,CAAC;AAED,cAAM,KAAK,GAAG,SAAS;AAEvB,cAAM,cAAc,UAAU,UAAU;AACxC,YAAI,CAAC,aAAa;AAChB;AAAA,QACF;AAGA,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,gCAAgC;AAAA,QAClC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,cAAkC;AACtC,YAAM,WAAW,CAAC;AAElB,YAAM,WAAW;AACjB,UAAI;AAEJ,iBAAS;AACP,cAAM,eAAe,MAAM,KAAK,SAAS,YAAY,KAAK,SAAS;AAAA,UACjE,OAAO;AAAA,UACP,OAAO;AAAA,QACT,CAAC;AAED,iBAAS,KAAK,GAAG,YAAY;AAE7B,cAAM,cAAc,aAAa,UAAU;AAC3C,YAAI,CAAC,aAAa;AAChB;AAAA,QACF;AAGA,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,gCAAgC;AAAA,QAClC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,WAAW,UAAqB,aAA0B;AAC9D,YAAM,SAAS,MAAM,KAAK,SAAS,WAAW,KAAK,SAAS,OAAO;AACnE,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,cAAuC;AAC3C,YAAM,WAAW,CAAC;AAElB,YAAM,WAAW;AACjB,UAAI;AAEJ,iBAAS;AACP,cAAM,eAAe,MAAM,KAAK,SAAS,YAAY,KAAK,SAAS;AAAA,UACjE,OAAO;AAAA,UACP,OAAO;AAAA,QACT,CAAC;AAED,iBAAS,KAAK,GAAG,YAAY;AAE7B,cAAM,cAAc,aAAa,UAAU;AAC3C,YAAI,CAAC,aAAa;AAChB;AAAA,QACF;AAGA,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,gCAAgC;AAAA,QAClC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,MAAM,KACJ,SACA,gBACA,KACe;AACf,YAAM,oBAAoB,iBAAiB;AAAA,QACzC,QAAQ,GAAG,GAAG;AAAA,QACd,SAAS;AAAA,QACT;AAAA,MACF,CAAC;AAED,YAAM,iBAA8D,CAAC;AAErE,wBAAkB,QAAQ,CAAC,EAAE,QAAQ,QAAQ,MAAM;AACjD,uBAAe,OAAO,IAAI;AAAA,UACxB,UAAU;AAAA,UACV,OAAO,GAAG,CAAC;AAAA,QACb;AAAA,MACF,CAAC;AAED,YAAM,cAA2B,CAAC;AAClC,YAAM,iBAA8B,CAAC;AAErC,YAAM,QAAQ,KAAK,QAAQ,OAAO;AAElC,cAAQ,OAAO,QAAQ,CAAC,UAAU;AAChC,cAAM,aAAa,YAAY;AAE/B,YAAI,YAAY;AACd,gBAAMC,UAAS,WAAW;AAE1B,cAAIA,SAAQ;AACV,kBAAM,UAAU,OAAO,MAAM,OAAO;AACpC,gBAAI,MAAM,UAAU,SAAS,eAAe,OAAO,GAAG;AACpD,oBAAM,SAAS,GAAG,MAAM,MAAM;AAC9B,6BAAe,OAAO,EAAE,QAAQ,eAAe,OAAO,EAAE,MAAM,IAAI,MAAM;AAGxE,0BAAY,KAAK,MAAM,EAAE;AAAA,YAC3B;AAAA,UACF,WAAW,MAAM,cAAc,SAAS,MAAM,UAAU,eAAe,WAAW,GAAG;AACnF,2BAAe,WAAW,EAAE,QAAQ,eAAe,WAAW,EAAE,MAAM,IAAI,MAAM,MAAM;AAGtF,2BAAe,KAAK,MAAM,KAAK;AAAA,UACjC;AAAA,QACF;AAAA,MACF,CAAC;AAED,YAAM,oBAAoC,CAAC;AAC3C,aAAO,QAAQ,cAAc,EAAE,QAAQ,CAAC,CAAC,SAAS,EAAE,OAAO,SAAS,CAAC,MAAM;AACzE,YAAI,MAAM,GAAG,QAAQ,GAAG;AACtB,4BAAkB,KAAK;AAAA,YACrB;AAAA,YACA,QAAQ,SAAS,IAAI,KAAK;AAAA,UAC5B,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAED,YAAM,kBAAkB,kBAAkB;AAE1C,UAAI,iBAAiB;AACnB,cAAM,YAAY,MAAM,KAAK,oBAAoB,mBAAmB;AAAA,UAClE,UAAU;AAAA,UACV,OAAO;AAAA,QACT,CAAC;AACD,gBAAQ,aAAa,SAAS;AAAA,MAChC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,MAAM,eAEJ,aAEA,QAEA,UAAqB,aAErB,WAAyB,CAAC,GACG;AAC7B,YAAM,EAAE,YAAY,IAAI,KAAK,SAAS,aAAa;AACnD,YAAM,SAAS,EAAE,UAAU,aAAa,GAAG,SAAS;AACpD,YAAM,UAAU,IAAI,yBAAyB,MAAM;AACnD,cAAQ,cAAc,QAAQ,oBAAoB,WAAW,GAAG,QAAQ,OAAO;AAC/E,YAAM,EAAE,QAAQ,oBAAoB,SAAS,gBAAgB,IAC3D,MAAM,KAAK,SAAS,mBAAmB,SAAS,CAAC,GAAG;AAAA,QAClD,wBAAwB;AAAA,QACxB,gBAAgB;AAAA,MAClB,CAAC;AAEH,cAAQ,WAAW,GAAG,SAAS,YAAY,WAAW;AACtD,cAAQ,WAAW,GAAG,SAAS,YAAY,OAAO;AAElD,WAAK,YAAY;AAAA,QACf;AAAA,QACA,UAAU,QAAQ;AAAA,QAClB,UAAU,QAAQ;AAAA,QAClB;AAAA,MACF,CAAC;AAED,YAAM,KAAK,KAAK,SAAS,oBAAoB,MAAM;AAEnD,cAAQ,sBAAsB,eAAe;AAE7C,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,MAAM,SAEJ,aAEA,QAEA,UAAqB,aAErB,WAAyB,CAAC,GACI;AAC9B,UAAI,GAAG,MAAM,EAAE,IAAI,CAAC,GAAG;AACrB,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV;AAAA,QACF;AAAA,MACF;AACA,YAAM,UAAU,MAAM,KAAK,eAAe,aAAa,QAAQ,SAAS,QAAQ;AAChF,aAAO,KAAK,gBAAgB,SAAS,EAAE,wBAAwB,MAAM,CAAC;AAAA,IACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,MAAM,mBAEJ,YAEA,QAEA,UAAqB,aAErB,WAAyB,CAAC,GACI;AAC9B,UAAI,GAAG,MAAM,EAAE,IAAI,CAAC,GAAG;AACrB,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAEA,YAAM,kBAAkB,QAAQ,oBAAoB,UAAU;AAC9D,YAAM,EAAE,YAAY,IAAI,KAAK,SAAS,aAAa;AACnD,YAAM,SAAS,EAAE,UAAU,aAAa,GAAG,SAAS;AAEpD,YAAM,EAAE,QAAQ,WAAW,IAAI,MAAM,iCAAiC;AAAA,QACpE,qBAAqB,gBAAgB,OAAO;AAAA,QAC5C,kBAAkB,GAAG,MAAM;AAAA,QAC3B;AAAA,MACF,CAAC;AAED,YAAM,UAAU,IAAI,yBAAyB;AAAA,QAC3C,GAAG;AAAA,QACH;AAAA,QACA;AAAA,MACF,CAAC;AAED,cAAQ,0BAA0B,eAAe;AAEjD,YAAM,EAAE,QAAQ,oBAAoB,QAAQ,IAAI,MAAM,KAAK,SAAS;AAAA,QAClE;AAAA,QACA,CAAC,EAAE,QAAQ,GAAG,MAAM,GAAG,SAAS,OAAO,OAAO,EAAE,CAAC;AAAA,MACnD;AAEA,cAAQ,WAAW,GAAG,OAAO,YAAY,OAAO;AAEhD,WAAK,YAAY;AAAA,QACf;AAAA,QACA,UAAU,QAAQ;AAAA,QAClB,UAAU,QAAQ;AAAA,QAClB;AAAA,MACF,CAAC;AAED,YAAM,KAAK,KAAK,SAAS,oBAAoB,MAAM;AAEnD,aAAO,KAAK,gBAAgB,OAAO;AAAA,IACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,MAAM,oBAEJ,WAEA,QAEA,WAAyB,CAAC,GACI;AAC9B,YAAM,EAAE,YAAY,IAAI,KAAK,SAAS,aAAa;AAEnD,YAAM,mBAAmB,QAAQ,oBAAoB,SAAS;AAE9D,YAAM,qBAAqB;AAAA,QACzB,KAAK,OAAO,iBAAiB,YAAY,EAAE,UAAU,CAAC,EAAE,SAAS,IAAI,GAAG,CAAC;AAAA,MAC3E;AACA,YAAM,kBAAkB;AAAA,QACtB,KAAK,OAAO,GAAG,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,EAAE,SAAS,IAAI,GAAG,CAAC;AAAA,MAC/D;AACA,YAAM,SAAS,IAAI,WAAW;AAAA,QAC5B,GAAG,SAAS,eAAe,KAAK;AAAA,QAChC,GAAG;AAAA,QACH,GAAG;AAAA,MACL,CAAC;AAED,YAAM,SAAuC,EAAE,QAAQ,UAAU,aAAa,GAAG,SAAS;AAE1F,YAAM,UAAU,IAAI,yBAAyB,MAAM;AACnD,YAAM,uBAAuB,CAAC,EAAE,QAAQ,GAAG,MAAM,GAAG,SAAS,YAAY,CAAC;AAE1E,YAAM,EAAE,oBAAoB,QAAQ,QAAQ,IAAI,MAAM,KAAK,SAAS;AAAA,QAClE;AAAA,QACA;AAAA,MACF;AAEA,cAAQ,WAAW,GAAG,OAAO,YAAY,OAAO;AAEhD,WAAK,YAAY;AAAA,QACf;AAAA,QACA,UAAU,QAAQ;AAAA,QAClB,UAAU,QAAQ;AAAA,QAClB;AAAA,MACF,CAAC;AAED,YAAM,KAAK,KAAK,SAAS,oBAAoB,MAAM;AAEnD,aAAO,KAAK,gBAAgB,OAAO;AAAA,IACrC;AAAA,IAEA,MAAM,YAAY,SAAkC;AAClD,UAAI,CAAC,KAAK,YAAY;AACpB,cAAM,IAAI,UAAU,UAAU,mBAAmB,2CAA2C;AAAA,MAC9F;AACA,aAAO,KAAK,WAAW,YAAY,KAAK,QAAQ,SAAS,GAAG,OAAO;AAAA,IACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,gBAAgB,wBAAiE;AACrF,UAAI,CAAC,KAAK,YAAY;AACpB,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV;AAAA,QACF;AAAA,MACF;AACA,aAAO,KAAK,WAAW,gBAAgB,KAAK,QAAQ,SAAS,GAAG,sBAAsB;AAAA,IACxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,gBACJ,wBACA,EAAE,yBAAyB,MAAM,eAAe,IAA0B,CAAC,GAC7C;AAC9B,UAAI,KAAK,YAAY;AACnB,eAAO,KAAK,SAAS;AAAA,UACnB,MAAM,KAAK,WAAW,gBAAgB,KAAK,QAAQ,SAAS,GAAG,sBAAsB;AAAA,QACvF;AAAA,MACF;AACA,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,UAAI,wBAAwB;AAC1B,cAAM,KAAK,SAAS,uBAAuB,kBAAkB;AAAA,MAC/D;AACA,aAAO,KAAK,SAAS,gBAAgB,oBAAoB;AAAA,QACvD;AAAA,QACA,wBAAwB;AAAA,MAC1B,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,oBACJ,wBACA,EAAE,yBAAyB,KAAK,IAA+B,CAAC,GAC3C;AACrB,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,UAAI,wBAAwB;AAC1B,cAAM,KAAK,SAAS,uBAAuB,kBAAkB;AAAA,MAC/D;AACA,aAAO,KAAK,SAAS,SAAS,oBAAoB,EAAE,wBAAwB,MAAM,CAAC;AAAA,IACrF;AAAA,IAEQ,YAAY;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAKG;AACD,UAAI,YAAY,GAAG,QAAQ,GAAG;AAC5B,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,cAAc,0CAA0C;AAAA,QAC1D;AAAA,MACF;AAEA,UAAI,QAAQ,GAAG,QAAQ,GAAG;AACxB,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,cAAc,0CAA0C;AAAA,QAC1D;AAAA,MACF;AAAA,IACF;AAAA,EACF;;;ACrkBA,MAAMC,OAAM,OAAO,CAAC;AAApB,MAAuBC,OAAM,OAAO,CAAC;AAArC,MAAwCC,OAAM,OAAO,CAAC;AAAtD,MAAyD,MAAM,OAAO,CAAC;AAEvE,MAAM,MAAM,OAAO,CAAC;AAApB,MAAuB,MAAM,OAAO,CAAC;AAArC,MAAwC,MAAM,OAAO,CAAC;AAEtD,MAAM,MAAM,OAAO,CAAC;AAApB,MAAuB,OAAO,OAAO,EAAE;AAGjC,WAAU,IAAI,GAAW,GAAS;AACtC,UAAM,SAAS,IAAI;AACnB,WAAO,UAAUF,OAAM,SAAS,IAAI;EACtC;AAQM,WAAU,IAAI,KAAa,OAAe,QAAc;AAC5D,QAAI,UAAUA,QAAO,QAAQA;AAAK,YAAM,IAAI,MAAM,2BAA2B;AAC7E,QAAI,WAAWC;AAAK,aAAOD;AAC3B,QAAI,MAAMC;AACV,WAAO,QAAQD,MAAK;AAClB,UAAI,QAAQC;AAAK,cAAO,MAAM,MAAO;AACrC,YAAO,MAAM,MAAO;AACpB,gBAAUA;IACZ;AACA,WAAO;EACT;AAGM,WAAU,KAAK,GAAW,OAAe,QAAc;AAC3D,QAAI,MAAM;AACV,WAAO,UAAUD,MAAK;AACpB,aAAO;AACP,aAAO;IACT;AACA,WAAO;EACT;AAGM,WAAU,OAAOG,SAAgB,QAAc;AACnD,QAAIA,YAAWH,QAAO,UAAUA,MAAK;AACnC,YAAM,IAAI,MAAM,6CAA6CG,eAAc,QAAQ;IACrF;AAGA,QAAI,IAAI,IAAIA,SAAQ,MAAM;AAC1B,QAAI,IAAI;AAER,QAAI,IAAIH,MAAK,IAAIC,MAAK,IAAIA,MAAK,IAAID;AACnC,WAAO,MAAMA,MAAK;AAEhB,YAAM,IAAI,IAAI;AACd,YAAM,IAAI,IAAI;AACd,YAAM,IAAI,IAAI,IAAI;AAClB,YAAM,IAAI,IAAI,IAAI;AAElB,UAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;IACzC;AACA,UAAM,MAAM;AACZ,QAAI,QAAQC;AAAK,YAAM,IAAI,MAAM,wBAAwB;AACzD,WAAO,IAAI,GAAG,MAAM;EACtB;AAUM,WAAU,cAAc,GAAS;AAMrC,UAAM,aAAa,IAAIA,QAAOC;AAE9B,QAAI,GAAW,GAAW;AAG1B,SAAK,IAAI,IAAID,MAAK,IAAI,GAAG,IAAIC,SAAQF,MAAK,KAAKE,MAAK;AAAI;AAGxD,SAAK,IAAIA,MAAK,IAAI,KAAK,IAAI,GAAG,WAAW,CAAC,MAAM,IAAID,MAAK;AAAI;AAG7D,QAAI,MAAM,GAAG;AACX,YAAM,UAAU,IAAIA,QAAO;AAC3B,aAAO,SAAS,YAAeG,KAAe,GAAI;AAChD,cAAM,OAAOA,IAAG,IAAI,GAAG,MAAM;AAC7B,YAAI,CAACA,IAAG,IAAIA,IAAG,IAAI,IAAI,GAAG,CAAC;AAAG,gBAAM,IAAI,MAAM,yBAAyB;AACvE,eAAO;MACT;IACF;AAGA,UAAM,UAAU,IAAIH,QAAOC;AAC3B,WAAO,SAAS,YAAeE,KAAe,GAAI;AAEhD,UAAIA,IAAG,IAAI,GAAG,SAAS,MAAMA,IAAG,IAAIA,IAAG,GAAG;AAAG,cAAM,IAAI,MAAM,yBAAyB;AACtF,UAAI,IAAI;AAER,UAAI,IAAIA,IAAG,IAAIA,IAAG,IAAIA,IAAG,KAAK,CAAC,GAAG,CAAC;AACnC,UAAI,IAAIA,IAAG,IAAI,GAAG,MAAM;AACxB,UAAI,IAAIA,IAAG,IAAI,GAAG,CAAC;AAEnB,aAAO,CAACA,IAAG,IAAI,GAAGA,IAAG,GAAG,GAAG;AACzB,YAAIA,IAAG,IAAI,GAAGA,IAAG,IAAI;AAAG,iBAAOA,IAAG;AAElC,YAAI,IAAI;AACR,iBAAS,KAAKA,IAAG,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK;AACnC,cAAIA,IAAG,IAAI,IAAIA,IAAG,GAAG;AAAG;AACxB,eAAKA,IAAG,IAAI,EAAE;QAChB;AAEA,cAAM,KAAKA,IAAG,IAAI,GAAGH,QAAO,OAAO,IAAI,IAAI,CAAC,CAAC;AAC7C,YAAIG,IAAG,IAAI,EAAE;AACb,YAAIA,IAAG,IAAI,GAAG,EAAE;AAChB,YAAIA,IAAG,IAAI,GAAG,CAAC;AACf,YAAI;MACN;AACA,aAAO;IACT;EACF;AAEM,WAAU,OAAO,GAAS;AAM9B,QAAI,IAAI,QAAQ,KAAK;AAKnB,YAAM,UAAU,IAAIH,QAAO;AAC3B,aAAO,SAAS,UAAaG,KAAe,GAAI;AAC9C,cAAM,OAAOA,IAAG,IAAI,GAAG,MAAM;AAE7B,YAAI,CAACA,IAAG,IAAIA,IAAG,IAAI,IAAI,GAAG,CAAC;AAAG,gBAAM,IAAI,MAAM,yBAAyB;AACvE,eAAO;MACT;IACF;AAGA,QAAI,IAAI,QAAQ,KAAK;AACnB,YAAM,MAAM,IAAI,OAAO;AACvB,aAAO,SAAS,UAAaA,KAAe,GAAI;AAC9C,cAAM,KAAKA,IAAG,IAAI,GAAGF,IAAG;AACxB,cAAM,IAAIE,IAAG,IAAI,IAAI,EAAE;AACvB,cAAM,KAAKA,IAAG,IAAI,GAAG,CAAC;AACtB,cAAM,IAAIA,IAAG,IAAIA,IAAG,IAAI,IAAIF,IAAG,GAAG,CAAC;AACnC,cAAM,OAAOE,IAAG,IAAI,IAAIA,IAAG,IAAI,GAAGA,IAAG,GAAG,CAAC;AACzC,YAAI,CAACA,IAAG,IAAIA,IAAG,IAAI,IAAI,GAAG,CAAC;AAAG,gBAAM,IAAI,MAAM,yBAAyB;AACvE,eAAO;MACT;IACF;AAGA,QAAI,IAAI,SAAS,KAAK;IAoBtB;AAGA,WAAO,cAAc,CAAC;EACxB;AAgDA,MAAM,eAAe;IACnB;IAAU;IAAW;IAAO;IAAO;IAAO;IAAQ;IAClD;IAAO;IAAO;IAAO;IAAO;IAAO;IACnC;IAAQ;IAAQ;IAAQ;;AAEpB,WAAU,cAAiB,OAAgB;AAC/C,UAAM,UAAU;MACd,OAAO;MACP,MAAM;MACN,OAAO;MACP,MAAM;;AAER,UAAM,OAAO,aAAa,OAAO,CAAC,KAAK,QAAe;AACpD,UAAI,GAAG,IAAI;AACX,aAAO;IACT,GAAG,OAAO;AACV,WAAO,eAAe,OAAO,IAAI;EACnC;AAQM,WAAU,MAASC,IAAc,KAAQ,OAAa;AAG1D,QAAI,QAAQC;AAAK,YAAM,IAAI,MAAM,oBAAoB;AACrD,QAAI,UAAUA;AAAK,aAAOD,GAAE;AAC5B,QAAI,UAAUE;AAAK,aAAO;AAC1B,QAAI,IAAIF,GAAE;AACV,QAAI,IAAI;AACR,WAAO,QAAQC,MAAK;AAClB,UAAI,QAAQC;AAAK,YAAIF,GAAE,IAAI,GAAG,CAAC;AAC/B,UAAIA,GAAE,IAAI,CAAC;AACX,gBAAUE;IACZ;AACA,WAAO;EACT;AAMM,WAAU,cAAiBF,IAAc,MAAS;AACtD,UAAM,MAAM,IAAI,MAAM,KAAK,MAAM;AAEjC,UAAM,iBAAiB,KAAK,OAAO,CAAC,KAAK,KAAK,MAAK;AACjD,UAAIA,GAAE,IAAI,GAAG;AAAG,eAAO;AACvB,UAAI,CAAC,IAAI;AACT,aAAOA,GAAE,IAAI,KAAK,GAAG;IACvB,GAAGA,GAAE,GAAG;AAER,UAAM,WAAWA,GAAE,IAAI,cAAc;AAErC,SAAK,YAAY,CAAC,KAAK,KAAK,MAAK;AAC/B,UAAIA,GAAE,IAAI,GAAG;AAAG,eAAO;AACvB,UAAI,CAAC,IAAIA,GAAE,IAAI,KAAK,IAAI,CAAC,CAAC;AAC1B,aAAOA,GAAE,IAAI,KAAK,GAAG;IACvB,GAAG,QAAQ;AACX,WAAO;EACT;AAgBM,WAAU,QAAQ,GAAW,YAAmB;AAEpD,UAAM,cAAc,eAAe,SAAY,aAAa,EAAE,SAAS,CAAC,EAAE;AAC1E,UAAM,cAAc,KAAK,KAAK,cAAc,CAAC;AAC7C,WAAO,EAAE,YAAY,aAAa,YAAW;EAC/C;AAeM,WAAU,MACd,OACAG,SACAC,QAAO,OACP,QAAiC,CAAA,GAAE;AAEnC,QAAI,SAASC;AAAK,YAAM,IAAI,MAAM,iCAAiC,OAAO;AAC1E,UAAM,EAAE,YAAY,MAAM,aAAa,MAAK,IAAK,QAAQ,OAAOF,OAAM;AACtE,QAAI,QAAQ;AAAM,YAAM,IAAI,MAAM,iDAAiD;AACnF,UAAM,QAAQ,OAAO,KAAK;AAC1B,UAAMG,KAAuB,OAAO,OAAO;MACzC;MACA;MACA;MACA,MAAM,QAAQ,IAAI;MAClB,MAAMD;MACN,KAAKE;MACL,QAAQ,CAAC,QAAQ,IAAI,KAAK,KAAK;MAC/B,SAAS,CAAC,QAAO;AACf,YAAI,OAAO,QAAQ;AACjB,gBAAM,IAAI,MAAM,+CAA+C,OAAO,KAAK;AAC7E,eAAOF,QAAO,OAAO,MAAM;MAC7B;MACA,KAAK,CAAC,QAAQ,QAAQA;MACtB,OAAO,CAAC,SAAS,MAAME,UAASA;MAChC,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,KAAK;MAC7B,KAAK,CAAC,KAAK,QAAQ,QAAQ;MAE3B,KAAK,CAAC,QAAQ,IAAI,MAAM,KAAK,KAAK;MAClC,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,KAAK,KAAK;MACvC,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,KAAK,KAAK;MACvC,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,KAAK,KAAK;MACvC,KAAK,CAAC,KAAK,UAAU,MAAMD,IAAG,KAAK,KAAK;MACxC,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,OAAO,KAAK,KAAK,GAAG,KAAK;;MAGtD,MAAM,CAAC,QAAQ,MAAM;MACrB,MAAM,CAAC,KAAK,QAAQ,MAAM;MAC1B,MAAM,CAAC,KAAK,QAAQ,MAAM;MAC1B,MAAM,CAAC,KAAK,QAAQ,MAAM;MAE1B,KAAK,CAAC,QAAQ,OAAO,KAAK,KAAK;MAC/B,MAAM,MAAM,SAAS,CAAC,MAAM,MAAMA,IAAG,CAAC;MACtC,aAAa,CAAC,QAAQ,cAAcA,IAAG,GAAG;;;MAG1C,MAAM,CAAC,GAAG,GAAG,MAAO,IAAI,IAAI;MAC5B,SAAS,CAAC,QAASF,QAAO,gBAAgB,KAAK,KAAK,IAAI,gBAAgB,KAAK,KAAK;MAClF,WAAW,CAACI,WAAS;AACnB,YAAIA,OAAM,WAAW;AACnB,gBAAM,IAAI,MAAM,0BAA0B,cAAcA,OAAM,QAAQ;AACxE,eAAOJ,QAAO,gBAAgBI,MAAK,IAAI,gBAAgBA,MAAK;MAC9D;KACU;AACZ,WAAO,OAAO,OAAOF,EAAC;EACxB;AAwCM,WAAU,oBAAoB,YAAkB;AACpD,QAAI,OAAO,eAAe;AAAU,YAAM,IAAI,MAAM,4BAA4B;AAChF,UAAM,YAAY,WAAW,SAAS,CAAC,EAAE;AACzC,WAAO,KAAK,KAAK,YAAY,CAAC;EAChC;AASM,WAAU,iBAAiB,YAAkB;AACjD,UAAM,SAAS,oBAAoB,UAAU;AAC7C,WAAO,SAAS,KAAK,KAAK,SAAS,CAAC;EACtC;AAeM,WAAU,eAAe,KAAiB,YAAoBG,QAAO,OAAK;AAC9E,UAAM,MAAM,IAAI;AAChB,UAAM,WAAW,oBAAoB,UAAU;AAC/C,UAAM,SAAS,iBAAiB,UAAU;AAE1C,QAAI,MAAM,MAAM,MAAM,UAAU,MAAM;AACpC,YAAM,IAAI,MAAM,YAAY,mCAAmC,KAAK;AACtE,UAAM,MAAMA,QAAO,gBAAgB,GAAG,IAAI,gBAAgB,GAAG;AAE7D,UAAM,UAAU,IAAI,KAAK,aAAaC,IAAG,IAAIA;AAC7C,WAAOD,QAAO,gBAAgB,SAAS,QAAQ,IAAI,gBAAgB,SAAS,QAAQ;EACtF;;;AC/dA,MAAME,OAAM,OAAO,CAAC;AACpB,MAAMC,OAAM,OAAO,CAAC;AAiCd,WAAU,KAAyB,GAAwB,MAAY;AAC3E,UAAM,kBAAkB,CAAC,WAAoB,SAAc;AACzD,YAAM,MAAM,KAAK,OAAM;AACvB,aAAO,YAAY,MAAM;IAC3B;AACA,UAAM,OAAO,CAAC,MAAa;AACzB,YAAM,UAAU,KAAK,KAAK,OAAO,CAAC,IAAI;AACtC,YAAM,aAAa,MAAM,IAAI;AAC7B,aAAO,EAAE,SAAS,WAAU;IAC9B;AACA,WAAO;MACL;;MAEA,aAAa,KAAQ,GAAS;AAC5B,YAAI,IAAI,EAAE;AACV,YAAI,IAAO;AACX,eAAO,IAAID,MAAK;AACd,cAAI,IAAIC;AAAK,gBAAI,EAAE,IAAI,CAAC;AACxB,cAAI,EAAE,OAAM;AACZ,gBAAMA;QACR;AACA,eAAO;MACT;;;;;;;;;;;MAYA,iBAAiB,KAAQ,GAAS;AAChC,cAAM,EAAE,SAAS,WAAU,IAAK,KAAK,CAAC;AACtC,cAAM,SAAc,CAAA;AACpB,YAAI,IAAO;AACX,YAAI,OAAO;AACX,iBAASC,UAAS,GAAGA,UAAS,SAASA,WAAU;AAC/C,iBAAO;AACP,iBAAO,KAAK,IAAI;AAEhB,mBAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,mBAAO,KAAK,IAAI,CAAC;AACjB,mBAAO,KAAK,IAAI;UAClB;AACA,cAAI,KAAK,OAAM;QACjB;AACA,eAAO;MACT;;;;;;;;MASA,KAAK,GAAW,aAAkB,GAAS;AAGzC,cAAM,EAAE,SAAS,WAAU,IAAK,KAAK,CAAC;AAEtC,YAAI,IAAI,EAAE;AACV,YAAIC,KAAI,EAAE;AAEV,cAAMC,QAAO,OAAO,KAAK,IAAI,CAAC;AAC9B,cAAM,YAAY,KAAK;AACvB,cAAM,UAAU,OAAO,CAAC;AAExB,iBAASF,UAAS,GAAGA,UAAS,SAASA,WAAU;AAC/C,gBAAM,SAASA,UAAS;AAExB,cAAI,QAAQ,OAAO,IAAIE,KAAI;AAG3B,gBAAM;AAIN,cAAI,QAAQ,YAAY;AACtB,qBAAS;AACT,iBAAKH;UACP;AAUA,gBAAM,UAAU;AAChB,gBAAM,UAAU,SAAS,KAAK,IAAI,KAAK,IAAI;AAC3C,gBAAM,QAAQC,UAAS,MAAM;AAC7B,gBAAM,QAAQ,QAAQ;AACtB,cAAI,UAAU,GAAG;AAEf,YAAAC,KAAIA,GAAE,IAAI,gBAAgB,OAAO,YAAY,OAAO,CAAC,CAAC;UACxD,OAAO;AACL,gBAAI,EAAE,IAAI,gBAAgB,OAAO,YAAY,OAAO,CAAC,CAAC;UACxD;QACF;AAMA,eAAO,EAAE,GAAG,GAAAA,GAAC;MACf;MAEA,WAAW,GAAM,gBAA6B,GAAW,WAAoB;AAE3E,cAAM,IAAY,EAAE,gBAAgB;AAEpC,YAAI,OAAO,eAAe,IAAI,CAAC;AAC/B,YAAI,CAAC,MAAM;AACT,iBAAO,KAAK,iBAAiB,GAAG,CAAC;AACjC,cAAI,MAAM,GAAG;AACX,2BAAe,IAAI,GAAG,UAAU,IAAI,CAAC;UACvC;QACF;AACA,eAAO,KAAK,KAAK,GAAG,MAAM,CAAC;MAC7B;;EAEJ;AAgBM,WAAU,cAAqB,OAAyB;AAC5D,kBAAc,MAAM,EAAE;AACtB,mBACE,OACA;MACE,GAAG;MACH,GAAG;MACH,IAAI;MACJ,IAAI;OAEN;MACE,YAAY;MACZ,aAAa;KACd;AAGH,WAAO,OAAO,OAAO;MACnB,GAAG,QAAQ,MAAM,GAAG,MAAM,UAAU;MACpC,GAAG;MACH,GAAG,EAAE,GAAG,MAAM,GAAG,MAAK;KACd;EACZ;;;AChHA,WAAS,kBAAqB,OAAyB;AACrD,UAAM,OAAO,cAAc,KAAK;AAChC,IAAG,eACD,MACA;MACE,GAAG;MACH,GAAG;OAEL;MACE,0BAA0B;MAC1B,gBAAgB;MAChB,eAAe;MACf,eAAe;MACf,oBAAoB;MACpB,WAAW;MACX,SAAS;KACV;AAEH,UAAM,EAAE,MAAM,IAAAE,KAAI,EAAC,IAAK;AACxB,QAAI,MAAM;AACR,UAAI,CAACA,IAAG,IAAI,GAAGA,IAAG,IAAI,GAAG;AACvB,cAAM,IAAI,MAAM,mEAAmE;MACrF;AACA,UACE,OAAO,SAAS,YAChB,OAAO,KAAK,SAAS,YACrB,OAAO,KAAK,gBAAgB,YAC5B;AACA,cAAM,IAAI,MAAM,mEAAmE;MACrF;IACF;AACA,WAAO,OAAO,OAAO,EAAE,GAAG,KAAI,CAAW;EAC3C;AAWA,MAAM,EAAE,iBAAiB,KAAK,YAAY,IAAG,IAAK;AAC3C,MAAM,MAAM;;IAEjB,KAAK,MAAM,eAAe,MAAK;MAC7B,YAAY,IAAI,IAAE;AAChB,cAAM,CAAC;MACT;;IAEF,UAAU,MAAgB;AACxB,YAAM,EAAE,KAAK,EAAC,IAAK;AACnB,UAAI,KAAK,SAAS,KAAK,KAAK,CAAC,MAAM;AAAM,cAAM,IAAI,EAAE,+BAA+B;AACpF,YAAM,MAAM,KAAK,CAAC;AAClB,YAAM,MAAM,KAAK,SAAS,GAAG,MAAM,CAAC;AACpC,UAAI,CAAC,OAAO,IAAI,WAAW;AAAK,cAAM,IAAI,EAAE,yCAAyC;AAKrF,UAAI,IAAI,CAAC,IAAI;AAAY,cAAM,IAAI,EAAE,qCAAqC;AAC1E,UAAI,IAAI,CAAC,MAAM,KAAQ,EAAE,IAAI,CAAC,IAAI;AAChC,cAAM,IAAI,EAAE,qDAAqD;AACnE,aAAO,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,SAAS,MAAM,CAAC,EAAC;IACjD;IACA,MAAM,KAAwB;AAE5B,YAAM,EAAE,KAAK,EAAC,IAAK;AACnB,YAAM,OAAO,OAAO,QAAQ,WAAW,IAAI,GAAG,IAAI;AAClD,UAAI,CAAIC,SAAQ,IAAI;AAAG,cAAM,IAAI,MAAM,eAAe;AACtD,UAAI,IAAI,KAAK;AACb,UAAI,IAAI,KAAK,KAAK,CAAC,KAAK;AAAM,cAAM,IAAI,EAAE,uBAAuB;AACjE,UAAI,KAAK,CAAC,MAAM,IAAI;AAAG,cAAM,IAAI,EAAE,qCAAqC;AACxE,YAAM,EAAE,GAAG,GAAG,GAAG,OAAM,IAAK,IAAI,UAAU,KAAK,SAAS,CAAC,CAAC;AAC1D,YAAM,EAAE,GAAG,GAAG,GAAG,WAAU,IAAK,IAAI,UAAU,MAAM;AACpD,UAAI,WAAW;AAAQ,cAAM,IAAI,EAAE,6CAA6C;AAChF,aAAO,EAAE,GAAG,EAAC;IACf;IACA,WAAW,KAA6B;AAEtC,YAAM,QAAQ,CAACC,OAAuB,OAAO,SAASA,GAAE,CAAC,GAAG,EAAE,IAAI,IAAS,OAAOA,KAAIA;AACtF,YAAM,IAAI,CAAC,QAAwB;AACjC,cAAM,MAAM,IAAI,SAAS,EAAE;AAC3B,eAAO,IAAI,SAAS,IAAI,IAAI,QAAQ;MACtC;AACA,YAAM,IAAI,MAAM,EAAE,IAAI,CAAC,CAAC;AACxB,YAAM,IAAI,MAAM,EAAE,IAAI,CAAC,CAAC;AACxB,YAAM,MAAM,EAAE,SAAS;AACvB,YAAM,MAAM,EAAE,SAAS;AACvB,YAAM,KAAK,EAAE,GAAG;AAChB,YAAM,KAAK,EAAE,GAAG;AAChB,aAAO,KAAK,EAAE,MAAM,MAAM,CAAC,MAAM,KAAK,MAAM,KAAK;IACnD;;AAKF,MAAMC,OAAM,OAAO,CAAC;AAApB,MAAuBC,OAAM,OAAO,CAAC;AAArC,MAAwCC,OAAM,OAAO,CAAC;AAAtD,MAAyDC,OAAM,OAAO,CAAC;AAAvE,MAA0EC,OAAM,OAAO,CAAC;AAElF,WAAU,kBAAqB,MAAwB;AAC3D,UAAM,QAAQ,kBAAkB,IAAI;AACpC,UAAM,EAAE,IAAAP,IAAE,IAAK;AAEf,UAAMQ,WACJ,MAAM,YACL,CAAC,IAAwB,OAAyB,kBAA0B;AAC3E,YAAM,IAAI,MAAM,SAAQ;AACxB,aAAUC,aAAY,WAAW,KAAK,CAAC,CAAI,CAAC,GAAGT,IAAG,QAAQ,EAAE,CAAC,GAAGA,IAAG,QAAQ,EAAE,CAAC,CAAC;IACjF;AACF,UAAM,YACJ,MAAM,cACL,CAACU,WAAqB;AAErB,YAAM,OAAOA,OAAM,SAAS,CAAC;AAE7B,YAAM,IAAIV,IAAG,UAAU,KAAK,SAAS,GAAGA,IAAG,KAAK,CAAC;AACjD,YAAM,IAAIA,IAAG,UAAU,KAAK,SAASA,IAAG,OAAO,IAAIA,IAAG,KAAK,CAAC;AAC5D,aAAO,EAAE,GAAG,EAAC;IACf;AAMF,aAAS,oBAAoB,GAAI;AAC/B,YAAM,EAAE,GAAG,EAAC,IAAK;AACjB,YAAM,KAAKA,IAAG,IAAI,CAAC;AACnB,YAAM,KAAKA,IAAG,IAAI,IAAI,CAAC;AACvB,aAAOA,IAAG,IAAIA,IAAG,IAAI,IAAIA,IAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;IAC3C;AAKA,QAAI,CAACA,IAAG,IAAIA,IAAG,IAAI,MAAM,EAAE,GAAG,oBAAoB,MAAM,EAAE,CAAC;AACzD,YAAM,IAAI,MAAM,6CAA6C;AAG/D,aAAS,mBAAmB,KAAW;AACrC,aAAO,OAAO,QAAQ,YAAYG,OAAM,OAAO,MAAM,MAAM;IAC7D;AACA,aAAS,SAAS,KAAW;AAC3B,UAAI,CAAC,mBAAmB,GAAG;AAAG,cAAM,IAAI,MAAM,6CAA6C;IAC7F;AAGA,aAAS,uBAAuB,KAAY;AAC1C,YAAM,EAAE,0BAA0B,SAAS,aAAa,gBAAgB,EAAC,IAAK;AAC9E,UAAI,WAAW,OAAO,QAAQ,UAAU;AACtC,YAAOF,SAAQ,GAAG;AAAG,gBAAS,WAAW,GAAG;AAE5C,YAAI,OAAO,QAAQ,YAAY,CAAC,QAAQ,SAAS,IAAI,MAAM;AAAG,gBAAM,IAAI,MAAM,aAAa;AAC3F,cAAM,IAAI,SAAS,cAAc,GAAG,GAAG;MACzC;AACA,UAAI;AACJ,UAAI;AACF,cACE,OAAO,QAAQ,WACX,MACG,gBAAgB,YAAY,eAAe,KAAK,WAAW,CAAC;MACvE,SAAS,OAAP;AACA,cAAM,IAAI,MAAM,uBAAuB,yCAAyC,OAAO,KAAK;MAC9F;AACA,UAAI;AAAgB,cAAU,IAAI,KAAK,CAAC;AACxC,eAAS,GAAG;AACZ,aAAO;IACT;AAEA,UAAM,mBAAmB,oBAAI,IAAG;AAChC,aAAS,eAAe,OAAc;AACpC,UAAI,EAAE,iBAAiBU;AAAQ,cAAM,IAAI,MAAM,0BAA0B;IAC3E;AAMA,UAAMA,OAAK;MAIT,YACW,IACA,IACA,IAAK;AAFL,aAAA,KAAA;AACA,aAAA,KAAA;AACA,aAAA,KAAA;AAET,YAAI,MAAM,QAAQ,CAACX,IAAG,QAAQ,EAAE;AAAG,gBAAM,IAAI,MAAM,YAAY;AAC/D,YAAI,MAAM,QAAQ,CAACA,IAAG,QAAQ,EAAE;AAAG,gBAAM,IAAI,MAAM,YAAY;AAC/D,YAAI,MAAM,QAAQ,CAACA,IAAG,QAAQ,EAAE;AAAG,gBAAM,IAAI,MAAM,YAAY;MACjE;;;MAIA,OAAO,WAAW,GAAiB;AACjC,cAAM,EAAE,GAAG,EAAC,IAAK,KAAK,CAAA;AACtB,YAAI,CAAC,KAAK,CAACA,IAAG,QAAQ,CAAC,KAAK,CAACA,IAAG,QAAQ,CAAC;AAAG,gBAAM,IAAI,MAAM,sBAAsB;AAClF,YAAI,aAAaW;AAAO,gBAAM,IAAI,MAAM,8BAA8B;AACtE,cAAM,MAAM,CAAC,MAASX,IAAG,IAAI,GAAGA,IAAG,IAAI;AAEvC,YAAI,IAAI,CAAC,KAAK,IAAI,CAAC;AAAG,iBAAOW,OAAM;AACnC,eAAO,IAAIA,OAAM,GAAG,GAAGX,IAAG,GAAG;MAC/B;MAEA,IAAI,IAAC;AACH,eAAO,KAAK,SAAQ,EAAG;MACzB;MACA,IAAI,IAAC;AACH,eAAO,KAAK,SAAQ,EAAG;MACzB;;;;;;;MAQA,OAAO,WAAW,QAAe;AAC/B,cAAM,QAAQA,IAAG,YAAY,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACpD,eAAO,OAAO,IAAI,CAAC,GAAG,MAAM,EAAE,SAAS,MAAM,CAAC,CAAC,CAAC,EAAE,IAAIW,OAAM,UAAU;MACxE;;;;;MAMA,OAAO,QAAQ,KAAQ;AACrB,cAAM,IAAIA,OAAM,WAAW,UAAU,YAAY,YAAY,GAAG,CAAC,CAAC;AAClE,UAAE,eAAc;AAChB,eAAO;MACT;;MAGA,OAAO,eAAe,YAAmB;AACvC,eAAOA,OAAM,KAAK,SAAS,uBAAuB,UAAU,CAAC;MAC/D;;MAQA,eAAe,YAAkB;AAC/B,aAAK,eAAe;AACpB,yBAAiB,OAAO,IAAI;MAC9B;;MAGA,iBAAc;AACZ,YAAI,KAAK,IAAG,GAAI;AAId,cAAI,MAAM,sBAAsB,CAACX,IAAG,IAAI,KAAK,EAAE;AAAG;AAClD,gBAAM,IAAI,MAAM,iBAAiB;QACnC;AAEA,cAAM,EAAE,GAAG,EAAC,IAAK,KAAK,SAAQ;AAE9B,YAAI,CAACA,IAAG,QAAQ,CAAC,KAAK,CAACA,IAAG,QAAQ,CAAC;AAAG,gBAAM,IAAI,MAAM,0BAA0B;AAChF,cAAM,OAAOA,IAAG,IAAI,CAAC;AACrB,cAAM,QAAQ,oBAAoB,CAAC;AACnC,YAAI,CAACA,IAAG,IAAI,MAAM,KAAK;AAAG,gBAAM,IAAI,MAAM,mCAAmC;AAC7E,YAAI,CAAC,KAAK,cAAa;AAAI,gBAAM,IAAI,MAAM,wCAAwC;MACrF;MACA,WAAQ;AACN,cAAM,EAAE,EAAC,IAAK,KAAK,SAAQ;AAC3B,YAAIA,IAAG;AAAO,iBAAO,CAACA,IAAG,MAAM,CAAC;AAChC,cAAM,IAAI,MAAM,6BAA6B;MAC/C;;;;MAKA,OAAO,OAAY;AACjB,uBAAe,KAAK;AACpB,cAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,cAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,cAAM,KAAKA,IAAG,IAAIA,IAAG,IAAI,IAAI,EAAE,GAAGA,IAAG,IAAI,IAAI,EAAE,CAAC;AAChD,cAAM,KAAKA,IAAG,IAAIA,IAAG,IAAI,IAAI,EAAE,GAAGA,IAAG,IAAI,IAAI,EAAE,CAAC;AAChD,eAAO,MAAM;MACf;;;;MAKA,SAAM;AACJ,eAAO,IAAIW,OAAM,KAAK,IAAIX,IAAG,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE;MACpD;;;;;MAMA,SAAM;AACJ,cAAM,EAAE,GAAG,EAAC,IAAK;AACjB,cAAM,KAAKA,IAAG,IAAI,GAAGM,IAAG;AACxB,cAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,YAAI,KAAKN,IAAG,MAAM,KAAKA,IAAG,MAAM,KAAKA,IAAG;AACxC,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,GAAG,EAAE;AACjB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,GAAG,EAAE;AACjB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,GAAG,EAAE;AACjB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,eAAO,IAAIW,OAAM,IAAI,IAAI,EAAE;MAC7B;;;;;MAMA,IAAI,OAAY;AACd,uBAAe,KAAK;AACpB,cAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,cAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,YAAI,KAAKX,IAAG,MAAM,KAAKA,IAAG,MAAM,KAAKA,IAAG;AACxC,cAAM,IAAI,MAAM;AAChB,cAAM,KAAKA,IAAG,IAAI,MAAM,GAAGM,IAAG;AAC9B,YAAI,KAAKN,IAAG,IAAI,IAAI,EAAE;AACtB,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,YAAI,KAAKA,IAAG,IAAI,IAAI,EAAE;AACtB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,GAAG,EAAE;AACjB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,GAAG,EAAE;AACjB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,GAAG,EAAE;AACjB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,aAAKA,IAAG,IAAI,IAAI,EAAE;AAClB,eAAO,IAAIW,OAAM,IAAI,IAAI,EAAE;MAC7B;MAEA,SAAS,OAAY;AACnB,eAAO,KAAK,IAAI,MAAM,OAAM,CAAE;MAChC;MAEQ,MAAG;AACT,eAAO,KAAK,OAAOA,OAAM,IAAI;MAC/B;MACQ,KAAK,GAAS;AACpB,eAAO,KAAK,WAAW,MAAM,kBAAkB,GAAG,CAAC,SAAiB;AAClE,gBAAM,QAAQX,IAAG,YAAY,KAAK,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAClD,iBAAO,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,SAAS,MAAM,CAAC,CAAC,CAAC,EAAE,IAAIW,OAAM,UAAU;QACtE,CAAC;MACH;;;;;;MAOA,eAAe,GAAS;AACtB,cAAM,IAAIA,OAAM;AAChB,YAAI,MAAMR;AAAK,iBAAO;AACtB,iBAAS,CAAC;AACV,YAAI,MAAMC;AAAK,iBAAO;AACtB,cAAM,EAAE,KAAI,IAAK;AACjB,YAAI,CAAC;AAAM,iBAAO,KAAK,aAAa,MAAM,CAAC;AAG3C,YAAI,EAAE,OAAO,IAAI,OAAO,GAAE,IAAK,KAAK,YAAY,CAAC;AACjD,YAAI,MAAM;AACV,YAAI,MAAM;AACV,YAAI,IAAW;AACf,eAAO,KAAKD,QAAO,KAAKA,MAAK;AAC3B,cAAI,KAAKC;AAAK,kBAAM,IAAI,IAAI,CAAC;AAC7B,cAAI,KAAKA;AAAK,kBAAM,IAAI,IAAI,CAAC;AAC7B,cAAI,EAAE,OAAM;AACZ,iBAAOA;AACP,iBAAOA;QACT;AACA,YAAI;AAAO,gBAAM,IAAI,OAAM;AAC3B,YAAI;AAAO,gBAAM,IAAI,OAAM;AAC3B,cAAM,IAAIO,OAAMX,IAAG,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE;AACzD,eAAO,IAAI,IAAI,GAAG;MACpB;;;;;;;;;;MAWA,SAAS,QAAc;AACrB,iBAAS,MAAM;AACf,YAAI,IAAI;AACR,YAAI,OAAc;AAClB,cAAM,EAAE,KAAI,IAAK;AACjB,YAAI,MAAM;AACR,gBAAM,EAAE,OAAO,IAAI,OAAO,GAAE,IAAK,KAAK,YAAY,CAAC;AACnD,cAAI,EAAE,GAAG,KAAK,GAAG,IAAG,IAAK,KAAK,KAAK,EAAE;AACrC,cAAI,EAAE,GAAG,KAAK,GAAG,IAAG,IAAK,KAAK,KAAK,EAAE;AACrC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,gBAAM,IAAIW,OAAMX,IAAG,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE;AACzD,kBAAQ,IAAI,IAAI,GAAG;AACnB,iBAAO,IAAI,IAAI,GAAG;QACpB,OAAO;AACL,gBAAM,EAAE,GAAG,GAAAY,GAAC,IAAK,KAAK,KAAK,CAAC;AAC5B,kBAAQ;AACR,iBAAOA;QACT;AAEA,eAAOD,OAAM,WAAW,CAAC,OAAO,IAAI,CAAC,EAAE,CAAC;MAC1C;;;;;;;MAQA,qBAAqB,GAAU,GAAW,GAAS;AACjD,cAAM,IAAIA,OAAM;AAChB,cAAM,MAAM,CACV,GACAE,OACIA,OAAMV,QAAOU,OAAMT,QAAO,CAAC,EAAE,OAAO,CAAC,IAAI,EAAE,eAAeS,EAAC,IAAI,EAAE,SAASA,EAAC;AACjF,cAAM,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;AACtC,eAAO,IAAI,IAAG,IAAK,SAAY;MACjC;;;;MAKA,SAAS,IAAM;AACb,cAAM,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAC,IAAK;AAChC,cAAM,MAAM,KAAK,IAAG;AAGpB,YAAI,MAAM;AAAM,eAAK,MAAMb,IAAG,MAAMA,IAAG,IAAI,CAAC;AAC5C,cAAM,KAAKA,IAAG,IAAI,GAAG,EAAE;AACvB,cAAM,KAAKA,IAAG,IAAI,GAAG,EAAE;AACvB,cAAM,KAAKA,IAAG,IAAI,GAAG,EAAE;AACvB,YAAI;AAAK,iBAAO,EAAE,GAAGA,IAAG,MAAM,GAAGA,IAAG,KAAI;AACxC,YAAI,CAACA,IAAG,IAAI,IAAIA,IAAG,GAAG;AAAG,gBAAM,IAAI,MAAM,kBAAkB;AAC3D,eAAO,EAAE,GAAG,IAAI,GAAG,GAAE;MACvB;MACA,gBAAa;AACX,cAAM,EAAE,GAAG,UAAU,cAAa,IAAK;AACvC,YAAI,aAAaI;AAAK,iBAAO;AAC7B,YAAI;AAAe,iBAAO,cAAcO,QAAO,IAAI;AACnD,cAAM,IAAI,MAAM,8DAA8D;MAChF;MACA,gBAAa;AACX,cAAM,EAAE,GAAG,UAAU,cAAa,IAAK;AACvC,YAAI,aAAaP;AAAK,iBAAO;AAC7B,YAAI;AAAe,iBAAO,cAAcO,QAAO,IAAI;AACnD,eAAO,KAAK,eAAe,MAAM,CAAC;MACpC;MAEA,WAAW,eAAe,MAAI;AAC5B,aAAK,eAAc;AACnB,eAAOH,SAAQG,QAAO,MAAM,YAAY;MAC1C;MAEA,MAAM,eAAe,MAAI;AACvB,eAAU,WAAW,KAAK,WAAW,YAAY,CAAC;MACpD;;AAlVgB,IAAAA,OAAA,OAAO,IAAIA,OAAM,MAAM,IAAI,MAAM,IAAIX,IAAG,GAAG;AAC3C,IAAAW,OAAA,OAAO,IAAIA,OAAMX,IAAG,MAAMA,IAAG,KAAKA,IAAG,IAAI;AAmV3D,UAAM,QAAQ,MAAM;AACpB,UAAM,OAAO,KAAKW,QAAO,MAAM,OAAO,KAAK,KAAK,QAAQ,CAAC,IAAI,KAAK;AAElE,WAAO;MACL;MACA,iBAAiBA;MACjB;MACA;MACA;;EAEJ;AAwCA,WAAS,aAAa,OAAgB;AACpC,UAAM,OAAO,cAAc,KAAK;AAChC,IAAG,eACD,MACA;MACE,MAAM;MACN,MAAM;MACN,aAAa;OAEf;MACE,UAAU;MACV,eAAe;MACf,MAAM;KACP;AAEH,WAAO,OAAO,OAAO,EAAE,MAAM,MAAM,GAAG,KAAI,CAAW;EACvD;AAkBM,WAAU,YAAY,UAAmB;AAC7C,UAAM,QAAQ,aAAa,QAAQ;AACnC,UAAM,EAAE,IAAAX,KAAI,GAAG,YAAW,IAAK;AAC/B,UAAM,gBAAgBA,IAAG,QAAQ;AACjC,UAAM,kBAAkB,IAAIA,IAAG,QAAQ;AAEvC,aAAS,oBAAoB,KAAW;AACtC,aAAOG,OAAM,OAAO,MAAMH,IAAG;IAC/B;AACA,aAAS,KAAK,GAAS;AACrB,aAAW,IAAI,GAAG,WAAW;IAC/B;AACA,aAAS,KAAK,GAAS;AACrB,aAAW,OAAO,GAAG,WAAW;IAClC;AAEA,UAAM,EACJ,iBAAiBW,QACjB,wBACA,qBACA,mBAAkB,IAChB,kBAAkB;MACpB,GAAG;MACH,QAAQ,IAAI,OAAO,cAAqB;AACtC,cAAM,IAAI,MAAM,SAAQ;AACxB,cAAM,IAAIX,IAAG,QAAQ,EAAE,CAAC;AACxB,cAAM,MAASS;AACf,YAAI,cAAc;AAChB,iBAAO,IAAI,WAAW,KAAK,CAAC,MAAM,SAAQ,IAAK,IAAO,CAAI,CAAC,GAAG,CAAC;QACjE,OAAO;AACL,iBAAO,IAAI,WAAW,KAAK,CAAC,CAAI,CAAC,GAAG,GAAGT,IAAG,QAAQ,EAAE,CAAC,CAAC;QACxD;MACF;MACA,UAAUU,QAAiB;AACzB,cAAM,MAAMA,OAAM;AAClB,cAAM,OAAOA,OAAM,CAAC;AACpB,cAAM,OAAOA,OAAM,SAAS,CAAC;AAE7B,YAAI,QAAQ,kBAAkB,SAAS,KAAQ,SAAS,IAAO;AAC7D,gBAAM,IAAO,gBAAgB,IAAI;AACjC,cAAI,CAAC,oBAAoB,CAAC;AAAG,kBAAM,IAAI,MAAM,uBAAuB;AACpE,gBAAM,KAAK,oBAAoB,CAAC;AAChC,cAAI,IAAIV,IAAG,KAAK,EAAE;AAClB,gBAAM,UAAU,IAAII,UAASA;AAE7B,gBAAM,aAAa,OAAO,OAAO;AACjC,cAAI,cAAc;AAAQ,gBAAIJ,IAAG,IAAI,CAAC;AACtC,iBAAO,EAAE,GAAG,EAAC;QACf,WAAW,QAAQ,mBAAmB,SAAS,GAAM;AACnD,gBAAM,IAAIA,IAAG,UAAU,KAAK,SAAS,GAAGA,IAAG,KAAK,CAAC;AACjD,gBAAM,IAAIA,IAAG,UAAU,KAAK,SAASA,IAAG,OAAO,IAAIA,IAAG,KAAK,CAAC;AAC5D,iBAAO,EAAE,GAAG,EAAC;QACf,OAAO;AACL,gBAAM,IAAI,MACR,mBAAmB,6BAA6B,qCAAqC,oCAAoC;QAE7H;MACF;KACD;AACD,UAAM,gBAAgB,CAAC,QAClB,WAAc,gBAAgB,KAAK,MAAM,WAAW,CAAC;AAE1D,aAAS,sBAAsBc,SAAc;AAC3C,YAAM,OAAO,eAAeV;AAC5B,aAAOU,UAAS;IAClB;AAEA,aAAS,WAAW,GAAS;AAC3B,aAAO,sBAAsB,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;IAC/C;AAEA,UAAM,SAAS,CAAC,GAAe,MAAc,OAAkB,gBAAgB,EAAE,MAAM,MAAM,EAAE,CAAC;AAKhG,UAAMC,WAAS;MACb,YACW,GACA,GACA,UAAiB;AAFjB,aAAA,IAAA;AACA,aAAA,IAAA;AACA,aAAA,WAAA;AAET,aAAK,eAAc;MACrB;;MAGA,OAAO,YAAY,KAAQ;AACzB,cAAM,IAAI,MAAM;AAChB,cAAM,YAAY,oBAAoB,KAAK,IAAI,CAAC;AAChD,eAAO,IAAIA,WAAU,OAAO,KAAK,GAAG,CAAC,GAAG,OAAO,KAAK,GAAG,IAAI,CAAC,CAAC;MAC/D;;;MAIA,OAAO,QAAQ,KAAQ;AACrB,cAAM,EAAE,GAAG,EAAC,IAAK,IAAI,MAAM,YAAY,OAAO,GAAG,CAAC;AAClD,eAAO,IAAIA,WAAU,GAAG,CAAC;MAC3B;MAEA,iBAAc;AAEZ,YAAI,CAAC,mBAAmB,KAAK,CAAC;AAAG,gBAAM,IAAI,MAAM,2BAA2B;AAC5E,YAAI,CAAC,mBAAmB,KAAK,CAAC;AAAG,gBAAM,IAAI,MAAM,2BAA2B;MAC9E;MAEA,eAAe,UAAgB;AAC7B,eAAO,IAAIA,WAAU,KAAK,GAAG,KAAK,GAAG,QAAQ;MAC/C;MAEA,iBAAiB,SAAY;AAC3B,cAAM,EAAE,GAAG,GAAG,UAAU,IAAG,IAAK;AAChC,cAAM,IAAI,cAAc,YAAY,WAAW,OAAO,CAAC;AACvD,YAAI,OAAO,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,SAAS,GAAG;AAAG,gBAAM,IAAI,MAAM,qBAAqB;AACrF,cAAM,OAAO,QAAQ,KAAK,QAAQ,IAAI,IAAI,MAAM,IAAI;AACpD,YAAI,QAAQf,IAAG;AAAO,gBAAM,IAAI,MAAM,4BAA4B;AAClE,cAAM,UAAU,MAAM,OAAO,IAAI,OAAO;AACxC,cAAM,IAAIW,OAAM,QAAQ,SAAS,cAAc,IAAI,CAAC;AACpD,cAAM,KAAK,KAAK,IAAI;AACpB,cAAM,KAAK,KAAK,CAAC,IAAI,EAAE;AACvB,cAAM,KAAK,KAAK,IAAI,EAAE;AACtB,cAAM,IAAIA,OAAM,KAAK,qBAAqB,GAAG,IAAI,EAAE;AACnD,YAAI,CAAC;AAAG,gBAAM,IAAI,MAAM,mBAAmB;AAC3C,UAAE,eAAc;AAChB,eAAO;MACT;;MAGA,WAAQ;AACN,eAAO,sBAAsB,KAAK,CAAC;MACrC;MAEA,aAAU;AACR,eAAO,KAAK,SAAQ,IAAK,IAAII,WAAU,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI;MACjF;;MAGA,gBAAa;AACX,eAAU,WAAW,KAAK,SAAQ,CAAE;MACtC;MACA,WAAQ;AACN,eAAO,IAAI,WAAW,EAAE,GAAG,KAAK,GAAG,GAAG,KAAK,EAAC,CAAE;MAChD;;MAGA,oBAAiB;AACf,eAAU,WAAW,KAAK,aAAY,CAAE;MAC1C;MACA,eAAY;AACV,eAAO,cAAc,KAAK,CAAC,IAAI,cAAc,KAAK,CAAC;MACrD;;AAIF,UAAM,QAAQ;MACZ,kBAAkB,YAAmB;AACnC,YAAI;AACF,iCAAuB,UAAU;AACjC,iBAAO;QACT,SAAS,OAAP;AACA,iBAAO;QACT;MACF;MACA;;;;;MAMA,kBAAkB,MAAiB;AACjC,cAAM,SAAa,iBAAiB,MAAM,CAAC;AAC3C,eAAW,eAAe,MAAM,YAAY,MAAM,GAAG,MAAM,CAAC;MAC9D;;;;;;;;;MAUA,WAAW,aAAa,GAAG,QAAQJ,OAAM,MAAI;AAC3C,cAAM,eAAe,UAAU;AAC/B,cAAM,SAAS,OAAO,CAAC,CAAC;AACxB,eAAO;MACT;;AASF,aAAS,aAAa,YAAqB,eAAe,MAAI;AAC5D,aAAOA,OAAM,eAAe,UAAU,EAAE,WAAW,YAAY;IACjE;AAKA,aAAS,UAAU,MAAsB;AACvC,YAAM,MAASV,SAAQ,IAAI;AAC3B,YAAM,MAAM,OAAO,SAAS;AAC5B,YAAM,OAAO,OAAO,QAAS,KAAa;AAC1C,UAAI;AAAK,eAAO,QAAQ,iBAAiB,QAAQ;AACjD,UAAI;AAAK,eAAO,QAAQ,IAAI,iBAAiB,QAAQ,IAAI;AACzD,UAAI,gBAAgBU;AAAO,eAAO;AAClC,aAAO;IACT;AAYA,aAAS,gBAAgB,UAAmB,SAAc,eAAe,MAAI;AAC3E,UAAI,UAAU,QAAQ;AAAG,cAAM,IAAI,MAAM,+BAA+B;AACxE,UAAI,CAAC,UAAU,OAAO;AAAG,cAAM,IAAI,MAAM,+BAA+B;AACxE,YAAM,IAAIA,OAAM,QAAQ,OAAO;AAC/B,aAAO,EAAE,SAAS,uBAAuB,QAAQ,CAAC,EAAE,WAAW,YAAY;IAC7E;AAMA,UAAM,WACJ,MAAM,YACN,SAAUD,QAAiB;AAGzB,YAAM,MAAS,gBAAgBA,MAAK;AACpC,YAAM,QAAQA,OAAM,SAAS,IAAI,MAAM;AACvC,aAAO,QAAQ,IAAI,OAAO,OAAO,KAAK,IAAI;IAC5C;AACF,UAAM,gBACJ,MAAM,iBACN,SAAUA,QAAiB;AACzB,aAAO,KAAK,SAASA,MAAK,CAAC;IAC7B;AAEF,UAAM,aAAgB,QAAQ,MAAM,UAAU;AAI9C,aAAS,WAAW,KAAW;AAC7B,UAAI,OAAO,QAAQ;AAAU,cAAM,IAAI,MAAM,iBAAiB;AAC9D,UAAI,EAAEP,QAAO,OAAO,MAAM;AACxB,cAAM,IAAI,MAAM,uBAAuB,MAAM,YAAY;AAE3D,aAAU,gBAAgB,KAAK,MAAM,WAAW;IAClD;AAOA,aAAS,QAAQ,SAAc,YAAqB,OAAO,gBAAc;AACvE,UAAI,CAAC,aAAa,WAAW,EAAE,KAAK,CAAC,MAAM,KAAK,IAAI;AAClD,cAAM,IAAI,MAAM,qCAAqC;AACvD,YAAM,EAAE,MAAAa,OAAM,aAAAC,aAAW,IAAK;AAC9B,UAAI,EAAE,MAAM,SAAS,cAAc,IAAG,IAAK;AAC3C,UAAI,QAAQ;AAAM,eAAO;AACzB,gBAAU,YAAY,WAAW,OAAO;AACxC,UAAI;AAAS,kBAAU,YAAY,qBAAqBD,MAAK,OAAO,CAAC;AAKrE,YAAM,QAAQ,cAAc,OAAO;AACnC,YAAM,IAAI,uBAAuB,UAAU;AAC3C,YAAM,WAAW,CAAC,WAAW,CAAC,GAAG,WAAW,KAAK,CAAC;AAElD,UAAI,OAAO,MAAM;AAEf,cAAM,IAAI,QAAQ,OAAOC,aAAYjB,IAAG,KAAK,IAAI;AACjD,iBAAS,KAAK,YAAY,gBAAgB,CAAC,CAAC;MAC9C;AACA,YAAM,OAAUS,aAAY,GAAG,QAAQ;AACvC,YAAM,IAAI;AAEV,eAAS,MAAM,QAAkB;AAE/B,cAAM,IAAI,SAAS,MAAM;AACzB,YAAI,CAAC,mBAAmB,CAAC;AAAG;AAC5B,cAAM,KAAK,KAAK,CAAC;AACjB,cAAM,IAAIE,OAAM,KAAK,SAAS,CAAC,EAAE,SAAQ;AACzC,cAAM,IAAI,KAAK,EAAE,CAAC;AAClB,YAAI,MAAMR;AAAK;AAIf,cAAM,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,CAAC;AACnC,YAAI,MAAMA;AAAK;AACf,YAAI,YAAY,EAAE,MAAM,IAAI,IAAI,KAAK,OAAO,EAAE,IAAIC,IAAG;AACrD,YAAI,QAAQ;AACZ,YAAI,QAAQ,sBAAsB,CAAC,GAAG;AACpC,kBAAQ,WAAW,CAAC;AACpB,sBAAY;QACd;AACA,eAAO,IAAIW,WAAU,GAAG,OAAO,QAAQ;MACzC;AACA,aAAO,EAAE,MAAM,MAAK;IACtB;AACA,UAAM,iBAA2B,EAAE,MAAM,MAAM,MAAM,SAAS,MAAK;AACnE,UAAM,iBAA0B,EAAE,MAAM,MAAM,MAAM,SAAS,MAAK;AAelE,aAAS,KAAK,SAAc,SAAkB,OAAO,gBAAc;AACjE,YAAM,EAAE,MAAM,MAAK,IAAK,QAAQ,SAAS,SAAS,IAAI;AACtD,YAAM,IAAI;AACV,YAAM,OAAU,eAAmC,EAAE,KAAK,WAAW,EAAE,aAAa,EAAE,IAAI;AAC1F,aAAO,KAAK,MAAM,KAAK;IACzB;AAGA,IAAAJ,OAAM,KAAK,eAAe,CAAC;AAgB3B,aAAS,OACP,WACA,SACA,WACA,OAAO,gBAAc;AAErB,YAAM,KAAK;AACX,gBAAU,YAAY,WAAW,OAAO;AACxC,kBAAY,YAAY,aAAa,SAAS;AAC9C,UAAI,YAAY;AAAM,cAAM,IAAI,MAAM,oCAAoC;AAC1E,YAAM,EAAE,MAAM,QAAO,IAAK;AAE1B,UAAI,OAA8B;AAClC,UAAI;AACJ,UAAI;AACF,YAAI,OAAO,OAAO,YAAeV,SAAQ,EAAE,GAAG;AAG5C,cAAI;AACF,mBAAOc,WAAU,QAAQ,EAAE;UAC7B,SAAS,UAAP;AACA,gBAAI,EAAE,oBAAoB,IAAI;AAAM,oBAAM;AAC1C,mBAAOA,WAAU,YAAY,EAAE;UACjC;QACF,WAAW,OAAO,OAAO,YAAY,OAAO,GAAG,MAAM,YAAY,OAAO,GAAG,MAAM,UAAU;AACzF,gBAAM,EAAE,GAAAG,IAAG,GAAAhB,GAAC,IAAK;AACjB,iBAAO,IAAIa,WAAUG,IAAGhB,EAAC;QAC3B,OAAO;AACL,gBAAM,IAAI,MAAM,OAAO;QACzB;AACA,YAAIS,OAAM,QAAQ,SAAS;MAC7B,SAAS,OAAP;AACA,YAAK,MAAgB,YAAY;AAC/B,gBAAM,IAAI,MAAM,gEAAgE;AAClF,eAAO;MACT;AACA,UAAI,QAAQ,KAAK,SAAQ;AAAI,eAAO;AACpC,UAAI;AAAS,kBAAU,MAAM,KAAK,OAAO;AACzC,YAAM,EAAE,GAAG,EAAC,IAAK;AACjB,YAAM,IAAI,cAAc,OAAO;AAC/B,YAAM,KAAK,KAAK,CAAC;AACjB,YAAM,KAAK,KAAK,IAAI,EAAE;AACtB,YAAM,KAAK,KAAK,IAAI,EAAE;AACtB,YAAM,IAAIA,OAAM,KAAK,qBAAqB,GAAG,IAAI,EAAE,GAAG,SAAQ;AAC9D,UAAI,CAAC;AAAG,eAAO;AACf,YAAM,IAAI,KAAK,EAAE,CAAC;AAClB,aAAO,MAAM;IACf;AACA,WAAO;MACL;MACA;MACA;MACA;MACA;MACA,iBAAiBA;MACjB,WAAAI;MACA;;EAEJ;;;ACvkCM,WAAU,QAAQI,OAAW;AACjC,WAAO;MACL,MAAAA;MACA,MAAM,CAAC,QAAoB,SAAuB,KAAKA,OAAM,KAAK,YAAY,GAAG,IAAI,CAAC;MACtF;;EAEJ;AAGM,WAAU,YAAY,UAAoB,SAAc;AAC5D,UAAM,SAAS,CAACA,UAAgB,YAAY,EAAE,GAAG,UAAU,GAAG,QAAQA,KAAI,EAAC,CAAE;AAC7E,WAAO,OAAO,OAAO,EAAE,GAAG,OAAO,OAAO,GAAG,OAAM,CAAE;EACrD;;;ACTA,MAAM,aAAa,OAAO,oEAAoE;AAC9F,MAAM,aAAa,OAAO,oEAAoE;AAC9F,MAAMC,OAAM,OAAO,CAAC;AACpB,MAAMC,OAAM,OAAO,CAAC;AACpB,MAAM,aAAa,CAAC,GAAW,OAAe,IAAI,IAAIA,QAAO;AAM7D,WAAS,QAAQ,GAAS;AACxB,UAAM,IAAI;AAEV,UAAMC,OAAM,OAAO,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,OAAO,OAAO,EAAE,GAAG,OAAO,OAAO,EAAE;AAE3E,UAAM,OAAO,OAAO,EAAE,GAAG,OAAO,OAAO,EAAE,GAAG,OAAO,OAAO,EAAE;AAC5D,UAAM,KAAM,IAAI,IAAI,IAAK;AACzB,UAAM,KAAM,KAAK,KAAK,IAAK;AAC3B,UAAM,KAAM,KAAK,IAAIA,MAAK,CAAC,IAAI,KAAM;AACrC,UAAM,KAAM,KAAK,IAAIA,MAAK,CAAC,IAAI,KAAM;AACrC,UAAM,MAAO,KAAK,IAAID,MAAK,CAAC,IAAI,KAAM;AACtC,UAAM,MAAO,KAAK,KAAK,MAAM,CAAC,IAAI,MAAO;AACzC,UAAM,MAAO,KAAK,KAAK,MAAM,CAAC,IAAI,MAAO;AACzC,UAAM,MAAO,KAAK,KAAK,MAAM,CAAC,IAAI,MAAO;AACzC,UAAM,OAAQ,KAAK,KAAK,MAAM,CAAC,IAAI,MAAO;AAC1C,UAAM,OAAQ,KAAK,MAAM,MAAM,CAAC,IAAI,MAAO;AAC3C,UAAM,OAAQ,KAAK,MAAMC,MAAK,CAAC,IAAI,KAAM;AACzC,UAAM,KAAM,KAAK,MAAM,MAAM,CAAC,IAAI,MAAO;AACzC,UAAM,KAAM,KAAK,IAAI,KAAK,CAAC,IAAI,KAAM;AACrC,UAAM,OAAO,KAAK,IAAID,MAAK,CAAC;AAC5B,QAAI,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC;AAAG,YAAM,IAAI,MAAM,yBAAyB;AACvE,WAAO;EACT;AAEA,MAAM,KAAK,MAAM,YAAY,QAAW,QAAW,EAAE,MAAM,QAAO,CAAE;AAE7D,MAAM,YAAY,YACvB;IACE,GAAG,OAAO,CAAC;;IACX,GAAG,OAAO,CAAC;;IACX;;IACA,GAAG;;;IAEH,IAAI,OAAO,+EAA+E;IAC1F,IAAI,OAAO,+EAA+E;IAC1F,GAAG,OAAO,CAAC;;IACX,MAAM;;;;;;;;IAON,MAAM;MACJ,MAAM,OAAO,oEAAoE;MACjF,aAAa,CAAC,MAAa;AACzB,cAAM,IAAI;AACV,cAAM,KAAK,OAAO,oCAAoC;AACtD,cAAM,KAAK,CAACD,OAAM,OAAO,oCAAoC;AAC7D,cAAM,KAAK,OAAO,qCAAqC;AACvD,cAAM,KAAK;AACX,cAAM,YAAY,OAAO,qCAAqC;AAE9D,cAAM,KAAK,WAAW,KAAK,GAAG,CAAC;AAC/B,cAAM,KAAK,WAAW,CAAC,KAAK,GAAG,CAAC;AAChC,YAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,CAAC;AACrC,YAAI,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC;AAClC,cAAM,QAAQ,KAAK;AACnB,cAAM,QAAQ,KAAK;AACnB,YAAI;AAAO,eAAK,IAAI;AACpB,YAAI;AAAO,eAAK,IAAI;AACpB,YAAI,KAAK,aAAa,KAAK,WAAW;AACpC,gBAAM,IAAI,MAAM,yCAAyC,CAAC;QAC5D;AACA,eAAO,EAAE,OAAO,IAAI,OAAO,GAAE;MAC/B;;KAGJ,MAAM;AAKR,MAAMG,OAAM,OAAO,CAAC;AAoBpB,MAAM,QAAQ,UAAU;;;ACzGjB,MAAM,SAAN,MAAa;AAAA,IACT;AAAA,IAEA;AAAA,IAEA;AAAA,IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQT,YAAY,YAAuB;AAEjC,UAAI,OAAO,eAAe,UAAU;AAClC,YAAI,WAAW,MAAM,cAAc,KAAK,WAAW,WAAW,IAAI;AAEhE,uBAAa,KAAK;AAAA,QACpB;AAAA,MACF;AAGA,YAAM,kBAAkBC,SAAQ,YAAY,EAAE;AAE9C,WAAK,aAAa,QAAQ,eAAe;AAGzC,WAAK,YAAY,QAAQ,UAAU,aAAa,iBAAiB,KAAK,EAAE,MAAM,CAAC,CAAC;AAChF,WAAK,sBAAsB,QAAQ,UAAU,aAAa,iBAAiB,IAAI,CAAC;AAChF,WAAK,UAAU,QAAQ,cAAc,KAAK,SAAS;AAAA,IACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYA,KAAK,MAAiB;AACpB,YAAM,YAAY,UAAU,KAAK,SAAS,IAAI,GAAG,SAAS,KAAK,UAAU,CAAC;AAE1E,YAAM,IAAIA,SAAQ,KAAK,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE;AACrD,YAAM,IAAIA,SAAQ,KAAK,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE;AAGrD,QAAE,CAAC,MAAM,UAAU,YAAY,MAAM;AAErC,aAAO,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,SAAS,OAAkB;AACzB,YAAM,KAAK,UAAU,gBAAgB,QAAQ,SAAS,KAAK,mBAAmB,CAAC;AAC/E,YAAM,KAAK,UAAU,gBAAgB,QAAQ,SAAS,KAAK,CAAC;AAC5D,YAAM,SAAS,GAAG,IAAI,EAAE;AACxB,aAAO,KAAK,OAAO,MAAM,IAAI;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,OAAO,iBAAiB,MAAiB,WAA8B;AACrE,YAAM,qBAAqB,SAAS,SAAS;AAC7C,YAAM,IAAI,mBAAmB,MAAM,GAAG,EAAE;AACxC,YAAM,IAAI,mBAAmB,MAAM,IAAI,EAAE;AACzC,YAAM,iBAAiB,EAAE,CAAC,IAAI,QAAS;AAGvC,QAAE,CAAC,KAAK;AAER,YAAM,MAAM,IAAI,UAAU,UAAU,OAAO,QAAQ,CAAC,CAAC,GAAG,OAAO,QAAQ,CAAC,CAAC,CAAC,EAAE;AAAA,QAC1E;AAAA,MACF;AAEA,YAAM,YAAY,IAAI,iBAAiB,SAAS,IAAI,CAAC,EAAE,WAAW,KAAK,EAAE,MAAM,CAAC;AAChF,aAAO,QAAQ,SAAS;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,OAAO,eAAe,MAAiB,WAA+B;AACpE,aAAO,QAAQ,cAAc,OAAO,iBAAiB,MAAM,SAAS,CAAC;AAAA,IACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,OAAO,mBAAmB,SAAqB;AAC7C,aAAO,UAAUC,MAAK,OAAO,CAACC,cAAY,EAAE,GAAG,SAAS,OAAO,CAAC,CAAC,CAAC,IAAIA,cAAY,EAAE;AAAA,IACtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,OAAO,gBAAgB,WAAsB;AAC3C,YAAM,QAAQ,UAAU,gBAAgB,QAAQ,SAAS,SAAS,CAAC;AACnE,aAAO,QAAQ,MAAM,WAAW,KAAK,EAAE,MAAM,CAAC,CAAC;AAAA,IACjD;AAAA,EACF;;;ACrIA,MAAAC,kBAAmB;AACnB,MAAM,YAAY,IAAI,WAAW,GAAG;AAEpC,MAAI,UAAU,UAAU;AACT,WAAR,MAAuB;AAC5B,QAAI,UAAU,UAAU,SAAS,IAAI;AACnC,sBAAAC,QAAO,eAAe,SAAS;AAC/B,gBAAU;AAAA,IACZ;AAEA,WAAO,UAAU,MAAM,SAAS,WAAW,EAAE;AAAA,EAC/C;;;ACLA,MAAM,YAAY,CAAC;AAEnB,WAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,cAAU,MAAM,IAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AAAA,EAClD;AAEO,WAAS,gBAAgB,KAAK,SAAS,GAAG;AAG/C,YAAQ,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,UAAU,IAAI,SAAS,CAAC,CAAC,IAAI,MAAM,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,IAAI,UAAU,IAAI,SAAS,EAAE,CAAC,GAAG,YAAY;AAAA,EACngB;;;AChBA,MAAAC,kBAAmB;AACnB,MAAO,iBAAQ;AAAA,IACb,YAAY,gBAAAC,QAAO;AAAA,EACrB;;;ACCA,WAAS,GAAG,SAAS,KAAK,QAAQ;AAChC,QAAI,eAAO,cAAc,CAAC,OAAO,CAAC,SAAS;AACzC,aAAO,eAAO,WAAW;AAAA,IAC3B;AAEA,cAAU,WAAW,CAAC;AACtB,UAAM,OAAO,QAAQ,WAAW,QAAQ,OAAO,KAAK;AAEpD,SAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAO;AAC3B,SAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAO;AAE3B,QAAI,KAAK;AACP,eAAS,UAAU;AAEnB,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,YAAI,SAAS,CAAC,IAAI,KAAK,CAAC;AAAA,MAC1B;AAEA,aAAO;AAAA,IACT;AAEA,WAAO,gBAAgB,IAAI;AAAA,EAC7B;AAEA,MAAO,aAAQ;;;ACYR,MAAM,2BAA2B;AACjC,MAAM,uBAAuB;AAC7B,MAAM,uBAAuB;AAC7B,MAAM,mBAAmB;AACzB,MAAM,kBAAkB;AAMxB,MAAM,kBAAkB,CAAC,cAAsB;AACpD,QAAI,MAAM,KAAK,SAAS,GAAG;AACzB,aAAO,UAAU,MAAM,CAAC;AAAA,IAC1B;AAEA,WAAO;AAAA,EACT;AAEA,iBAAsB,sBACpB,YACA,SACA,UACiB;AAEjB,UAAM,mBAAmB,kBAAiB,gBAAgB,UAAU,GAAG,KAAK;AAC5E,UAAM,eAAe,QAAQ,oBAAoB,OAAO;AAExD,UAAM,OAAOC,cAAY,gBAAgB;AAEzC,UAAM,MAAMC,SAAO;AAAA,MACjB,UAAU,kBAAiB,QAAQ;AAAA,MACnC;AAAA,MACA,OAAO;AAAA,MACP,GAAG,KAAK;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,IACL,CAAC;AAGD,UAAM,KAAKD,cAAY,eAAe;AAEtC,UAAM,aAAa,MAAM,uBAAsB,kBAAkB,KAAK,EAAE;AAExE,UAAM,OAAO,WAAW,KAAK,CAAC,GAAG,IAAI,SAAS,IAAI,EAAE,GAAG,GAAG,UAAU,CAAC;AAGrE,UAAM,oBAAoBE,YAAU,IAAI;AAExC,UAAM,MAAM,kBAAiB,mBAAmB,KAAK;AAGrD,UAAM,WAA2B;AAAA,MAC/B,IAAI,WAAO;AAAA,MACX,SAAS;AAAA,MACT,SAAS,gBAAgB,aAAa,YAAY,CAAC;AAAA,MACnD,QAAQ;AAAA,QACN,QAAQ;AAAA,QACR;AAAA,QACA,cAAc,EAAE,IAAI,kBAAiB,IAAI,KAAK,EAAE;AAAA,QAChD,YAAY,kBAAiB,YAAY,KAAK;AAAA,QAC9C,KAAK;AAAA,QACL,WAAW;AAAA,UACT,OAAO;AAAA,UACP,GAAG,KAAK;AAAA,UACR,GAAG;AAAA,UACH,GAAG;AAAA,UACH,MAAM,kBAAiB,MAAM,KAAK;AAAA,QACpC;AAAA,MACF;AAAA,IACF;AAEA,WAAO,KAAK,UAAU,QAAQ;AAAA,EAChC;AAEA,iBAAsB,sBAAsB,YAAoB,UAAmC;AACjG,UAAM,iBAAiB,KAAK,MAAM,UAAU;AAG5C,UAAM;AAAA,MACJ,QAAQ;AAAA,QACN;AAAA,QACA;AAAA,QACA,cAAc,EAAE,GAAG;AAAA,QACnB,WAAW,EAAE,OAAO,GAAG,GAAG,GAAG,KAAK;AAAA,MACpC;AAAA,IACF,IAAI;AAEJ,UAAM,mBAAmB,kBAAiB,YAAY,KAAK;AAC3D,UAAM,WAAW,kBAAiB,IAAI,KAAK;AAC3C,UAAM,aAAa,kBAAiB,MAAM,KAAK;AAE/C,UAAM,iBAAiB,kBAAiB,QAAQ;AAEhD,UAAM,MAAMD,SAAO;AAAA,MACjB,UAAU;AAAA,MACV,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAGD,UAAM,OAAO,WAAW,KAAK,CAAC,GAAG,IAAI,SAAS,IAAI,EAAE,GAAG,GAAG,gBAAgB,CAAC;AAE3E,UAAM,oBAAoBC,YAAU,IAAI;AAExC,UAAM,UAAU,kBAAiB,mBAAmB,KAAK;AAEzD,QAAI,QAAQ,SAAS;AACnB,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV;AAAA,MACF;AAAA,IACF;AAGA,UAAM,SAAS,MAAM,uBAAsB,kBAAkB,KAAK,QAAQ;AAE1E,UAAM,aAAa,QAAQ,MAAM;AAEjC,WAAO;AAAA,EACT;;;AC7IO,MAAM,qBAAN,cAAiC,QAAQ;AAAA;AAAA;AAAA;AAAA,IAS9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,YAAY,YAAuB,UAAqB;AACtD,YAAM,SAAS,IAAI,OAAO,UAAU;AACpC,YAAM,OAAO,SAAS,QAAQ;AAC9B,WAAK,SAAS,MAAM;AAAA,IACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,IAAI,aAAqB;AACvB,aAAO,KAAK,OAAO,EAAE;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,IAAI,YAAoB;AACtB,aAAO,KAAK,OAAO,EAAE;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,YAAY,SAAkC;AAClD,YAAM,gBAAgB,MAAM,KAAK,OAAO,EAAE,KAAK,YAAY,OAAO,CAAC;AACnE,aAAO,QAAQ,aAAa;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,gBAAgB,wBAAiE;AACrF,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,YAAM,UAAU,KAAK,SAAS,WAAW;AACzC,YAAM,oBAAoB,mBAAmB,iBAAiB,OAAO;AACrE,YAAM,YAAY,MAAM,KAAK,OAAO,EAAE,KAAK,iBAAiB;AAC5D,aAAO,QAAQ,SAAS;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,sCAAsC,wBAAgD;AAC1F,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,YAAM,oBAAoB,MAAM,KAAK,gBAAgB,kBAAkB;AAEvE,yBAAmB,qBAAqB,KAAK,SAAS,iBAAiB;AAEvE,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,gBACJ,wBACA,EAAE,yBAAyB,MAAM,eAAe,IAA0B,CAAC,GAC7C;AAC9B,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,UAAI,wBAAwB;AAC1B,cAAM,KAAK,SAAS,uBAAuB,kBAAkB;AAAA,MAC/D;AACA,aAAO,KAAK,SAAS;AAAA,QACnB,MAAM,KAAK,sCAAsC,kBAAkB;AAAA,QACnE,EAAE,gBAAgB,wBAAwB,MAAM;AAAA,MAClD;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,oBACJ,wBACA,EAAE,yBAAyB,KAAK,IAA+B,CAAC,GAC3C;AACrB,YAAM,qBAAqB,sBAAsB,sBAAsB;AACvE,UAAI,wBAAwB;AAC1B,cAAM,KAAK,SAAS,uBAAuB,kBAAkB;AAAA,MAC/D;AACA,aAAO,KAAK,SAAS;AAAA,QACnB,MAAM,KAAK,sCAAsC,kBAAkB;AAAA,QACnE;AAAA,UACE,gBAAgB;AAAA,UAChB,wBAAwB;AAAA,QAC1B;AAAA,MACF;AAAA,IACF;AAAA,IAEA,MAAM,QAAQ,UAAmC;AAC/C,aAAO,sBAAsB,KAAK,YAAY,KAAK,SAAS,QAAQ;AAAA,IACtE;AAAA,EACF;AA3HE;AAAA;AAAA;AAAA,gBAJW,oBAIJ,eAAc;;;ACzBhB,MAAM,UAAU;AAAA,IACrkBAAKC,cAAL;AACL,IAAAA,UAAA,aAAY;AADF,WAAAA;AAAA,KAAA;;;ACML,WAASC,aAAY,MAA0B;AACpD,UAAM,MAAM,KAAK,UAAU,MAAM;AAEjC,UAAM,SAAS,CAAC;AAChB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG;AACtC,YAAM,IAAI,IAAI,WAAW,CAAC;AAE1B,UAAI,IAAI,KAAM;AACZ,eAAO,KAAK,CAAC;AAAA,MACf,WAAW,IAAI,MAAO;AACpB,eAAO,KAAM,KAAK,IAAK,GAAI;AAC3B,eAAO,KAAM,IAAI,KAAQ,GAAI;AAAA,MAC/B,YAAY,IAAI,WAAY,OAAQ;AAClC,aAAK;AACL,cAAM,KAAK,IAAI,WAAW,CAAC;AAE3B,YAAI,KAAK,IAAI,WAAW,KAAK,WAAY,OAAQ;AAC/C,gBAAM,IAAI;AAAA,YACR,UAAU;AAAA,YACV;AAAA,UACF;AAAA,QACF;AAGA,cAAM,OAAO,UAAY,IAAI,SAAW,OAAO,KAAK;AACpD,eAAO,KAAM,QAAQ,KAAM,GAAI;AAC/B,eAAO,KAAO,QAAQ,KAAM,KAAQ,GAAI;AACxC,eAAO,KAAO,QAAQ,IAAK,KAAQ,GAAI;AACvC,eAAO,KAAM,OAAO,KAAQ,GAAI;AAAA,MAClC,OAAO;AACL,eAAO,KAAM,KAAK,KAAM,GAAI;AAC5B,eAAO,KAAO,KAAK,IAAK,KAAQ,GAAI;AACpC,eAAO,KAAM,IAAI,KAAQ,GAAI;AAAA,MAC/B;AAAA,IACF;AAEA,WAAO,WAAW,KAAK,MAAM;AAAA,EAC/B;AAGA,WAAS,aAAa,MAAsB;AAC1C,YAAQ,KAAK,QAAQ;AAAA,EACvB;AAGA,WAAS,aAAa,MAAsB;AAC1C,YAAS,KAAK,QAAQ,KAAO,IAAI;AAAA,EACnC;AAEO,WAAS,SAAS,UAAyC;AAChE,QAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC5B,aAAO,SAAS,MAAM,KAAK;AAAA,IAC7B;AACA,WAAO;AAAA,EACT;AAEO,WAAS,UAAU,UAAkC;AAC1D,QAAI,MAAM,QAAQ,QAAQ,GAAG;AAC3B,aAAO,SAAS,KAAK,GAAG;AAAA,IAC1B;AACA,WAAO;AAAA,EACT;AAEO,WAAS,yBAAyB,SAAoC;AAC3E,UAAM,UAAyB,CAAC,CAAC;AAEjC,QAAI,gBAAgB;AACpB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK,GAAG;AAC1C,UAAI,gBAAgB,GAAG;AACrB,gBAAQ,QAAQ,SAAS,CAAC,MAAM;AAChC,gBAAQ,QAAQ,SAAS,CAAC,KAAK,QAAQ,CAAC;AAExC,yBAAiB;AAAA,MAEnB,OAAO;AACL,gBAAQ,QAAQ,SAAS,CAAC,MAAM;AAChC,gBAAQ,QAAQ,SAAS,CAAC,KAAK,QAAQ,CAAC,KAAM,IAAI;AAGlD,gBAAQ,KAAK,QAAQ,CAAC,IAAI,aAAa,IAAI,aAAa,CAAC;AAEzD,yBAAiB;AAAA,MACnB;AAAA,IACF;AAGA,UAAM,eAAe,QAAQ,SAAS;AACtC,UAAM,WAAW,SAASC,QAAO,OAAO,CAAC,EAAE,CAAC,IAAI,aAAa,YAAY;AAGzE,YAAQ,QAAQ,SAAS,CAAC,MAAM;AAChC,YAAQ,QAAQ,SAAS,CAAC,KAAK,YAAa,IAAI;AAEhD,WAAO;AAAA,EACT;AAEO,WAAS,uBAAuB,OAAsB,UAAoC;AAC/F,UAAM,OAAO,KAAK,KAAM,KAAK,MAAM,SAAU,CAAC;AAC9C,UAAM,UAAU,SAAS,IAAI,WAAW,IAAI,CAAC;AAE7C,QAAI,SAAS;AACb,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACxC,YAAM,QAAQ,SAAS,QAAQ,MAAM,CAAC,EAAE,UAAU,MAAM,CAAC;AACzD,UAAI,UAAU,IAAI;AAChB,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,+BAA+B,MAAM,CAAC;AAAA,QACxC;AAAA,MACF;AAEA,eAAS,MAAM,GAAG,MAAM,IAAI,OAAO,GAAG;AACpC,YAAI,QAAS,KAAM,KAAK,KAAO;AAC7B,kBAAQ,UAAU,CAAC,KAAK,KAAM,IAAK,SAAS;AAAA,QAC9C;AACA,kBAAU;AAAA,MACZ;AAAA,IACF;AACA,UAAM,cAAe,KAAK,MAAM,SAAU;AAC1C,UAAM,eAAe,MAAM,SAAS;AACpC,UAAM,eAAe,aAAa,YAAY;AAC9C,UAAM,WAAW,SAASA,QAAO,QAAQ,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI;AAE1E,QAAI,cAAc,QAAQ,QAAQ,SAAS,CAAC,IAAI,eAAe;AAC7D,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV;AAAA,MACF;AAAA,IACF;AAEA,WAAO,QAAQ,MAAM,GAAG,cAAc,CAAC;AAAA,EACzC;;;ACpHA,MAAM,eAAeC,aAAY,cAAc;AAE/C,MAAM,aAAa;AACnB,MAAM,aAAa;AACZ,MAAM,iBAAiB,CAAC,IAAI,IAAI,IAAI,IAAI,EAAE;AAEjD,WAAS,eAAe,UAAyB;AAC/C,QAAI,SAAS,WAAW,MAAM;AAC5B,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV,8CAA8C,SAAS;AAAA,MACzD;AAAA,IACF;AAAA,EACF;AAEA,WAAS,cAAc,SAAoB;AACzC,QAAI,QAAQ,SAAS,MAAM,KAAK,QAAQ,SAAS,MAAM,QAAQ,SAAS,IAAI;AAC1E,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV,0EAA0E,QAAQ;AAAA,MACpF;AAAA,IACF;AAAA,EACF;AAEA,WAAS,eAAe,OAAsB;AAC5C,QAAI,CAAC,eAAe,SAAS,MAAM,MAAM,GAAG;AAC1C,YAAM,WAAW,2CAA2C,eAAe;AAAA,QACzE;AAAA,MACF,qBAAqB,MAAM;AAE3B,YAAM,IAAI,UAAU,UAAU,kBAAkB,QAAQ;AAAA,IAC1D;AAAA,EACF;AAEA,MAAM,WAAN,MAAe;AAAA,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,YAAY,WAA0B,SAAS;AAC7C,WAAK,WAAW;AAEhB,qBAAe,KAAK,QAAQ;AAAA,IAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,kBAAkB,QAAwB;AACxC,aAAO,SAAS,kBAAkB,QAAQ,KAAK,QAAQ;AAAA,IACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,kBAAkB,SAAoB;AACpC,aAAO,SAAS,kBAAkB,SAAS,KAAK,QAAQ;AAAA,IAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,OAAO,kBAAkB,QAAwB,WAA0B,SAAiB;AAC1F,YAAM,QAAQ,SAAS,MAAM;AAE7B,qBAAe,KAAK;AAEpB,aAAO,QAAQ,uBAAuB,OAAO,QAAQ,CAAC;AAAA,IACxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,OAAO,kBAAkB,SAAoB,WAA0B,SAAiB;AACtF,YAAM,eAAe,SAAS,OAAO;AAErC,qBAAe,QAAQ;AACvB,oBAAc,YAAY;AAE1B,aAAO,yBAAyB,YAAY,EACzC,IAAI,CAAC,MAAM,SAAS,CAAC,CAAC,EACtB,KAAK,GAAG;AAAA,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,OAAO,eAAe,QAAwB,aAAwB,IAAI;AACxE,qBAAe,SAAS,MAAM,CAAC;AAE/B,YAAM,cAAcA,aAAY,UAAU,MAAM,CAAC;AACjD,YAAM,OAAOA,aAAY,WAAW,YAAY;AAEhD,aAAOC,QAAO,aAAa,MAAM,MAAM,IAAI,QAAQ;AAAA,IACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,OAAO,qBAAqB,QAAwB,aAAwB,IAAI;AAC9E,YAAM,OAAO,SAAS,eAAe,QAAQ,UAAU;AACvD,aAAO,SAAS,mBAAmB,IAAI;AAAA,IACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,OAAO,gBAAgB,QAAgB;AACrC,YAAM,QAAQ,SAAS,MAAM;AAE7B,UAAI,IAAY;AAEhB,UAAI;AACF,uBAAe,KAAK;AAAA,MACtB,QAAE;AACA,eAAO;AAAA,MACT;AAEA,aAAO,IAAI,MAAM,QAAQ;AACvB,YAAI,SAAS,aAAa,MAAM,CAAC,CAAC,MAAM,OAAO;AAC7C,iBAAO;AAAA,QACT;AACA,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,OAAO,aAAa,QAAyB;AAC3C,YAAM,QAAQ;AACd,UAAI,OAAe;AACnB,UAAI,QAAgB,MAAM,SAAS;AAEnC,aAAO,QAAQ,OAAO;AACpB,cAAM,MAAc,KAAK,OAAO,OAAO,SAAS,CAAC;AAEjD,YAAI,MAAM,GAAG,MAAM,QAAQ;AACzB,iBAAO;AAAA,QACT;AACA,YAAI,SAAS,MAAM,GAAG,GAAG;AACvB,kBAAQ,MAAM;AAAA,QAChB,OAAO;AACL,iBAAO,MAAM;AAAA,QACf;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,OAAO,mBAAmB,MAA0B;AAClD,YAAM,YAAY,SAAS,IAAI;AAE/B,UAAI,UAAU,SAAS,MAAM,UAAU,SAAS,IAAI;AAClD,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,+DAA+D,UAAU;AAAA,QAC3E;AAAA,MACF;AAEA,aAAO,SAAS,YAAY,UAAU,cAAc,SAAS,CAAC;AAAA,IAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,OAAO,kBAAkB,MAAc,UAAmB,OAAe;AACvE,YAAM,YAAY,SAAS,mBAAmB,IAAI;AAClD,YAAM,SAAS,SAAS,UAAU,aAAa,UAAU;AACzD,YAAM,QAAQ;AACd,YAAM,cAAc;AACpB,YAAM,QAAQ;AAEd,YAAM,YAAY,UAAU,MAAM,EAAE;AAEpC,YAAM,aAAa,UAAU,MAAM,GAAG,EAAE;AACxC,YAAM,cAAc,OAAO;AAAA,QACzB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO,CAAC,QAAQ,UAAU,CAAC;AAAA,MAC7B,CAAC;AACD,YAAM,WAAW,UAAUC,QAAOA,QAAO,WAAW,CAAC,GAAG,GAAG,CAAC;AAE5D,aAAO,aAAa,OAAO,CAAC,aAAa,QAAQ,CAAC,CAAC;AAAA,IACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcA,OAAO,SAAS,OAAe,IAAI,eAA0B,IAAI;AAC/D,YAAM,UAAU,eACZA,QAAO,OAAO,CAACC,cAAY,IAAI,GAAG,SAAS,YAAY,CAAC,CAAC,CAAC,IAC1DA,cAAY,IAAI;AACpB,aAAO,SAAS,kBAAkB,OAAO;AAAA,IAC3C;AAAA,EACF;AAEA,MAAO,mBAAQ;;;ACtPf,MAAM,iBAAiB;AAGvB,MAAMC,cAAa,QAAQ,YAAY;AACvC,MAAM,aAAa,QAAQ,YAAY;AACvC,MAAMC,cAAa,QAAQ,YAAY;AACvC,MAAM,aAAa,QAAQ,YAAY;AAEvC,WAAS,YAAY,MAA0B;AAC7C,WAAO,aAAa,OAAO,CAAC,MAAM,UAAUC,QAAOA,QAAO,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAAA,EAC3E;AAEA,WAAS,qBAAqB,WAAoB,OAAO,UAAmB,OAAO;AACjF,QAAI,UAAU;AACZ,aAAO,UAAU,aAAa;AAAA,IAChC;AACA,WAAO,UAAUD,cAAaD;AAAA,EAChC;AAEA,WAAS,oBAAoB,aAAyB;AACpD,WAAO,CAAC,YAAY,UAAU,EAAE,SAAS,QAAQ,YAAY,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,EAC3E;AAEA,WAAS,mBAAmB,aAAyB;AACnD,WAAO,CAACA,aAAYC,aAAY,YAAY,UAAU,EAAE;AAAA,MACtD,QAAQ,YAAY,MAAM,GAAG,CAAC,CAAC;AAAA,IACjC;AAAA,EACF;AAEA,WAAS,UAAU,MAAc,QAAgB,GAAG;AAClD,UAAM,aAAa,KAAK,MAAM,GAAG;AAEjC,QAAI,WAAW,WAAW,KAAM,WAAW,CAAC,MAAM,OAAO,UAAU,GAAI;AACrE,YAAM,IAAI,UAAU,UAAU,iBAAiB,kBAAkB,MAAM;AAAA,IACzE;AAEA,QAAI,WAAW,CAAC,MAAM,KAAK;AACzB,iBAAW,MAAM;AAAA,IACnB;AAEA,WAAO,WAAW;AAAA,MAAI,CAAC,MACrB,CAAC,EAAE,QAAQ,GAAG,IAAI,SAAS,GAAG,EAAE,IAAI,iBAAiB,SAAS,GAAG,EAAE;AAAA,IACrE;AAAA,EACF;AAWA,MAAM,WAAN,MAAe;AAAA,IACb,QAAgB;AAAA,IAChB,QAAgB;AAAA,IAChB,cAAsB,QAAQ,YAAY;AAAA,IAC1C,oBAA4B,QAAQ,YAAY;AAAA,IAChD;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,YAAY,QAAwB;AAGlC,UAAI,OAAO,YAAY;AACrB,cAAM,SAAS,IAAI,OAAO,OAAO,UAAU;AAC3C,aAAK,YAAY,QAAQ,OAAO,mBAAmB;AACnD,aAAK,aAAa,QAAQ,OAAO,UAAU;AAAA,MAC7C,OAAO;AACL,YAAI,CAAC,OAAO,WAAW;AACrB,gBAAM,IAAI;AAAA,YACR,UAAU;AAAA,YACV;AAAA,UACF;AAAA,QACF;AACA,aAAK,YAAY,QAAQ,OAAO,SAAS;AAAA,MAC3C;AAEA,WAAK,oBAAoB,OAAO,qBAAqB,KAAK;AAC1D,WAAK,cAAc,UAAUE,WAAUD,QAAO,KAAK,SAAS,CAAC,GAAG,GAAG,CAAC;AACpE,WAAK,QAAQ,OAAO,SAAS,KAAK;AAClC,WAAK,QAAQ,OAAO,SAAS,KAAK;AAClC,WAAK,YAAY,OAAO;AAAA,IAC1B;AAAA,IAEA,IAAI,cAAc;AAChB,aAAO,KAAK,cAAc;AAAA,IAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,YAAY,OAAe;AACzB,YAAM,aAAa,KAAK,cAAc,SAAS,KAAK,UAAU;AAC9D,YAAM,YAAY,SAAS,KAAK,SAAS;AACzC,YAAM,YAAY,SAAS,KAAK,SAAS;AACzC,YAAM,OAAO,IAAI,WAAW,EAAE;AAE9B,UAAI,QAAQ,gBAAgB;AAC1B,YAAI,CAAC,YAAY;AACf,gBAAM,IAAI;AAAA,YACR,UAAU;AAAA,YACV;AAAA,UACF;AAAA,QACF;AAGA,aAAK,IAAI,YAAY,CAAC;AAAA,MACxB,OAAO;AACL,aAAK,IAAI,SAAS,KAAK,SAAS,CAAC;AAAA,MACnC;AAGA,WAAK,IAAIE,SAAQ,OAAO,CAAC,GAAG,EAAE;AAE9B,YAAMC,SAAQ,SAAS,YAAY,UAAU,WAAW,IAAI,CAAC;AAC7D,YAAM,KAAKA,OAAM,MAAM,GAAG,EAAE;AAC5B,YAAM,KAAKA,OAAM,MAAM,EAAE;AAEzB,UAAI,YAAY;AACd,cAAM,IAAI;AAEV,cAAM,KAAK,GAAG,EAAE,EAAE,IAAI,UAAU,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAE;AAEnD,eAAO,IAAI,SAAS;AAAA,UAClB,YAAY;AAAA,UACZ,WAAW;AAAA,UACX;AAAA,UACA,OAAO,KAAK,QAAQ;AAAA,UACpB,mBAAmB,KAAK;AAAA,QAC1B,CAAC;AAAA,MACH;AAEA,YAAM,SAAS,IAAI,OAAO,QAAQ,EAAE,CAAC;AACrC,YAAM,KAAK,OAAO,SAAS,SAAS;AAEpC,aAAO,IAAI,SAAS;AAAA,QAClB,WAAW;AAAA,QACX,WAAW;AAAA,QACX;AAAA,QACA,OAAO,KAAK,QAAQ;AAAA,QACpB,mBAAmB,KAAK;AAAA,MAC1B,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,WAAW,MAAc;AACvB,YAAM,QAAQ,UAAU,MAAM,KAAK,KAAK;AAExC,aAAO,MAAM,OAAO,CAAC,UAAU,UAAU,SAAS,YAAY,KAAK,GAAa,IAAI;AAAA,IACtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,cAAc,WAAoB,OAAO,UAAmB,OAAe;AACzE,UAAI,KAAK,SAAS,KAAK;AACrB,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,6CAA6C,KAAK;AAAA,QACpD;AAAA,MACF;AACA,YAAM,SAAS,qBAAqB,KAAK,cAAc,QAAQ,UAAU,OAAO;AAChF,YAAM,QAAQ,QAAQ,WAAW,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC;AACnD,YAAM,oBAAoB,KAAK;AAC/B,YAAM,QAAQ,MAAM,KAAK,OAAO,CAAC;AAEjC,YAAM,YAAY,KAAK;AAEvB,YAAM,MACJ,KAAK,cAAc,QAAQ,CAAC,WAAW,OAAO,CAAC,QAAQ,KAAK,UAAU,CAAC,IAAI,KAAK;AAClF,YAAM,cAAc,SAAS,OAAO,CAAC,QAAQ,OAAO,mBAAmB,OAAO,WAAW,GAAG,CAAC,CAAC;AAE9F,aAAO,YAAY,WAAW;AAAA,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,OAAO,SAAS,MAAc;AAC5B,YAAM,YAAY,iBAAS,mBAAmB,IAAI;AAElD,aAAO,IAAI,SAAS;AAAA,QAClB,WAAW,SAAS,UAAU,MAAM,EAAE,CAAC;AAAA,QACvC,YAAY,SAAS,UAAU,MAAM,GAAG,EAAE,CAAC;AAAA,MAC7C,CAAC;AAAA,IACH;AAAA,IAEA,OAAO,gBAAgB,aAAqB;AAC1C,YAAM,UAAU,QAAQ,aAAa,WAAW,CAAC;AACjD,YAAMA,SAAQ,SAAS,OAAO;AAC9B,YAAM,gBAAgB,YAAYA,OAAM,MAAM,GAAG,EAAE,CAAC,MAAM;AAE1D,UAAIA,OAAM,WAAW,MAAM,CAAC,mBAAmBA,MAAK,GAAG;AACrD,cAAM,IAAI,UAAU,UAAU,iBAAiB,2CAA2C;AAAA,MAC5F;AACA,UAAI,CAAC,eAAe;AAClB,cAAM,IAAI,UAAU,UAAU,iBAAiB,uCAAuC;AAAA,MACxF;AAEA,YAAM,QAAQA,OAAM,CAAC;AACrB,YAAM,oBAAoB,QAAQA,OAAM,MAAM,GAAG,CAAC,CAAC;AACnD,YAAM,QAAQ,SAAS,QAAQA,OAAM,MAAM,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE;AACnE,YAAM,YAAY,QAAQA,OAAM,MAAM,IAAI,EAAE,CAAC;AAC7C,YAAM,MAAMA,OAAM,MAAM,IAAI,EAAE;AAE9B,UAAK,UAAU,KAAK,sBAAsB,gBAAkB,UAAU,KAAK,UAAU,GAAI;AACvF,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAEA,UAAI,oBAAoBA,MAAK,GAAG;AAC9B,YAAI,IAAI,CAAC,MAAM,GAAG;AAChB,gBAAM,IAAI,UAAU,UAAU,iBAAiB,8BAA8B;AAAA,QAC/E;AAEA,eAAO,IAAI,SAAS;AAAA,UAClB,WAAW;AAAA,UACX;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAEA,UAAI,IAAI,CAAC,MAAM,GAAG;AAChB,cAAM,IAAI,UAAU,UAAU,iBAAiB,+BAA+B;AAAA,MAChF;AAEA,aAAO,IAAI,SAAS;AAAA,QAClB,YAAY,IAAI,MAAM,CAAC;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAEA,MAAO,mBAAQ;;;AC1PR,MAAM,eAAN,cAA2B,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOxC,OAAO,YAAuC;AAE5C,aAAO,IAAI,eAAe,YAAY,KAAK,SAAS;AAAA,IACtD;AAAA,EACF;AAKO,MAAM,iBAAN,cAA6B,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMrD,OAAqB;AACnB,WAAK,SAAS,MAAM,IAAI,OAAO,MAAM;AACrC,aAAO,IAAI,aAAa,KAAK,SAAS,KAAK,SAAS;AAAA,IACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,OAAO,SAAS,iBAAmD;AACjE,YAAM,aAAa,OAAO,mBAAmB,iBAAiB,OAAO;AAErE,aAAO,IAAI,eAAe,YAAY,iBAAiB,QAAQ;AAAA,IACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,OAAO,SAAS,MAAc,MAAe,UAAqC;AAChF,YAAM,WAAW,iBAAS,SAAS,IAAI;AACvC,YAAM,cAAc,SAAS,WAAW,QAAQ,eAAe,WAAW;AAE1E,aAAO,IAAI,eAAuB,YAAY,YAAY,QAAQ;AAAA,IACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,OAAO,aACL,UACA,MACA,YACA,UACgB;AAChB,YAAM,OAAO,iBAAS,eAAe,UAAU,UAAU;AACzD,YAAM,WAAW,iBAAS,SAAS,IAAI;AACvC,YAAM,cAAc,SAAS,WAAW,QAAQ,eAAe,WAAW;AAE1E,aAAO,IAAI,eAAuB,YAAY,YAAY,QAAQ;AAAA,IACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,OAAO,gBAAgB,aAAqB,UAAqC;AAC/E,YAAM,WAAW,iBAAS,gBAAgB,WAAW;AAErD,aAAO,IAAI,eAAuB,SAAS,YAAY,QAAQ;AAAA,IACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,aAAa,kBACX,YACA,UACA,UACyB;AACzB,YAAM,aAAa,MAAM,sBAAsB,YAAY,QAAQ;AAEnE,aAAO,IAAI,eAAe,YAAY,QAAQ;AAAA,IAChD;AAAA,EACF;;;AC1HO,MAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQlB,OAAO,YAAY,SAAmC,UAAmC;AACvF,aAAO,IAAI,aAAa,SAAS,QAAQ;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,OAAO,eAAe,YAAuB,UAAqB;AAChE,aAAO,IAAI,eAAe,YAAY,QAAQ;AAAA,IAChD;AAAA,EAiDF;AAzCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BW,QA6BJ,YAAW,eAAe;AAUjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCW,QAuCJ,YAAW,eAAe;AAWjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDW,QAkDJ,gBAAe,eAAe;AASrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3DW,QA2DJ,mBAAkB,eAAe;AAUxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArEW,QAqEJ,qBAAoB,eAAe;;;ACzE5C,sBAA6B;;;ACHtB,MAAM,gBAAN,MAA+C;AAAA,IACpD,UAAU,oBAAI,IAAqB;AAAA,IAEnC,MAAM,QAAW,KAAgC;AAC/C,YAAM,OAAO,MAAM,KAAK,QAAQ,IAAI,GAAG;AACvC,aAAO;AAAA,IACT;AAAA,IAEA,MAAM,QAAQ,KAAa,OAAe;AACxC,YAAM,KAAK,QAAQ,IAAI,KAAK,KAAK;AAAA,IACnC;AAAA,IAEA,MAAM,WAAW,KAAa;AAC5B,YAAM,KAAK,QAAQ,OAAO,GAAG;AAAA,IAC/B;AAAA,IAEA,MAAM,QAAQ;AACZ,YAAM,KAAK,QAAQ,MAAM;AAAA,IAC3B;AAAA,EACF;;;ACrBA;AAeO,MAAM,gBAAN,MAA2D;AAAA,IAQhE,YAAY,SAA+B;AAN3C,yBAAS,SAAT;AAEA,qCAAU;AACV,sCAAmB,qBAAqB,KAAK;AAC7C,8CAA2B;AAGzB,yBAAK,SAAU,QAAQ,UAAU,iBAAS,SAAS;AACnD,WAAK,WAAW,QAAQ,YAAY,KAAK;AAEzC,WAAK,mBAAmB,QAAQ,oBAAoB;AAAA,IACtD;AAAA,IAEA,cAAc,OAAe;AAC3B,UAAI,KAAK,SAAS,SAAS,KAAK,OAAO,GAAG;AACxC,eAAO,KAAK,SAAS,QAAQ,KAAK,SAAS,OAAO,KAAK,CAAC;AAAA,MAC1D;AACA,aAAO,GAAG,KAAK,YAAY;AAAA,IAC7B;AAAA,IAEA,YAAkC;AAChC,aAAO;AAAA,QACL,QAAQ,mBAAK;AAAA,QACb,UAAU,KAAK;AAAA,QACf,kBAAkB,KAAK;AAAA,MACzB;AAAA,IACF;AAAA,IAEA,cAAc;AACZ,YAAM,WAAW,CAAC;AAClB,UAAI,mBAAmB;AAGvB,SAAG;AACD,cAAM,SAAS,OAAO,aAAa,mBAAK,UAAS,KAAK,cAAc,gBAAgB,CAAC;AACrF,iBAAS,KAAK;AAAA,UACZ,WAAW,OAAO;AAAA,UAClB,SAAS,OAAO;AAAA,QAClB,CAAC;AACD,4BAAoB;AAAA,MACtB,SAAS,mBAAmB,KAAK;AAEjC,aAAO;AAAA,IACT;AAAA,IAEA,aAAa;AACX,WAAK,oBAAoB;AACzB,YAAM,SAAS,OAAO,aAAa,mBAAK,UAAS,KAAK,cAAc,KAAK,mBAAmB,CAAC,CAAC;AAE9F,aAAO;AAAA,QACL,WAAW,OAAO;AAAA,QAClB,SAAS,OAAO;AAAA,MAClB;AAAA,IACF;AAAA,IAEA,cAAc,SAA2C;AACvD,UAAI,mBAAmB;AACvB,YAAM,eAAe,QAAQ,oBAAoB,OAAO;AAExD,SAAG;AACD,cAAM,SAAS,OAAO,aAAa,mBAAK,UAAS,KAAK,cAAc,gBAAgB,CAAC;AACrF,YAAI,OAAO,QAAQ,OAAO,YAAY,GAAG;AACvC,iBAAO,OAAO;AAAA,QAChB;AACA,4BAAoB;AAAA,MACtB,SAAS,mBAAmB,KAAK;AAEjC,YAAM,IAAI;AAAA,QACR,UAAU;AAAA,QACV,yBAAyB;AAAA,MAC3B;AAAA,IACF;AAAA,IAEA,UAAU,SAAmD;AAC3D,YAAM,aAAa,KAAK,cAAc,OAAO;AAC7C,aAAO,OAAO,eAAe,UAAU;AAAA,IACzC;AAAA,EACF;AA7EW;AADT,gBADW,eACK,QAAO;;;AChBzB;AAaO,MAAM,kBAAN,MAAuD;AAAA;AAAA;AAAA;AAAA;AAAA,IAS5D,YAAY,UAA0B,CAAC,GAAG;AAN1C,uCAA8B,CAAC;AAO7B,UAAI,QAAQ,QAAQ;AAClB,2BAAK,cAAe,CAAC,QAAQ,MAAM;AAAA,MACrC,OAAO;AACL,2BAAK,cAAe,QAAQ,YAAY,CAAC,OAAO,SAAS,EAAE,UAAU;AAAA,MACvE;AAAA,IACF;AAAA,IAEA,YAA4B;AAC1B,aAAO;AAAA,QACL,UAAU,mBAAK;AAAA,MACjB;AAAA,IACF;AAAA,IAEA,iBAAiB,YAAoB;AACnC,YAAM,SAAS,OAAO,eAAe,UAAU;AAC/C,aAAO;AAAA,QACL,SAAS,OAAO;AAAA,QAChB,WAAW,OAAO;AAAA,MACpB;AAAA,IACF;AAAA,IAEA,cAAsC;AACpC,aAAO,mBAAK,cAAa,IAAI,CAAC,OAAO,KAAK,iBAAiB,EAAE,CAAC;AAAA,IAChE;AAAA,IAEA,aAAa;AACX,YAAM,SAAS,OAAO,SAAS;AAE/B,yBAAK,cAAa,KAAK,OAAO,UAAU;AAExC,aAAO,KAAK,iBAAiB,OAAO,UAAU;AAAA,IAChD;AAAA,IAEA,cAAc,SAA2C;AACvD,YAAM,eAAe,QAAQ,oBAAoB,OAAO;AACxD,YAAM,aAAa,mBAAK,cAAa;AAAA,QAAK,CAAC,OACzC,OAAO,eAAe,EAAE,EAAE,QAAQ,OAAO,YAAY;AAAA,MACvD;AAEA,UAAI,CAAC,YAAY;AACf,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,qCAAqC;AAAA,QACvC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,UAAU,SAAmD;AAC3D,YAAM,aAAa,KAAK,cAAc,OAAO;AAC7C,aAAO,OAAO,eAAe,UAAU;AAAA,IACzC;AAAA,EACF;AA5DE;AAFA,gBADW,iBACK,QAAO;;;AHQzB,MAAM,iBAAiB;AAAA,IACrB,oBAAoB;AAAA,IACpB,mBAAmB;AAAA,IACnB,iBAAiB;AAAA,IACjB,qBAAqB;AAAA,IACrB,sBAAsB;AAAA,EACxB;AAKA,WAASC,QAAO,WAAoB,SAAoC;AACtE,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,UAAU,UAAU,sBAAsB,OAAO;AAAA,IAC7D;AAAA,EACF;AArCA;AA6CO,MAAM,iBAAN,cAA4B,2BAAa;AAAA,IAyB9C,YAAY,SAAgC;AAC1C,YAAM;AA0MR;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjOA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAS,WAA2B,IAAI,cAAc;AAEtD;AAAA,0BAAS,eAAsB;AAG/B;AAAA,kCAAuB,CAAC;AACxB,sCAAc;AACd,oCAAqB;AAInB,WAAK,UAAU,SAAS,WAAW,KAAK;AAAA,IAC1C;AAAA,IAEA,IAAI,WAAoB;AACtB,aAAO,mBAAK;AAAA,IACd;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,YAA6B,SAA6C;AACxE,MAAAA,QAAO,CAAC,mBAAK,YAAW,eAAe,mBAAmB;AAC1D,YAAM,aAAa,mBAAK,SAAQ,KAAK,CAAC,GAAG,QAAQ,QAAQ,OAAO;AAChE,MAAAA,QAAO,YAAY,eAAe,eAAe;AACjD,aAAO,WAAW,MAAM,UAAU;AAAA,IACpC;AAAA;AAAA;AAAA;AAAA,IAKA,YAAsE;AACpE,aAAO,mBAAK,SAAQ,IAAI,CAAC,GAAG,SAAS;AAAA,QACnC,OAAO,EAAE;AAAA,QACT,MAAM,EAAE;AAAA,QACR,SAAS;AAAA,MACX,EAAE;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAKA,cAA2C;AAEzC,aAAO,mBAAK,SAAQ;AAAA,QAA8B,CAAC,YAAY,YAC7D,WAAW,MAAM,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,GAAG,SAAS,QAAQ,EAAE;AAAA,MAC3E;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU,SAAmD;AAC3D,YAAM,eAAe,QAAQ,oBAAoB,OAAO;AACxD,YAAM,aAAa,mBAAK,SAAQ;AAAA,QAAK,CAAC,OACpC,GAAG,MAAM,YAAY,EAAE,KAAK,CAAC,MAAM,EAAE,QAAQ,OAAO,YAAY,CAAC;AAAA,MACnE;AACA,MAAAA,QAAO,YAAY,eAAe,iBAAiB;AAEnD,aAAO,WAAW,MAAM,UAAU,YAAY;AAAA,IAChD;AAAA;AAAA;AAAA;AAAA,IAKA,iBAAiB,SAAmC;AAClD,YAAM,eAAe,QAAQ,oBAAoB,OAAO;AACxD,MAAAA,QAAO,CAAC,mBAAK,YAAW,eAAe,mBAAmB;AAC1D,YAAM,aAAa,mBAAK,SAAQ;AAAA,QAAK,CAAC,OACpC,GAAG,MAAM,YAAY,EAAE,KAAK,CAAC,MAAM,EAAE,QAAQ,OAAO,YAAY,CAAC;AAAA,MACnE;AACA,MAAAA,QAAO,YAAY,eAAe,iBAAiB;AAEnD,aAAO,WAAW,MAAM,cAAc,YAAY;AAAA,IACpD;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAM,WAAW,SAA+B;AAE9C,YAAM,KAAK,UAAU;AAErB,YAAM,aAAa,mBAAK,SAAQ,SAAS,WAAW,CAAC;AACrD,YAAMA,QAAO,YAAY,eAAe,eAAe;AAEvD,YAAM,UAAU,WAAW,MAAM,WAAW;AAE5C,YAAM,KAAK,UAAU;AAErB,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAM,YAAY,OAAe;AAC/B,yBAAK,SAAQ,OAAO,OAAO,CAAC;AAC5B,YAAM,KAAK,UAAU;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAM,SAAS,aAA0B;AAEvC,YAAM,KAAK,UAAU;AAErB,YAAMC,SAAQ,KAAK,cAAc,YAAY,IAAI;AAEjD,YAAM,QAAQ,IAAIA,OAAM,WAAW;AAEnC,yBAAK,SAAU,mBAAK,SAAQ,OAAO;AAAA,QACjC,OAAO,YAAY;AAAA,QACnB,MAAM,YAAY;AAAA,QAClB;AAAA,MACF,CAAC;AAED,YAAM,KAAK,UAAU;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,OAAO;AACL,yBAAK,WAAY;AAEjB,yBAAK,SAAU,CAAC;AAEhB,yBAAK,aAAc;AAEnB,WAAK,KAAK,MAAM;AAAA,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAM,OAAO,YAAoB;AAE/B,yBAAK,aAAc;AAEnB,yBAAK,WAAY;AAEjB,UAAI;AAEF,cAAM,KAAK,UAAU;AAErB,aAAK,KAAK,QAAQ;AAAA,MACpB,SAAS,KAAP;AAEA,cAAM,KAAK,KAAK;AAEhB,cAAM;AAAA,MACR;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,iBAAiB,SAAiB,SAAiB;AACvD,YAAM,WAAW,mBAAK;AAEtB,YAAM,KAAK,OAAO,OAAO;AAEzB,yBAAK,aAAc;AAEnB,YAAM,KAAK,UAAU;AAErB,YAAM,KAAK,UAAU;AAErB,UAAI,UAAU;AACZ,cAAM,KAAK,KAAK;AAAA,MAClB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,YAAY;AAChB,YAAMD,QAAO,CAAC,mBAAK,YAAW,eAAe,mBAAmB;AAEhE,YAAM,OAAO,MAAM,KAAK,QAAQ,QAAQ,KAAK,WAAW;AACxD,UAAI,MAAM;AACR,cAAM,QAAQ,MAAM,SAA4B,mBAAK,cAAuB,KAAK,MAAM,IAAI,CAAC;AAC5F,2BAAK,SAAU,sBAAK,0CAAL,WAAwB,MAAM;AAAA,MAC/C;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,MAAc,YAAY;AACxB,YAAMA,QAAO,CAAC,mBAAK,YAAW,eAAe,mBAAmB;AAEhE,YAAM,gBAAgB,MAAM,SAAQ,mBAAK,cAAa;AAAA,QACpD,QAAQ,sBAAK,sCAAL,WAAsB,mBAAK;AAAA,MACrC,CAAC;AACD,YAAM,KAAK,QAAQ,QAAQ,KAAK,aAAa,KAAK,UAAU,aAAa,CAAC;AAC1E,WAAK,KAAK,QAAQ;AAAA,IACpB;AAAA;AAAA;AAAA;AAAA,IAkCQ,cAAcE,OAAc;AAClC,YAAM,aAAa,eAAc,OAAO,KAAK,CAAC,MAAM,EAAE,SAASA,KAAI;AAEnE,MAAAF,QAAO,YAAY,eAAe,kBAAkB;AAEpD,aAAO;AAAA,IACT;AAAA,EACF;AAtQO,MAAM,gBAAN;AAqBL;AACA;AACA;AA6MA;AAAA,uBAAgB,SAAC,QAAqB;AACpC,WAAO,OAAO,IAAI,CAAC,EAAE,OAAO,MAAAE,OAAM,MAAM,OAAO;AAAA,MAC7C;AAAA,MACA,MAAAA;AAAA,MACA,MAAM,MAAM,UAAU;AAAA,IACxB,EAAE;AAAA,EACJ;AAOA;AAAA,yBAAkB,SAAC,QAAqB;AACtC,WAAO,OAAO,IAAI,CAAC,EAAE,OAAO,MAAAA,OAAM,MAAM,YAAY,MAAM;AACxD,YAAM,aAAa,KAAK,cAAcA,KAAI;AAC1C,aAAO;AAAA,QACL;AAAA,QACA,MAAAA;AAAA,QACA,OAAO,IAAI,WAAwB,WAAW;AAAA,MAChD;AAAA,IACF,CAAC;AAAA,EACH;AAhPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVW,eAUJ,UAAS,CAAC,eAAe,eAAe;;;AItB1C,MAAe,QAAf,MAAqD;AAAA,IAG1D,YAAY,UAAoB;AAC9B,YAAM,IAAI,UAAU,UAAU,iBAAiB,kBAAkB;AAAA,IACnE;AAAA,IAEA,YAAsB;AACpB,YAAM,IAAI,UAAU,UAAU,iBAAiB,kBAAkB;AAAA,IACnE;AAAA,IAEA,cAAsC;AACpC,YAAM,IAAI,UAAU,UAAU,iBAAiB,kBAAkB;AAAA,IACnE;AAAA,IAEA,aAAmC;AACjC,YAAM,IAAI,UAAU,UAAU,iBAAiB,kBAAkB;AAAA,IACnE;AAAA,IAEA,cAAc,UAAmC;AAC/C,YAAM,IAAI,UAAU,UAAU,iBAAiB,kBAAkB;AAAA,IACnE;AAAA,IAEA,UAAU,UAA2C;AACnD,YAAM,IAAI,UAAU,UAAU,iBAAiB,kBAAkB;AAAA,IACnE;AAAA,EACF;AAzBE,gBADoB,OACJ;AA2BX,MAAe,kBAAf,MAA+B;AAAA,EAKtC;;;AE/DO,MAAM,QAAQ;ACHrB,MAAM,OAAN,MAAW;IACT;IACA;IACA;IACA;IACA;IACA;IAEA,YACE,MACA,OACA,QACAC,OACA,MACA,QAAgB,GAChB;AACA,WAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,SAAS;AACd,WAAK,OAAOA;AACZ,WAAK,OAAO;AACZ,WAAK,QAAQ;IACf;EACF;AAEA,MAAOC,gBAAQ;AFfR,WAAS,SAAS,MAAsB;AAC7C,WAAOD,MAAK,OAAO,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC;EAC1C;AAMO,WAAS,SAAS,MAAc,OAAuB;AAC5D,WAAOA,MAAK,OAAO,OAAO,KAAK,MAAM,CAAC,CAAC,EAAE,OAAO,MAAM,MAAM,CAAC,CAAC,CAAC;EACjE;AAoDO,WAAS,SAAS,MAAwB;AAC/C,QAAI,CAAC,KAAK,QAAQ;AAChB,aAAO;IACT;AACA,UAAM,QAAQ,CAAC;AACf,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvC,YAAM,SAAS,SAAS,KAAK,CAAC,CAAC;AAC/B,YAAM,KAAK,IAAIE,cAAK,IAAI,IAAI,IAAI,QAAQ,KAAK,CAAC,CAAC,CAAC;IAClD;AACA,QAAI,SAAS;AACb,QAAI,OAAQ,MAAM,SAAS,KAAM;AACjC,QAAI,MAAM,MAAM,SAAS;AAEzB,WAAO,MAAM;AACX,UAAI,IAAI;AACR,aAAO,IAAI,OAAO,KAAK,KAAK,GAAG;AAC7B,cAAM,IAAI,KAAK;AACf,cAAM,SAAS,SAAS,OAAO,CAAC,EAAE,MAAM,OAAO,IAAI,CAAC,EAAE,IAAI;AAC1D,cAAM,CAAC,IAAI,IAAIA,cAAK,OAAO,CAAC,EAAE,OAAO,OAAO,IAAI,CAAC,EAAE,OAAO,IAAI,QAAQ,EAAE;MAC1E;AACA,UAAI,QAAQ,GAAG;AACb,cAAM,CAAC,IAAI,OAAO,KAAK,CAAC;MAC1B;AACA,UAAI,SAAS,GAAG;AACd;MACF;AACA,YAAM,OAAO;AACb,aAAQ,OAAO,KAAM;AACrB,eAAS;IACX;AACA,WAAO,MAAM,CAAC,EAAE;EAClB;;;ASzFO,MAAM,mBAAmB,CAAC,aAAgC;AAC/D,UAAM,YAAY,KAAK;AACvB,UAAMC,SAAQ,SAAS,QAAQ;AAC/B,UAAM,SAAS,iBAAiBA,QAAO,SAAS;AAChD,UAAM,WAAW,SAAS,OAAO,IAAI,CAAC,MAAM,QAAQ,CAAC,CAAC,CAAC;AAEvD,UAAM,gBAAgBC,MAAK,OAAO,CAAC,cAAc,QAAQ,CAAC,CAAC;AAC3D,WAAO;AAAA,EACT;;;ACmBO,MAAM,YAAN,cAAyD,QAAQ;AAAA,IACtE;AAAA,IACA,qBAAiC,WAAW,KAAK,CAAC,CAAC;AAAA,IACnD,gBAA4B,CAAC;AAAA,IAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAgC;AAC9B,YAAM,EAAE,gBAAgB,mBAAmB,IAAI,UAAU;AAAA,QACvD;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAM,UAAU,QAAQ,SAAS,iBAAiB,cAAc,CAAC;AACjE,YAAM,SAAS,QAAQ;AAEvB,WAAK,QAAQ;AACb,WAAK,YAAY;AACjB,UAAI,cAAc,UAAa,UAAU,SAAS,GAAG;AACnD,aAAK,gBAAgB;AAAA,MACvB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,iCAAiC,wBAAgD;AAC/E,YAAM,UAAU,sBAAsB,sBAAsB;AAE5D,YAAM,EAAE,SAAS,IAAI,uBAAuB,cAAc,OAAO;AAEjE,cAAQ,QAAQ,QAAQ,CAAC,UAAU;AACjC,YAAI,MAAM,SAAS,UAAU,QAAQ,QAAQ,MAAM,KAAK,MAAM,KAAK,QAAQ,OAAO,GAAG;AAEnF,gBAAM,YAAY,KAAK;AAEvB,gBAAM,gBAAgB,KAAK,iBAAiB,SAAS,MAAM;AAAA,QAC7D;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,MAAM,eAEJ,aAEA,QAEA,UAAqB,aAErB,WAAyB,CAAC,GACG;AAC7B,YAAM,UAAU,MAAM,MAAM,eAAe,aAAa,QAAQ,SAAS,QAAQ;AACjF,aAAO,KAAK,iCAAiC,OAAO;AAAA,IACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,gBACE,wBACA,SAC8B;AAC9B,YAAM,qBAAqB,KAAK,iCAAiC,sBAAsB;AACvF,aAAO,MAAM,gBAAgB,oBAAoB,OAAO;AAAA,IAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,oBAAoB,wBAAqE;AACvF,YAAM,qBAAqB,KAAK,iCAAiC,sBAAsB;AACvF,aAAO,MAAM,oBAAoB,kBAAkB;AAAA,IACrD;AAAA,IAEQ,iBAAiB,gBAAoC;AAC3D,UAAI,CAAC,KAAK,cAAc,QAAQ;AAC9B,eAAO,IAAI,WAAW;AAAA,MACxB;AAEA,YAAM,SAAS,KAAK,WAAW,UAAU;AACzC,YAAM,aAAa,IAAI,eAAe,KAAK,MAAM,MAAM,EAAE,OAAO,KAAK,KAAK;AAE1E,YAAM,eAAe,oBAAoB;AAAA,QACvC,WAAW,KAAK,SAAS,SAAS,EAAE,oBAAoB,UAAU,SAAS;AAAA,MAC7E,CAAC;AACD,YAAM,SACJ,eACA,oBACA,wBACA,YACA,WAAW,aACX,iBAAiB;AAEnB,aAAO,QAAQ,gBAAgB,KAAK,eAAe,MAAM,KAAK,IAAI,WAAW;AAAA,IAC/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,OAAe,qBACbC,QACA,SACA,uBACA;AACA,UAAI,iBAAiB,SAASA,MAAK;AACnC,UAAI;AAEJ,UAAI,SAAS;AACX,uBAAe,IAAI,UAAU,OAAO;AACpC,YAAI,aAAa,UAAU,SAAS,QAAW;AAC7C,gBAAM,IAAI;AAAA,YACR,UAAU;AAAA,YACV;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,UAAI,yBAAyB,OAAO,KAAK,qBAAqB,EAAE,QAAQ;AACtE,yBAAiB,UAAU;AAAA,UACzB;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA,oBAAoB;AAAA,MACtB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,OAAe,yBACbA,QACA,uBACA,cACA;AACA,YAAM,eAAeA;AAErB,UAAI;AACF,YAAI,CAAC,cAAc;AACjB,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAEA,YAAI,OAAO,KAAK,aAAa,aAAa,EAAE,WAAW,GAAG;AACxD,gBAAM,IAAI,MAAM,mDAAmD;AAAA,QACrE;AAEA,eAAO,QAAQ,qBAAqB,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC9D,cAAI,CAAC,cAAc,cAAc,GAAG,GAAG;AACrC,kBAAM,IAAI,MAAM,mCAAmC,6BAA6B;AAAA,UAClF;AAEA,gBAAM,EAAE,OAAO,IAAI,aAAa,cAAc,GAAG;AAEjD,gBAAM,UAAU,aAAa,mBAAmB,KAAK,KAAmB;AAExE,uBAAa,IAAI,SAAS,MAAM;AAAA,QAClC,CAAC;AAAA,MACH,SAAS,KAAP;AACA,cAAM,IAAI;AAAA,UACR,UAAU;AAAA,UACV,yCAAiD,IAAK;AAAA,QACxD;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA,EACF;;;AChQA,MAAAC,iBAA6B;;;ACDtB,MAAK,uBAAL,kBAAKC,0BAAL;AAEL,IAAAA,sBAAA,UAAO;AACP,IAAAA,sBAAA,aAAU;AAEV,IAAAA,sBAAA,aAAU;AACV,IAAAA,sBAAA,gBAAa;AACb,IAAAA,sBAAA,iBAAc;AAEd,IAAAA,sBAAA,cAAW;AACX,IAAAA,sBAAA,oBAAiB;AAEjB,IAAAA,sBAAA,iBAAc;AACd,IAAAA,sBAAA,qBAAkB;AAElB,IAAAA,sBAAA,YAAS;AACT,IAAAA,sBAAA,cAAW;AACX,IAAAA,sBAAA,eAAY;AAEZ,IAAAA,sBAAA,cAAW;AACX,IAAAA,sBAAA,oBAAiB;AACjB,IAAAA,sBAAA,gBAAa;AACb,IAAAA,sBAAA,mBAAgB;AAEhB,IAAAA,sBAAA,YAAS;AACT,IAAAA,sBAAA,YAAS;AACT,IAAAA,sBAAA,YAAS;AA1BC,WAAAA;AAAA,KAAA;AA6BL,MAAK,0BAAL,kBAAKC,6BAAL;AACL,IAAAA,yBAAA,gBAAa;AACb,IAAAA,yBAAA,sBAAmB;AACnB,IAAAA,yBAAA,gBAAa;AACb,IAAAA,yBAAA,cAAW;AACX,IAAAA,yBAAA,oBAAiB;AACjB,IAAAA,yBAAA,cAAW;AACX,IAAAA,yBAAA,oBAAiB;AACjB,IAAAA,yBAAA,YAAS;AACT,IAAAA,yBAAA,UAAO;AATG,WAAAA;AAAA,KAAA;AAYL,MAAM,yBAAyB;;;ACtC/B,MAAM,eAAN,MAA8C;AAAA,IAC3C;AAAA,IAER,YAAY,cAAuB;AACjC,WAAK,UAAU;AAAA,IACjB;AAAA,IAEA,MAAM,QAAQ,KAAa,OAA8B;AACvD,WAAK,QAAQ,QAAQ,KAAK,KAAK;AAAA,IACjC;AAAA,IAEA,MAAM,QAAQ,KAAiD;AAC7D,aAAO,KAAK,QAAQ,QAAQ,GAAG;AAAA,IACjC;AAAA,IAEA,MAAM,WAAW,KAA4B;AAC3C,WAAK,QAAQ,WAAW,GAAG;AAAA,IAC7B;AAAA,IAEA,MAAM,QAAuB;AAC3B,WAAK,QAAQ,MAAM;AAAA,IACrB;AAAA,EACF;;;AFHO,MAAe,gBAAf,cAAqC,4BAAa;AAAA,IACvD,OAAe;AAAA,IACf,WAA8B,CAAC;AAAA,IAC/B,YAAqB;AAAA,IACrB,YAAqB;AAAA,IACrB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQT,MAAM,OAAyB;AAC7B,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,UAA4B;AAChC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,cAAgC;AACpC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,WAAmC;AACvC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,MAAM,UAA4B;AAChC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,aAA+B;AACnC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,MAAM,YAAY,UAAkB,UAAmC;AACrE,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,MAAM,gBAAgB,UAAkB,cAAuD;AAC7F,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeA,MAAM,gBAAgB,UAAkB,cAAuD;AAC7F,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,MAAM,iBAAyC;AAC7C,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAaA,MAAM,UAAU,SAAyC;AACvD,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAaA,MAAM,SAAS,QAAiC;AAC9C,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,SAAgC;AACpC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,MAAM,WAAW,aAAuC;AACtD,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,MAAM,cAAc,UAAqC;AACvD,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,WAAoC;AACxC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,MAAM,iBAAmC;AACvC,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,MAAM,OAAO,aAAqB,MAAiC;AACjE,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,OAAO,KAAsC;AACjD,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,OAAO,KAA+B;AAC1C,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,GACE,WACA,UACM;AACN,YAAM,GAAG,WAAW,QAAQ;AAC5B,aAAO;AAAA,IACT;AAAA,EACF;;;AGlQO,WAAS,SACd,IACA,EAAE,OAAAC,QAAO,WAAW,IAAI,GACrB;AACH,WAAQ,UAAU,SAAoB;AACpC,UAAIA,OAAM,GAAG,KAAKA,OAAM,GAAG,GAAG,OAAO;AACnC,eAAOA,OAAM,GAAG,GAAG;AAAA,MACrB;AACA,mBAAaA,OAAM,GAAG,GAAG,OAAO;AAChC,YAAM,SAAS,MAAM,GAAG,GAAG,IAAI;AAI/B,MAAAA,OAAM,GAAG,IAAI;AAAA,QACX,SAAS;AAAA,UACP,WAAW,MAAM;AACf,YAAAA,OAAM,GAAG,IAAI;AAAA,UACf,GAAG,SAAS;AAAA,QACd;AAAA,QACA,OAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA,EACF;;;AChCO,WAAS,2BAA2B,WAA0B;AACnE,WAAO;AAAA,MACL,IAAI,YAAY,wBAAwB;AAAA,QACtC,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA,EACF;;;ACNO,WAAS,eAA4B;AAC1C,UAAM,QAAyB,CAAC;AAEhC,UAAM,UAAU,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC/C,YAAM,SAAS;AACf,YAAM,UAAU;AAAA,IAClB,CAAC;AAED,WAAO;AAAA,EACT;AAGA,iBAAsB,YACpB,SACA,UAAkB,MACL;AACb,UAAM,iBAAiB,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtD,iBAAW,MAAM;AACf,eAAO,IAAI,MAAM,mBAAmB,CAAC;AAAA,MACvC,GAAG,OAAO;AAAA,IACZ,CAAC;AACD,WAAO,QAAQ,KAAK,CAAC,gBAAgB,OAAO,CAAC;AAAA,EAC/C;;;ACTA,MAAM,wBAAwB;AAK9B,MAAM,kBAAkB;AAExB,MAAM,EAAE,KAAK,IAAI;AAiBV,MAAM,QAAN,cAAmB,cAAc;AAAA,IAG9B,WAAoC;AAAA,IACpC,cAAoC,CAAC;AAAA,IACrC,gBAAqC;AAAA,IACrC,gBAAmC,CAAC;AAAA,IACpC;AAAA,IACA,aAAuB,CAAC;AAAA,IACxB;AAAA,IAER,YAAY,SAAqB,MAAK,eAAe;AACnD,YAAM;AAEN,WAAK,gBAAgB,GAAK;AAE1B,WAAK,cAAc,OAAO,cAAc,CAAC;AAEzC,WAAK,gBAAgB,KAAK,gBAAgB,OAAO,YAAY;AAE7D,WAAK,WAAW,OAAO,YAAY,SAAY,KAAK,WAAW,IAAI,OAAO;AAE1E,WAAK,aAAa;AAGlB,WAAK,oBAAoB;AAEzB,WAAK,qBAAqB,KAAK,uBAAuB;AAAA,IACxD;AAAA;AAAA;AAAA;AAAA,IAKQ,gBAAgB,cAAkD;AACxE,UAAI,cAAc;AAChB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,WAAW,aAAa;AACjC,eAAO;AAAA,MACT;AACA,UAAI,OAAO,aAAa,aAAa;AACnC,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKQ,aAA0C;AAChD,UAAI,OAAO,WAAW,aAAa;AACjC,eAAO,IAAI,aAAa,OAAO,YAAY;AAAA,MAC7C;AACA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,MAAc,sBAAoD;AAChE,YAAM,gBACH,MAAM,KAAK,UAAU,QAAQ,MAAK,WAAW,KAAM,KAAK,YAAY,CAAC,GAAG;AAC3E,UAAI,eAAe;AAEjB,eAAO,KAAK,gBAAgB,eAAe;AAAA,UACzC,YAAY;AAAA,QACd,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAMQ,qBAAqB,QAAwB;AACnD,UAAI,CAAC,KAAK,mBAAmB;AAC3B;AAAA,MACF;AACA,YAAM,mBAAmB,KAAK;AAC9B,WAAK,cAAc,IAAI,CAAC,UAAU,MAAM,CAAC;AACzC,WAAK,gBAAgB,OAAO,IAAI,CAAC,UAAU;AACzC,cAAM,UAAU,IAAI,SAAoB,KAAK,KAAK,OAAO,GAAG,IAAI;AAChE,yBAAiB,GAAG,OAAkC,OAAO;AAC7D,eAAO,MAAM,iBAAiB,IAAI,OAAO,OAAO;AAAA,MAClD,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA,IAKA,MAAc,WAAW,WAAmB,MAAiB;AAC3D,YAAM,eAAe,MAAM,KAAK,aAAa;AAC7C,YAAM,KAAK,cAAc;AACzB,UAAI,CAAC,KAAK,qBAAqB,CAAC,cAAc;AAC5C,cAAM,IAAI;AAAA,UACR,qCAAqC;AAAA,QACvC;AAAA,MACF;AACA,UAAI,OAAO,KAAK,kBAAkB,MAA6B,MAAM,YAAY;AAC/E,eAAQ,KAAK,kBAAkB,MAA6B,EAAuB,GAAG,IAAI;AAAA,MAC5F;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAMQ,eAAqB;AAC3B,aAAO,OAAO,oBAAoB,EAAE,QAAQ,CAAC,WAAW;AACtD,aAAK,MAAM,IAAI,UAAU,SAAoB,KAAK,WAAW,QAAQ,GAAG,IAAI;AAAA,MAC9E,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAc,qBACZ,WACiB;AAIjB,YAAM,mBAAmB,KAAK,IAAI;AAClC,YAAM,CAAC,aAAa,IAAI,IAAI,MAAM,QAAQ,WAAW;AAAA,QACnD,YAAY,UAAU,YAAY,CAAC;AAAA,QACnC,YAAY,KAAK,cAAc,SAAS,CAAC;AAAA,MAC3C,CAAC;AAGD,YAAM,UAAU,oBAAoB,UAAU,iBAAiB;AAC/D,UAAI,CAAC,SAAS;AAEZ,kBAAU,gBAAgB,KAAK,IAAI;AAEnC,kBAAU,YAAY,KAAK,WAAW,eAAe,KAAK;AAE1D,kBAAU,YAAY,YAAY,WAAW,eAAe,YAAY;AAAA,MAC1E;AACA,aAAO;AAAA,QACL,WAAW,UAAU;AAAA,QACrB,WAAW,UAAU;AAAA,MACvB;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAc,wBAA2C;AACvD,aAAO,QAAQ;AAAA,QACb,KAAK,YAAY,IAAI,OAAO,cAAc,KAAK,qBAAqB,SAAS,CAAC;AAAA,MAChF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAc,cAAc,WAA2B;AACrD,YAAM,eAAe,aAAa,KAAK;AACvC,UAAI,CAAC,cAAc;AACjB,eAAO;AAAA,MACT;AAGA,UAAI;AACF,eAAO,MAAM,SAAS,YAAY,YAAY,aAAa,KAAK,CAAC,GAAG;AAAA,UAClE,KAAK,aAAa;AAAA,UAClB,OAAO,KAAK;AAAA,UACZ,WAAW;AAAA,QACb,CAAC,EAAE;AAAA,MACL,QAAE;AACA,cAAM,IAAI,MAAM,qCAAqC;AAAA,MACvD;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMQ,yBAAyB,MAAM;AACrC,YAAM,EAAE,eAAe,aAAa,IAAI;AACxC,YAAM,YAAY;AAClB,UAAI,cAAc,IAAI;AACpB,qBAAa,GAAG,WAAW,KAAK,YAAY;AAC5C,eAAO,MAAM;AACX,uBAAa,MAAM,WAAW,KAAK,YAAY;AAAA,QACjD;AAAA,MACF;AACA,UAAI,cAAc,kBAAkB;AAClC,cAAM,UAAU,CAAC,MAAkC;AAEjD,eAAK,aAAa,EAAE,MAAM;AAAA,QAC5B;AACA,qBAAa,iBAAiB,WAAW,OAAO;AAChD,eAAO,MAAM;AACX,uBAAa,sBAAsB,WAAW,OAAO;AAAA,QACvD;AAAA,MACF;AACA,aAAO,MAAM;AAAA,MAAC;AAAA,IAChB;AAAA;AAAA;AAAA;AAAA,IAKQ,eAAe,OAAO,cAA4C;AACxE,UAAI,CAAC,KAAK,aAAa,SAAS,GAAG;AACjC,aAAK,YAAY,KAAK,SAAS;AAAA,MACjC;AAEA,YAAM,KAAK,qBAAqB,SAAS;AAEzC,WAAK,KAAK,KAAK,OAAO,YAAY,KAAK,WAAW;AAElD,UAAI,CAAC,KAAK,mBAAmB;AAE3B,cAAM,KAAK,gBAAgB,UAAU,MAAM;AAAA,UACzC,YAAY;AAAA,QACd,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IAEQ,yBAAyB,YAAY;AAC3C,YAAM,CAAC,aAAa,UAAU,cAAc,IAAI,MAAM,QAAQ,IAAI;AAAA,QAChE,KAAK,YAAY;AAAA,QACjB,KAAK,SAAS;AAAA,QACd,KAAK,eAAe;AAAA,MACtB,CAAC;AACD,WAAK,KAAK,KAAK,OAAO,YAAY,WAAW;AAC7C,WAAK,KAAK,KAAK,OAAO,UAAU,QAAQ;AACxC,WAAK,KAAK,KAAK,OAAO,gBAAgB,cAAc;AACpD,UAAI,aAAa;AACf,cAAM,CAAC,UAAU,cAAc,IAAI,MAAM,QAAQ,IAAI;AAAA,UACnD,KAAK,SAAS;AAAA,UACd,KAAK,eAAe;AAAA,QACtB,CAAC;AACD,aAAK,KAAK,KAAK,OAAO,UAAU,QAAQ;AACxC,aAAK,KAAK,KAAK,OAAO,gBAAgB,cAAc;AAAA,MACtD;AAAA,IACF;AAAA;AAAA;AAAA;AAAA,IAKA,eAAe,CAAC,cACd,KAAK,YAAY,KAAK,CAAC,MAAM;AAC3B,YAAM,gBAAgB,OAAO,cAAc,WAAW,YAAY,UAAU;AAC5E,aAAO,EAAE,SAAS,iBAAiB,MAAM;AAAA,IAC3C,CAAC,KAAK;AAAA;AAAA;AAAA;AAAA,IAKR,MAAM,aAA4C;AAChD,YAAM,KAAK,sBAAsB;AACjC,aAAO,KAAK;AAAA,IACd;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,gBACJ,eACA,UAAsC;AAAA,MACpC,YAAY;AAAA,IACd,GACkB;AAClB,YAAM,YAAY,KAAK,aAAa,aAAa;AACjD,UAAI,CAAC,WAAW;AACd,eAAO;AAAA,MACT;AACA,UAAI,KAAK,mBAAmB,SAAS,eAAe;AAClD,eAAO;AAAA,MACT;AACA,YAAM,EAAE,UAAU,IAAI,MAAM,KAAK,qBAAqB,SAAS;AAC/D,UAAI,WAAW;AACb,aAAK,oBAAoB;AACzB,aAAK,KAAK,KAAK,OAAO,kBAAkB,SAAS;AACjD,aAAK,qBAAqB,OAAO,OAAO,uBAAuB,CAAC;AAChE,cAAM,KAAK,UAAU,QAAQ,MAAK,aAAa,UAAU,IAAI;AAI7D,YAAI,QAAQ,YAAY;AAEtB,eAAK,uBAAuB;AAAA,QAC9B;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,mBAAqD;AACnD,aAAO,KAAK;AAAA,IACd;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,eAAiC;AAGrC,UAAI,KAAK,mBAAmB;AAC1B,eAAO;AAAA,MACT;AAIA,YAAM,QAAQ,aAAsB;AACpC,WAAK,KAAK,KAAK,OAAO,kBAAkB,MAAM;AAC5C,cAAM,QAAQ,IAAI;AAAA,MACpB,CAAC;AAGD,aAAO,YAAY,MAAM,SAAS,qBAAqB,EACpD,KAAK,MAAM,IAAI,EACf,MAAM,MAAM,KAAK;AAAA,IACtB;AAAA,IAEA,MAAM,YAA8B;AAClC,aAAO,KAAK,aAAa;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,MAAM,YAAY,mBAA2D;AAC3E;AAAA,QACE;AAAA,MACF;AACA,aAAO,KAAK,aAAa,iBAAiB;AAAA,IAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAc,aAAa,mBAA2D;AAEpF,UAAI;AAEJ,UAAI,qBAAqB,4BAA4B,mBAAmB;AACtE,mBAAW;AAAA,MAEb,WAAW,qBAAqB,aAAa,qBAAqB,SAAS,mBAAmB;AAC5F,mBAAW,MAAM,SAAS,OAAO,kBAAkB,GAAG;AAAA,MAExD,WAAW,CAAC,mBAAmB;AAC7B,cAAM,iBAAiB,MAAM,KAAK,eAAe;AACjD,mBAAW,MAAM,SAAS,OAAO,eAAe,GAAG;AAAA,MAGrD,OAAO;AACL,cAAM,IAAI,UAAU,UAAU,kBAAkB,wBAAwB;AAAA,MAC1E;AACA,aAAO;AAAA,IACT;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,MAAM,UACJ,SACA,mBACkB;AAClB,YAAM,WAAW,MAAM,KAAK,aAAa,iBAAiB;AAC1D,aAAO,IAAI,QAAQ,SAAS,UAAU,IAAI;AAAA,IAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,cAAoB;AAElB,WAAK,cAAc,IAAI,CAAC,UAAU,MAAM,CAAC;AACzC,WAAK,mBAAmB;AAExB,WAAK,mBAAmB;AAAA,IAC1B;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,QAAuB;AAC3B,YAAM,KAAK,UAAU,WAAW,MAAK,WAAW;AAAA,IAClD;AAAA;AAAA;AAAA;AAAA,IAKA,MAAM,UAAyB;AAC7B,WAAK,YAAY;AACjB,YAAM,KAAK,MAAM;AAAA,IACnB;AAAA,EACF;AAvZO,MAAM,OAAN;AACL,gBADW,MACJ,eAAc;AACrB,gBAFW,MAEJ,iBAA4B,CAAC;","names":["convert","pad","bytes","split","module","exports","assert","BN","number","Buffer","max","mod","pow","clone","inspect","toNumber","ret","allocate","toTwos","fromTwos","add","comb10MulTo","mask","split","output","prime","normalize","output","number","res","ret","parsePath","URL","Headers","Response","type","Stream","fetch","https","http","abort","abortAndFinalize","zlib","Blob","Url","whatwgUrl","isDomainOrSubdomain","isSameProtocol","fetch","isObjectLike","invariant","getLocation","LineRegExp","printLocation","printSourceLocation","printPrefixedLines","toNormalizedOptions","GraphQLError","undefinedIfEmpty","output","syntaxError","isNode","Location","Token","QueryDocumentKeys","kindValues","OperationTypeNode","DirectiveLocation","Kind","isDigit","isLetter","isNameContinue","isNameStart","isWhiteSpace","dedentBlockStringLines","printBlockString","indent","leadingWhitespace","TokenKind","isPunctuatorTokenKind","Lexer","readNextToken","isUnicodeScalarValue","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","createToken","readComment","readBlockString","readString","readNumber","readName","readDigits","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","readHexDigit","read16BitHexCode","devAssert","inspect","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","formatValue","formatObjectValue","isJSONable","formatArray","formatObject","getObjectTag","instanceOf","isSource","Source","parse","parseConstValue","parseType","parseValue","Parser","type","getTokenDesc","getTokenKindDesc","printString","escapedRegExp","escapedReplacer","escapeSequences","getEnterLeaveForKind","getVisitFn","visit","visitInParallel","BREAK","print","printDocASTReducer","MAX_LINE_LENGTH","join","wrap","type","block","indent","hasMultilineItems","type","clone","i","result","Stream","Stream","stream","type","charset","extension","output","http","https","FormData","clone","document","ClientError","GraphQLWebSocketMessage","type","f","GraphQLWebSocketClient","_a","__assign","e","document","fetch","__assign","GraphQLClient","_a","document","variables","data","gql","add","ret","bytes","tr","addi","lw","gtf","GTFArgs","module","imports","isNode","mod","initWasm","hash","isBytes","isBytes","pad","isLE","_32n","hash","pad","hash","Pi","bytes","version","ErrorCode","__publicField","bytes","concatBytes","__publicField","import_crypto","type","type","HexCharacters","hexlify","bytes","bytes","hexlify","BN_0","bytes","output","bytes","import_crypto","hexlify","number","bytes","hash","exists","output","assert","U32_MASK64","_32n","fromBig","split","rotlSH","rotlSL","rotlBH","rotlBL","u32","createView","isLE","utf8ToBytes","toBytes","Hash","wrapConstructor","toBytes","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","Keccak","Hash","u32","toBytes","bytes","gen","wrapConstructor","sha3_224","sha3_256","sha3_384","sha3_512","keccak_224","keccak_256","keccak_384","keccak_512","genShake","shake128","shake256","locked","keccak_256","hexlify","setBigUint64","isLE","_32n","SHA2","Hash","createView","toBytes","rotl","SHA2","tr","wrapConstructor","locked","ripemd160","hexlify","locked","pbkdf2","hexlify","BN_0","block","BN_0","clone","name","import_crypto","scrypt","keccak256","randomBytes","crypto","pbkdf2","bufferFromString","decrypt","encrypt","keyFromPassword","stringFromBuffer","decryptJsonWalletData","encryptJsonWalletData","randomBytes2","bytes","FuelError","hexlify","arrayify","BnJs","output","bytes","mod","toNumber","toBytes","max","sha256","hash","type","bytes","toBytes","type","FuelError","ErrorCode","concatBytes","arrayify","bn","toHex","output","__privateAdd","__privateMethod","concat","__publicField","max","toNumber","_getPaddedData","getPaddedData_fn","toUtf8Bytes","toUtf8String","getCoder","BooleanCoder","ByteCoder","isFullyNativeEnum","EnumCoder","NumberCoder","RawSliceCoder","StdStringCoder","StringCoder","StructCoder","TupleCoder","VecCoder","dataLength","f","sha256","InputType","Coder","NumberCoder","concat","arrayify","sha256","bytes","dataLength","type","OutputType","B256Coder","BigNumberCoder","FuelError","ErrorCode","PolicyType","ReceiptType","Coder","BigNumberCoder","arrayify","sha256","concat","B256Coder","NumberCoder","StructCoder","B256Coder","Coder","NumberCoder","concat","dataLength","TransactionType","BigNumberCoder","type","FuelError","ErrorCode","concatBytes","isBytes","utf8ToBytes","_0n","_1n","_2n","hexes","bytes","pad","gen","type","type","pad","_toISOString","copy","type","_ObjectMap","bucket","clone","__assign","output","OperationTypeNode","DirectiveLocation","Kind","indent","TokenKind","instanceOf","type","type","lib_default","lib_default","type","toNumber","type","normalize","output","output","sha256","output","output","type","type","type","type","TransactionTypeName","TransactionStatus","OperationName","AddressType","ChainName","type","output","TransactionResponse","transactionId","TransactionResponse","block","output","assets","gtf","addi","lw","addi2","tr","ret","isCoin","_0n","_1n","_2n","number","Fp","f","_0n","_1n","bitLen","isLE","_0n","f","_1n","bytes","isLE","_1n","_0n","_1n","window","f","mask","Fp","isBytes","s","_0n","_1n","_2n","_3n","_4n","toBytes","concatBytes","bytes","Point","f","a","number","Signature","hash","randomBytes","r","hash","_1n","_2n","_3n","_0n","toBytes","hash","randomBytes2","import_crypto","crypto","import_crypto","crypto","randomBytes2","scrypt2","keccak2562","Language","toUtf8Bytes","sha256","toUtf8Bytes","pbkdf2","sha256","randomBytes2","MainnetPRV","TestnetPRV","sha256","ripemd160","toBytes","bytes","assert","Vault","type","hash","node_default","node_default","bytes","hash","bytes","import_events","FuelConnectorMethods","FuelConnectorEventTypes","cache"]}
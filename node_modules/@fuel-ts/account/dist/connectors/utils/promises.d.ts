export type DeferPromise<R = unknown> = {
    promise: Promise<R>;
    resolve: (value: R) => void;
    reject: (error: unknown) => void;
};
export declare function deferPromise<R = unknown>(): DeferPromise<R>;
export declare function withTimeout<F extends Promise<unknown>, RT = Awaited<F>>(promise: F, timeout?: number): Promise<RT>;
//# sourceMappingURL=promises.d.ts.map
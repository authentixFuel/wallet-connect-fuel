/// <reference types="web" />
import type { DocumentNode } from 'graphql';
type FuelGraphQLSubscriberOptions = {
    url: string;
    query: DocumentNode;
    variables?: Record<string, unknown>;
    fetchFn: typeof fetch;
};
export declare class FuelGraphqlSubscriber implements AsyncIterator<unknown> {
    private options;
    private stream;
    private static textDecoder;
    constructor(options: FuelGraphQLSubscriberOptions);
    private setStream;
    next(): Promise<IteratorResult<unknown, unknown>>;
    /**
     * Gets called when `break` is called in a `for-await-of` loop.
     */
    return(): Promise<IteratorResult<unknown, undefined>>;
    [Symbol.asyncIterator](): AsyncIterator<unknown, unknown, undefined>;
}
export {};
//# sourceMappingURL=fuel-graphql-subscriber.d.ts.map
{"version":3,"sources":["../src/configs.ts"],"sourcesContent":["/** Maximum contract size, in bytes. */\nexport const CONTRACT_MAX_SIZE = 16 * 1024;\n\n/** Maximum number of witnesses. */\nexport const MAX_WITNESSES = 16;\n\n/**\n * Gas Price factor this is used to calculate\n * This is used to calculate the gas fee in Native Coins.\n * Ex.: transactionFee = Math.ceil(<gasUsed> / MAX_GAS_PER_TX);\n */\n\n// TODO: set max script length const\n/** Maximum length of script, in instructions. */\nexport const MAX_SCRIPT_LENGTH = 1024 * 1024 * 1024;\n\n// TODO: set max script length const\n/** Maximum length of script data, in bytes. */\nexport const MAX_SCRIPT_DATA_LENGTH = 1024 * 1024 * 1024;\n\n/** Maximum number of static contracts. */\nexport const MAX_STATIC_CONTRACTS = 255;\n\n// TODO: set max predicate length value\n/** Maximum length of predicate, in instructions. */\nexport const MAX_PREDICATE_LENGTH = 1024 * 1024;\n\n// TODO: set max predicate data length value\n/** Maximum length of predicate data, in bytes. */\nexport const MAX_PREDICATE_DATA_LENGTH = 1024 * 1024;\n\n// Revert with this value for a failing call to `std::revert::require`.\nexport const FAILED_REQUIRE_SIGNAL = '0xffffffffffff0000';\n\n// Revert with this value for a failing call to `std::asset::transfer_to_address`.\nexport const FAILED_TRANSFER_TO_ADDRESS_SIGNAL = '0xffffffffffff0001';\n\n// Revert with this value for a failing call to `std::message::send_message`.\nexport const FAILED_SEND_MESSAGE_SIGNAL = '0xffffffffffff0002';\n\n// Revert with this value for a failing call to `std::assert::assert_eq`.\nexport const FAILED_ASSERT_EQ_SIGNAL = '0xffffffffffff0003';\n\n// Revert with this value for a failing call to `std::assert::assert`.\nexport const FAILED_ASSERT_SIGNAL = '0xffffffffffff0004';\n\nexport const FAILED_UNKNOWN_SIGNAL = '0x0';\n"],"mappings":";AACO,IAAM,oBAAoB,KAAK;AAG/B,IAAM,gBAAgB;AAUtB,IAAM,oBAAoB,OAAO,OAAO;AAIxC,IAAM,yBAAyB,OAAO,OAAO;AAG7C,IAAM,uBAAuB;AAI7B,IAAM,uBAAuB,OAAO;AAIpC,IAAM,4BAA4B,OAAO;AAGzC,IAAM,wBAAwB;AAG9B,IAAM,oCAAoC;AAG1C,IAAM,6BAA6B;AAGnC,IAAM,0BAA0B;AAGhC,IAAM,uBAAuB;AAE7B,IAAM,wBAAwB;","names":[]}
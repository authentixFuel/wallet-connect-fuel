{"version":3,"sources":["../../../node_modules/.pnpm/balanced-match@1.0.2/node_modules/balanced-match/index.js","../../../node_modules/.pnpm/brace-expansion@2.0.1/node_modules/brace-expansion/index.js","../../../node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/opts-arg.js","../../../node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/path-arg.js","../../../node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/find-made.js","../../../node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/mkdirp-manual.js","../../../node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/mkdirp-native.js","../../../node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/lib/use-native.js","../../../node_modules/.pnpm/mkdirp@1.0.4/node_modules/mkdirp/index.js","../../../node_modules/.pnpm/fs.realpath@1.0.0/node_modules/fs.realpath/old.js","../../../node_modules/.pnpm/fs.realpath@1.0.0/node_modules/fs.realpath/index.js","../../../node_modules/.pnpm/concat-map@0.0.1/node_modules/concat-map/index.js","../../../node_modules/.pnpm/brace-expansion@1.1.11/node_modules/brace-expansion/index.js","../../../node_modules/.pnpm/minimatch@3.1.2/node_modules/minimatch/minimatch.js","../../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits_browser.js","../../../node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js","../../../node_modules/.pnpm/path-is-absolute@1.0.1/node_modules/path-is-absolute/index.js","../../../node_modules/.pnpm/glob@7.2.3/node_modules/glob/common.js","../../../node_modules/.pnpm/glob@7.2.3/node_modules/glob/sync.js","../../../node_modules/.pnpm/wrappy@1.0.2/node_modules/wrappy/wrappy.js","../../../node_modules/.pnpm/once@1.4.0/node_modules/once/once.js","../../../node_modules/.pnpm/inflight@1.0.6/node_modules/inflight/inflight.js","../../../node_modules/.pnpm/glob@7.2.3/node_modules/glob/glob.js","../../../node_modules/.pnpm/rimraf@3.0.2/node_modules/rimraf/rimraf.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/utils.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/exception.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/helpers/block-helper-missing.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/helpers/each.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/helpers/helper-missing.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/helpers/if.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/helpers/log.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/helpers/lookup.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/helpers/with.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/helpers.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/decorators/inline.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/decorators.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/logger.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/internal/create-new-lookup-object.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/internal/proto-access.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/base.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/safe-string.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/internal/wrapHelper.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/runtime.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/no-conflict.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars.runtime.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/ast.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/parser.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/visitor.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/whitespace-control.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/helpers.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/base.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/compiler.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64-vlq.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/util.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/array-set.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/mapping-list.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-generator.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/binary-search.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/quick-sort.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-consumer.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-node.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/source-map.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/code-gen.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/javascript-compiler.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/handlebars/compiler/printer.js","../../../node_modules/.pnpm/handlebars@4.7.7/node_modules/handlebars/lib/index.js","../../versions/src/lib/getBuiltinVersions.ts","../../versions/src/lib/semver.ts","../../versions/src/lib/checkFuelCoreVersionCompatibility.ts","../../versions/src/index.ts","../../errors/src/error-codes.ts","../../errors/src/fuel-error.ts","../src/runTypegen.ts","../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/src/index.ts","../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/src/assert-valid-pattern.ts","../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/src/brace-expressions.ts","../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/src/unescape.ts","../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/src/ast.ts","../../../node_modules/.pnpm/minimatch@9.0.3/node_modules/minimatch/src/escape.ts","../../../node_modules/.pnpm/lru-cache@10.0.0/node_modules/lru-cache/src/index.ts","../../../node_modules/.pnpm/path-scurry@1.10.0/node_modules/path-scurry/src/index.ts","../../../node_modules/.pnpm/minipass@6.0.2/node_modules/minipass/index.mjs","../../../node_modules/.pnpm/glob@10.2.6/node_modules/glob/src/glob.ts","../../../node_modules/.pnpm/glob@10.2.6/node_modules/glob/src/pattern.ts","../../../node_modules/.pnpm/glob@10.2.6/node_modules/glob/src/ignore.ts","../../../node_modules/.pnpm/glob@10.2.6/node_modules/glob/src/processor.ts","../../../node_modules/.pnpm/glob@10.2.6/node_modules/glob/src/walker.ts","../../../node_modules/.pnpm/glob@10.2.6/node_modules/glob/src/has-magic.ts","../../../node_modules/.pnpm/glob@10.2.6/node_modules/glob/src/index.ts","../../utils/src/utils/capitalizeString.ts","../../utils/src/utils/chunkAndPadBytes.ts","../../utils/src/utils/arrayify.ts","../../utils/src/utils/concat.ts","../../utils/src/utils/hexlify.ts","../../utils/src/utils/normalizeString.ts","../../utils/src/utils/date-time.ts","../../utils/src/utils/chainConfig.json","../../utils/src/utils/defaultChainConfig.ts","../src/utils/findType.ts","../src/abi/configurable/Configurable.ts","../src/utils/makeConfigurable.ts","../src/utils/parseConfigurables.ts","../src/utils/parseTypeArguments.ts","../src/abi/functions/Function.ts","../src/utils/makeFunction.ts","../src/utils/parseFunctions.ts","../src/abi/types/AType.ts","../src/abi/types/ArrayType.ts","../src/abi/types/StrType.ts","../src/abi/types/B256Type.ts","../src/abi/types/B512Type.ts","../src/abi/types/BoolType.ts","../src/abi/types/BytesType.ts","../src/utils/extractStructName.ts","../src/abi/types/EnumType.ts","../src/abi/types/EvmAddressType.ts","../src/abi/types/GenericType.ts","../src/abi/types/OptionType.ts","../src/abi/types/U8Type.ts","../src/abi/types/U64Type.ts","../src/abi/types/RawUntypedPtr.ts","../src/abi/types/RawUntypedSlice.ts","../src/abi/types/StdStringType.ts","../src/abi/types/StrSliceType.ts","../src/abi/types/StructType.ts","../src/abi/types/TupleType.ts","../src/abi/types/U16Type.ts","../src/abi/types/U256Type.ts","../src/abi/types/U32Type.ts","../src/abi/types/VectorType.ts","../src/utils/supportedTypes.ts","../src/utils/makeType.ts","../src/utils/shouldSkipAbiType.ts","../src/utils/parseTypes.ts","../src/abi/Abi.ts","../src/types/enums/ProgramTypeEnum.ts","../src/utils/assembleContracts.ts","../src/templates/renderHbsTemplate.ts","../src/templates/common/common.ts","../src/templates/common/index.ts","../src/templates/contract/bytecode.ts","../src/templates/utils/formatConfigurables.ts","../src/templates/utils/formatEnums.ts","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_isPlaceholder.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_curry1.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_curry2.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_isArray.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_isTransformer.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_dispatchable.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_xfBase.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_arrayFromIterator.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_includesWith.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_functionName.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_has.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_objectIs.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_isArguments.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/keys.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/type.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_equals.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/equals.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_indexOf.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_includes.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_toISOString.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_isInteger.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_identity.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/identity.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_Set.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/internal/_xuniqBy.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/uniqBy.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/uniq.js","../../../node_modules/.pnpm/ramda@0.29.0/node_modules/ramda/es/trim.js","../src/templates/utils/formatImports.ts","../src/templates/utils/formatStructs.ts","../src/templates/contract/dts.ts","../src/templates/contract/factory.ts","../src/utils/assemblePredicates.ts","../src/templates/predicate/factory.ts","../src/utils/assembleScripts.ts","../src/templates/script/factory.ts","../src/utils/validateBinFile.ts","../src/AbiTypeGen.ts","../src/utils/collectBinFilePaths.ts","../src/utils/collectStorageSlotsFilePaths.ts"],"sourcesContent":["'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n","const { promisify } = require('util')\nconst fs = require('fs')\nconst optsArg = opts => {\n  if (!opts)\n    opts = { mode: 0o777, fs }\n  else if (typeof opts === 'object')\n    opts = { mode: 0o777, fs, ...opts }\n  else if (typeof opts === 'number')\n    opts = { mode: opts, fs }\n  else if (typeof opts === 'string')\n    opts = { mode: parseInt(opts, 8), fs }\n  else\n    throw new TypeError('invalid options argument')\n\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir\n  opts.mkdirAsync = promisify(opts.mkdir)\n  opts.stat = opts.stat || opts.fs.stat || fs.stat\n  opts.statAsync = promisify(opts.stat)\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync\n  return opts\n}\nmodule.exports = optsArg\n","const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\nconst { resolve, parse } = require('path')\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(\n      new TypeError('path must be a string without null bytes'),\n      {\n        path,\n        code: 'ERR_INVALID_ARG_VALUE',\n      }\n    )\n  }\n\n  path = resolve(path)\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const {root} = parse(path)\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\nmodule.exports = pathArg\n","const {dirname} = require('path')\n\nconst findMade = (opts, parent, path = undefined) => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent)\n    return Promise.resolve()\n\n  return opts.statAsync(parent).then(\n    st => st.isDirectory() ? path : undefined, // will fail later\n    er => er.code === 'ENOENT'\n      ? findMade(opts, dirname(parent), parent)\n      : undefined\n  )\n}\n\nconst findMadeSync = (opts, parent, path = undefined) => {\n  if (path === parent)\n    return undefined\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined\n  } catch (er) {\n    return er.code === 'ENOENT'\n      ? findMadeSync(opts, dirname(parent), parent)\n      : undefined\n  }\n}\n\nmodule.exports = {findMade, findMadeSync}\n","const {dirname} = require('path')\n\nconst mkdirpManual = (path, opts, made) => {\n  opts.recursive = false\n  const parent = dirname(path)\n  if (parent === path) {\n    return opts.mkdirAsync(path, opts).catch(er => {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n    })\n  }\n\n  return opts.mkdirAsync(path, opts).then(() => made || path, er => {\n    if (er.code === 'ENOENT')\n      return mkdirpManual(parent, opts)\n        .then(made => mkdirpManual(path, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    return opts.statAsync(path).then(st => {\n      if (st.isDirectory())\n        return made\n      else\n        throw er\n    }, () => { throw er })\n  })\n}\n\nconst mkdirpManualSync = (path, opts, made) => {\n  const parent = dirname(path)\n  opts.recursive = false\n\n  if (parent === path) {\n    try {\n      return opts.mkdirSync(path, opts)\n    } catch (er) {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n      else\n        return\n    }\n  }\n\n  try {\n    opts.mkdirSync(path, opts)\n    return made || path\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts, mkdirpManualSync(parent, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    try {\n      if (!opts.statSync(path).isDirectory())\n        throw er\n    } catch (_) {\n      throw er\n    }\n  }\n}\n\nmodule.exports = {mkdirpManual, mkdirpManualSync}\n","const {dirname} = require('path')\nconst {findMade, findMadeSync} = require('./find-made.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./mkdirp-manual.js')\n\nconst mkdirpNative = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirAsync(path, opts)\n\n  return findMade(opts, path).then(made =>\n    opts.mkdirAsync(path, opts).then(() => made)\n    .catch(er => {\n      if (er.code === 'ENOENT')\n        return mkdirpManual(path, opts)\n      else\n        throw er\n    }))\n}\n\nconst mkdirpNativeSync = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirSync(path, opts)\n\n  const made = findMadeSync(opts, path)\n  try {\n    opts.mkdirSync(path, opts)\n    return made\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts)\n    else\n      throw er\n  }\n}\n\nmodule.exports = {mkdirpNative, mkdirpNativeSync}\n","const fs = require('fs')\n\nconst version = process.env.__TESTING_MKDIRP_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\nconst hasNative = +versArr[0] > 10 || +versArr[0] === 10 && +versArr[1] >= 12\n\nconst useNative = !hasNative ? () => false : opts => opts.mkdir === fs.mkdir\nconst useNativeSync = !hasNative ? () => false : opts => opts.mkdirSync === fs.mkdirSync\n\nmodule.exports = {useNative, useNativeSync}\n","const optsArg = require('./lib/opts-arg.js')\nconst pathArg = require('./lib/path-arg.js')\n\nconst {mkdirpNative, mkdirpNativeSync} = require('./lib/mkdirp-native.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./lib/mkdirp-manual.js')\nconst {useNative, useNativeSync} = require('./lib/use-native.js')\n\n\nconst mkdirp = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNative(opts)\n    ? mkdirpNative(path, opts)\n    : mkdirpManual(path, opts)\n}\n\nconst mkdirpSync = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNativeSync(opts)\n    ? mkdirpNativeSync(path, opts)\n    : mkdirpManualSync(path, opts)\n}\n\nmkdirp.sync = mkdirpSync\nmkdirp.native = (path, opts) => mkdirpNative(pathArg(path), optsArg(opts))\nmkdirp.manual = (path, opts) => mkdirpManual(pathArg(path), optsArg(opts))\nmkdirp.nativeSync = (path, opts) => mkdirpNativeSync(pathArg(path), optsArg(opts))\nmkdirp.manualSync = (path, opts) => mkdirpManualSync(pathArg(path), optsArg(opts))\n\nmodule.exports = mkdirp\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n","module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n","exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs = require(\"fs\")\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n  self.fs = options.fs || fs\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n  // always treat \\ in patterns as escapes, not path separators\n  options.allowWindowsEscape = false\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert.ok(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert.ok(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","const assert = require(\"assert\")\nconst path = require(\"path\")\nconst fs = require(\"fs\")\nlet glob = undefined\ntry {\n  glob = require(\"glob\")\n} catch (_err) {\n  // treat glob as optional.\n}\n\nconst defaultGlobOpts = {\n  nosort: true,\n  silent: true\n}\n\n// for EMFILE handling\nlet timeout = 0\n\nconst isWindows = (process.platform === \"win32\")\n\nconst defaults = options => {\n  const methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(m => {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n  options.emfileWait = options.emfileWait || 1000\n  if (options.glob === false) {\n    options.disableGlob = true\n  }\n  if (options.disableGlob !== true && glob === undefined) {\n    throw Error('glob dependency not found, set `options.disableGlob = true` if intentional')\n  }\n  options.disableGlob = options.disableGlob || false\n  options.glob = options.glob || defaultGlobOpts\n}\n\nconst rimraf = (p, options, cb) => {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert.equal(typeof cb, 'function', 'rimraf: callback function required')\n  assert(options, 'rimraf: invalid options argument provided')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n\n  defaults(options)\n\n  let busyTries = 0\n  let errState = null\n  let n = 0\n\n  const next = (er) => {\n    errState = errState || er\n    if (--n === 0)\n      cb(errState)\n  }\n\n  const afterGlob = (er, results) => {\n    if (er)\n      return cb(er)\n\n    n = results.length\n    if (n === 0)\n      return cb()\n\n    results.forEach(p => {\n      const CB = (er) => {\n        if (er) {\n          if ((er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\" || er.code === \"EPERM\") &&\n              busyTries < options.maxBusyTries) {\n            busyTries ++\n            // try again, with the same exact callback as this one.\n            return setTimeout(() => rimraf_(p, options, CB), busyTries * 100)\n          }\n\n          // this one won't happen if graceful-fs is used.\n          if (er.code === \"EMFILE\" && timeout < options.emfileWait) {\n            return setTimeout(() => rimraf_(p, options, CB), timeout ++)\n          }\n\n          // already gone\n          if (er.code === \"ENOENT\") er = null\n        }\n\n        timeout = 0\n        next(er)\n      }\n      rimraf_(p, options, CB)\n    })\n  }\n\n  if (options.disableGlob || !glob.hasMagic(p))\n    return afterGlob(null, [p])\n\n  options.lstat(p, (er, stat) => {\n    if (!er)\n      return afterGlob(null, [p])\n\n    glob(p, options.glob, afterGlob)\n  })\n\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nconst rimraf_ = (p, options, cb) => {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, (er, st) => {\n    if (er && er.code === \"ENOENT\")\n      return cb(null)\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er && er.code === \"EPERM\" && isWindows)\n      fixWinEPERM(p, options, er, cb)\n\n    if (st && st.isDirectory())\n      return rmdir(p, options, er, cb)\n\n    options.unlink(p, er => {\n      if (er) {\n        if (er.code === \"ENOENT\")\n          return cb(null)\n        if (er.code === \"EPERM\")\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        if (er.code === \"EISDIR\")\n          return rmdir(p, options, er, cb)\n      }\n      return cb(er)\n    })\n  })\n}\n\nconst fixWinEPERM = (p, options, er, cb) => {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.chmod(p, 0o666, er2 => {\n    if (er2)\n      cb(er2.code === \"ENOENT\" ? null : er)\n    else\n      options.stat(p, (er3, stats) => {\n        if (er3)\n          cb(er3.code === \"ENOENT\" ? null : er)\n        else if (stats.isDirectory())\n          rmdir(p, options, er, cb)\n        else\n          options.unlink(p, cb)\n      })\n  })\n}\n\nconst fixWinEPERMSync = (p, options, er) => {\n  assert(p)\n  assert(options)\n\n  try {\n    options.chmodSync(p, 0o666)\n  } catch (er2) {\n    if (er2.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  let stats\n  try {\n    stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  if (stats.isDirectory())\n    rmdirSync(p, options, er)\n  else\n    options.unlinkSync(p)\n}\n\nconst rmdir = (p, options, originalEr, cb) => {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, er => {\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\"))\n      rmkids(p, options, cb)\n    else if (er && er.code === \"ENOTDIR\")\n      cb(originalEr)\n    else\n      cb(er)\n  })\n}\n\nconst rmkids = (p, options, cb) => {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, (er, files) => {\n    if (er)\n      return cb(er)\n    let n = files.length\n    if (n === 0)\n      return options.rmdir(p, cb)\n    let errState\n    files.forEach(f => {\n      rimraf(path.join(p, f), options, er => {\n        if (errState)\n          return\n        if (er)\n          return cb(errState = er)\n        if (--n === 0)\n          options.rmdir(p, cb)\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nconst rimrafSync = (p, options) => {\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n\n  let results\n\n  if (options.disableGlob || !glob.hasMagic(p)) {\n    results = [p]\n  } else {\n    try {\n      options.lstatSync(p)\n      results = [p]\n    } catch (er) {\n      results = glob.sync(p, options.glob)\n    }\n  }\n\n  if (!results.length)\n    return\n\n  for (let i = 0; i < results.length; i++) {\n    const p = results[i]\n\n    let st\n    try {\n      st = options.lstatSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n\n      // Windows can EPERM on stat.  Life is suffering.\n      if (er.code === \"EPERM\" && isWindows)\n        fixWinEPERMSync(p, options, er)\n    }\n\n    try {\n      // sunos lets the root user unlink directories, which is... weird.\n      if (st && st.isDirectory())\n        rmdirSync(p, options, null)\n      else\n        options.unlinkSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n      if (er.code === \"EPERM\")\n        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n      if (er.code !== \"EISDIR\")\n        throw er\n\n      rmdirSync(p, options, er)\n    }\n  }\n}\n\nconst rmdirSync = (p, options, originalEr) => {\n  assert(p)\n  assert(options)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"ENOTDIR\")\n      throw originalEr\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")\n      rmkidsSync(p, options)\n  }\n}\n\nconst rmkidsSync = (p, options) => {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))\n\n  // We only end up here once we got ENOTEMPTY at least once, and\n  // at this point, we are guaranteed to have removed all the kids.\n  // So, we know that it won't be ENOENT or ENOTDIR or anything else.\n  // try really hard to delete stuff on windows, because it has a\n  // PROFOUNDLY annoying habit of not closing handles promptly when\n  // files are deleted, resulting in spurious ENOTEMPTY errors.\n  const retries = isWindows ? 100 : 1\n  let i = 0\n  do {\n    let threw = true\n    try {\n      const ret = options.rmdirSync(p, options)\n      threw = false\n      return ret\n    } finally {\n      if (++i < retries && threw)\n        continue\n    }\n  } while (true)\n}\n\nmodule.exports = rimraf\nrimraf.sync = rimrafSync\n","const escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nconst badChars = /[&<>\"'`=]/g,\n  possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nexport function extend(obj /* , ...source */) {\n  for (let i = 1; i < arguments.length; i++) {\n    for (let key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nexport let toString = Object.prototype.toString;\n\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nlet isFunction = function(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  isFunction = function(value) {\n    return (\n      typeof value === 'function' &&\n      toString.call(value) === '[object Function]'\n    );\n  };\n}\nexport { isFunction };\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nexport const isArray =\n  Array.isArray ||\n  function(value) {\n    return value && typeof value === 'object'\n      ? toString.call(value) === '[object Array]'\n      : false;\n  };\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexport function indexOf(array, value) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nexport function isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function createFrame(object) {\n  let frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nexport function blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nexport function appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n","const errorProps = [\n  'description',\n  'fileName',\n  'lineNumber',\n  'endLineNumber',\n  'message',\n  'name',\n  'number',\n  'stack'\n];\n\nfunction Exception(message, node) {\n  let loc = node && node.loc,\n    line,\n    endLineNumber,\n    column,\n    endColumn;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  let tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (let idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexport default Exception;\n","import { appendContextPath, createFrame, isArray } from '../utils';\n\nexport default function(instance) {\n  instance.registerHelper('blockHelperMissing', function(context, options) {\n    let inverse = options.inverse,\n      fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        let data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.name\n        );\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isArray,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('each', function(context, options) {\n    if (!options) {\n      throw new Exception('Must pass iterator to #each');\n    }\n\n    let fn = options.fn,\n      inverse = options.inverse,\n      i = 0,\n      ret = '',\n      data,\n      contextPath;\n\n    if (options.data && options.ids) {\n      contextPath =\n        appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret =\n        ret +\n        fn(context[field], {\n          data: data,\n          blockParams: blockParams(\n            [context[field], field],\n            [contextPath + field, null]\n          )\n        });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (let j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (global.Symbol && context[global.Symbol.iterator]) {\n        const newContext = [];\n        const iterator = context[global.Symbol.iterator]();\n        for (let it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (let j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        let priorKey;\n\n        Object.keys(context).forEach(key => {\n          // We're running the iterations one step out of sync so we can detect\n          // the last iteration without have to scan the object twice and create\n          // an itermediate keys array.\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1);\n          }\n          priorKey = key;\n          i++;\n        });\n        if (priorKey !== undefined) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n}\n","import Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('helperMissing', function(/* [args, ]options */) {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new Exception(\n        'Missing helper: \"' + arguments[arguments.length - 1].name + '\"'\n      );\n    }\n  });\n}\n","import { isEmpty, isFunction } from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('if', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#if requires exactly one argument');\n    }\n    if (isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if ((!options.hash.includeZero && !conditional) || isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function(conditional, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('log', function(/* message, options */) {\n    let args = [undefined],\n      options = arguments[arguments.length - 1];\n    for (let i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    let level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log(...args);\n  });\n}\n","export default function(instance) {\n  instance.registerHelper('lookup', function(obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n}\n","import {\n  appendContextPath,\n  blockParams,\n  createFrame,\n  isEmpty,\n  isFunction\n} from '../utils';\nimport Exception from '../exception';\n\nexport default function(instance) {\n  instance.registerHelper('with', function(context, options) {\n    if (arguments.length != 2) {\n      throw new Exception('#with requires exactly one argument');\n    }\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    let fn = options.fn;\n\n    if (!isEmpty(context)) {\n      let data = options.data;\n      if (options.data && options.ids) {\n        data = createFrame(options.data);\n        data.contextPath = appendContextPath(\n          options.data.contextPath,\n          options.ids[0]\n        );\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n}\n","import registerBlockHelperMissing from './helpers/block-helper-missing';\nimport registerEach from './helpers/each';\nimport registerHelperMissing from './helpers/helper-missing';\nimport registerIf from './helpers/if';\nimport registerLog from './helpers/log';\nimport registerLookup from './helpers/lookup';\nimport registerWith from './helpers/with';\n\nexport function registerDefaultHelpers(instance) {\n  registerBlockHelperMissing(instance);\n  registerEach(instance);\n  registerHelperMissing(instance);\n  registerIf(instance);\n  registerLog(instance);\n  registerLookup(instance);\n  registerWith(instance);\n}\n\nexport function moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n","import { extend } from '../utils';\n\nexport default function(instance) {\n  instance.registerDecorator('inline', function(fn, props, container, options) {\n    let ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function(context, options) {\n        // Create a new partials stack frame prior to exec.\n        let original = container.partials;\n        container.partials = extend({}, original, props.partials);\n        let ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n}\n","import registerInline from './decorators/inline';\n\nexport function registerDefaultDecorators(instance) {\n  registerInline(instance);\n}\n","import { indexOf } from './utils';\n\nlet logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function(level) {\n    if (typeof level === 'string') {\n      let levelMap = indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function(level, ...message) {\n    level = logger.lookupLevel(level);\n\n    if (\n      typeof console !== 'undefined' &&\n      logger.lookupLevel(logger.level) <= level\n    ) {\n      let method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n      console[method](...message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexport default logger;\n","import { extend } from '../utils';\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\nexport function createNewLookupObject(...sources) {\n  return extend(Object.create(null), ...sources);\n}\n","import { createNewLookupObject } from './create-new-lookup-object';\nimport * as logger from '../logger';\n\nconst loggedProperties = Object.create(null);\n\nexport function createProtoAccessControl(runtimeOptions) {\n  let defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  let defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: createNewLookupObject(\n        defaultPropertyWhiteList,\n        runtimeOptions.allowedProtoProperties\n      ),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: createNewLookupObject(\n        defaultMethodWhiteList,\n        runtimeOptions.allowedProtoMethods\n      ),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nexport function resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log(\n      'error',\n      `Handlebars: Access has been denied to resolve the property \"${propertyName}\" because it is not an \"own property\" of its parent.\\n` +\n        `You can add a runtime option to disable the check or this warning:\\n` +\n        `See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`\n    );\n  }\n}\n\nexport function resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(propertyName => {\n    delete loggedProperties[propertyName];\n  });\n}\n","import { createFrame, extend, toString } from './utils';\nimport Exception from './exception';\nimport { registerDefaultHelpers } from './helpers';\nimport { registerDefaultDecorators } from './decorators';\nimport logger from './logger';\nimport { resetLoggedProperties } from './internal/proto-access';\n\nexport const VERSION = '4.7.7';\nexport const COMPILER_REVISION = 8;\nexport const LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple helpers');\n      }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(\n          `Attempting to register a partial called \"${name}\" as undefined`\n        );\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple decorators');\n      }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses() {\n    resetLoggedProperties();\n  }\n};\n\nexport let log = logger.log;\n\nexport { createFrame, logger };\n","// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n  return '' + this.string;\n};\n\nexport default SafeString;\n","export function wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  let wrapper = function(/* dynamic arguments */) {\n    const options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n","import * as Utils from './utils';\nimport Exception from './exception';\nimport {\n  COMPILER_REVISION,\n  createFrame,\n  LAST_COMPATIBLE_COMPILER_REVISION,\n  REVISION_CHANGES\n} from './base';\nimport { moveHelperToHooks } from './helpers';\nimport { wrapHelper } from './internal/wrapHelper';\nimport {\n  createProtoAccessControl,\n  resultIsAllowed\n} from './internal/proto-access';\n\nexport function checkRevision(compilerInfo) {\n  const compilerRevision = (compilerInfo && compilerInfo[0]) || 1,\n    currentRevision = COMPILER_REVISION;\n\n  if (\n    compilerRevision >= LAST_COMPATIBLE_COMPILER_REVISION &&\n    compilerRevision <= COMPILER_REVISION\n  ) {\n    return;\n  }\n\n  if (compilerRevision < LAST_COMPATIBLE_COMPILER_REVISION) {\n    const runtimeVersions = REVISION_CHANGES[currentRevision],\n      compilerVersions = REVISION_CHANGES[compilerRevision];\n    throw new Exception(\n      'Template was precompiled with an older version of Handlebars than the current runtime. ' +\n        'Please update your precompiler to a newer version (' +\n        runtimeVersions +\n        ') or downgrade your runtime to an older version (' +\n        compilerVersions +\n        ').'\n    );\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new Exception(\n      'Template was precompiled with a newer version of Handlebars than the current runtime. ' +\n        'Please update your runtime to a newer version (' +\n        compilerInfo[1] +\n        ').'\n    );\n  }\n}\n\nexport function template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new Exception('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new Exception('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  const templateWasPrecompiledWithCompilerV7 =\n    templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    let extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    let result = env.VM.invokePartial.call(\n      this,\n      partial,\n      context,\n      extendedOptions\n    );\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(\n        partial,\n        templateSpec.compilerOptions,\n        env\n      );\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        let lines = result.split('\\n');\n        for (let i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new Exception(\n        'The partial ' +\n          options.name +\n          ' could not be compiled when running in runtime-only mode'\n      );\n    }\n  }\n\n  // Just add water\n  let container = {\n    strict: function(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new Exception('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return container.lookupProperty(obj, name);\n    },\n    lookupProperty: function(parent, propertyName) {\n      let result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function(depths, name) {\n      const len = depths.length;\n      for (let i = 0; i < len; i++) {\n        let result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function(i) {\n      let ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function(i, data, declaredBlockParams, blockParams, depths) {\n      let programWrapper = this.programs[i],\n        fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(\n          this,\n          i,\n          fn,\n          data,\n          declaredBlockParams,\n          blockParams,\n          depths\n        );\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function(param, common) {\n      let obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context, options = {}) {\n    let data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    let depths,\n      blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths =\n          context != options.depths[0]\n            ? [context].concat(options.depths)\n            : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return (\n        '' +\n        templateSpec.main(\n          container,\n          context,\n          container.helpers,\n          container.partials,\n          data,\n          blockParams,\n          depths\n        )\n      );\n    }\n\n    main = executeDecorators(\n      templateSpec.main,\n      main,\n      container,\n      options.depths || [],\n      data,\n      blockParams\n    );\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function(options) {\n    if (!options.partial) {\n      let mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(\n          options.partials,\n          env.partials\n        );\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend(\n          {},\n          env.decorators,\n          options.decorators\n        );\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = createProtoAccessControl(options);\n\n      let keepHelperInHelpers =\n        options.allowCallsToHelperMissing ||\n        templateWasPrecompiledWithCompilerV7;\n      moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function(i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new Exception('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new Exception('must pass parent depths');\n    }\n\n    return wrapProgram(\n      container,\n      i,\n      templateSpec[i],\n      data,\n      0,\n      blockParams,\n      depths\n    );\n  };\n  return ret;\n}\n\nexport function wrapProgram(\n  container,\n  i,\n  fn,\n  data,\n  declaredBlockParams,\n  blockParams,\n  depths\n) {\n  function prog(context, options = {}) {\n    let currentDepths = depths;\n    if (\n      depths &&\n      context != depths[0] &&\n      !(context === container.nullContext && depths[0] === null)\n    ) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(\n      container,\n      context,\n      container.helpers,\n      container.partials,\n      options.data || data,\n      blockParams && [options.blockParams].concat(blockParams),\n      currentDepths\n    );\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\nexport function resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nexport function invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  const currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  let partialBlock;\n  if (options.fn && options.fn !== noop) {\n    options.data = createFrame(options.data);\n    // Wrapper function to get access to currentPartialBlock from the closure\n    let fn = options.fn;\n    partialBlock = options.data['partial-block'] = function partialBlockWrapper(\n      context,\n      options = {}\n    ) {\n      // Restore the partial-block from the closure for the execution of the block\n      // i.e. the part inside the block of the partial call.\n      options.data = createFrame(options.data);\n      options.data['partial-block'] = currentPartialBlock;\n      return fn(context, options);\n    };\n    if (fn.partials) {\n      options.partials = Utils.extend({}, options.partials, fn.partials);\n    }\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new Exception('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nexport function noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    let props = {};\n    prog = fn.decorator(\n      prog,\n      props,\n      container,\n      depths && depths[0],\n      data,\n      blockParams,\n      depths\n    );\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(helperName => {\n    let helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  const lookupProperty = container.lookupProperty;\n  return wrapHelper(helper, options => {\n    return Utils.extend({ lookupProperty }, options);\n  });\n}\n","export default function(Handlebars) {\n  /* istanbul ignore next */\n  let root = typeof global !== 'undefined' ? global : window,\n    $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n}\n","import * as base from './handlebars/base';\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\nimport SafeString from './handlebars/safe-string';\nimport Exception from './handlebars/exception';\nimport * as Utils from './handlebars/utils';\nimport * as runtime from './handlebars/runtime';\n\nimport noConflict from './handlebars/no-conflict';\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  let hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = SafeString;\n  hb.Exception = Exception;\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function(spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst['default'] = inst;\n\nexport default inst;\n","let AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function(node) {\n      return (\n        node.type === 'SubExpression' ||\n        ((node.type === 'MustacheStatement' ||\n          node.type === 'BlockStatement') &&\n          !!((node.params && node.params.length) || node.hash))\n      );\n    },\n\n    scopedId: function(path) {\n      return /^\\.|this\\b/.test(path.original);\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function(path) {\n      return (\n        path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth\n      );\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexport default AST;\n","// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\nvar handlebars = (function(){\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"partialBlock\":12,\"content\":13,\"COMMENT\":14,\"CONTENT\":15,\"openRawBlock\":16,\"rawBlock_repetition0\":17,\"END_RAW_BLOCK\":18,\"OPEN_RAW_BLOCK\":19,\"helperName\":20,\"openRawBlock_repetition0\":21,\"openRawBlock_option0\":22,\"CLOSE_RAW_BLOCK\":23,\"openBlock\":24,\"block_option0\":25,\"closeBlock\":26,\"openInverse\":27,\"block_option1\":28,\"OPEN_BLOCK\":29,\"openBlock_repetition0\":30,\"openBlock_option0\":31,\"openBlock_option1\":32,\"CLOSE\":33,\"OPEN_INVERSE\":34,\"openInverse_repetition0\":35,\"openInverse_option0\":36,\"openInverse_option1\":37,\"openInverseChain\":38,\"OPEN_INVERSE_CHAIN\":39,\"openInverseChain_repetition0\":40,\"openInverseChain_option0\":41,\"openInverseChain_option1\":42,\"inverseAndProgram\":43,\"INVERSE\":44,\"inverseChain\":45,\"inverseChain_option0\":46,\"OPEN_ENDBLOCK\":47,\"OPEN\":48,\"mustache_repetition0\":49,\"mustache_option0\":50,\"OPEN_UNESCAPED\":51,\"mustache_repetition1\":52,\"mustache_option1\":53,\"CLOSE_UNESCAPED\":54,\"OPEN_PARTIAL\":55,\"partialName\":56,\"partial_repetition0\":57,\"partial_option0\":58,\"openPartialBlock\":59,\"OPEN_PARTIAL_BLOCK\":60,\"openPartialBlock_repetition0\":61,\"openPartialBlock_option0\":62,\"param\":63,\"sexpr\":64,\"OPEN_SEXPR\":65,\"sexpr_repetition0\":66,\"sexpr_option0\":67,\"CLOSE_SEXPR\":68,\"hash\":69,\"hash_repetition_plus0\":70,\"hashSegment\":71,\"ID\":72,\"EQUALS\":73,\"blockParams\":74,\"OPEN_BLOCK_PARAMS\":75,\"blockParams_repetition_plus0\":76,\"CLOSE_BLOCK_PARAMS\":77,\"path\":78,\"dataName\":79,\"STRING\":80,\"NUMBER\":81,\"BOOLEAN\":82,\"UNDEFINED\":83,\"NULL\":84,\"DATA\":85,\"pathSegments\":86,\"SEP\":87,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",14:\"COMMENT\",15:\"CONTENT\",18:\"END_RAW_BLOCK\",19:\"OPEN_RAW_BLOCK\",23:\"CLOSE_RAW_BLOCK\",29:\"OPEN_BLOCK\",33:\"CLOSE\",34:\"OPEN_INVERSE\",39:\"OPEN_INVERSE_CHAIN\",44:\"INVERSE\",47:\"OPEN_ENDBLOCK\",48:\"OPEN\",51:\"OPEN_UNESCAPED\",54:\"CLOSE_UNESCAPED\",55:\"OPEN_PARTIAL\",60:\"OPEN_PARTIAL_BLOCK\",65:\"OPEN_SEXPR\",68:\"CLOSE_SEXPR\",72:\"ID\",73:\"EQUALS\",75:\"OPEN_BLOCK_PARAMS\",77:\"CLOSE_BLOCK_PARAMS\",80:\"STRING\",81:\"NUMBER\",82:\"BOOLEAN\",83:\"UNDEFINED\",84:\"NULL\",85:\"DATA\",87:\"SEP\"},\nproductions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$\n) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return $$[$0-1]; \nbreak;\ncase 2:this.$ = yy.prepareProgram($$[$0]);\nbreak;\ncase 3:this.$ = $$[$0];\nbreak;\ncase 4:this.$ = $$[$0];\nbreak;\ncase 5:this.$ = $$[$0];\nbreak;\ncase 6:this.$ = $$[$0];\nbreak;\ncase 7:this.$ = $$[$0];\nbreak;\ncase 8:this.$ = $$[$0];\nbreak;\ncase 9:\n    this.$ = {\n      type: 'CommentStatement',\n      value: yy.stripComment($$[$0]),\n      strip: yy.stripFlags($$[$0], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 10:\n    this.$ = {\n      type: 'ContentStatement',\n      original: $$[$0],\n      value: $$[$0],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 11:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 12:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1] };\nbreak;\ncase 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\nbreak;\ncase 14:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\nbreak;\ncase 15:this.$ = { open: $$[$0-5], path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 16:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 17:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\nbreak;\ncase 18:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\nbreak;\ncase 19:\n    var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n        program = yy.prepareProgram([inverse], $$[$0-1].loc);\n    program.chained = true;\n\n    this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n  \nbreak;\ncase 20:this.$ = $$[$0];\nbreak;\ncase 21:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\nbreak;\ncase 22:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 23:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\nbreak;\ncase 24:\n    this.$ = {\n      type: 'PartialStatement',\n      name: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      indent: '',\n      strip: yy.stripFlags($$[$0-4], $$[$0]),\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 25:this.$ = yy.preparePartialBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\nbreak;\ncase 26:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1], strip: yy.stripFlags($$[$0-4], $$[$0]) };\nbreak;\ncase 27:this.$ = $$[$0];\nbreak;\ncase 28:this.$ = $$[$0];\nbreak;\ncase 29:\n    this.$ = {\n      type: 'SubExpression',\n      path: $$[$0-3],\n      params: $$[$0-2],\n      hash: $$[$0-1],\n      loc: yy.locInfo(this._$)\n    };\n  \nbreak;\ncase 30:this.$ = {type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 31:this.$ = {type: 'HashPair', key: yy.id($$[$0-2]), value: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 32:this.$ = yy.id($$[$0-1]);\nbreak;\ncase 33:this.$ = $$[$0];\nbreak;\ncase 34:this.$ = $$[$0];\nbreak;\ncase 35:this.$ = {type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$)};\nbreak;\ncase 36:this.$ = {type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$)};\nbreak;\ncase 37:this.$ = {type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$)};\nbreak;\ncase 38:this.$ = {type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$)};\nbreak;\ncase 39:this.$ = {type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$)};\nbreak;\ncase 40:this.$ = $$[$0];\nbreak;\ncase 41:this.$ = $$[$0];\nbreak;\ncase 42:this.$ = yy.preparePath(true, $$[$0], this._$);\nbreak;\ncase 43:this.$ = yy.preparePath(false, $$[$0], this._$);\nbreak;\ncase 44: $$[$0-2].push({part: yy.id($$[$0]), original: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \nbreak;\ncase 45:this.$ = [{part: yy.id($$[$0]), original: $$[$0]}];\nbreak;\ncase 46:this.$ = [];\nbreak;\ncase 47:$$[$0-1].push($$[$0]);\nbreak;\ncase 48:this.$ = [];\nbreak;\ncase 49:$$[$0-1].push($$[$0]);\nbreak;\ncase 50:this.$ = [];\nbreak;\ncase 51:$$[$0-1].push($$[$0]);\nbreak;\ncase 58:this.$ = [];\nbreak;\ncase 59:$$[$0-1].push($$[$0]);\nbreak;\ncase 64:this.$ = [];\nbreak;\ncase 65:$$[$0-1].push($$[$0]);\nbreak;\ncase 70:this.$ = [];\nbreak;\ncase 71:$$[$0-1].push($$[$0]);\nbreak;\ncase 78:this.$ = [];\nbreak;\ncase 79:$$[$0-1].push($$[$0]);\nbreak;\ncase 82:this.$ = [];\nbreak;\ncase 83:$$[$0-1].push($$[$0]);\nbreak;\ncase 86:this.$ = [];\nbreak;\ncase 87:$$[$0-1].push($$[$0]);\nbreak;\ncase 90:this.$ = [];\nbreak;\ncase 91:$$[$0-1].push($$[$0]);\nbreak;\ncase 94:this.$ = [];\nbreak;\ncase 95:$$[$0-1].push($$[$0]);\nbreak;\ncase 98:this.$ = [$$[$0]];\nbreak;\ncase 99:$$[$0-1].push($$[$0]);\nbreak;\ncase 100:this.$ = [$$[$0]];\nbreak;\ncase 101:$$[$0-1].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],\ndefaultActions: {4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},\nparseError: function parseError (str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex () {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState () {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules () {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin (condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n) {\n\n\nfunction strip(start, end) {\n  return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n}\n\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:\n                                   if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"mu\");\n                                   } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                     strip(0,1);\n                                     this.begin(\"emu\");\n                                   } else {\n                                     this.begin(\"mu\");\n                                   }\n                                   if(yy_.yytext) return 15;\n                                 \nbreak;\ncase 1:return 15;\nbreak;\ncase 2:\n                                   this.popState();\n                                   return 15;\n                                 \nbreak;\ncase 3:this.begin('raw'); return 15;\nbreak;\ncase 4:\n                                  this.popState();\n                                  // Should be using `this.topState()` below, but it currently\n                                  // returns the second top instead of the first top. Opened an\n                                  // issue about it at https://github.com/zaach/jison/issues/291\n                                  if (this.conditionStack[this.conditionStack.length-1] === 'raw') {\n                                    return 15;\n                                  } else {\n                                    strip(5, 9);\n                                    return 'END_RAW_BLOCK';\n                                  }\n                                 \nbreak;\ncase 5: return 15; \nbreak;\ncase 6:\n  this.popState();\n  return 14;\n\nbreak;\ncase 7:return 65;\nbreak;\ncase 8:return 68;\nbreak;\ncase 9: return 19; \nbreak;\ncase 10:\n                                  this.popState();\n                                  this.begin('raw');\n                                  return 23;\n                                 \nbreak;\ncase 11:return 55;\nbreak;\ncase 12:return 60;\nbreak;\ncase 13:return 29;\nbreak;\ncase 14:return 47;\nbreak;\ncase 15:this.popState(); return 44;\nbreak;\ncase 16:this.popState(); return 44;\nbreak;\ncase 17:return 34;\nbreak;\ncase 18:return 39;\nbreak;\ncase 19:return 51;\nbreak;\ncase 20:return 48;\nbreak;\ncase 21:\n  this.unput(yy_.yytext);\n  this.popState();\n  this.begin('com');\n\nbreak;\ncase 22:\n  this.popState();\n  return 14;\n\nbreak;\ncase 23:return 48;\nbreak;\ncase 24:return 73;\nbreak;\ncase 25:return 72;\nbreak;\ncase 26:return 72;\nbreak;\ncase 27:return 87;\nbreak;\ncase 28:// ignore whitespace\nbreak;\ncase 29:this.popState(); return 54;\nbreak;\ncase 30:this.popState(); return 33;\nbreak;\ncase 31:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 80;\nbreak;\ncase 32:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 80;\nbreak;\ncase 33:return 85;\nbreak;\ncase 34:return 82;\nbreak;\ncase 35:return 82;\nbreak;\ncase 36:return 83;\nbreak;\ncase 37:return 84;\nbreak;\ncase 38:return 81;\nbreak;\ncase 39:return 75;\nbreak;\ncase 40:return 77;\nbreak;\ncase 41:return 72;\nbreak;\ncase 42:yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g,'$1'); return 72;\nbreak;\ncase 43:return 'INVALID';\nbreak;\ncase 44:return 5;\nbreak;\n}\n};\nlexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{(?=[^\\/]))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#>)/,/^(?:\\{\\{(~)?#\\*?)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?\\*?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:undefined(?=([~}\\s)])))/,/^(?:null(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[(\\\\\\]|[^\\]])*\\])/,/^(?:.)/,/^(?:$)/];\nlexer.conditions = {\"mu\":{\"rules\":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[6],\"inclusive\":false},\"raw\":{\"rules\":[3,4,5],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,44],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();export default handlebars;\n","import Exception from '../exception';\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function(node, name) {\n    let value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new Exception(\n          'Unexpected node type \"' +\n            value.type +\n            '\" found when accepting ' +\n            name +\n            ' on ' +\n            node.type\n        );\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new Exception(node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function(array) {\n    for (let i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new Exception('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    let ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function(/* content */) {},\n  CommentStatement: function(/* comment */) {},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function(/* path */) {},\n\n  StringLiteral: function(/* string */) {},\n  NumberLiteral: function(/* number */) {},\n  BooleanLiteral: function(/* bool */) {},\n  UndefinedLiteral: function(/* literal */) {},\n  NullLiteral: function(/* literal */) {},\n\n  Hash: function(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexport default Visitor;\n","import Visitor from './visitor';\n\nfunction WhitespaceControl(options = {}) {\n  this.options = options;\n}\nWhitespaceControl.prototype = new Visitor();\n\nWhitespaceControl.prototype.Program = function(program) {\n  const doStandalone = !this.options.ignoreStandalone;\n\n  let isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  let body = program.body;\n  for (let i = 0, l = body.length; i < l; i++) {\n    let current = body[i],\n      strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    let _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n      _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n      openStandalone = strip.openStandalone && _isPrevWhitespace,\n      closeStandalone = strip.closeStandalone && _isNextWhitespace,\n      inlineStandalone =\n        strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function(\n  block\n) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  let program = block.program || block.inverse,\n    inverse = block.program && block.inverse,\n    firstInverse = inverse,\n    lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  let strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    let inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (\n      !this.options.ignoreStandalone &&\n      isPrevWhitespace(program.body) &&\n      isNextWhitespace(firstInverse.body)\n    ) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function(\n  mustache\n) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function(\n  node\n) {\n  /* istanbul ignore next */\n  let strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  let prev = body[i - 1],\n    sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(\n      prev.original\n    );\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  let next = body[i + 1],\n    sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(\n      next.original\n    );\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  let current = body[i == null ? 0 : i + 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.rightStripped)\n  ) {\n    return;\n  }\n\n  let original = current.value;\n  current.value = current.value.replace(\n    multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/,\n    ''\n  );\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  let current = body[i == null ? body.length - 1 : i - 1];\n  if (\n    !current ||\n    current.type !== 'ContentStatement' ||\n    (!multiple && current.leftStripped)\n  ) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  let original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexport default WhitespaceControl;\n","import Exception from '../exception';\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    let errorNode = { loc: open.path.loc };\n\n    throw new Exception(\n      open.path.original + \" doesn't match \" + close,\n      errorNode\n    );\n  }\n}\n\nexport function SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nexport function id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nexport function stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nexport function stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nexport function preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  let original = data ? '@' : '',\n    dig = [],\n    depth = 0;\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    let part = parts[i].part,\n      // If we have [] syntax then we do not treat path references as operators,\n      // i.e. foo.[this] resolves to approximately context.foo['this']\n      isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new Exception('Invalid path: ' + original, { loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data,\n    depth,\n    parts: dig,\n    original,\n    loc\n  };\n}\n\nexport function prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  let escapeFlag = open.charAt(3) || open.charAt(2),\n    escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  let decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path,\n    params,\n    hash,\n    escaped,\n    strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  let program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nexport function prepareBlock(\n  openBlock,\n  program,\n  inverseAndProgram,\n  close,\n  inverted,\n  locInfo\n) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  let decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  let inverse, inverseStrip;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new Exception(\n        'Unexpected inverse block on decorator',\n        inverseAndProgram\n      );\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program,\n    inverse,\n    openStrip: openBlock.strip,\n    inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nexport function prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    const firstLoc = statements[0].loc,\n      lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nexport function preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n","import parser from './parser';\nimport WhitespaceControl from './whitespace-control';\nimport * as Helpers from './helpers';\nimport { extend } from '../utils';\n\nexport { parser };\n\nlet yy = {};\nextend(yy, Helpers);\n\nexport function parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  parser.yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function(locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  let ast = parser.parse(input);\n\n  return ast;\n}\n\nexport function parse(input, options) {\n  let ast = parseWithoutProcessing(input, options);\n  let strip = new WhitespaceControl(options);\n\n  return strip.accept(ast);\n}\n","/* eslint-disable new-cap */\n\nimport Exception from '../exception';\nimport { isArray, indexOf, extend } from '../utils';\nimport AST from './ast';\n\nconst slice = [].slice;\n\nexport function Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function(other) {\n    let len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      let opcode = this.opcodes[i],\n        otherOpcode = other.opcodes[i];\n      if (\n        opcode.opcode !== otherOpcode.opcode ||\n        !argEquals(opcode.args, otherOpcode.args)\n      ) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (let i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = extend(\n      Object.create(null),\n      {\n        helperMissing: true,\n        blockHelperMissing: true,\n        each: true,\n        if: true,\n        unless: true,\n        with: true,\n        log: true,\n        lookup: true\n      },\n      options.knownHelpers\n    );\n\n    return this.accept(program);\n  },\n\n  compileProgram: function(program) {\n    let childCompiler = new this.compiler(), // eslint-disable-line new-cap\n      result = childCompiler.compile(program, this.options),\n      guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new Exception('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    let ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    let body = program.body,\n      bodyLength = body.length;\n    for (let i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function(block) {\n    transformLiteralToPath(block);\n\n    let program = block.program,\n      inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    let type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock(decorator) {\n    let program = decorator.program && this.compileProgram(decorator.program);\n    let params = this.setupFullMustacheParams(decorator, program, undefined),\n      path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function(partial) {\n    this.usePartial = true;\n\n    let program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    let params = partial.params;\n    if (params.length > 1) {\n      throw new Exception(\n        'Unsupported number of partial arguments: ' + params.length,\n        partial\n      );\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    let partialName = partial.name.original,\n      isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    let indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function() {},\n\n  SubExpression: function(sexpr) {\n    transformLiteralToPath(sexpr);\n    let type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function(sexpr, program, inverse) {\n    let path = sexpr.path,\n      name = path.parts[0],\n      isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function(sexpr) {\n    let path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function(sexpr, program, inverse) {\n    let params = this.setupFullMustacheParams(sexpr, program, inverse),\n      path = sexpr.path,\n      name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new Exception(\n        'You specified knownHelpersOnly, but used the unknown helper ' + name,\n        sexpr\n      );\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode(\n        'invokeHelper',\n        params.length,\n        path.original,\n        AST.helpers.simpleId(path)\n      );\n    }\n  },\n\n  PathExpression: function(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    let name = path.parts[0],\n      scoped = AST.helpers.scopedId(path),\n      blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode(\n        'lookupOnContext',\n        path.parts,\n        path.falsy,\n        path.strict,\n        scoped\n      );\n    }\n  },\n\n  StringLiteral: function(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function(hash) {\n    let pairs = hash.pairs,\n      i = 0,\n      l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function(sexpr) {\n    let isSimple = AST.helpers.simpleId(sexpr.path);\n\n    let isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    let isHelper = !isBlockParam && AST.helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    let isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      let name = sexpr.path.parts[0],\n        options = this.options;\n      if (options.knownHelpers[name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function(params) {\n    for (let i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function(val) {\n    let value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        let blockParamIndex;\n        if (val.parts && !AST.helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          let blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value\n              .replace(/^this(?:\\.|$)/, '')\n              .replace(/^\\.\\//, '')\n              .replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function(sexpr, program, inverse, omitEmpty) {\n    let params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function(name) {\n    for (\n      let depth = 0, len = this.options.blockParams.length;\n      depth < len;\n      depth++\n    ) {\n      let blockParams = this.options.blockParams[depth],\n        param = blockParams && indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nexport function precompile(input, options, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' +\n        input\n    );\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let ast = env.parse(input, options),\n    environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nexport function compile(input, options = {}, env) {\n  if (\n    input == null ||\n    (typeof input !== 'string' && input.type !== 'Program')\n  ) {\n    throw new Exception(\n      'You must pass a string or Handlebars AST to Handlebars.compile. You passed ' +\n        input\n    );\n  }\n\n  options = extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  let compiled;\n\n  function compileInput() {\n    let ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options),\n      templateSpec = new env.JavaScriptCompiler().compile(\n        environment,\n        options,\n        undefined,\n        true\n      );\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function(setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function(i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (isArray(a) && isArray(b) && a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    let literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/* global define */\nimport { isArray } from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we asusme that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return { code: this.toString() };\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || { start: {} }) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(\n      loc.start.line,\n      loc.start.column,\n      this.srcFile,\n      chunk\n    );\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return (\n      '\"' +\n      (str + '')\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n        .replace(/\\u2029/g, '\\\\u2029') +\n      '\"'\n    );\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    Object.keys(obj).forEach(key => {\n      let value = castChunk(obj[key], this);\n      if (value !== 'undefined') {\n        pairs.push([this.quotedString(key), ':', value]);\n      }\n    });\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n","import { COMPILER_REVISION, REVISION_CHANGES } from '../base';\nimport Exception from '../exception';\nimport { isArray } from '../utils';\nimport CodeGen from './code-gen';\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function(name) {\n    return [\n      this.aliasable('container.lookup'),\n      '(depths, ',\n      JSON.stringify(name),\n      ')'\n    ];\n  },\n\n  compilerInfo: function() {\n    const revision = COMPILER_REVISION,\n      versions = REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths =\n      this.useDepths ||\n      environment.useDepths ||\n      environment.useDecorators ||\n      this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    let opcodes = environment.opcodes,\n      opcode,\n      firstLoc,\n      i,\n      l;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new Exception('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend([\n        'var decorators = container.decorators, ',\n        this.lookupPropertyFunctionVarDeclaration(),\n        ';\\n'\n      ]);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, [\n          'fn',\n          'props',\n          'container',\n          'depth0',\n          'data',\n          'blockParams',\n          'depths',\n          this.decorators.merge()\n        ]);\n      } else {\n        this.decorators.prepend(\n          'function(fn, props, container, depth0, data, blockParams, depths) {\\n'\n        );\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    let fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      let ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      let { programs, decorators } = this.context;\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new CodeGen(this.options.srcName);\n    this.decorators = new CodeGen(this.options.srcName);\n  },\n\n  createFunctionContext: function(asObject) {\n    let varDeclarations = '';\n\n    let locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    let aliasCount = 0;\n    Object.keys(this.aliases).forEach(alias => {\n      let node = this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    let params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    let source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap([\n        'function(',\n        params.join(','),\n        ') {\\n  ',\n        source,\n        '}'\n      ]);\n    }\n  },\n  mergeSource: function(varDeclarations) {\n    let isSimple = this.environment.isSimple,\n      appendOnly = !this.forceBuffer,\n      appendFirst,\n      sourceSeen,\n      bufferStart,\n      bufferEnd;\n    this.source.each(line => {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations +=\n        ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend(\n        'var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n')\n      );\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function() {\n    return `\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    `.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function(name) {\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    let blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    let blockHelperMissing = this.aliasable(\n        'container.hooks.blockHelperMissing'\n      ),\n      params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    let current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource([\n      'if (!',\n      this.lastHelper,\n      ') { ',\n      current,\n      ' = ',\n      this.source.functionCall(blockHelperMissing, 'call', params),\n      '}'\n    ]);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function() {\n    if (this.isInline()) {\n      this.replaceStack(current => [' != null ? ', current, ' : \"\"']);\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      let local = this.popStack();\n      this.pushSource([\n        'if (',\n        local,\n        ' != null) { ',\n        this.appendToBuffer(local, undefined, true),\n        ' }'\n      ]);\n      if (this.environment.isSimple) {\n        this.pushSource([\n          'else { ',\n          this.appendToBuffer(\"''\", undefined, true),\n          ' }'\n        ]);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function() {\n    this.pushSource(\n      this.appendToBuffer([\n        this.aliasable('container.escapeExpression'),\n        '(',\n        this.popStack(),\n        ')'\n      ])\n    );\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function(parts, falsy, strict, scoped) {\n    let i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function(type, parts, i, falsy, strict) {\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(strictLookup(this.options.strict && strict, this, parts, type));\n      return;\n    }\n\n    let len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(current => {\n        let lookup = this.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function() {\n    this.push([\n      this.aliasable('container.lambda'),\n      '(',\n      this.popStack(),\n      ', ',\n      this.contextName(0),\n      ')'\n    ]);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function() {\n    let hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator(paramSize, name) {\n    let foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n      options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push([\n      'fn = ',\n      this.decorators.functionCall(foundDecorator, '', [\n        'fn',\n        'props',\n        'container',\n        options\n      ]),\n      ' || fn;'\n    ]);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function(paramSize, name, isSimple) {\n    let nonHelper = this.popStack(),\n      helper = this.setupHelper(paramSize, name);\n\n    let possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    let functionLookupCode = [\n      '(',\n      this.itemsSeparatedBy(possibleFunctionCalls, '||'),\n      ')'\n    ];\n    let functionCall = this.source.functionCall(\n      functionLookupCode,\n      'call',\n      helper.callParams\n    );\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function(items, separator) {\n    let result = [];\n    result.push(items[0]);\n    for (let i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function(paramSize, name) {\n    let helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function(name, helperCall) {\n    this.useRegister('helper');\n\n    let nonHelper = this.popStack();\n\n    this.emptyHash();\n    let helper = this.setupHelper(0, name, helperCall);\n\n    let helperName = (this.lastHelper = this.nameLookup(\n      'helpers',\n      name,\n      'helper'\n    ));\n\n    let lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(\n        ' != null ? helper : ',\n        this.aliasable('container.hooks.helperMissing')\n      );\n    }\n\n    this.push([\n      '(',\n      lookup,\n      helper.paramsInit ? ['),(', helper.paramsInit] : [],\n      '),',\n      '(typeof helper === ',\n      this.aliasable('\"function\"'),\n      ' ? ',\n      this.source.functionCall('helper', 'call', helper.callParams),\n      ' : helper))'\n    ]);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function(isDynamic, name, indent) {\n    let params = [],\n      options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function(key) {\n    let value = this.popStack(),\n      context,\n      type,\n      id;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    let hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral(\n        'blockParams[' +\n          name[0] +\n          '].path[' +\n          name[1] +\n          ']' +\n          (child ? ' + ' + JSON.stringify('.' + child) : '')\n      );\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function(environment, options) {\n    let children = environment.children,\n      child,\n      compiler;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      let existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        let index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(\n          child,\n          options,\n          this.context,\n          !this.precompile\n        );\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function(child) {\n    for (let i = 0, len = this.context.environments.length; i < len; i++) {\n      let environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function(guid) {\n    let child = this.environment.children[guid],\n      programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function(source) {\n    if (this.pendingContent) {\n      this.source.push(\n        this.appendToBuffer(\n          this.source.quotedString(this.pendingContent),\n          this.pendingLocation\n        )\n      );\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function(callback) {\n    let prefix = ['('],\n      stack,\n      createdStack,\n      usedLiteral;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new Exception('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    let top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      let name = this.incrStack();\n\n      prefix = ['((', this.push(name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    let item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function() {\n    let inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (let i = 0, len = inlineStack.length; i < len; i++) {\n      let entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        let stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function(wrapped) {\n    let inline = this.isInline(),\n      item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new Exception('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function() {\n    let stack = this.isInline() ? this.inlineStack : this.compileStack,\n      item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function(name) {\n    let ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function(paramSize, name, blockHelper) {\n    let params = [],\n      paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    let foundHelper = this.nameLookup('helpers', name, 'helper'),\n      callContext = this.aliasable(\n        `${this.contextName(0)} != null ? ${this.contextName(\n          0\n        )} : (container.nullContext || {})`\n      );\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function(helper, paramSize, params) {\n    let options = {},\n      contexts = [],\n      types = [],\n      ids = [],\n      objectArgs = !params,\n      param;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    let inverse = this.popStack(),\n      program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    let i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function(helper, paramSize, params, useRegister) {\n    let options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function() {\n  const reservedWords = (\n    'break else new var' +\n    ' case finally return void' +\n    ' catch for switch while' +\n    ' continue function this with' +\n    ' default if throw' +\n    ' delete in try' +\n    ' do instanceof typeof' +\n    ' abstract enum int short' +\n    ' boolean export interface static' +\n    ' byte extends long super' +\n    ' char final native synchronized' +\n    ' class float package throws' +\n    ' const goto private transient' +\n    ' debugger implements protected volatile' +\n    ' double import public let yield await' +\n    ' null true false'\n  ).split(' ');\n\n  const compilerWords = (JavaScriptCompiler.RESERVED_WORDS = {});\n\n  for (let i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n  return (\n    !JavaScriptCompiler.RESERVED_WORDS[name] &&\n    /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name)\n  );\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, type) {\n  let stack = compiler.popStack(),\n    i = 0,\n    len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [\n      compiler.aliasable('container.strict'),\n      '(',\n      stack,\n      ', ',\n      compiler.quotedString(parts[i]),\n      ', ',\n      JSON.stringify(compiler.source.currentLocation),\n      ' )'\n    ];\n  } else {\n    return stack;\n  }\n}\n\nexport default JavaScriptCompiler;\n","import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n","/* eslint-disable new-cap */\nimport Visitor from './visitor';\n\nexport function print(ast) {\n  return new PrintVisitor().accept(ast);\n}\n\nexport function PrintVisitor() {\n  this.padding = 0;\n}\n\nPrintVisitor.prototype = new Visitor();\n\nPrintVisitor.prototype.pad = function(string) {\n  let out = '';\n\n  for (let i = 0, l = this.padding; i < l; i++) {\n    out += '  ';\n  }\n\n  out += string + '\\n';\n  return out;\n};\n\nPrintVisitor.prototype.Program = function(program) {\n  let out = '',\n    body = program.body,\n    i,\n    l;\n\n  if (program.blockParams) {\n    let blockParams = 'BLOCK PARAMS: [';\n    for (i = 0, l = program.blockParams.length; i < l; i++) {\n      blockParams += ' ' + program.blockParams[i];\n    }\n    blockParams += ' ]';\n    out += this.pad(blockParams);\n  }\n\n  for (i = 0, l = body.length; i < l; i++) {\n    out += this.accept(body[i]);\n  }\n\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.MustacheStatement = function(mustache) {\n  return this.pad('{{ ' + this.SubExpression(mustache) + ' }}');\n};\nPrintVisitor.prototype.Decorator = function(mustache) {\n  return this.pad('{{ DIRECTIVE ' + this.SubExpression(mustache) + ' }}');\n};\n\nPrintVisitor.prototype.BlockStatement = PrintVisitor.prototype.DecoratorBlock = function(\n  block\n) {\n  let out = '';\n\n  out += this.pad(\n    (block.type === 'DecoratorBlock' ? 'DIRECTIVE ' : '') + 'BLOCK:'\n  );\n  this.padding++;\n  out += this.pad(this.SubExpression(block));\n  if (block.program) {\n    out += this.pad('PROGRAM:');\n    this.padding++;\n    out += this.accept(block.program);\n    this.padding--;\n  }\n  if (block.inverse) {\n    if (block.program) {\n      this.padding++;\n    }\n    out += this.pad('{{^}}');\n    this.padding++;\n    out += this.accept(block.inverse);\n    this.padding--;\n    if (block.program) {\n      this.padding--;\n    }\n  }\n  this.padding--;\n\n  return out;\n};\n\nPrintVisitor.prototype.PartialStatement = function(partial) {\n  let content = 'PARTIAL:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n  return this.pad('{{> ' + content + ' }}');\n};\nPrintVisitor.prototype.PartialBlockStatement = function(partial) {\n  let content = 'PARTIAL BLOCK:' + partial.name.original;\n  if (partial.params[0]) {\n    content += ' ' + this.accept(partial.params[0]);\n  }\n  if (partial.hash) {\n    content += ' ' + this.accept(partial.hash);\n  }\n\n  content += ' ' + this.pad('PROGRAM:');\n  this.padding++;\n  content += this.accept(partial.program);\n  this.padding--;\n\n  return this.pad('{{> ' + content + ' }}');\n};\n\nPrintVisitor.prototype.ContentStatement = function(content) {\n  return this.pad(\"CONTENT[ '\" + content.value + \"' ]\");\n};\n\nPrintVisitor.prototype.CommentStatement = function(comment) {\n  return this.pad(\"{{! '\" + comment.value + \"' }}\");\n};\n\nPrintVisitor.prototype.SubExpression = function(sexpr) {\n  let params = sexpr.params,\n    paramStrings = [],\n    hash;\n\n  for (let i = 0, l = params.length; i < l; i++) {\n    paramStrings.push(this.accept(params[i]));\n  }\n\n  params = '[' + paramStrings.join(', ') + ']';\n\n  hash = sexpr.hash ? ' ' + this.accept(sexpr.hash) : '';\n\n  return this.accept(sexpr.path) + ' ' + params + hash;\n};\n\nPrintVisitor.prototype.PathExpression = function(id) {\n  let path = id.parts.join('/');\n  return (id.data ? '@' : '') + 'PATH:' + path;\n};\n\nPrintVisitor.prototype.StringLiteral = function(string) {\n  return '\"' + string.value + '\"';\n};\n\nPrintVisitor.prototype.NumberLiteral = function(number) {\n  return 'NUMBER{' + number.value + '}';\n};\n\nPrintVisitor.prototype.BooleanLiteral = function(bool) {\n  return 'BOOLEAN{' + bool.value + '}';\n};\n\nPrintVisitor.prototype.UndefinedLiteral = function() {\n  return 'UNDEFINED';\n};\n\nPrintVisitor.prototype.NullLiteral = function() {\n  return 'NULL';\n};\n\nPrintVisitor.prototype.Hash = function(hash) {\n  let pairs = hash.pairs,\n    joinedPairs = [];\n\n  for (let i = 0, l = pairs.length; i < l; i++) {\n    joinedPairs.push(this.accept(pairs[i]));\n  }\n\n  return 'HASH{' + joinedPairs.join(', ') + '}';\n};\nPrintVisitor.prototype.HashPair = function(pair) {\n  return pair.key + '=' + this.accept(pair.value);\n};\n/* eslint-enable new-cap */\n","// USAGE:\n// var handlebars = require('handlebars');\n/* eslint-disable no-var */\n\n// var local = handlebars.create();\n\nvar handlebars = require('../dist/cjs/handlebars')['default'];\n\nvar printer = require('../dist/cjs/handlebars/compiler/printer');\nhandlebars.PrintVisitor = printer.PrintVisitor;\nhandlebars.print = printer.print;\n\nmodule.exports = handlebars;\n\n// Publish a Node.js require() handler for .handlebars and .hbs files\nfunction extension(module, filename) {\n  var fs = require('fs');\n  var templateString = fs.readFileSync(filename, 'utf8');\n  module.exports = handlebars.compile(templateString);\n}\n/* istanbul ignore else */\nif (typeof require !== 'undefined' && require.extensions) {\n  require.extensions['.handlebars'] = extension;\n  require.extensions['.hbs'] = extension;\n}\n","export function getBuiltinVersions() {\n  return {\n    FORC: '0.49.3',\n    FUEL_CORE: '0.22.1',\n    FUELS: '0.79.0',\n  };\n}\n","function parseVersion(version: string): { major: number; minor: number; patch: number } {\n  const [major, minor, patch] = version.split('.').map((v) => parseInt(v, 10));\n  return { major, minor, patch };\n}\n\nfunction versionDiffs(\n  version1: string,\n  version2: string\n): { major: number; minor: number; patch: number; fullVersionDiff: number } {\n  const semver1 = parseVersion(version1);\n  const semver2 = parseVersion(version2);\n  const major = semver1.major - semver2.major;\n  const minor = semver1.minor - semver2.minor;\n  const patch = semver1.patch - semver2.patch;\n  return {\n    major,\n    minor,\n    patch,\n    fullVersionDiff: major || minor || patch,\n  };\n}\n\nexport function gt(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff > 0;\n}\n\nexport function eq(version1: string, version2: string): boolean {\n  const { fullVersionDiff } = versionDiffs(version1, version2);\n  return fullVersionDiff === 0;\n}\n\nexport function majorEq(version1: string, version2: string): boolean {\n  const { major } = versionDiffs(version1, version2);\n  return major === 0;\n}\n\nexport function minorEq(version1: string, version2: string): boolean {\n  const { minor } = versionDiffs(version1, version2);\n  return minor === 0;\n}\n\nexport function patchEq(version1: string, version2: string): boolean {\n  const { patch } = versionDiffs(version1, version2);\n  return patch === 0;\n}\n","import { getBuiltinVersions } from './getBuiltinVersions';\nimport { majorEq, minorEq, patchEq } from './semver';\n\nexport function checkFuelCoreVersionCompatibility(networkVersion: string) {\n  const { FUEL_CORE: supportedVersion } = getBuiltinVersions();\n\n  if (/^\\d+\\.\\d+\\.\\d+\\D+/m.test(networkVersion)) {\n    // eslint-disable-next-line no-console\n    console.warn(`You're running against an unreleased fuel-core version: ${networkVersion}. Things may work as expected, but it's not guaranteed. Please use a released version.      \nThis unreleased fuel-core build may include features and updates not yet supported by this version of the TS-SDK.`);\n  }\n\n  return {\n    supportedVersion,\n    isMajorSupported: majorEq(networkVersion, supportedVersion),\n    isMinorSupported: minorEq(networkVersion, supportedVersion),\n    isPatchSupported: patchEq(networkVersion, supportedVersion),\n  };\n}\n","/*\n  1) Variables\n  ------------\n    `FUELS` — comes from `/packages/fuels/package.json`\n    `FUEL_CORE` — comes from `/packages/fuel-core/VERSION`\n    `FORC` — comes from `/packages/forc/VERSION`\n\n  3) Pre Build\n  ------------\n    There's a `prebuild` script in:\n     - packages/versions/package.json\n\n    Before build, it will call this file:\n      - packages/versions/scripts/replaceVersions.ts\n\n    Which will replace static versions at:\n      - packages/versions/src/lib/getBuiltinVersions.ts\n\n    If no env variables are set, it uses the current versions\n    from the original locations mentioned in the 1st step.\n\n  3)  CI\n  ------------\n    As part of the CI release (1) routine, the changes made\n    to the versions package by the `prebuild` routine will\n    be committed by the same script (2) that handles the\n    docs versioning.\n\n      - (1) <repoRoot>/.github/workflows/release.yaml\n      - (2) <repoRoot>/changeset-version-with-docs.ts\n\n  4) Build\n  ------------\n    By the time we get to the `build` step, everything is in\n    place already and ready to be built and released.\n*/\n\nimport { getBuiltinVersions } from './lib/getBuiltinVersions';\n\nexport const versions = getBuiltinVersions();\n\nexport * from './lib/checkFuelCoreVersionCompatibility';\n","/**\n * Represents the different error codes thrown by the SDK\n */\nexport enum ErrorCode {\n  // abi\n  NO_ABIS_FOUND = 'no-abis-found',\n  ABI_TYPES_AND_VALUES_MISMATCH = 'abi-types-and-values-mismatch',\n  ABI_MAIN_METHOD_MISSING = 'abi-main-method-missing',\n  INVALID_COMPONENT = 'invalid-component',\n  FRAGMENT_NOT_FOUND = 'fragment-not-found',\n  CONFIGURABLE_NOT_FOUND = 'configurable-not-found',\n  TYPE_NOT_FOUND = 'type-not-found',\n  TYPE_NOT_SUPPORTED = 'type-not-supported',\n  INVALID_DECODE_VALUE = 'invalid-decode-value',\n  JSON_ABI_ERROR = 'json-abi-error',\n  TYPE_ID_NOT_FOUND = 'type-id-not-found',\n  BIN_FILE_NOT_FOUND = 'bin-file-not-found',\n  CODER_NOT_FOUND = 'coder-not-found',\n  INVALID_DATA = 'invalid-data',\n  FUNCTION_NOT_FOUND = 'function-not-found',\n  UNSUPPORTED_ENCODING_VERSION = 'unsupported-encoding-version',\n\n  // address\n  INVALID_BECH32_ADDRESS = 'invalid-bech32-address',\n  INVALID_EVM_ADDRESS = 'invalid-evm-address',\n  INVALID_B256_ADDRESS = 'invalid-b256-address',\n\n  // provider\n  INVALID_URL = 'invalid-url',\n  CHAIN_INFO_CACHE_EMPTY = 'chain-info-cache-empty',\n  NODE_INFO_CACHE_EMPTY = 'node-info-cache-empty',\n  MISSING_PROVIDER = 'missing-provider',\n  INVALID_PROVIDER = 'invalid-provider',\n  CONNECTION_REFUSED = 'connection-refused',\n\n  // wallet\n  INVALID_PUBLIC_KEY = 'invalid-public-key',\n  INSUFFICIENT_BALANCE = 'insufficient-balance',\n  WALLET_MANAGER_ERROR = 'wallet-manager-error',\n  HD_WALLET_ERROR = 'hd-wallet-error',\n  MISSING_CONNECTOR = 'missing-connector',\n\n  // errors\n  PARSE_FAILED = 'parse-failed',\n  ENCODE_ERROR = 'encode-error',\n  DECODE_ERROR = 'decode-error',\n  INVALID_CREDENTIALS = 'invalid-credentials',\n  ENV_DEPENDENCY_MISSING = 'env-dependency-missing',\n  INVALID_TTL = 'invalid-ttl',\n  INVALID_INPUT_PARAMETERS = 'invalid-input-parameters',\n  NOT_IMPLEMENTED = 'not-implemented',\n  NOT_SUPPORTED = 'not-supported',\n  CONVERTING_FAILED = 'converting-error',\n  ELEMENT_NOT_FOUND = 'element-not-found',\n  MISSING_REQUIRED_PARAMETER = 'missing-required-parameter',\n  INVALID_REQUEST = 'invalid-request',\n  UNEXPECTED_HEX_VALUE = 'unexpected-hex-value',\n  INVALID_TRANSFER_AMOUNT = 'invalid-transfer-amount',\n\n  // transaction\n  GAS_PRICE_TOO_LOW = 'gas-price-too-low',\n  GAS_LIMIT_TOO_LOW = 'gas-limit-too-low',\n  TRANSACTION_NOT_FOUND = 'transaction-not-found',\n  TRANSACTION_FAILED = 'transaction-failed',\n  INVALID_CONFIGURABLE_CONSTANTS = 'invalid-configurable-constants',\n  INVALID_TRANSACTION_INPUT = 'invalid-transaction-input',\n  INVALID_TRANSACTION_OUTPUT = 'invalid-transaction-output',\n  INVALID_TRANSACTION_STATUS = 'invalid-transaction-status',\n  INVALID_TRANSACTION_TYPE = 'invalid-transaction-type',\n  TRANSACTION_ERROR = 'transaction-error',\n  INVALID_POLICY_TYPE = 'invalid-policy-type',\n  DUPLICATED_POLICY = 'duplicated-policy',\n  TRANSACTION_SQUEEZED_OUT = 'transaction-squeezed-out',\n\n  // receipt\n  INVALID_RECEIPT_TYPE = 'invalid-receipt-type',\n\n  // mnemonic\n  INVALID_WORD_LIST = 'invalid-word-list',\n  INVALID_MNEMONIC = 'invalid-mnemonic',\n  INVALID_ENTROPY = 'invalid-entropy',\n  INVALID_SEED = 'invalid-seed',\n  INVALID_CHECKSUM = 'invalid-checksum',\n\n  // wallet / account\n  INVALID_PASSWORD = 'invalid-password',\n  ACCOUNT_REQUIRED = 'account-required',\n  UNLOCKED_WALLET_REQUIRED = 'unlocked-wallet-required',\n\n  // chain\n  LATEST_BLOCK_UNAVAILABLE = 'latest-block-unavailable',\n  ERROR_BUILDING_BLOCK_EXPLORER_URL = 'error-building-block-explorer-url',\n  UNSUPPORTED_FUEL_CLIENT_VERSION = 'unsupported-fuel-client-version',\n\n  // docs\n  VITEPRESS_PLUGIN_ERROR = 'vitepress-plugin-error',\n\n  // contract\n  INVALID_MULTICALL = 'invalid-multicall',\n\n  // script\n  SCRIPT_REVERTED = 'script-reverted',\n  SCRIPT_RETURN_INVALID_TYPE = 'script-return-invalid-type',\n\n  // graphql\n  STREAM_PARSING_ERROR = 'stream-parsing-error',\n\n  // coder\n  // ...\n}\n","import { versions } from '@fuel-ts/versions';\n\nimport { ErrorCode } from './error-codes';\n\nexport class FuelError extends Error {\n  static readonly CODES = ErrorCode;\n  readonly VERSIONS = versions;\n\n  static parse(e: unknown) {\n    const error = e as FuelError;\n\n    if (error.code === undefined) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        \"Failed to parse the error object. The required 'code' property is missing.\"\n      );\n    }\n\n    const enumValues = Object.values(ErrorCode);\n    const codeIsKnown = enumValues.includes(error.code);\n\n    if (!codeIsKnown) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Unknown error code: ${error.code}. Accepted codes: ${enumValues.join(', ')}.`\n      );\n    }\n\n    return new FuelError(error.code, error.message);\n  }\n\n  code: ErrorCode;\n\n  constructor(code: ErrorCode, message: string) {\n    super(message);\n    this.code = code;\n    this.name = 'FuelError';\n  }\n\n  toObject() {\n    const { code, name, message, VERSIONS } = this;\n    return { code, name, message, VERSIONS };\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { readFileSync, writeFileSync } from 'fs';\nimport { globSync } from 'glob';\nimport mkdirp from 'mkdirp';\nimport { basename } from 'path';\nimport rimraf from 'rimraf';\n\nimport { AbiTypeGen } from './AbiTypeGen';\nimport type { ProgramTypeEnum } from './types/enums/ProgramTypeEnum';\nimport type { IFile } from './types/interfaces/IFile';\nimport { collectBinFilepaths } from './utils/collectBinFilePaths';\nimport { collectStorageSlotsFilepaths } from './utils/collectStorageSlotsFilePaths';\n\nexport interface IGenerateFilesParams {\n  cwd: string;\n  filepaths?: string[];\n  inputs?: string[];\n  output: string;\n  silent?: boolean;\n  programType: ProgramTypeEnum;\n}\n\nexport function runTypegen(params: IGenerateFilesParams) {\n  const { cwd, inputs, output, silent, programType, filepaths: inputFilepaths } = params;\n\n  const cwdBasename = basename(cwd);\n\n  function log(...args: unknown[]) {\n    if (!silent) {\n      process.stdout.write(`${args.join(' ')}\\n`);\n    }\n  }\n\n  /*\n    Assembling files array and expanding globals if needed\n  */\n  let filepaths: string[] = [];\n\n  if (!inputFilepaths?.length && inputs?.length) {\n    filepaths = inputs.flatMap((i) => globSync(i, { cwd }));\n  } else if (inputFilepaths?.length) {\n    filepaths = inputFilepaths;\n  } else {\n    throw new FuelError(\n      ErrorCode.MISSING_REQUIRED_PARAMETER,\n      `At least one parameter should be supplied: 'input' or 'filepaths'.`\n    );\n  }\n\n  /*\n    Assembling file paths x contents\n  */\n  const abiFiles = filepaths.map((filepath) => {\n    const abi: IFile = {\n      path: filepath,\n      contents: readFileSync(filepath, 'utf-8'),\n    };\n    return abi;\n  });\n\n  if (!abiFiles.length) {\n    throw new FuelError(ErrorCode.NO_ABIS_FOUND, `no ABI found at '${inputs}'`);\n  }\n\n  const binFiles = collectBinFilepaths({ filepaths, programType });\n\n  const storageSlotsFiles = collectStorageSlotsFilepaths({ filepaths, programType });\n\n  /*\n    Starting the engine\n  */\n  const abiTypeGen = new AbiTypeGen({\n    outputDir: output,\n    abiFiles,\n    binFiles,\n    storageSlotsFiles,\n    programType,\n  });\n\n  /*\n    Generating files\n  */\n  log('Generating files..\\n');\n\n  mkdirp.sync(`${output}/factories`);\n\n  abiTypeGen.files.forEach((file) => {\n    rimraf.sync(file.path);\n    writeFileSync(file.path, file.contents);\n    const trimPathRegex = new RegExp(`^.+${cwdBasename}/`, 'm');\n    log(` - ${file.path.replace(trimPathRegex, '')}`);\n  });\n\n  log('\\nDone.⚡');\n}\n","import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (!matched) continue\n        globParts[i] = matched\n        globParts[j] = []\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice( pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    return fastTest ? Object.assign(re, { test: fastTest }) : re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n","const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n","// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n","import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n","// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n","import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n","/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\ntype PosInt = number & { [TYPE]: 'Positive Integer' }\ntype Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\ntype UintArray = Uint8Array | Uint16Array | Uint32Array\ntype NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\n\ntype StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\ntype DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   */\n  export type DisposeReason = 'evict' | 'set' | 'delete'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Status object that may be passed to {@link LRUCache#fetch},\n   * {@link LRUCache#get}, {@link LRUCache#set}, and {@link LRUCache#has}.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no fetchMethod, so {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link OptionsBase.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed\n     * by default, and MAY live in the cache long after they have expired.\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * Must be an integer number of ms. If set to 0, this indicates \"no TTL\"\n     *\n     * @default 0\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     * Note that this may significantly degrade performance,\n     * especially if the cache is storing a large number of items.\n     * It is almost always best to just leave the stale items in\n     * the cache, and let them fall out as new items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * @default false\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#get}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#has}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the cache.\n     * This can be handy if you want to close file descriptors or do other\n     * cleanup tasks when items are no longer accessible. Called with `key,\n     * value`.  It's called before actually removing the item from the\n     * internal cache, so it is *NOT* safe to re-add them.\n     *\n     * Use {@link OptionsBase.disposeAfter} if you wish to dispose items after\n     * they have been full removed, when it is safe to add them back to the\n     * cache.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when\n     * setting a new value for an existing key (ie, when updating a value\n     * rather than inserting a new value).  Note that the TTL value is\n     * _always_ set (if provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * If you wish to track item size, you must provide a maxSize\n     * note that we still will only keep up to max *actual items*,\n     * if max is set, so size tracking may cause fewer than max items\n     * to be stored.  At the extreme, a single item of maxSize size\n     * will cause everything else in the cache to be dropped when it\n     * is added.  Use with caution!\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod}, then it will not be stored in the\n     * cache.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the\n     * {@link LRUCache#fetch} fails, not any other times.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches an `'abort'`\n     * event, whether user-triggered, or due to internal cache behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls are not\n     * immediately resolved or rejected when they are aborted, and instead\n     * take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump}\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> {\n  // properties coming in from the options of these, only max and maxSize\n  // really *need* to be protected. The rest can be modified, as they just\n  // set defaults for various methods.\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the remaining TTL time for a given entry key\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.delete(this.#keyList[index] as K)\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (ttl === 0 || start === 0) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      return (\n        ttls[index] !== 0 &&\n        starts[index] !== 0 &&\n        (cachedNow || getNow()) - starts[index] > ttls[index]\n      )\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index]\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - sizes[index]\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index]\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to Array.find().  fn is called as fn(value, key, cache).\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from\n   * most recently used to least recently used.  fn is called as\n   * fn(value, key, cache).  Does not update age or recenty of use.\n   * Does not iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.delete(this.#keyList[i] as K)\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to cache.load()\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - this.#starts[i]\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   * Note that the shape of the resulting cache may be different if the\n   * same options are not used in both caches.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.delete(k)\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index !== undefined &&\n      (allowStale || !this.#isStale(index))\n    ) {\n      const v = this.#valList[index]\n      // either stale and allowed, or forcing a refresh of non-stale value\n      return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n    }\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   */\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.clear()\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, 'delete')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, 'delete'])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            this.#next[this.#prev[index]] = this.#next[index]\n            this.#prev[this.#next[index]] = this.#prev[index]\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, 'delete')\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, 'delete'])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n","import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'path'\n\nimport { fileURLToPath } from 'url'\n\nimport * as actualFS from 'fs'\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\nimport { lstat, readdir, readlink, realpath } from 'fs/promises'\n\nimport type { Dirent, Stats } from 'fs'\nimport { Minipass } from 'minipass'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true }\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS\n    ? defaultFS\n    : {\n        ...defaultFS,\n        ...fsOption,\n        promises: {\n          ...defaultFS.promises,\n          ...(fsOption.promises || {}),\n        },\n      }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile()\n    ? IFREG\n    : s.isDirectory()\n    ? IFDIR\n    : s.isSymbolicLink()\n    ? IFLNK\n    : s.isCharacterDevice()\n    ? IFCHR\n    : s.isBlockDevice()\n    ? IFBLK\n    : s.isSocket()\n    ? IFSOCK\n    : s.isFIFO()\n    ? IFIFO\n    : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['path'] refers to the path of the directory\n   * that was passed to readdir.  So, somewhat counterintuitively, this\n   * property refers to the *parent* path, not the path object itself.\n   * For root entries, it's the path to the entry itself.\n   */\n  get path(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase = rootPath\n      ? this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name = this.nocase\n      ? normalizeNocase(pathPart)\n      : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath = this.#fullpath\n      ? this.#fullpath + s + pathPart\n      : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return this.isUnknown()\n      ? 'Unknown'\n      : this.isDirectory()\n      ? 'Directory'\n      : this.isFile()\n      ? 'File'\n      : this.isSymbolicLink()\n      ? 'SymbolicLink'\n      : this.isFIFO()\n      ? 'FIFO'\n      : this.isCharacterDevice()\n      ? 'CharacterDevice'\n      : this.isBlockDevice()\n      ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket()\n      ? 'Socket'\n      : 'Unknown'\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase\n      ? this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      children[p].#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name = this.nocase\n        ? normalizeNocase(e.name)\n        : normalize(e.name)\n      if (name !== pchild.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[]\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res)\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {}\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor'\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next()\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {}\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r\n                    )\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true)\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32'\n    ? PathScurryWin32\n    : process.platform === 'darwin'\n    ? PathScurryDarwin\n    : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n","'use strict'\nconst proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport EE from 'events'\nimport Stream from 'stream'\nimport stringdecoder from 'string_decoder'\nconst SD = stringdecoder.StringDecoder\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\n\nconst defer = fn => Promise.resolve().then(fn)\n\n// TODO remove when Node v8 support drops\nconst doIter = global._MP_NO_ITERATOR_SYMBOLS_ !== '1'\nconst ASYNCITERATOR =\n  (doIter && Symbol.asyncIterator) || Symbol('asyncIterator not implemented')\nconst ITERATOR =\n  (doIter && Symbol.iterator) || Symbol('iterator not implemented')\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\nconst isEndish = ev => ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBuffer = b =>\n  b instanceof ArrayBuffer ||\n  (typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = b => !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\nclass Pipe {\n  constructor(src, dest, opts) {\n    this.src = src\n    this.dest = dest\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // istanbul ignore next - only here for the prototype\n  proxyErrors() {}\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\nclass PipeProxyErrors extends Pipe {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(src, dest, opts) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport class Minipass extends Stream {\n  constructor(options) {\n    super()\n    this[FLOWING] = false\n    // whether we're explicitly paused\n    this[PAUSED] = false\n    this[PIPES] = []\n    this[BUFFER] = []\n    this[OBJECTMODE] = (options && options.objectMode) || false\n    if (this[OBJECTMODE]) this[ENCODING] = null\n    else this[ENCODING] = (options && options.encoding) || null\n    if (this[ENCODING] === 'buffer') this[ENCODING] = null\n    this[ASYNC] = (options && !!options.async) || false\n    this[DECODER] = this[ENCODING] ? new SD(this[ENCODING]) : null\n    this[EOF] = false\n    this[EMITTED_END] = false\n    this[EMITTING_END] = false\n    this[CLOSED] = false\n    this[EMITTED_ERROR] = null\n    this.writable = true\n    this.readable = true\n    this[BUFFERLENGTH] = 0\n    this[DESTROYED] = false\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n    this[SIGNAL] = options && options.signal\n    this[ABORTED] = false\n    if (this[SIGNAL]) {\n      this[SIGNAL].addEventListener('abort', () => this[ABORT]())\n      if (this[SIGNAL].aborted) {\n        this[ABORT]()\n      }\n    }\n  }\n\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  get encoding() {\n    return this[ENCODING]\n  }\n  set encoding(enc) {\n    if (this[OBJECTMODE]) throw new Error('cannot set encoding in objectMode')\n\n    if (\n      this[ENCODING] &&\n      enc !== this[ENCODING] &&\n      ((this[DECODER] && this[DECODER].lastNeed) || this[BUFFERLENGTH])\n    )\n      throw new Error('cannot change encoding')\n\n    if (this[ENCODING] !== enc) {\n      this[DECODER] = enc ? new SD(enc) : null\n      if (this[BUFFER].length)\n        this[BUFFER] = this[BUFFER].map(chunk => this[DECODER].write(chunk))\n    }\n\n    this[ENCODING] = enc\n  }\n\n  setEncoding(enc) {\n    this.encoding = enc\n  }\n\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n  set objectMode(om) {\n    this[OBJECTMODE] = this[OBJECTMODE] || !!om\n  }\n\n  get ['async']() {\n    return this[ASYNC]\n  }\n  set ['async'](a) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL].reason)\n    this.destroy(this[SIGNAL].reason)\n  }\n\n  get aborted() {\n    return this[ABORTED]\n  }\n  set aborted(_) {}\n\n  write(chunk, encoding, cb) {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') (cb = encoding), (encoding = 'utf8')\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : f => f()\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything else switches us into object mode\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk))\n        chunk = Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n      else if (isArrayBuffer(chunk)) chunk = Buffer.from(chunk)\n      else if (typeof chunk !== 'string')\n        // use the setter so we throw if we have encoding set\n        this.objectMode = true\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      /* istanbul ignore if - maybe impossible? */\n      if (this.flowing && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n      if (this.flowing) this.emit('data', chunk)\n      else this[BUFFERPUSH](chunk)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this.flowing\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!chunk.length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this.flowing\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER].lastNeed)\n    ) {\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING])\n      chunk = this[DECODER].write(chunk)\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this.flowing && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this.flowing) this.emit('data', chunk)\n    else this[BUFFERPUSH](chunk)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this.flowing\n  }\n\n  read(n) {\n    if (this[DESTROYED]) return null\n\n    if (this[BUFFERLENGTH] === 0 || n === 0 || n > this[BUFFERLENGTH]) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      if (this.encoding) this[BUFFER] = [this[BUFFER].join('')]\n      else this[BUFFER] = [Buffer.concat(this[BUFFER], this[BUFFERLENGTH])]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0])\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n, chunk) {\n    if (n === chunk.length || n === null) this[BUFFERSHIFT]()\n    else {\n      this[BUFFER][0] = chunk.slice(n)\n      chunk = chunk.slice(0, n)\n      this[BUFFERLENGTH] -= n\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  end(chunk, encoding, cb) {\n    if (typeof chunk === 'function') (cb = chunk), (chunk = null)\n    if (typeof encoding === 'function') (cb = encoding), (encoding = 'utf8')\n    if (chunk) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this.flowing || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  resume() {\n    return this[RESUME]()\n  }\n\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n  }\n\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += chunk.length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT]() {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else this[BUFFERLENGTH] -= this[BUFFER][0].length\n    return this[BUFFER].shift()\n  }\n\n  [FLUSH](noDrain) {\n    do {} while (this[FLUSHCHUNK](this[BUFFERSHIFT]()) && this[BUFFER].length)\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk) {\n    this.emit('data', chunk)\n    return this.flowing\n  }\n\n  pipe(dest, opts) {\n    if (this[DESTROYED]) return\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe(this, dest, opts)\n          : new PipeProxyErrors(this, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  unpipe(dest) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  addListener(ev, fn) {\n    return this.on(ev, fn)\n  }\n\n  on(ev, fn) {\n    const ret = super.on(ev, fn)\n    if (ev === 'data' && !this[PIPES].length && !this.flowing) this[RESUME]()\n    else if (ev === 'readable' && this[BUFFERLENGTH] !== 0)\n      super.emit('readable')\n    else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      if (this[ASYNC]) defer(() => fn.call(this, this[EMITTED_ERROR]))\n      else fn.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  emit(ev, data, ...extra) {\n    // error and close are only events allowed after calling destroy()\n    if (ev !== 'error' && ev !== 'close' && ev !== DESTROYED && this[DESTROYED])\n      return\n    else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? defer(() => this[EMITDATA](data))\n        : this[EMITDATA](data)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev, data, ...extra)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data) === false) this.pause()\n    }\n    const ret = super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return\n\n    this[EMITTED_END] = true\n    this.readable = false\n    if (this[ASYNC]) defer(() => this[EMITEND2]())\n    else this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data)\n        }\n        super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  // const all = await stream.collect()\n  collect() {\n    const buf = []\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE]) buf.dataLength += c.length\n    })\n    return p.then(() => buf)\n  }\n\n  // const data = await stream.concat()\n  concat() {\n    return this[OBJECTMODE]\n      ? Promise.reject(new Error('cannot concat in objectMode'))\n      : this.collect().then(buf =>\n          this[OBJECTMODE]\n            ? Promise.reject(new Error('cannot concat in objectMode'))\n            : this[ENCODING]\n            ? buf.join('')\n            : Buffer.concat(buf, buf.dataLength)\n        )\n  }\n\n  // stream.promise().then(() => done, er => emitted error)\n  promise() {\n    return new Promise((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  // for await (let chunk of stream)\n  [ASYNCITERATOR]() {\n    let stopped = false\n    const stop = () => {\n      this.pause()\n      stopped = true\n      return Promise.resolve({ done: true })\n    }\n    const next = () => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve = null\n      let reject = null\n      const onerr = er => {\n        this.removeListener('data', ondata)\n        this.removeListener('end', onend)\n        this.removeListener(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = value => {\n        this.removeListener('error', onerr)\n        this.removeListener('end', onend)\n        this.removeListener(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value: value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.removeListener('error', onerr)\n        this.removeListener('data', ondata)\n        this.removeListener(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [ASYNCITERATOR]() {\n        return this\n      },\n    }\n  }\n\n  // for (let chunk of stream)\n  [ITERATOR]() {\n    let stopped = false\n    const stop = () => {\n      this.pause()\n      this.removeListener(ERROR, stop)\n      this.removeListener(DESTROYED, stop)\n      this.removeListener('end', stop)\n      stopped = true\n      return { done: true }\n    }\n\n    const next = () => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { value }\n    }\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [ITERATOR]() {\n        return this\n      },\n    }\n  }\n\n  destroy(er) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    if (typeof this.close === 'function' && !this[CLOSED]) this.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  static isStream(s) {\n    return (\n      !!s &&\n      (s instanceof Minipass ||\n        s instanceof Stream ||\n        (s instanceof EE &&\n          // readable\n          (typeof s.pipe === 'function' ||\n            // writable\n            (typeof s.write === 'function' && typeof s.end === 'function'))))\n    )\n  }\n}\n\n\n","import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { fileURLToPath } from 'url'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? string\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? true\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? false\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as GlobOptions).allowWindowsEscape === false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32'\n          ? PathScurryWin32\n          : opts.platform === 'darwin'\n          ? PathScurryDarwin\n          : opts.platform\n          ? PathScurryPosix\n          : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []]\n    )\n    this.patterns = matchSet.map((set, i) => {\n      return new Pattern(set, globParts[i], 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n","// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[]\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index]\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0\n        ? this.isAbsolute()\n          ? this.#globList[0] + this.#globList.slice(1).join('/')\n          : this.#globList.join('/')\n        : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined\n      ? this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined\n      ? this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined\n      ? this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ? p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n","// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    const mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    for (const ign of ignored) {\n      const mm = new Minimatch(ign, mmopts)\n      for (let i = 0; i < mm.set.length; i++) {\n        const parsed = mm.set[i]\n        const globParts = mm.globParts[i]\n        const p = new Pattern(parsed, globParts, 0, platform)\n        const m = new Minimatch(p.globString(), mmopts)\n        const children = globParts[globParts.length - 1] === '**'\n        const absolute = p.isAbsolute()\n        if (absolute) this.absolute.push(m)\n        else this.relative.push(m)\n        if (children) {\n          if (absolute) this.absoluteChildren.push(m)\n          else this.relativeChildren.push(m)\n        }\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) true\n    }\n    return false\n  }\n}\n","// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache = hasWalkedCache\n      ? hasWalkedCache.copy()\n      : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined\n            ? this.opts.root\n            : root\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        // we can be reasonably sure that .. is a readable dir\n        if (c.isUnknown() && p !== '..') break\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must be final entry\n        if (!rest) {\n          const ifDir = p === '..' || p === '' || p === '.'\n          this.matches.add(t.resolve(p), absolute, ifDir)\n        } else {\n          this.subwalks.add(t, pattern)\n        }\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n","/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Path\n  : O extends GWOFileTypesFalse\n  ? string\n  : O extends GWOFileTypesUnset\n  ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Set<Path>\n  : O extends GWOFileTypesFalse\n  ? Set<string>\n  : O extends GWOFileTypesUnset\n  ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts\n): IgnoreLike =>\n  typeof ignore === 'string'\n    ? new Ignore([ignore], opts)\n    : Array.isArray(ignore)\n    ? new Ignore(ignore, opts)\n    : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    if (opts.ignore) {\n      this.#ignore = makeIgnore(opts.ignore, opts)\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? await e.lstat() : e, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return e &&\n      (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n      (!ifDir || e.canReaddir()) &&\n      (!this.opts.nodir || !e.isDirectory()) &&\n      !this.#ignored(e)\n      ? e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? e.lstatSync() : e, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep)\n          ? '.' + this.#sep\n          : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb)\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  matches: O extends GWOFileTypesTrue\n    ? Set<Path>\n    : O extends GWOFileTypesFalse\n    ? Set<string>\n    : O extends GWOFileTypesUnset\n    ? Set<string>\n    : Set<Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.matches = new Set() as Matches<O>\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Matches<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Matches<O> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  results: O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass({\n      signal: this.signal,\n      objectMode: true,\n    }) as MatchStream<O>\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n","import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {}\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n","import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\n/* c8 ignore start */\nexport { escape, unescape } from 'minimatch'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n/* c8 ignore stop */\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n","export const capitalizeString = (str: string) => {\n  if (!str.length) {\n    return str;\n  }\n  return str[0].toUpperCase() + str.slice(1);\n};\n","/**\n * Function to take a byte array and split into chunks of a given size\n *\n * @param bytes - The byte array to chunk\n * @param chunkSize - The size of each chunk\n * @returns An array of byte arrays of a specified size\n */\nexport const chunkAndPadBytes = (bytes: Uint8Array, chunkSize: number): Uint8Array[] => {\n  const chunks: Uint8Array[] = [];\n\n  for (let offset = 0; offset < bytes.length; offset += chunkSize) {\n    const chunk = new Uint8Array(chunkSize);\n    chunk.set(bytes.slice(offset, offset + chunkSize));\n    chunks.push(chunk);\n  }\n\n  const lastChunk = chunks[chunks.length - 1];\n  const remainingBytes = bytes.length % chunkSize;\n  const paddedChunkLength = remainingBytes + ((8 - (remainingBytes % 8)) % 8);\n  const newChunk = lastChunk.slice(0, paddedChunkLength);\n  chunks[chunks.length - 1] = newChunk;\n\n  return chunks;\n};\n","import { FuelError, ErrorCode } from '@fuel-ts/errors';\nimport type { BytesLike } from '@fuel-ts/interfaces';\n\n/**\n * Converts a bytes-like value to a `Uint8Array`.\n *\n * @param value - the value to convert to a Uint8Array\n * @returns the Uint8Array\n */\nexport const arrayify = (value: BytesLike): Uint8Array => {\n  // Return buffers as a new byte array\n  if (value instanceof Uint8Array) {\n    return new Uint8Array(value);\n  }\n\n  if (typeof value === 'string' && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n    const result = new Uint8Array((value.length - 2) / 2);\n    let offset = 2;\n    for (let i = 0; i < result.length; i++) {\n      result[i] = parseInt(value.substring(offset, offset + 2), 16);\n      offset += 2;\n    }\n    return result;\n  }\n\n  throw new FuelError(ErrorCode.PARSE_FAILED, 'invalid BytesLike value');\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { arrayify } from './arrayify';\n\n/**\n * Concatenates multiple Uint8Arrays into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concatBytes = (\n  arrays: ReadonlyArray<Uint8Array> | ReadonlyArray<number[]>\n): Uint8Array => {\n  const byteArrays = arrays.map((array) => {\n    if (array instanceof Uint8Array) {\n      return array;\n    }\n    return Uint8Array.from(array);\n  });\n\n  const totalSize = byteArrays.reduce((accum, item) => accum + item.length, 0);\n  const concatenated = new Uint8Array(totalSize);\n\n  byteArrays.reduce((offset, object) => {\n    concatenated.set(object, offset);\n    return offset + object.length;\n  }, 0);\n\n  return concatenated;\n};\n\n/**\n * Concatenates multiple BytesLike into a single Uint8Array.\n *\n * @param arrays - The arrays to concatenate.\n * @returns - The concatenated array.\n */\nexport const concat = (arrays: ReadonlyArray<BytesLike>): Uint8Array => {\n  const bytes = arrays.map((v) => arrayify(v));\n\n  return concatBytes(bytes);\n};\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { arrayify } from './arrayify';\n\nconst HexCharacters: string = '0123456789abcdef';\n\n/**\n *  Returns a hex representation of the inputted bytes.\n */\nexport function hexlify(data: BytesLike): string {\n  const bytes = arrayify(data);\n\n  let result = '0x';\n  for (let i = 0; i < bytes.length; i++) {\n    const v = bytes[i];\n    result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n  }\n  return result;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\n/**\n * Converts `some.string-value` into `SomeStringValue`.\n *\n * Examples:\n *  my-simple.test —— MySimpleTest\n *  myFile.ts —— MyFileTs\n *  my-abi.json —— MyAbiJson\n */\nexport const normalizeString = (str: string): string => {\n  const transformations: ((s: string) => string)[] = [\n    (s) => s.replace(/\\s+/g, '-'), // spaces to -\n    (s) => s.replace(/\\./g, '-'), // dots to -\n    (s) => s.replace(/_/g, '-'), // underscore to -\n    (s) => s.replace(/-[a-z]/g, (match) => match.slice(-1).toUpperCase()), // delete '-' and capitalize the letter after them\n    (s) => s.replace(/-/g, ''), // delete any '-' left\n    (s) => s.replace(/^\\d+/, ''), // removes leading digits\n    (s) => s[0].toUpperCase() + s.slice(1), // capitalize first letter\n  ];\n\n  const output = transformations.reduce((s, t) => t(s), str);\n\n  if (output === '') {\n    const errMsg = `The provided string '${str}' results in an empty output after`.concat(\n      ` normalization, therefore, it can't normalize string.`\n    );\n    throw new FuelError(ErrorCode.PARSE_FAILED, errMsg);\n  }\n\n  return output;\n};\n","/**\n * Tai64 timestamp.\n */\ntype Tai64Timestamp = string;\n\n/**\n * This constant is used to calculate the offset between the Unix epoch and the TAI64 epoch.\n * It allows for a **rough** conversion between the two time formats.\n *\n * // Value expires on:  28 June 2024\n * {@link https://data.iana.org/time-zones/data/leap-seconds.list}\n * {@link https://github.com/hl2/tai64/blob/master/src/leapSeconds.ts}\n */\nconst TAI64_LEAP_SECONDS: number = 37;\n\n/**\n * Tai64 (Temps Atomique International) is a time format\n *\n * The offset between the Unix epoch and the TAI64 epoch.\n * The TAI64 epoch is 2^62 nanoseconds after the Unix epoch (+ the offset of \"leap seconds\" relevant to the date).\n *\n * {@link https://cr.yp.to/libtai/tai64.html}\n * {@link https://cr.yp.to/proto/tai64.txt}\n */\nconst TAI64_UNIX_OFFSET: bigint = BigInt(2 ** 62) + BigInt(TAI64_LEAP_SECONDS);\n\n/**\n * Converts milliseconds to seconds and vice versa.\n *\n * @param ms - milliseconds to convert\n * @returns seconds\n */\nconst msToSeconds = (ms: number): number => Math.floor(ms / 1000);\n\n/**\n * Converts seconds to milliseconds and vice versa.\n *\n * @param seconds - seconds to convert\n * @returns milliseconds\n */\nconst secondsToMs = (seconds: number): number => seconds * 1000;\n\n/**\n * Converts Tai64 (seconds) time units to UNIX (seconds) time units.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix seconds timestamp\n */\nconst tai64ToUnixSeconds = (tai64: Tai64Timestamp): number =>\n  Number(BigInt(tai64) - TAI64_UNIX_OFFSET);\n\n/**\n * Converts Unix (seconds) to Tai64 (seconds).\n *\n * @param unixSeconds - unix seconds timestamp\n * @returns Tai64 timestamp\n */\nconst unixSecondsToTai64 = (unixSeconds: number): string =>\n  String(BigInt(unixSeconds) + TAI64_UNIX_OFFSET);\n\n/**\n * Helper to convert Tai64 (seconds) time units to UNIX (milliseconds) time units and vice.\n *\n * @param tai64 - Tai64 timestamp\n * @returns Unix milliseconds timestamp\n */\nconst tai64ToUnixMilliseconds = (tai64: Tai64Timestamp): number =>\n  secondsToMs(tai64ToUnixSeconds(tai64));\n\n/**\n * This class is used to represent a date and time in the Tai64 format.\n *\n * ```typescript\n * import { DateTime } from 'fuels';\n *\n * // Constants\n * const tai64 = '4611686020108779340';\n * const unixMilliseconds = 1681391398000;\n * const seconds = 1681391398;\n *\n * // Instantiation\n * let date: DateTime = DateTime.now();\n * date = DateTime.fromTai64(tai64);\n * date = DateTime.fromUnixMilliseconds(unixMilliseconds);\n * date = DateTime.fromUnixSeconds(seconds);\n *\n * // Utility functions\n * tai64.toTai64() // '4611686020108779340'\n * milliseconds.toUnixMilliseconds() // 1681391398000\n * seconds.toUnixSeconds() // 1681391398\n *\n * // All date methods are available\n * const now: Date = DateTime.now();\n * now.toISOString(); // '2023-04-13T13:09:58.000Z'\n * now.getTime(); // 1681391398000\n * ```\n */\nexport class DateTime extends Date implements Date {\n  static TAI64_NULL: Tai64Timestamp = '';\n\n  /**\n   * Generates a new DateTime instance from a Tai64 timestamp.\n   *\n   * @param tai64 - Tai64 timestamp\n   * @returns a new DateTime instance\n   */\n  static fromTai64(tai64: Tai64Timestamp): DateTime {\n    return new DateTime(tai64ToUnixMilliseconds(tai64));\n  }\n\n  /**\n   * @param unixMilliseconds - unix milliseconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixMilliseconds(unixMilliseconds: number): DateTime {\n    return new DateTime(unixMilliseconds);\n  }\n\n  /**\n   * @param unixSeconds - unix seconds timestamp\n   * @returns a new DateTime instance\n   */\n  static fromUnixSeconds(unixSeconds: number): DateTime {\n    return new DateTime(secondsToMs(unixSeconds));\n  }\n\n  /**\n   * Hide the constructor to prevent direct instantiation.\n   */\n  private constructor(date: Date | number | string) {\n    super(date);\n  }\n\n  /**\n   * Returns the Tai64 timestamp.\n   *\n   * @returns the Tai64 timestamp\n   */\n  toTai64(): Tai64Timestamp {\n    return unixSecondsToTai64(this.toUnixSeconds());\n  }\n\n  /**\n   * @returns the unix milliseconds timestamp\n   */\n  toUnixMilliseconds(): number {\n    return this.getTime();\n  }\n\n  /**\n   * @returns the unix seconds timestamp\n   */\n  toUnixSeconds(): number {\n    return msToSeconds(this.getTime());\n  }\n}\n","{\n  \"chain_name\": \"local_testnet\",\n  \"block_gas_limit\": 5000000000,\n  \"initial_state\": {\n    \"coins\": [\n      {\n        \"owner\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x09c0b2d1a486c439a87bcba6b46a7a1a23f3897cc83a94521a96da5c23bc58db\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x5d99ee966b42cd8fc7bdd1364b389153a9e78b42b7d4a691470674e817888d4e\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbdaad6a89e073e177895b3e5a9ccd15806749eda134a6438dae32fc5b6601f3f\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x95a7aa6cc32743f8706c40ef49a7423b47da763bb4bbc055b1f07254dc729036\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xcee104acd38b940c8f1c62c6d7ea00a0ad2241d6dee0509a4bf27297508870d3\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x7e3626e306588eba79cafab73f0709e55ab8f4bdfe8c8b75034a430fc56ece89\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x1c31df52b6df56407dd95f83082e8beb9cfc9532ac111d5bd8491651d95ba775\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x09dd7a49174d6fcc9f4c6f7942c18060a935ddd03ee69b594189b8c3581276ea\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x86604282dc604481b809845be49667607c470644f6822fc01eb0d22f167e08cf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbca334a06d19db5041c78fe2f465b07be5bec828f38b7796b2877e7d1542c950\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xbd9a1dc8d3ec3521c43f6c2c01611b4d0204c7610204ff0178488c8738a30bd2\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0xb32197cf75efe05bf453c26178139f09b391582065549c1422bc92555ecffb64\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x3b24509ed4ab3c7959f5c9391c1445c59290cdb5f13d6f780922f376b7029f30\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x77c6f40b7da70d885f68efaad7c661327482a63ea10dcb4271de819438254ae1\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x6a2c4691c547c43924650dbd30620b184b5fe3fb6dbe5c4446110b08f6f405bf\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0101010101010101010101010101010101010101010101010101010101010101\"\n      },\n      {\n        \"owner\": \"0x49075a7538e2c88ebe1926ce4d898198a2a4e790d14512943a9864bc536b3c82\",\n        \"amount\": \"0xFFFFFFFFFFFFFFFF\",\n        \"asset_id\": \"0x0202020202020202020202020202020202020202020202020202020202020202\"\n      }\n    ],\n    \"messages\": [\n      {\n        \"sender\": \"0xc43454aa38dd91f88109a4b7aef5efb96ce34e3f24992fe0f81d233ca686f80f\",\n        \"recipient\": \"0x69a2b736b60159b43bb8a4f98c0589f6da5fa3a3d101e8e269c499eb942753ba\",\n        \"nonce\": \"0101010101010101010101010101010101010101010101010101010101010101\",\n        \"amount\": \"0x000000000000FFFF\",\n        \"data\": \"\",\n        \"da_height\": \"0x00\"\n      },\n      {\n        \"sender\": \"0x69a2b736b60159b43bb8a4f98c0589f6da5fa3a3d101e8e269c499eb942753ba\",\n        \"recipient\": \"0xc43454aa38dd91f88109a4b7aef5efb96ce34e3f24992fe0f81d233ca686f80f\",\n        \"nonce\": \"0e1ef2963832068b0e1ef2963832068b0e1ef2963832068b0e1ef2963832068b\",\n        \"amount\": \"0xb04f3c08f59b309e\",\n        \"data\": \"\",\n        \"da_height\": \"0x00\"\n      }\n    ]\n  },\n  \"consensus_parameters\": {\n    \"tx_params\": {\n      \"max_inputs\": 255,\n      \"max_outputs\": 255,\n      \"max_witnesses\": 255,\n      \"max_gas_per_tx\": 10000000,\n      \"max_size\": 17825792\n    },\n    \"predicate_params\": {\n      \"max_predicate_length\": 1048576,\n      \"max_predicate_data_length\": 1048576,\n      \"max_gas_per_predicate\": 10000000,\n      \"max_message_data_length\": 1048576\n    },\n    \"script_params\": {\n      \"max_script_length\": 1048576,\n      \"max_script_data_length\": 1048576\n    },\n    \"contract_params\": {\n      \"contract_max_size\": 16777216,\n      \"max_storage_slots\": 255\n    },\n    \"fee_params\": {\n      \"gas_price_factor\": 92,\n      \"gas_per_byte\": 4\n    }\n  },\n  \"gas_costs\": {\n    \"add\": 1,\n    \"addi\": 1,\n    \"aloc\": 1,\n    \"and\": 1,\n    \"andi\": 1,\n    \"bal\": 13,\n    \"bhei\": 1,\n    \"bhsh\": 1,\n    \"burn\": 132,\n    \"cb\": 1,\n    \"cfei\": 1,\n    \"cfsi\": 1,\n    \"croo\": 16,\n    \"div\": 1,\n    \"divi\": 1,\n    \"ecr1\": 3000,\n    \"eck1\": 951,\n    \"ed19\": 3000,\n    \"eq\": 1,\n    \"exp\": 1,\n    \"expi\": 1,\n    \"flag\": 1,\n    \"gm\": 1,\n    \"gt\": 1,\n    \"gtf\": 1,\n    \"ji\": 1,\n    \"jmp\": 1,\n    \"jne\": 1,\n    \"jnei\": 1,\n    \"jnzi\": 1,\n    \"jmpf\": 1,\n    \"jmpb\": 1,\n    \"jnzf\": 1,\n    \"jnzb\": 1,\n    \"jnef\": 1,\n    \"jneb\": 1,\n    \"lb\": 1,\n    \"log\": 9,\n    \"lt\": 1,\n    \"lw\": 1,\n    \"mint\": 135,\n    \"mlog\": 1,\n    \"modOp\": 1,\n    \"modi\": 1,\n    \"moveOp\": 1,\n    \"movi\": 1,\n    \"mroo\": 2,\n    \"mul\": 1,\n    \"muli\": 1,\n    \"mldv\": 1,\n    \"noop\": 1,\n    \"not\": 1,\n    \"or\": 1,\n    \"ori\": 1,\n    \"poph\": 2,\n    \"popl\": 2,\n    \"pshh\": 2,\n    \"pshl\": 2,\n    \"ret\": 13,\n    \"rvrt\": 13,\n    \"sb\": 1,\n    \"sll\": 1,\n    \"slli\": 1,\n    \"srl\": 1,\n    \"srli\": 1,\n    \"srw\": 12,\n    \"sub\": 1,\n    \"subi\": 1,\n    \"sw\": 1,\n    \"sww\": 67,\n    \"time\": 1,\n    \"tr\": 105,\n    \"tro\": 60,\n    \"wdcm\": 1,\n    \"wqcm\": 1,\n    \"wdop\": 1,\n    \"wqop\": 1,\n    \"wdml\": 1,\n    \"wqml\": 1,\n    \"wddv\": 1,\n    \"wqdv\": 2,\n    \"wdmd\": 3,\n    \"wqmd\": 4,\n    \"wdam\": 2,\n    \"wqam\": 3,\n    \"wdmm\": 3,\n    \"wqmm\": 3,\n    \"xor\": 1,\n    \"xori\": 1,\n    \"call\": {\n      \"LightOperation\": {\n        \"base\": 144,\n        \"units_per_gas\": 214\n      }\n    },\n    \"ccp\": {\n      \"LightOperation\": {\n        \"base\": 15,\n        \"units_per_gas\": 103\n      }\n    },\n    \"csiz\": {\n      \"LightOperation\": {\n        \"base\": 17,\n        \"units_per_gas\": 790\n      }\n    },\n    \"k256\": {\n      \"LightOperation\": {\n        \"base\": 11,\n        \"units_per_gas\": 214\n      }\n    },\n    \"ldc\": {\n      \"LightOperation\": {\n        \"base\": 15,\n        \"units_per_gas\": 272\n      }\n    },\n    \"logd\": {\n      \"LightOperation\": {\n        \"base\": 26,\n        \"units_per_gas\": 64\n      }\n    },\n    \"mcl\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 3333\n      }\n    },\n    \"mcli\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 3333\n      }\n    },\n    \"mcp\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 2000\n      }\n    },\n    \"mcpi\": {\n      \"LightOperation\": {\n        \"base\": 3,\n        \"units_per_gas\": 2000\n      }\n    },\n    \"meq\": {\n      \"LightOperation\": {\n        \"base\": 1,\n        \"units_per_gas\": 2500\n      }\n    },\n    \"retd\": {\n      \"LightOperation\": {\n        \"base\": 29,\n        \"units_per_gas\": 62\n      }\n    },\n    \"s256\": {\n      \"LightOperation\": {\n        \"base\": 2,\n        \"units_per_gas\": 214\n      }\n    },\n    \"scwq\": {\n      \"LightOperation\": {\n        \"base\": 13,\n        \"units_per_gas\": 5\n      }\n    },\n    \"smo\": {\n      \"LightOperation\": {\n        \"base\": 209,\n        \"units_per_gas\": 55\n      }\n    },\n    \"srwq\": {\n      \"LightOperation\": {\n        \"base\": 47,\n        \"units_per_gas\": 5\n      }\n    },\n    \"swwq\": {\n      \"LightOperation\": {\n        \"base\": 44,\n        \"units_per_gas\": 5\n      }\n    },\n    \"contract_root\": {\n      \"LightOperation\": {\n        \"base\": 75,\n        \"units_per_gas\": 1\n      }\n    },\n    \"state_root\": {\n      \"LightOperation\": {\n        \"base\": 412,\n        \"units_per_gas\": 1\n      }\n    },\n    \"vm_initialization\": {\n      \"HeavyOperation\": {\n        \"base\": 2000,\n        \"gas_per_unit\": 0\n      }\n    },\n    \"new_storage_per_byte\": 1\n  },\n  \"consensus\": {\n    \"PoA\": {\n      \"signing_key\": \"0x94ffcc53b892684acefaebc8a3d4a595e528a8cf664eeb3ef36f1020b0809d0d\"\n    }\n  }\n}\n","import chainConfigJson from './chainConfig.json';\n\nexport const defaultChainConfig = chainConfigJson;\n\nexport const defaultConsensusKey =\n  '0xa449b1ffee0e2205fa924c6740cc48b3b473aa28587df6dab12abc245d1f5298';\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { IType } from '../types/interfaces/IType';\n\nexport function findType(params: { types: IType[]; typeId: number }) {\n  const { types, typeId } = params;\n\n  const foundType = types.find(({ rawAbiType: { typeId: tid } }) => tid === typeId);\n\n  if (!foundType) {\n    throw new FuelError(ErrorCode.TYPE_ID_NOT_FOUND, `Type ID not found: ${typeId}.`);\n  }\n\n  // ensure type attributes is always parsed\n  foundType.parseComponentsAttributes({ types });\n\n  return foundType;\n}\n","import type { IConfigurable } from '../../types/interfaces/IConfigurable';\nimport type { IRawAbiConfigurable } from '../../types/interfaces/IRawAbiConfigurable';\nimport type { IType } from '../../types/interfaces/IType';\nimport { findType } from '../../utils/findType';\n\nexport class Configurable implements IConfigurable {\n  public name: string;\n  public type: IType;\n  public rawAbiConfigurable: IRawAbiConfigurable;\n\n  constructor(params: { types: IType[]; rawAbiConfigurable: IRawAbiConfigurable }) {\n    const { types, rawAbiConfigurable } = params;\n\n    this.name = rawAbiConfigurable.name;\n    this.rawAbiConfigurable = rawAbiConfigurable;\n    this.type = findType({ types, typeId: rawAbiConfigurable.configurableType.type });\n  }\n}\n","import { Configurable } from '../abi/configurable/Configurable';\nimport type { IRawAbiConfigurable } from '../types/interfaces/IRawAbiConfigurable';\nimport type { IType } from '../types/interfaces/IType';\n\nexport function makeConfigurable(params: {\n  types: IType[];\n  rawAbiConfigurable: IRawAbiConfigurable;\n}) {\n  const { types, rawAbiConfigurable } = params;\n  return new Configurable({ types, rawAbiConfigurable });\n}\n","import type { IConfigurable } from '../types/interfaces/IConfigurable';\nimport type { IRawAbiConfigurable } from '../types/interfaces/IRawAbiConfigurable';\nimport type { IType } from '../types/interfaces/IType';\n\nimport { makeConfigurable } from './makeConfigurable';\n\nexport function parseConfigurables(params: {\n  types: IType[];\n  rawAbiConfigurables: IRawAbiConfigurable[];\n}) {\n  const { types, rawAbiConfigurables } = params;\n\n  const configurables: IConfigurable[] = rawAbiConfigurables.map((rawAbiConfigurable) =>\n    makeConfigurable({ types, rawAbiConfigurable })\n  );\n\n  return configurables;\n}\n","import type { TargetEnum } from '../types/enums/TargetEnum';\nimport type { IRawAbiTypeComponent } from '../types/interfaces/IRawAbiType';\nimport type { IType } from '../types/interfaces/IType';\n\nimport { findType } from './findType';\n\n/*\n  Recursively parses the given `typeArguments` node\n*/\nexport function parseTypeArguments(params: {\n  types: IType[];\n  target: TargetEnum;\n  typeArguments: IRawAbiTypeComponent[];\n  parentTypeId?: number;\n}): string {\n  const { types, typeArguments, parentTypeId, target } = params;\n\n  const attributeKey: 'inputLabel' | 'outputLabel' = `${target}Label`;\n\n  const buffer: string[] = [];\n\n  let parentType: IType | undefined;\n  let parentLabel: string | undefined;\n\n  if (parentTypeId !== undefined) {\n    parentType = findType({ types, typeId: parentTypeId });\n    parentLabel = parentType.attributes[attributeKey];\n  }\n\n  // loop through all `typeArgument` items\n  typeArguments.forEach((typeArgument) => {\n    let currentLabel: string;\n\n    const currentTypeId = typeArgument.type;\n\n    try {\n      const currentType = findType({ types, typeId: currentTypeId });\n      currentLabel = currentType.attributes[attributeKey];\n    } catch (_err) {\n      // used for functions without output\n      currentLabel = 'void';\n    }\n\n    if (typeArgument.typeArguments) {\n      // recursively process nested `typeArguments`\n      const nestedParsed = parseTypeArguments({\n        types,\n        target,\n        parentTypeId: typeArgument.type,\n        typeArguments: typeArgument.typeArguments,\n      });\n\n      buffer.push(nestedParsed);\n    } else {\n      buffer.push(`${currentLabel}`);\n    }\n  });\n\n  let output = buffer.join(', ');\n\n  if (parentLabel) {\n    output = `${parentLabel}<${output}>`;\n  }\n\n  return output;\n}\n","import type { IFunction, IRawAbiFunction, IFunctionAttributes } from '../../index';\nimport { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { findType } from '../../utils/findType';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nexport class Function implements IFunction {\n  public name: string;\n  public types: IType[];\n  public rawAbiFunction: IRawAbiFunction;\n  public attributes: IFunctionAttributes;\n\n  constructor(params: { types: IType[]; rawAbiFunction: IRawAbiFunction }) {\n    this.rawAbiFunction = params.rawAbiFunction;\n    this.types = params.types;\n    this.name = params.rawAbiFunction.name;\n\n    this.attributes = {\n      inputs: this.bundleInputTypes(),\n      output: this.bundleOutputTypes(),\n      prefixedInputs: this.bundleInputTypes(true),\n    };\n  }\n\n  bundleInputTypes(shouldPrefixParams: boolean = false) {\n    const { types } = this;\n\n    // loop through all inputs\n    const inputs = this.rawAbiFunction.inputs.map((input) => {\n      const { name, type: typeId, typeArguments } = input;\n\n      const type = findType({ types, typeId });\n\n      let typeDecl: string;\n\n      if (typeArguments) {\n        // recursively process child `typeArguments`\n        typeDecl = parseTypeArguments({\n          types,\n          target: TargetEnum.INPUT,\n          parentTypeId: typeId,\n          typeArguments,\n        });\n      } else {\n        // or just collect type declaration\n        typeDecl = type.attributes.inputLabel;\n      }\n\n      // assemble it in `[key: string]: <Type>` fashion\n      if (shouldPrefixParams) {\n        return `${name}: ${typeDecl}`;\n      }\n\n      return typeDecl;\n    });\n\n    return inputs.join(', ');\n  }\n\n  bundleOutputTypes() {\n    return parseTypeArguments({\n      types: this.types,\n      target: TargetEnum.OUTPUT,\n      typeArguments: [this.rawAbiFunction.output],\n    });\n  }\n\n  getDeclaration() {\n    const { name } = this;\n    const { prefixedInputs, output } = this.attributes;\n    const decl = `${name}: InvokeFunction<[${prefixedInputs}], ${output}>`;\n    return decl;\n  }\n}\n","import { Function } from '../abi/functions/Function';\nimport type { IRawAbiFunction } from '../types/interfaces/IRawAbiFunction';\nimport type { IType } from '../types/interfaces/IType';\n\nexport function makeFunction(params: { types: IType[]; rawAbiFunction: IRawAbiFunction }) {\n  const { types, rawAbiFunction } = params;\n  return new Function({ types, rawAbiFunction });\n}\n","import type { IFunction } from '../types/interfaces/IFunction';\nimport type { IRawAbiFunction } from '../types/interfaces/IRawAbiFunction';\nimport type { IType } from '../types/interfaces/IType';\n\nimport { makeFunction } from './makeFunction';\n\nexport function parseFunctions(params: { types: IType[]; rawAbiFunctions: IRawAbiFunction[] }) {\n  const { types, rawAbiFunctions } = params;\n  const functions: IFunction[] = rawAbiFunctions.map((rawAbiFunction) =>\n    makeFunction({ types, rawAbiFunction })\n  );\n  return functions;\n}\n","import type { IRawAbiTypeRoot } from '../../types/interfaces/IRawAbiType';\nimport type { ITypeAttributes } from '../../types/interfaces/IType';\n\nexport class AType {\n  public rawAbiType: IRawAbiTypeRoot;\n  public attributes: ITypeAttributes;\n  public requiredFuelsMembersImports: string[];\n\n  constructor(params: { rawAbiType: IRawAbiTypeRoot }) {\n    this.rawAbiType = params.rawAbiType;\n    this.attributes = {\n      inputLabel: 'unknown',\n      outputLabel: 'unknown',\n    };\n    this.requiredFuelsMembersImports = [];\n  }\n}\n","import { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { findType } from '../../utils/findType';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nimport { AType } from './AType';\n\nexport class ArrayType extends AType implements IType {\n  // Note: the array length expressed in '; 2]' could be any length\n  public static swayType = '[_; 2]';\n\n  public name = 'array';\n\n  static MATCH_REGEX: RegExp = /^\\[_; ([0-9]+)\\]$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return ArrayType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(params: { types: IType[] }) {\n    const { types } = params;\n    const { type } = this.rawAbiType;\n\n    // array length will be used to generated a fixed-length array type\n    const arrayLen = Number(type.match(ArrayType.MATCH_REGEX)?.[1]);\n\n    const inputs: string[] = [];\n    const outputs: string[] = [];\n\n    this.rawAbiType.components?.forEach((component) => {\n      const { type: typeId, typeArguments } = component;\n\n      if (!typeArguments) {\n        // if component has no type arguments, read its attributes and voilà\n        const { attributes } = findType({ types, typeId });\n\n        inputs.push(attributes.inputLabel);\n        outputs.push(attributes.outputLabel);\n      } else {\n        // otherwise process child `typeArguments` recursively\n        const inputLabel = parseTypeArguments({\n          types,\n          typeArguments,\n          parentTypeId: typeId,\n          target: TargetEnum.INPUT,\n        });\n\n        const outputLabel = parseTypeArguments({\n          types,\n          typeArguments,\n          parentTypeId: typeId,\n          target: TargetEnum.OUTPUT,\n        });\n\n        inputs.push(inputLabel);\n        outputs.push(outputLabel);\n      }\n    });\n\n    // fixed-length array, based on `arrayLen`\n    const inputTypes = Array(arrayLen).fill(inputs[0]).join(', ');\n    const outputTypes = Array(arrayLen).fill(outputs[0]).join(', ');\n\n    this.attributes = {\n      inputLabel: `[${inputTypes}]`,\n      outputLabel: `[${outputTypes}]`,\n    };\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class StrType extends AType implements IType {\n  // Note: the str length expressed in '[3]' could be any length\n  public static swayType = 'str[3]';\n\n  public name = 'str';\n\n  static MATCH_REGEX: RegExp = /^str\\[(.+)\\]$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return StrType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: 'string',\n      outputLabel: 'string',\n    };\n    return this.attributes;\n  }\n}\n","import { StrType } from './StrType';\n\nexport class B256Type extends StrType {\n  public static swayType = 'b256';\n\n  public name = 'b256';\n\n  static MATCH_REGEX = /^b256$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return B256Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import { B256Type } from './B256Type';\n\nexport class B512Type extends B256Type {\n  public static swayType = 'struct B512';\n\n  public name = 'b512';\n\n  static MATCH_REGEX = /^struct B512$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return B512Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class BoolType extends AType implements IType {\n  public static swayType = 'bool';\n\n  public name = 'bool';\n\n  static MATCH_REGEX: RegExp = /^bool$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return BoolType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: 'boolean',\n      outputLabel: 'boolean',\n    };\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { ArrayType } from './ArrayType';\n\nexport class BytesType extends ArrayType {\n  public static swayType = 'struct Bytes';\n\n  public name = 'bytes';\n\n  static MATCH_REGEX: RegExp = /^struct Bytes/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return BytesType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'Bytes';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { IRawAbiTypeRoot } from '../types/interfaces/IRawAbiType';\n\nexport function extractStructName(params: { rawAbiType: IRawAbiTypeRoot; regex: RegExp }) {\n  const { rawAbiType, regex } = params;\n\n  const match = rawAbiType.type.match(params.regex)?.[1];\n\n  if (!match) {\n    let errorMessage = `Couldn't extract struct name with: '${regex}'.\\n\\n`;\n    errorMessage += `Check your JSON ABI.\\n\\n[source]\\n`;\n    errorMessage += `${JSON.stringify(rawAbiType, null, 2)}`;\n\n    throw new FuelError(ErrorCode.JSON_ABI_ERROR, errorMessage);\n  }\n\n  return match;\n}\n","import type { IRawAbiTypeComponent } from '../../index';\nimport type { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { extractStructName } from '../../utils/extractStructName';\nimport { findType } from '../../utils/findType';\n\nimport { AType } from './AType';\n\nexport class EnumType extends AType implements IType {\n  public static swayType = 'enum MyEnumName';\n\n  public name = 'enum';\n\n  static MATCH_REGEX: RegExp = /^enum (.+)$/m;\n  static IGNORE_REGEX: RegExp = /^enum Option$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    const isAMatch = EnumType.MATCH_REGEX.test(params.type);\n    const shouldBeIgnored = EnumType.IGNORE_REGEX.test(params.type);\n    return isAMatch && !shouldBeIgnored;\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const structName = this.getStructName();\n\n    this.attributes = {\n      structName,\n      inputLabel: `${structName}Input`,\n      outputLabel: `${structName}Output`,\n    };\n\n    return this.attributes;\n  }\n\n  public getStructName() {\n    const name = extractStructName({\n      rawAbiType: this.rawAbiType,\n      regex: EnumType.MATCH_REGEX,\n    });\n    return name;\n  }\n\n  public getNativeEnum(params: { types: IType[] }) {\n    const { types } = params;\n\n    const typeHash: { [key: number]: IType['rawAbiType'] } = types.reduce(\n      (hash, row) => ({\n        ...hash,\n        [row.rawAbiType.typeId]: row,\n      }),\n      {}\n    );\n\n    const { components } = this.rawAbiType;\n\n    // `components` array guaranteed to always exist for structs/enums\n    const enumComponents = components as IRawAbiTypeComponent[];\n\n    if (!enumComponents.every(({ type }) => !typeHash[type])) {\n      return undefined;\n    }\n\n    return enumComponents.map(({ name }) => `${name} = '${name}'`).join(', ');\n  }\n\n  public getStructContents(params: { types: IType[]; target: TargetEnum }) {\n    const { types, target } = params;\n\n    const { components } = this.rawAbiType;\n\n    // `components` array guaranteed to always exist for structs/enums\n    const enumComponents = components as IRawAbiTypeComponent[];\n\n    const attributeKey: 'inputLabel' | 'outputLabel' = `${target}Label`;\n\n    const contents = enumComponents.map((component) => {\n      const { name, type: typeId } = component;\n\n      if (typeId === 0) {\n        return `${name}: []`;\n      }\n\n      const { attributes } = findType({ types, typeId });\n      return `${name}: ${attributes[attributeKey]}`;\n    });\n\n    return contents.join(', ');\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class EvmAddressType extends AType implements IType {\n  public static swayType = 'struct EvmAddress';\n\n  public name = 'evmAddress';\n\n  static MATCH_REGEX: RegExp = /^struct EvmAddress$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return EvmAddressType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'EvmAddress';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\nimport { extractStructName } from '../../utils/extractStructName';\n\nimport { AType } from './AType';\n\nexport class GenericType extends AType implements IType {\n  public static swayType = 'generic T';\n\n  public name = 'generic';\n\n  static MATCH_REGEX: RegExp = /^generic ([^\\s]+)$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return GenericType.MATCH_REGEX.test(params.type);\n  }\n\n  public getStructName() {\n    const name = extractStructName({\n      rawAbiType: this.rawAbiType,\n      regex: GenericType.MATCH_REGEX,\n    });\n    return name;\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const label = this.getStructName();\n\n    this.attributes = {\n      inputLabel: label,\n      outputLabel: label,\n    };\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class OptionType extends AType implements IType {\n  public static swayType = 'enum Option';\n\n  public name = 'option';\n\n  static MATCH_REGEX: RegExp = /^enum Option$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return OptionType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: `Option`,\n      outputLabel: `Option`,\n    };\n    return this.attributes;\n  }\n}\n","import type { IRawAbiTypeRoot } from '../../index';\nimport type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class U8Type extends AType implements IType {\n  public static swayType = 'u8';\n\n  public name = 'u8';\n\n  public static MATCH_REGEX: RegExp = /^u8$/m;\n\n  constructor(params: { rawAbiType: IRawAbiTypeRoot }) {\n    super(params);\n    this.attributes = {\n      inputLabel: `BigNumberish`,\n      outputLabel: `number`,\n    };\n    this.requiredFuelsMembersImports = [this.attributes.inputLabel];\n  }\n\n  static isSuitableFor(params: { type: string }) {\n    return U8Type.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U8Type } from './U8Type';\n\nexport class U64Type extends U8Type implements IType {\n  public static swayType = 'u64';\n\n  public name = 'u64';\n\n  public static MATCH_REGEX: RegExp = /^u64$/m;\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: `BigNumberish`,\n      outputLabel: `BN`,\n    };\n    this.requiredFuelsMembersImports = Object.values(this.attributes);\n    return this.attributes;\n  }\n\n  static isSuitableFor(params: { type: string }) {\n    return U64Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U64Type } from './U64Type';\n\nexport class RawUntypedPtr extends U64Type implements IType {\n  public static swayType = 'raw untyped ptr';\n\n  public name = 'rawUntypedPtr';\n\n  public static MATCH_REGEX: RegExp = /^raw untyped ptr$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return RawUntypedPtr.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { ArrayType } from './ArrayType';\n\nexport class RawUntypedSlice extends ArrayType {\n  public static swayType = 'raw untyped slice';\n\n  public name = 'rawUntypedSlice';\n\n  public static MATCH_REGEX: RegExp = /^raw untyped slice$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return RawUntypedSlice.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'RawSlice';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class StdStringType extends AType implements IType {\n  public static swayType = 'struct String';\n\n  public name = 'stdString';\n\n  static MATCH_REGEX: RegExp = /^struct String/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return StdStringType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const capitalizedName = 'StdString';\n\n    this.attributes = {\n      inputLabel: capitalizedName,\n      outputLabel: capitalizedName,\n    };\n\n    this.requiredFuelsMembersImports = [capitalizedName];\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { AType } from './AType';\n\nexport class StrSliceType extends AType implements IType {\n  public static swayType = 'str';\n\n  public name = 'strSlice';\n\n  static MATCH_REGEX: RegExp = /^str$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return StrSliceType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: 'StrSlice',\n      outputLabel: 'StrSlice',\n    };\n    return this.attributes;\n  }\n}\n","import type { IRawAbiTypeComponent } from '../../index';\nimport type { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { extractStructName } from '../../utils/extractStructName';\nimport { findType } from '../../utils/findType';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nimport { AType } from './AType';\n\nexport class StructType extends AType implements IType {\n  public static swayType = 'struct MyStruct';\n\n  public name = 'struct';\n\n  static MATCH_REGEX: RegExp = /^struct (.+)$/m;\n  static IGNORE_REGEX: RegExp = /^struct (Vec|RawVec|EvmAddress|Bytes|String)$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    const isAMatch = StructType.MATCH_REGEX.test(params.type);\n    const shouldBeIgnored = StructType.IGNORE_REGEX.test(params.type);\n    return isAMatch && !shouldBeIgnored;\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    const structName = this.getStructName();\n\n    this.attributes = {\n      structName,\n      inputLabel: `${structName}Input`,\n      outputLabel: `${structName}Output`,\n    };\n\n    return this.attributes;\n  }\n\n  public getStructName() {\n    const name = extractStructName({\n      rawAbiType: this.rawAbiType,\n      regex: StructType.MATCH_REGEX,\n    });\n    return name;\n  }\n\n  public getStructContents(params: { types: IType[]; target: TargetEnum }) {\n    const { types, target } = params;\n    const { components } = this.rawAbiType;\n\n    // `components` array guaranteed to always exist for structs/enums\n    const structComponents = components as IRawAbiTypeComponent[];\n\n    // loop through all components\n    const members = structComponents.map((component) => {\n      const { name, type: typeId, typeArguments } = component;\n\n      const type = findType({ types, typeId });\n\n      let typeDecl: string;\n\n      if (typeArguments) {\n        // recursively process child `typeArguments`\n        typeDecl = parseTypeArguments({\n          types,\n          target,\n          parentTypeId: typeId,\n          typeArguments,\n        });\n      } else {\n        // or just collect type declaration\n        const attributeKey: 'inputLabel' | 'outputLabel' = `${target}Label`;\n        typeDecl = type.attributes[attributeKey];\n      }\n\n      // assemble it in `[key: string]: <Type>` fashion\n      return `${name}: ${typeDecl}`;\n    });\n\n    return members.join(', ');\n  }\n\n  public getStructDeclaration(params: { types: IType[] }) {\n    const { types } = params;\n    const { typeParameters } = this.rawAbiType;\n\n    if (typeParameters) {\n      const structs = typeParameters.map((typeId) => findType({ types, typeId }));\n\n      const labels = structs.map(({ attributes: { inputLabel } }) => inputLabel);\n\n      return `<${labels.join(', ')}>`;\n    }\n\n    return '';\n  }\n}\n","import { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\nimport { findType } from '../../utils/findType';\nimport { parseTypeArguments } from '../../utils/parseTypeArguments';\n\nimport { AType } from './AType';\n\nexport class TupleType extends AType implements IType {\n  // Note: a tuple can have more/less than 3x items (like the one bellow)\n  public static swayType = '(_, _, _)';\n\n  public name = 'tupple';\n\n  static MATCH_REGEX: RegExp = /^\\([_,\\s]+\\)$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return TupleType.MATCH_REGEX.test(params.type);\n  }\n\n  public parseComponentsAttributes(params: { types: IType[] }) {\n    const { types } = params;\n\n    const inputs: string[] = [];\n    const outputs: string[] = [];\n\n    this.rawAbiType.components?.forEach((component) => {\n      const { type: typeId, typeArguments } = component;\n\n      if (!typeArguments) {\n        // if component has no type arguments, read its attributes and voilà\n        const { attributes } = findType({ types, typeId });\n\n        inputs.push(attributes.inputLabel);\n        outputs.push(attributes.outputLabel);\n      } else {\n        // otherwise process child `typeArguments` recursively\n        const inputLabel = parseTypeArguments({\n          types,\n          typeArguments,\n          parentTypeId: typeId,\n          target: TargetEnum.INPUT,\n        });\n\n        const outputLabel = parseTypeArguments({\n          types,\n          typeArguments,\n          parentTypeId: typeId,\n          target: TargetEnum.OUTPUT,\n        });\n\n        inputs.push(inputLabel);\n        outputs.push(outputLabel);\n      }\n    });\n\n    this.attributes = {\n      inputLabel: `[${inputs.join(', ')}]`,\n      outputLabel: `[${outputs.join(', ')}]`,\n    };\n\n    return this.attributes;\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U8Type } from './U8Type';\n\nexport class U16Type extends U8Type implements IType {\n  public static swayType = 'u16';\n\n  public name = 'u16';\n\n  public static MATCH_REGEX: RegExp = /^u16$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return U16Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U64Type } from './U64Type';\n\nexport class U256Type extends U64Type implements IType {\n  public static swayType = 'u256';\n\n  public name = 'u256';\n\n  public static MATCH_REGEX: RegExp = /^u256$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return U256Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { U8Type } from './U8Type';\n\nexport class U32Type extends U8Type implements IType {\n  public static swayType = 'u32';\n\n  public name = 'u32';\n\n  public static MATCH_REGEX: RegExp = /^u32$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    return U32Type.MATCH_REGEX.test(params.type);\n  }\n}\n","import type { IType } from '../../types/interfaces/IType';\n\nimport { ArrayType } from './ArrayType';\n\nexport class VectorType extends ArrayType {\n  public static swayType = 'struct Vec';\n\n  public name = 'vector';\n\n  static MATCH_REGEX: RegExp = /^struct Vec/m;\n  static IGNORE_REGEX: RegExp = /^struct RawVec$/m;\n\n  static isSuitableFor(params: { type: string }) {\n    const isAMatch = VectorType.MATCH_REGEX.test(params.type);\n    const shouldBeIgnored = VectorType.IGNORE_REGEX.test(params.type);\n    return isAMatch && !shouldBeIgnored;\n  }\n\n  public parseComponentsAttributes(_params: { types: IType[] }) {\n    this.attributes = {\n      inputLabel: `Vec`,\n      outputLabel: `Vec`,\n    };\n    return this.attributes;\n  }\n}\n","import { ArrayType } from '../abi/types/ArrayType';\nimport { B256Type } from '../abi/types/B256Type';\nimport { B512Type } from '../abi/types/B512Type';\nimport { BoolType } from '../abi/types/BoolType';\nimport { BytesType } from '../abi/types/BytesType';\nimport { EnumType } from '../abi/types/EnumType';\nimport { EvmAddressType } from '../abi/types/EvmAddressType';\nimport { GenericType } from '../abi/types/GenericType';\nimport { OptionType } from '../abi/types/OptionType';\nimport { RawUntypedPtr } from '../abi/types/RawUntypedPtr';\nimport { RawUntypedSlice } from '../abi/types/RawUntypedSlice';\nimport { StdStringType } from '../abi/types/StdStringType';\nimport { StrSliceType } from '../abi/types/StrSliceType';\nimport { StrType } from '../abi/types/StrType';\nimport { StructType } from '../abi/types/StructType';\nimport { TupleType } from '../abi/types/TupleType';\nimport { U16Type } from '../abi/types/U16Type';\nimport { U256Type } from '../abi/types/U256Type';\nimport { U32Type } from '../abi/types/U32Type';\nimport { U64Type } from '../abi/types/U64Type';\nimport { U8Type } from '../abi/types/U8Type';\nimport { VectorType } from '../abi/types/VectorType';\n\nexport const supportedTypes = [\n  ArrayType,\n  B256Type,\n  B512Type,\n  BoolType,\n  BytesType,\n  EnumType,\n  GenericType,\n  OptionType,\n  RawUntypedPtr,\n  RawUntypedSlice,\n  StdStringType,\n  StrType,\n  StrSliceType,\n  StructType,\n  TupleType,\n  U16Type,\n  U32Type,\n  U64Type,\n  U256Type,\n  U8Type,\n  VectorType,\n  EvmAddressType,\n];\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { IRawAbiTypeRoot } from '../types/interfaces/IRawAbiType';\n\nimport { supportedTypes } from './supportedTypes';\n\nexport function makeType(params: { rawAbiType: IRawAbiTypeRoot }) {\n  const { rawAbiType } = params;\n  const { type } = rawAbiType;\n\n  const TypeClass = supportedTypes.find((tc) => tc.isSuitableFor({ type }));\n\n  if (!TypeClass) {\n    throw new FuelError(ErrorCode.TYPE_NOT_SUPPORTED, `Type not supported: ${type}`);\n  }\n\n  return new TypeClass(params);\n}\n","export function shouldSkipAbiType(params: { type: string }) {\n  const ignoreList = ['()', 'struct RawVec'];\n  const shouldSkip = ignoreList.indexOf(params.type) >= 0;\n  return shouldSkip;\n}\n","import type { IRawAbiTypeRoot } from '../types/interfaces/IRawAbiType';\nimport type { IType } from '../types/interfaces/IType';\n\nimport { makeType } from './makeType';\nimport { shouldSkipAbiType } from './shouldSkipAbiType';\n\nexport function parseTypes(params: { rawAbiTypes: IRawAbiTypeRoot[] }) {\n  const types: IType[] = [];\n\n  // First we parse all ROOT nodes\n  params.rawAbiTypes.forEach((rawAbiType) => {\n    const { type } = rawAbiType;\n    const skip = shouldSkipAbiType({ type });\n    if (!skip) {\n      const parsedType = makeType({ rawAbiType });\n      types.push(parsedType);\n    }\n  });\n\n  // Then we parse all their components' [attributes]\n  types.forEach((type) => {\n    type.parseComponentsAttributes({ types });\n  });\n\n  return types;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\nimport { normalizeString } from '@fuel-ts/utils';\n\nimport type { ProgramTypeEnum } from '../types/enums/ProgramTypeEnum';\nimport type { IConfigurable } from '../types/interfaces/IConfigurable';\nimport type { IFunction } from '../types/interfaces/IFunction';\nimport type { IRawAbi } from '../types/interfaces/IRawAbi';\nimport type { IType } from '../types/interfaces/IType';\nimport { parseConfigurables } from '../utils/parseConfigurables';\nimport { parseFunctions } from '../utils/parseFunctions';\nimport { parseTypes } from '../utils/parseTypes';\n\n/*\n  Manages many instances of Types and Functions\n*/\nexport class Abi {\n  public name: string;\n  public programType: ProgramTypeEnum;\n\n  public filepath: string;\n  public outputDir: string;\n\n  public commonTypesInUse: string[] = [];\n\n  public rawContents: IRawAbi;\n  public hexlifiedBinContents?: string;\n  public storageSlotsContents?: string;\n\n  public types: IType[];\n  public functions: IFunction[];\n  public configurables: IConfigurable[];\n\n  constructor(params: {\n    filepath: string;\n    programType: ProgramTypeEnum;\n    rawContents: IRawAbi;\n    hexlifiedBinContents?: string;\n    storageSlotsContents?: string;\n    outputDir: string;\n  }) {\n    const {\n      filepath,\n      outputDir,\n      rawContents,\n      hexlifiedBinContents,\n      programType,\n      storageSlotsContents,\n    } = params;\n\n    const abiNameRegex = /([^/]+)-abi\\.json$/m;\n    const abiName = filepath.match(abiNameRegex);\n\n    const couldNotParseName = !abiName || abiName.length === 0;\n\n    if (couldNotParseName) {\n      throw new FuelError(\n        ErrorCode.PARSE_FAILED,\n        `Could not parse name from ABI file: ${filepath}.`\n      );\n    }\n\n    const name = `${normalizeString(abiName[1])}Abi`;\n\n    this.name = name;\n    this.programType = programType;\n\n    this.filepath = filepath;\n    this.rawContents = rawContents;\n    this.hexlifiedBinContents = hexlifiedBinContents;\n    this.storageSlotsContents = storageSlotsContents;\n    this.outputDir = outputDir;\n\n    const { types, functions, configurables } = this.parse();\n\n    this.types = types;\n    this.functions = functions;\n    this.configurables = configurables;\n\n    this.computeCommonTypesInUse();\n  }\n\n  parse() {\n    const {\n      types: rawAbiTypes,\n      functions: rawAbiFunctions,\n      configurables: rawAbiConfigurables,\n    } = this.rawContents;\n\n    const types = parseTypes({ rawAbiTypes });\n    const functions = parseFunctions({ rawAbiFunctions, types });\n    const configurables = parseConfigurables({ rawAbiConfigurables, types });\n\n    return {\n      types,\n      functions,\n      configurables,\n    };\n  }\n\n  computeCommonTypesInUse() {\n    const customTypesTable: Record<string, string> = {\n      option: 'Option',\n      enum: 'Enum',\n      vector: 'Vec',\n    };\n\n    this.commonTypesInUse = [];\n\n    Object.keys(customTypesTable).forEach((typeName) => {\n      const isInUse = !!this.types.find((t) => t.name === typeName);\n\n      if (isInUse) {\n        const commonTypeLabel: string = customTypesTable[typeName];\n        this.commonTypesInUse.push(commonTypeLabel);\n      }\n    });\n  }\n}\n","export enum ProgramTypeEnum {\n  CONTRACT = 'contract',\n  SCRIPT = 'script',\n  PREDICATE = 'predicate',\n}\n","import { join } from 'path';\n\nimport type { Abi } from '../abi/Abi';\nimport type { IFile } from '../index';\nimport { renderCommonTemplate } from '../templates/common/common';\nimport { renderIndexTemplate } from '../templates/common/index';\nimport { renderBytecodeTemplate } from '../templates/contract/bytecode';\nimport { renderDtsTemplate } from '../templates/contract/dts';\nimport { renderFactoryTemplate } from '../templates/contract/factory';\n\n/**\n * Render all Contract-related templates and returns\n * an array of `IFile` with them all. For here on,\n * the only thing missing is to write them to disk.\n */\nexport function assembleContracts(params: { abis: Abi[]; outputDir: string }) {\n  const { abis, outputDir } = params;\n\n  const files: IFile[] = [];\n  const usesCommonTypes = abis.find((a) => a.commonTypesInUse.length > 0);\n\n  abis.forEach((abi) => {\n    const { name } = abi;\n\n    const dtsFilepath = `${outputDir}/${name}.d.ts`;\n    const factoryFilepath = `${outputDir}/factories/${name}__factory.ts`;\n    const hexBinFilePath = `${outputDir}/${name}.hex.ts`;\n\n    const dts: IFile = {\n      path: dtsFilepath,\n      contents: renderDtsTemplate({ abi }),\n    };\n\n    const factory: IFile = {\n      path: factoryFilepath,\n      contents: renderFactoryTemplate({ abi }),\n    };\n\n    const hexBinFile: IFile = {\n      path: hexBinFilePath,\n      contents: renderBytecodeTemplate({\n        hexlifiedBytecode: abi.hexlifiedBinContents as string,\n      }),\n    };\n\n    files.push(dts);\n    files.push(factory);\n    files.push(hexBinFile);\n  });\n\n  // Includes index file\n  const indexFile: IFile = {\n    path: `${outputDir}/index.ts`,\n    contents: renderIndexTemplate({ abis }),\n  };\n\n  files.push(indexFile);\n\n  // Conditionally includes `common.d.ts` file if needed\n  if (usesCommonTypes) {\n    const commonsFilepath = join(outputDir, 'common.d.ts');\n    const file: IFile = {\n      path: commonsFilepath,\n      contents: renderCommonTemplate(),\n    };\n    files.push(file);\n  }\n\n  return files;\n}\n","import { versions } from '@fuel-ts/versions';\nimport { compile } from 'handlebars';\n\nimport headerTemplate from './common/_header.hbs';\n\n/*\n  Renders the given template w/ the given data, while injecting common\n  header for disabling lint rules and annotating Fuel component's versions.\n*/\nexport function renderHbsTemplate(params: { template: string; data?: Record<string, unknown> }) {\n  const { data, template } = params;\n\n  const options = {\n    strict: true,\n    noEscape: true,\n  };\n\n  const renderTemplate = compile(template, options);\n  const renderHeaderTemplate = compile(headerTemplate, options);\n\n  const text = renderTemplate({\n    ...data,\n    header: renderHeaderTemplate(versions),\n  });\n\n  return text.replace(/[\\n]{3,}/gm, '\\n\\n');\n}\n","import { renderHbsTemplate } from '../renderHbsTemplate';\n\nimport commonTemplate from './common.hbs';\n\nexport function renderCommonTemplate() {\n  const text = renderHbsTemplate({ template: commonTemplate });\n  return text;\n}\n","import type { Abi } from '../../abi/Abi';\nimport { ProgramTypeEnum } from '../../types/enums/ProgramTypeEnum';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\n\nimport indexTemplate from './index.hbs';\n\nexport function renderIndexTemplate(params: { abis: Abi[] }) {\n  const { abis } = params;\n\n  const isGeneratingContracts = abis[0].programType === ProgramTypeEnum.CONTRACT;\n  const isGeneratingPredicates = abis[0].programType === ProgramTypeEnum.PREDICATE;\n\n  const text = renderHbsTemplate({\n    template: indexTemplate,\n    data: { abis, isGeneratingContracts, isGeneratingPredicates },\n  });\n\n  return text;\n}\n","import type { BytesLike } from '@fuel-ts/interfaces';\n\nimport { renderHbsTemplate } from '../renderHbsTemplate';\n\nimport bytecodeTemplate from './bytecode.hbs';\n\nexport function renderBytecodeTemplate(params: { hexlifiedBytecode: BytesLike }) {\n  const text = renderHbsTemplate({\n    template: bytecodeTemplate,\n    data: {\n      hexlifiedBytecode: params.hexlifiedBytecode,\n    },\n  });\n\n  return text;\n}\n","import type { IConfigurable } from '../../types/interfaces/IConfigurable';\n\nexport function formatConfigurables(params: { configurables: IConfigurable[] }) {\n  const { configurables } = params;\n\n  const formattedConfigurables = configurables.map((c) => {\n    const {\n      name,\n      type: {\n        attributes: { inputLabel },\n      },\n    } = c;\n\n    return {\n      configurableName: name,\n      configurableType: inputLabel,\n    };\n  });\n\n  return { formattedConfigurables };\n}\n","import type { EnumType } from '../../abi/types/EnumType';\nimport { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\n\nexport function formatEnums(params: { types: IType[] }) {\n  const { types } = params;\n\n  const enums = types\n    .filter((t) => t.name === 'enum')\n    .map((t) => {\n      const et = t as EnumType; // only enums here\n      const structName = et.getStructName();\n      const inputValues = et.getStructContents({ types, target: TargetEnum.INPUT });\n      const outputValues = et.getStructContents({ types, target: TargetEnum.OUTPUT });\n      const inputNativeValues = et.getNativeEnum({ types });\n      const outputNativeValues = et.getNativeEnum({ types });\n\n      return {\n        structName,\n        inputValues,\n        outputValues,\n        recycleRef: inputValues === outputValues, // reduces duplication\n        inputNativeValues,\n        outputNativeValues,\n      };\n    });\n\n  return { enums };\n}\n","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[arguments.length - 1];\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig * -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparison of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","export default function _identity(x) {\n  return x;\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;","import _includes from \"./_includes.js\";\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;","import _Set from \"./_Set.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqBy =\n/*#__PURE__*/\nfunction () {\n  function XUniqBy(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.set = new _Set();\n  }\n\n  XUniqBy.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqBy.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqBy.prototype['@@transducer/step'] = function (result, input) {\n    return this.set.add(this.f(input)) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XUniqBy;\n}();\n\nexport default function _xuniqBy(f) {\n  return function (xf) {\n    return new XUniqBy(f, xf);\n  };\n}","import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xuniqBy from \"./internal/_xuniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqBy, function (fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqBy;","import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import { uniq } from 'ramda';\n\nimport type { IType } from '../../types/interfaces/IType';\n\nconst caseInsensitiveSort = (a: string, b: string) =>\n  a.toLowerCase().localeCompare(b.toLowerCase());\n\nexport function formatImports(params: { types: IType[]; baseMembers?: string[] }) {\n  const { types, baseMembers = [] } = params;\n\n  const members = types.flatMap((t) => t.requiredFuelsMembersImports);\n  const imports = uniq(baseMembers.concat(members).sort(caseInsensitiveSort));\n\n  return {\n    imports: imports.length ? imports : undefined,\n  };\n}\n","import type { StructType } from '../../abi/types/StructType';\nimport { TargetEnum } from '../../types/enums/TargetEnum';\nimport type { IType } from '../../types/interfaces/IType';\n\nexport function formatStructs(params: { types: IType[] }) {\n  const { types } = params;\n\n  const structs = types\n    .filter((t) => t.name === 'struct')\n    .map((t) => {\n      const st = t as StructType; // only structs here\n      const structName = st.getStructName();\n      const inputValues = st.getStructContents({ types, target: TargetEnum.INPUT });\n      const outputValues = st.getStructContents({ types, target: TargetEnum.OUTPUT });\n      const typeAnnotations = st.getStructDeclaration({ types });\n      return {\n        structName,\n        typeAnnotations,\n        inputValues,\n        outputValues,\n        recycleRef: inputValues === outputValues, // reduces duplication\n      };\n    });\n\n  return { structs };\n}\n","import type { Abi } from '../../abi/Abi';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\nimport { formatConfigurables } from '../utils/formatConfigurables';\nimport { formatEnums } from '../utils/formatEnums';\nimport { formatImports } from '../utils/formatImports';\nimport { formatStructs } from '../utils/formatStructs';\n\nimport dtsTemplate from './dts.hbs';\n\nexport function renderDtsTemplate(params: { abi: Abi }) {\n  const { name: capitalizedName, types, functions, commonTypesInUse, configurables } = params.abi;\n\n  /*\n    First we format all attributes\n  */\n  const functionsTypedefs = functions.map((f) => f.getDeclaration());\n\n  const functionsFragments = functions.map((f) => f.name);\n\n  const encoders = functions.map((f) => ({\n    functionName: f.name,\n    input: f.attributes.inputs,\n  }));\n\n  const decoders = functions.map((f) => ({\n    functionName: f.name,\n  }));\n\n  const { enums } = formatEnums({ types });\n  const { structs } = formatStructs({ types });\n  const { imports } = formatImports({\n    types,\n    baseMembers: [\n      'Interface',\n      'FunctionFragment',\n      'DecodedValue',\n      'Contract',\n      'BytesLike',\n      'InvokeFunction',\n    ],\n  });\n  const { formattedConfigurables } = formatConfigurables({ configurables });\n\n  /*\n    And finally render template\n  */\n  const text = renderHbsTemplate({\n    template: dtsTemplate,\n    data: {\n      capitalizedName,\n      commonTypesInUse: commonTypesInUse.join(', '),\n      functionsTypedefs,\n      functionsFragments,\n      encoders,\n      decoders,\n      structs,\n      enums,\n      imports,\n      formattedConfigurables,\n    },\n  });\n\n  return text;\n}\n","import type { Abi } from '../../abi/Abi';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\n\nimport factoryTemplate from './factory.hbs';\n\nexport function renderFactoryTemplate(params: { abi: Abi }) {\n  const { name: capitalizedName, rawContents, storageSlotsContents } = params.abi;\n  const abiJsonString = JSON.stringify(rawContents, null, 2);\n  const storageSlotsJsonString = storageSlotsContents ?? '[]';\n\n  const text = renderHbsTemplate({\n    template: factoryTemplate,\n    data: { capitalizedName, abiJsonString, storageSlotsJsonString },\n  });\n\n  return text;\n}\n","import { join } from 'path';\n\nimport type { Abi } from '../abi/Abi';\nimport type { IFile } from '../index';\nimport { renderCommonTemplate } from '../templates/common/common';\nimport { renderIndexTemplate } from '../templates/common/index';\nimport { renderFactoryTemplate } from '../templates/predicate/factory';\n\n/**\n * Render all Predicate-related templates and returns\n * an array of `IFile` with them all. For here on,\n * the only thing missing is to write them to disk.\n */\nexport function assemblePredicates(params: { abis: Abi[]; outputDir: string }) {\n  const { abis, outputDir } = params;\n\n  const files: IFile[] = [];\n  const usesCommonTypes = abis.find((a) => a.commonTypesInUse.length > 0);\n\n  abis.forEach((abi) => {\n    const { name } = abi;\n\n    const factoryFilepath = `${outputDir}/factories/${name}__factory.ts`;\n\n    const factory: IFile = {\n      path: factoryFilepath,\n      contents: renderFactoryTemplate({ abi }),\n    };\n\n    files.push(factory);\n  });\n\n  // Includes index file\n  const indexFile: IFile = {\n    path: `${outputDir}/index.ts`,\n    contents: renderIndexTemplate({ abis }),\n  };\n\n  files.push(indexFile);\n\n  // Conditionally includes `common.d.ts` file if needed\n  if (usesCommonTypes) {\n    const commonsFilepath = join(outputDir, 'common.d.ts');\n    const file: IFile = {\n      path: commonsFilepath,\n      contents: renderCommonTemplate(),\n    };\n    files.push(file);\n  }\n\n  return files;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { Abi } from '../../abi/Abi';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\nimport { formatConfigurables } from '../utils/formatConfigurables';\nimport { formatEnums } from '../utils/formatEnums';\nimport { formatImports } from '../utils/formatImports';\nimport { formatStructs } from '../utils/formatStructs';\n\nimport factoryTemplate from './factory.hbs';\n\nexport function renderFactoryTemplate(params: { abi: Abi }) {\n  const { abi } = params;\n\n  const { types, configurables } = abi;\n\n  const {\n    rawContents,\n    name: capitalizedName,\n    hexlifiedBinContents: hexlifiedBinString,\n  } = params.abi;\n\n  const abiJsonString = JSON.stringify(rawContents, null, 2);\n\n  const func = abi.functions.find((f) => f.name === 'main');\n\n  if (!func) {\n    throw new FuelError(ErrorCode.ABI_MAIN_METHOD_MISSING, `ABI doesn't have a 'main()' method.`);\n  }\n\n  const { enums } = formatEnums({ types });\n  const { structs } = formatStructs({ types });\n  const { imports } = formatImports({\n    types,\n    baseMembers: ['Predicate', 'Provider', 'InputValue'],\n  });\n  const { formattedConfigurables } = formatConfigurables({ configurables });\n\n  const { prefixedInputs: inputs, output } = func.attributes;\n\n  const text = renderHbsTemplate({\n    template: factoryTemplate,\n    data: {\n      inputs,\n      output,\n      structs,\n      enums,\n      abiJsonString,\n      hexlifiedBinString,\n      capitalizedName,\n      imports,\n      formattedConfigurables,\n    },\n  });\n\n  return text;\n}\n","import { join } from 'path';\n\nimport type { Abi } from '../abi/Abi';\nimport type { IFile } from '../index';\nimport { renderCommonTemplate } from '../templates/common/common';\nimport { renderIndexTemplate } from '../templates/common/index';\nimport { renderFactoryTemplate } from '../templates/script/factory';\n\n/**\n * Render all Script-related templates and returns\n * an array of `IFile` with them all. For here on,\n * the only thing missing is to write them to disk.\n */\nexport function assembleScripts(params: { abis: Abi[]; outputDir: string }) {\n  const { abis, outputDir } = params;\n\n  const files: IFile[] = [];\n  const usesCommonTypes = abis.find((a) => a.commonTypesInUse.length > 0);\n\n  abis.forEach((abi) => {\n    const { name } = abi;\n\n    const factoryFilepath = `${outputDir}/factories/${name}__factory.ts`;\n\n    const factory: IFile = {\n      path: factoryFilepath,\n      contents: renderFactoryTemplate({ abi }),\n    };\n\n    files.push(factory);\n  });\n\n  // Includes index file\n  const indexFile: IFile = {\n    path: `${outputDir}/index.ts`,\n    contents: renderIndexTemplate({ abis }),\n  };\n\n  files.push(indexFile);\n\n  // Conditionally includes `common.d.ts` file if needed\n  if (usesCommonTypes) {\n    const commonsFilepath = join(outputDir, 'common.d.ts');\n    const file: IFile = {\n      path: commonsFilepath,\n      contents: renderCommonTemplate(),\n    };\n    files.push(file);\n  }\n\n  return files;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport type { Abi } from '../../abi/Abi';\nimport { renderHbsTemplate } from '../renderHbsTemplate';\nimport { formatConfigurables } from '../utils/formatConfigurables';\nimport { formatEnums } from '../utils/formatEnums';\nimport { formatImports } from '../utils/formatImports';\nimport { formatStructs } from '../utils/formatStructs';\n\nimport factoryTemplate from './factory.hbs';\n\nexport function renderFactoryTemplate(params: { abi: Abi }) {\n  const { abi } = params;\n\n  const { types, configurables } = abi;\n\n  const {\n    rawContents,\n    name: capitalizedName,\n    hexlifiedBinContents: hexlifiedBinString,\n  } = params.abi;\n\n  const abiJsonString = JSON.stringify(rawContents, null, 2);\n\n  const func = abi.functions.find((f) => f.name === 'main');\n\n  if (!func) {\n    throw new FuelError(ErrorCode.ABI_MAIN_METHOD_MISSING, `ABI doesn't have a 'main()' method.`);\n  }\n\n  const { enums } = formatEnums({ types });\n  const { structs } = formatStructs({ types });\n  const { imports } = formatImports({ types, baseMembers: ['Script', 'Account'] });\n  const { formattedConfigurables } = formatConfigurables({ configurables });\n\n  const { prefixedInputs: inputs, output } = func.attributes;\n\n  const text = renderHbsTemplate({\n    template: factoryTemplate,\n    data: {\n      inputs,\n      output,\n      structs,\n      enums,\n      abiJsonString,\n      hexlifiedBinString,\n      capitalizedName,\n      imports,\n      formattedConfigurables,\n    },\n  });\n\n  return text;\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { ProgramTypeEnum } from '../types/enums/ProgramTypeEnum';\n\nconst upperFirst = (s: string): string => s[0].toUpperCase() + s.slice(1);\n\nexport function validateBinFile(params: {\n  abiFilepath: string;\n  binFilepath: string;\n  binExists: boolean;\n  programType: ProgramTypeEnum;\n}) {\n  const { abiFilepath, binFilepath, binExists, programType } = params;\n\n  const isScript = programType === ProgramTypeEnum.SCRIPT;\n\n  if (!binExists && isScript) {\n    throw new FuelError(\n      ErrorCode.BIN_FILE_NOT_FOUND,\n      [\n        `Could not find BIN file for counterpart ${upperFirst(programType)} ABI.`,\n        `  - ABI: ${abiFilepath}`,\n        `  - BIN: ${binFilepath}`,\n        programType,\n      ].join('\\n')\n    );\n  }\n}\n","import { ErrorCode, FuelError } from '@fuel-ts/errors';\n\nimport { Abi } from './abi/Abi';\nimport { ProgramTypeEnum } from './types/enums/ProgramTypeEnum';\nimport type { IFile } from './types/interfaces/IFile';\nimport { assembleContracts } from './utils/assembleContracts';\nimport { assemblePredicates } from './utils/assemblePredicates';\nimport { assembleScripts } from './utils/assembleScripts';\nimport { validateBinFile } from './utils/validateBinFile';\n\n/*\n  Manages many instances of Abi\n*/\nexport class AbiTypeGen {\n  public readonly abis: Abi[];\n  public readonly abiFiles: IFile[];\n  public readonly binFiles: IFile[];\n  public readonly storageSlotsFiles: IFile[];\n  public readonly outputDir: string;\n\n  public readonly files: IFile[];\n\n  constructor(params: {\n    abiFiles: IFile[];\n    binFiles: IFile[];\n    storageSlotsFiles: IFile[];\n    outputDir: string;\n    programType: ProgramTypeEnum;\n  }) {\n    const { abiFiles, binFiles, outputDir, programType, storageSlotsFiles } = params;\n\n    this.outputDir = outputDir;\n\n    this.abiFiles = abiFiles;\n    this.binFiles = binFiles;\n    this.storageSlotsFiles = storageSlotsFiles;\n\n    // Creates a `Abi` for each abi file\n    this.abis = this.abiFiles.map((abiFile) => {\n      const binFilepath = abiFile.path.replace('-abi.json', '.bin');\n      const relatedBinFile = this.binFiles.find(({ path }) => path === binFilepath);\n\n      const storageSlotFilepath = abiFile.path.replace('-abi.json', '-storage_slots.json');\n      const relatedStorageSlotsFile = this.storageSlotsFiles.find(\n        ({ path }) => path === storageSlotFilepath\n      );\n\n      if (!relatedBinFile) {\n        validateBinFile({\n          abiFilepath: abiFile.path,\n          binExists: !!relatedBinFile,\n          binFilepath,\n          programType,\n        });\n      }\n\n      const abi = new Abi({\n        filepath: abiFile.path,\n        rawContents: JSON.parse(abiFile.contents as string),\n        hexlifiedBinContents: relatedBinFile?.contents,\n        storageSlotsContents: relatedStorageSlotsFile?.contents,\n        outputDir,\n        programType,\n      });\n\n      return abi;\n    });\n\n    // Assemble list of files to be written to disk\n    this.files = this.getAssembledFiles({ programType });\n  }\n\n  private getAssembledFiles(params: { programType: ProgramTypeEnum }): IFile[] {\n    const { abis, outputDir } = this;\n    const { programType } = params;\n\n    switch (programType) {\n      case ProgramTypeEnum.CONTRACT:\n        return assembleContracts({ abis, outputDir });\n      case ProgramTypeEnum.SCRIPT:\n        return assembleScripts({ abis, outputDir });\n      case ProgramTypeEnum.PREDICATE:\n        return assemblePredicates({ abis, outputDir });\n      default:\n        throw new FuelError(\n          ErrorCode.INVALID_INPUT_PARAMETERS,\n          `Invalid Typegen programType: ${programType}. Must be one of ${Object.values(\n            ProgramTypeEnum\n          )}`\n        );\n    }\n  }\n}\n","import { hexlify } from '@fuel-ts/utils';\nimport { existsSync, readFileSync } from 'fs';\n\nimport type { ProgramTypeEnum } from '../types/enums/ProgramTypeEnum';\nimport type { IFile } from '../types/interfaces/IFile';\n\nimport { validateBinFile } from './validateBinFile';\n\nexport const collectBinFilepaths = (params: {\n  filepaths: string[];\n  programType: ProgramTypeEnum;\n}) => {\n  const { filepaths, programType } = params;\n\n  // validate and collect bin filepaths for Scripts and/or Predicates\n  const binFiles = filepaths.map((abiFilepath) => {\n    const binFilepath = abiFilepath.replace('-abi.json', '.bin');\n    const binExists = existsSync(binFilepath);\n\n    validateBinFile({ abiFilepath, binFilepath, binExists, programType });\n\n    const bin: IFile = {\n      path: binFilepath,\n      contents: hexlify(readFileSync(binFilepath)),\n    };\n\n    return bin;\n  });\n\n  return binFiles;\n};\n","import { existsSync, readFileSync } from 'fs';\n\nimport { ProgramTypeEnum } from '../types/enums/ProgramTypeEnum';\nimport type { IFile } from '../types/interfaces/IFile';\n\nexport const collectStorageSlotsFilepaths = (params: {\n  filepaths: string[];\n  programType: ProgramTypeEnum;\n}) => {\n  const { filepaths, programType } = params;\n\n  // collect filepaths for storage slots JSON files\n  const storageSlotsFiles: IFile[] = [];\n\n  // abort unless we're dealing with contract types\n  if (programType !== ProgramTypeEnum.CONTRACT) {\n    return storageSlotsFiles;\n  }\n\n  filepaths.forEach((abiFilepath) => {\n    const storageSlotsFilepath = abiFilepath.replace('-abi.json', '-storage_slots.json');\n    const storageSlotsExists = existsSync(storageSlotsFilepath);\n\n    if (storageSlotsExists) {\n      const storageSlots: IFile = {\n        path: storageSlotsFilepath,\n        contents: readFileSync(storageSlotsFilepath, 'utf-8'),\n      };\n\n      storageSlotsFiles.push(storageSlots);\n    }\n  });\n\n  return storageSlotsFiles;\n};\n"],"mappings":"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","names":["expand","pad","path","path","path","made","path","mkdirp","path","normalize","realpathSync","realpath","err","base","realpath","realpathSync","require_brace_expansion","expand","pad","minimatch","Minimatch","path","GLOBSTAR","expand","qmark","star","twoStarDot","twoStarNoDot","reSpecials","filter","ext","defaults","makeRe","braceExpand","assertValidPattern","set","MAX_PATTERN_LENGTH","hasMagic","addPatternStart","regExpEscape","match","posix","path","win32","path","minimatch","Minimatch","m","globSync","minimatch","Minimatch","Glob","path","lstat","cb","glob","minimatch","Minimatch","EE","path","globSync","Glob","keys","sync","lstat","type","er","stat","path","glob","defaults","rimraf","p","er","escape","toString","isFunction","options","ret","wrapper","ret","context","options","AST","path","EOF","lexer","match","path","equals","compile","type","path","match","normalize","path","join","identity","sourceFile","needle","section","toString","type","versions","compile","type","types","path","module","ErrorCode","__publicField","import_fs","glob","type","glob","hasMagic","start","final","i","acc","ext","_hasMagic","ext","qmark","star","type","expand","regExpEscape","type","v","bf","stringdecoder","Stream","p","ret","res","EE","rps","readdirCB","type","path","p","sep","filter","process","sync","import_url","defaultPlatform","path","rest","path","abs","target","defaultPlatform","import_path","match","FuelError","ErrorCode","__publicField","types","types","types","types","types","Function","types","type","types","Function","types","types","type","match","types","type","types","type","types","type","types","type","types","ProgramTypeEnum","import_path","common_default","types","match","_isArguments","contains","keys","type","b","equals","pad","_toISOString","_Set","type","XUniqBy","types","types","types","import_path","renderFactoryTemplate","types","factory_default","renderFactoryTemplate","import_path","renderFactoryTemplate","types","factory_default","renderFactoryTemplate","path","import_fs","import_fs","mkdirp","rimraf"]}